{
  "date": "2021-03-11T01:47:57.454Z",
  "plugins": [
    {
      "name": ".NET SDK Support",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dotnet-sdk/",
      "id": "dotnet-sdk"
    },
    {
      "name": "360 FireLine Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fireline/",
      "id": "fireline"
    },
    {
      "name": "42Crunch REST API Static Security Testing",
      "url": "https://www.jenkins.io/doc/pipeline/steps/42crunch-security-audit/",
      "id": "42crunch-security-audit"
    },
    {
      "name": "Abap Continuous Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/abap-ci/",
      "id": "abap-ci"
    },
    {
      "name": "AbsInt Astrée Plugin for Jenkins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/absint-astree/",
      "id": "absint-astree"
    },
    {
      "name": "AbsInt a³ Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/absint-a3/",
      "id": "absint-a3"
    },
    {
      "name": "Acunetix",
      "url": "https://www.jenkins.io/doc/pipeline/steps/acunetix/",
      "id": "acunetix"
    },
    {
      "name": "Acunetix 360 Scan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/acunetix-360-scan/",
      "id": "acunetix-360-scan"
    },
    {
      "name": "Adobe Cloud Manager Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/adobe-cloud-manager/",
      "id": "adobe-cloud-manager"
    },
    {
      "name": "Agiletestware Pangolin Connector for TestRail",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pangolin-testrail-connector/",
      "id": "pangolin-testrail-connector"
    },
    {
      "name": "AIO Tests",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aio-tests/",
      "id": "aio-tests"
    },
    {
      "name": "Alauda DevOps Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/alauda-devops-pipeline/",
      "id": "alauda-devops-pipeline"
    },
    {
      "name": "Alauda Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/alauda-pipeline/",
      "id": "alauda-pipeline"
    },
    {
      "name": "Alibaba Cloud ECS Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/alibabacloud-ecs/",
      "id": "alibabacloud-ecs"
    },
    {
      "name": "Aliyun OSS Uploader",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aliyun-oss-uploader/",
      "id": "aliyun-oss-uploader"
    },
    {
      "name": "Aliyun-Container-Service-Deploy",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aliyun-container-service-deploy/",
      "id": "aliyun-container-service-deploy"
    },
    {
      "name": "Allure Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/allure-jenkins-plugin/",
      "id": "allure-jenkins-plugin"
    },
    {
      "name": "Amazon EC2 plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ec2/",
      "id": "ec2"
    },
    {
      "name": "Amazon Elastic Container Service (ECS) / Fargate plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/amazon-ecs/",
      "id": "amazon-ecs"
    },
    {
      "name": "Anchore Container Image Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/anchore-container-scanner/",
      "id": "anchore-container-scanner"
    },
    {
      "name": "Android Lint Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/android-lint/",
      "id": "android-lint"
    },
    {
      "name": "Android Signing Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/android-signing/",
      "id": "android-signing"
    },
    {
      "name": "Anka Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/anka-build/",
      "id": "anka-build"
    },
    {
      "name": "Ansible plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ansible/",
      "id": "ansible"
    },
    {
      "name": "Ansible Tower Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ansible-tower/",
      "id": "ansible-tower"
    },
    {
      "name": "AnsiColor",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ansicolor/",
      "id": "ansicolor"
    },
    {
      "name": "Ant Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ant/",
      "id": "ant"
    },
    {
      "name": "App Center",
      "url": "https://www.jenkins.io/doc/pipeline/steps/appcenter/",
      "id": "appcenter"
    },
    {
      "name": "App-Ray Security check plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/appray/",
      "id": "appray"
    },
    {
      "name": "Applatix",
      "url": "https://www.jenkins.io/doc/pipeline/steps/applatix/",
      "id": "applatix"
    },
    {
      "name": "Applitools Eyes Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/applitools-eyes/",
      "id": "applitools-eyes"
    },
    {
      "name": "Apprenda Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/apprenda/",
      "id": "apprenda"
    },
    {
      "name": "Aqua MicroScanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aqua-microscanner/",
      "id": "aqua-microscanner"
    },
    {
      "name": "Aqua Security Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aqua-security-scanner/",
      "id": "aqua-security-scanner"
    },
    {
      "name": "Aqua Security Serverless Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aqua-serverless/",
      "id": "aqua-serverless"
    },
    {
      "name": "Arachni Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/arachni-scanner/",
      "id": "arachni-scanner"
    },
    {
      "name": "aRESTocats Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/arestocats/",
      "id": "arestocats"
    },
    {
      "name": "artifact-promotion",
      "url": "https://www.jenkins.io/doc/pipeline/steps/artifact-promotion/",
      "id": "artifact-promotion"
    },
    {
      "name": "Artifactory Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/artifactory/",
      "id": "artifactory"
    },
    {
      "name": "AssertThat BDD Jira Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/assertthat-bdd-jira/",
      "id": "assertthat-bdd-jira"
    },
    {
      "name": "Atlassian Jira Software Cloud",
      "url": "https://www.jenkins.io/doc/pipeline/steps/atlassian-jira-software-cloud/",
      "id": "atlassian-jira-software-cloud"
    },
    {
      "name": "AutoAction Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/autoaction-step/",
      "id": "autoaction-step"
    },
    {
      "name": "Autocancel Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/autocancel/",
      "id": "autocancel"
    },
    {
      "name": "Autograding Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/autograding/",
      "id": "autograding"
    },
    {
      "name": "AWS Beanstalk Releaser",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-beanstalk-releaser/",
      "id": "aws-beanstalk-releaser"
    },
    {
      "name": "AWS CodeBuild Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-codebuild/",
      "id": "aws-codebuild"
    },
    {
      "name": "AWS CodeDeploy Plugin for Jenkins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codedeploy/",
      "id": "codedeploy"
    },
    {
      "name": "AWS Lambda Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-lambda/",
      "id": "aws-lambda"
    },
    {
      "name": "AWS Lambda Test Runner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/lambda-test-runner/",
      "id": "lambda-test-runner"
    },
    {
      "name": "AWS Parameter Store Build Wrapper",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-parameter-store/",
      "id": "aws-parameter-store"
    },
    {
      "name": "AWS SAM",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-sam/",
      "id": "aws-sam"
    },
    {
      "name": "aws-device-farm",
      "url": "https://www.jenkins.io/doc/pipeline/steps/aws-device-farm/",
      "id": "aws-device-farm"
    },
    {
      "name": "AWSEB Deployment Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/awseb-deployment-plugin/",
      "id": "awseb-deployment-plugin"
    },
    {
      "name": "Azure App Service Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-app-service/",
      "id": "azure-app-service"
    },
    {
      "name": "Azure CLI Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-cli/",
      "id": "azure-cli"
    },
    {
      "name": "Azure Container Registry Tasks Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-container-registry-tasks/",
      "id": "azure-container-registry-tasks"
    },
    {
      "name": "Azure Container Service Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-acs/",
      "id": "azure-acs"
    },
    {
      "name": "Azure Dev Spaces plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-dev-spaces/",
      "id": "azure-dev-spaces"
    },
    {
      "name": "Azure Function Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-function/",
      "id": "azure-function"
    },
    {
      "name": "Azure IoT Edge Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-iot-edge/",
      "id": "azure-iot-edge"
    },
    {
      "name": "Azure Key Vault Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-keyvault/",
      "id": "azure-keyvault"
    },
    {
      "name": "Azure Service Fabric Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/service-fabric/",
      "id": "service-fabric"
    },
    {
      "name": "Azure Virtual Machine Scale Set Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/azure-vmss/",
      "id": "azure-vmss"
    },
    {
      "name": "Backlog plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/backlog/",
      "id": "backlog"
    },
    {
      "name": "Badge",
      "url": "https://www.jenkins.io/doc/pipeline/steps/badge/",
      "id": "badge"
    },
    {
      "name": "Beagle Security",
      "url": "https://www.jenkins.io/doc/pipeline/steps/beagle-security/",
      "id": "beagle-security"
    },
    {
      "name": "BearyChat Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/bearychat/",
      "id": "bearychat"
    },
    {
      "name": "Benchmark Evaluator Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/benchmark-evaluator/",
      "id": "benchmark-evaluator"
    },
    {
      "name": "Benchmark Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/benchmark/",
      "id": "benchmark"
    },
    {
      "name": "Bitbar Run-in-Cloud Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testdroid-run-in-cloud/",
      "id": "testdroid-run-in-cloud"
    },
    {
      "name": "Bitbucket Build Status Notifier Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/bitbucket-build-status-notifier/",
      "id": "bitbucket-build-status-notifier"
    },
    {
      "name": "Bitbucket Server Integration",
      "url": "https://www.jenkins.io/doc/pipeline/steps/atlassian-bitbucket-server-integration/",
      "id": "atlassian-bitbucket-server-integration"
    },
    {
      "name": "Bitbucket Server Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/stashNotifier/",
      "id": "stashnotifier"
    },
    {
      "name": "Black Duck Hub Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/blackduck-hub/",
      "id": "blackduck-hub"
    },
    {
      "name": "BlazeMeter plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/BlazeMeterJenkinsPlugin/",
      "id": "blazemeterjenkinsplugin"
    },
    {
      "name": "bootstraped-multi-test-results-report",
      "url": "https://www.jenkins.io/doc/pipeline/steps/bootstraped-multi-test-results-report/",
      "id": "bootstraped-multi-test-results-report"
    },
    {
      "name": "Brakeman Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/brakeman/",
      "id": "brakeman"
    },
    {
      "name": "Breachlock DAST Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/breachlock-dast/",
      "id": "breachlock-dast"
    },
    {
      "name": "BrowserStack",
      "url": "https://www.jenkins.io/doc/pipeline/steps/browserstack-integration/",
      "id": "browserstack-integration"
    },
    {
      "name": "Buckminster",
      "url": "https://www.jenkins.io/doc/pipeline/steps/buckminster/",
      "id": "buckminster"
    },
    {
      "name": "build log file size checker plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/logfilesizechecker/",
      "id": "logfilesizechecker"
    },
    {
      "name": "Build Name and Description Setter",
      "url": "https://www.jenkins.io/doc/pipeline/steps/build-name-setter/",
      "id": "build-name-setter"
    },
    {
      "name": "Build Steps from Json Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/build-steps-from-json/",
      "id": "build-steps-from-json"
    },
    {
      "name": "Build Token Trigger Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/build-token-trigger/",
      "id": "build-token-trigger"
    },
    {
      "name": "build user vars plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/build-user-vars-plugin/",
      "id": "build-user-vars-plugin"
    },
    {
      "name": "Bumblebee HP ALM Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/bumblebee/",
      "id": "bumblebee"
    },
    {
      "name": "ByteGuard Build Actions Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/byteguard-build-actions/",
      "id": "byteguard-build-actions"
    },
    {
      "name": "CA MAT Performance Benchmarking by Broadcom",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ca-mat-performance-benchmarking-by-broadcom/",
      "id": "ca-mat-performance-benchmarking-by-broadcom"
    },
    {
      "name": "CA Service Virtualization Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ca-service-virtualization/",
      "id": "ca-service-virtualization"
    },
    {
      "name": "CA-APM Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ca-apm/",
      "id": "ca-apm"
    },
    {
      "name": "Cachet Gating Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cachet-gating/",
      "id": "cachet-gating"
    },
    {
      "name": "Cadence vManager Plugin for Jenkins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vmanager-plugin/",
      "id": "vmanager-plugin"
    },
    {
      "name": "Carbonetes Serverless Container Scanning and Policy Compliance",
      "url": "https://www.jenkins.io/doc/pipeline/steps/carbonetes-serverless-container-scanning-and-policy-compliance/",
      "id": "carbonetes-serverless-container-scanning-and-policy-compliance"
    },
    {
      "name": "Carl plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/carl/",
      "id": "carl"
    },
    {
      "name": "CASTEcho plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/castecho/",
      "id": "castecho"
    },
    {
      "name": "CCM Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ccm/",
      "id": "ccm"
    },
    {
      "name": "Cerberus Testing Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cerberus-testing/",
      "id": "cerberus-testing"
    },
    {
      "name": "CFLint Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/CFLint/",
      "id": "cflint"
    },
    {
      "name": "change-assembly-version-plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/change-assembly-version-plugin/",
      "id": "change-assembly-version-plugin"
    },
    {
      "name": "Chatter Notifier Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/chatter-notifier/",
      "id": "chatter-notifier"
    },
    {
      "name": "Checkmarx Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/checkmarx/",
      "id": "checkmarx"
    },
    {
      "name": "Checks API plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/checks-api/",
      "id": "checks-api"
    },
    {
      "name": "Checkstyle Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/checkstyle/",
      "id": "checkstyle"
    },
    {
      "name": "Chef Cookbook Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/chef-cookbook-pipeline/",
      "id": "chef-cookbook-pipeline"
    },
    {
      "name": "Chef Identity Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/chef-identity/",
      "id": "chef-identity"
    },
    {
      "name": "Chef Sinatra Jenkins plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sinatra-chef-builder/",
      "id": "sinatra-chef-builder"
    },
    {
      "name": "ChuckNorris Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/chucknorris/",
      "id": "chucknorris"
    },
    {
      "name": "Cisco Spark Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cisco-spark-notifier/",
      "id": "cisco-spark-notifier"
    },
    {
      "name": "Cisco Spark Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cisco-spark/",
      "id": "cisco-spark"
    },
    {
      "name": "Claim Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/claim/",
      "id": "claim"
    },
    {
      "name": "Cloud Foundry Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudfoundry/",
      "id": "cloudfoundry"
    },
    {
      "name": "CloudBees CD",
      "url": "https://www.jenkins.io/doc/pipeline/steps/electricflow/",
      "id": "electricflow"
    },
    {
      "name": "CloudCoreo DeployTime Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudcoreo-deploytime/",
      "id": "cloudcoreo-deploytime"
    },
    {
      "name": "CloudHub Deployer",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudhub-deployer/",
      "id": "cloudhub-deployer"
    },
    {
      "name": "Cloudify",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudify/",
      "id": "cloudify"
    },
    {
      "name": "CloudShare Docker-Machine Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudshare-docker/",
      "id": "cloudshare-docker"
    },
    {
      "name": "CloudShell Sandbox Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cloudshell-sandbox/",
      "id": "cloudshell-sandbox"
    },
    {
      "name": "Clover plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/clover/",
      "id": "clover"
    },
    {
      "name": "CMake plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cmakebuilder/",
      "id": "cmakebuilder"
    },
    {
      "name": "Cobertura Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cobertura/",
      "id": "cobertura"
    },
    {
      "name": "Code Coverage API Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/code-coverage-api/",
      "id": "code-coverage-api"
    },
    {
      "name": "Code Dx Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codedx/",
      "id": "codedx"
    },
    {
      "name": "Codebeamer xUnit Importer Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codebeamer-xunit-importer/",
      "id": "codebeamer-xunit-importer"
    },
    {
      "name": "CodeBeamer XUnit Uploader",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codebeamer-xunit-uploader/",
      "id": "codebeamer-xunit-uploader"
    },
    {
      "name": "CodeBuilder: AWS CodeBuild Cloud Agents",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codebuilder-cloud/",
      "id": "codebuilder-cloud"
    },
    {
      "name": "Codeclimate Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codeclimate-plugin/",
      "id": "codeclimate-plugin"
    },
    {
      "name": "Codefresh Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codefresh/",
      "id": "codefresh"
    },
    {
      "name": "CodeScan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codescan/",
      "id": "codescan"
    },
    {
      "name": "CodeScene Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codescene/",
      "id": "codescene"
    },
    {
      "name": "CodeSonar Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codesonar/",
      "id": "codesonar"
    },
    {
      "name": "CollabNet Plugins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/collabnet/",
      "id": "collabnet"
    },
    {
      "name": "Comments Remover plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/comments-remover/",
      "id": "comments-remover"
    },
    {
      "name": "Compuware ISPW Operations Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-ispw-operations/",
      "id": "compuware-ispw-operations"
    },
    {
      "name": "Compuware Strobe Measurement Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-strobe-measurement/",
      "id": "compuware-strobe-measurement"
    },
    {
      "name": "Compuware Topaz for Total Test",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-topaz-for-total-test/",
      "id": "compuware-topaz-for-total-test"
    },
    {
      "name": "Compuware Topaz Utilities",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-topaz-utilities/",
      "id": "compuware-topaz-utilities"
    },
    {
      "name": "Compuware Xpediter Code Coverage",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-xpediter-code-coverage/",
      "id": "compuware-xpediter-code-coverage"
    },
    {
      "name": "Compuware zAdviser API",
      "url": "https://www.jenkins.io/doc/pipeline/steps/compuware-zadviser-api/",
      "id": "compuware-zadviser-api"
    },
    {
      "name": "Concurrent Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/concurrent-step/",
      "id": "concurrent-step"
    },
    {
      "name": "Config File Provider Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/config-file-provider/",
      "id": "config-file-provider"
    },
    {
      "name": "Confluence Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/confluence-publisher/",
      "id": "confluence-publisher"
    },
    {
      "name": "Consul KV Builder",
      "url": "https://www.jenkins.io/doc/pipeline/steps/consul-kv-builder/",
      "id": "consul-kv-builder"
    },
    {
      "name": "Consul Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/consul/",
      "id": "consul"
    },
    {
      "name": "Content Replace",
      "url": "https://www.jenkins.io/doc/pipeline/steps/content-replace/",
      "id": "content-replace"
    },
    {
      "name": "Continuous Integration with Toad DevOps Toolkit",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ci-with-toad-devops-toolkit/",
      "id": "ci-with-toad-devops-toolkit"
    },
    {
      "name": "Continuum Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/continuum/",
      "id": "continuum"
    },
    {
      "name": "Contrast Continuous Application Security",
      "url": "https://www.jenkins.io/doc/pipeline/steps/contrast-continuous-application-security/",
      "id": "contrast-continuous-application-security"
    },
    {
      "name": "Copy Artifact Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/copyartifact/",
      "id": "copyartifact"
    },
    {
      "name": "Coverity plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/coverity/",
      "id": "coverity"
    },
    {
      "name": "Cppcheck Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cppcheck/",
      "id": "cppcheck"
    },
    {
      "name": "Cpptest plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cpptest/",
      "id": "cpptest"
    },
    {
      "name": "Credentials Binding Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/credentials-binding/",
      "id": "credentials-binding"
    },
    {
      "name": "CrossBrowserTesting.com Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/crossbrowsertesting/",
      "id": "crossbrowsertesting"
    },
    {
      "name": "CRX Content Package Deployer Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/crx-content-package-deployer/",
      "id": "crx-content-package-deployer"
    },
    {
      "name": "CryptoMove Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cryptomove/",
      "id": "cryptomove"
    },
    {
      "name": "Cucumber json test reporting.",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cucumber-testresult-plugin/",
      "id": "cucumber-testresult-plugin"
    },
    {
      "name": "Cucumber Living Documentation Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cucumber-living-documentation/",
      "id": "cucumber-living-documentation"
    },
    {
      "name": "Cucumber reports",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cucumber-reports/",
      "id": "cucumber-reports"
    },
    {
      "name": "cucumber-slack-notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cucumber-slack-notifier/",
      "id": "cucumber-slack-notifier"
    },
    {
      "name": "Custom Build Properties Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/custom-build-properties/",
      "id": "custom-build-properties"
    },
    {
      "name": "Data Theorem Mobile Security: CI/CD Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/datatheorem-mobile-app-security/",
      "id": "datatheorem-mobile-app-security"
    },
    {
      "name": "database",
      "url": "https://www.jenkins.io/doc/pipeline/steps/database/",
      "id": "database"
    },
    {
      "name": "Datadog Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/datadog/",
      "id": "datadog"
    },
    {
      "name": "Debian Pbuilder",
      "url": "https://www.jenkins.io/doc/pipeline/steps/debian-pbuilder/",
      "id": "debian-pbuilder"
    },
    {
      "name": "Deep Security Smart Check Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/deepsecurity-smartcheck/",
      "id": "deepsecurity-smartcheck"
    },
    {
      "name": "Defensics",
      "url": "https://www.jenkins.io/doc/pipeline/steps/defensics/",
      "id": "defensics"
    },
    {
      "name": "Delivery Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/delivery-pipeline-plugin/",
      "id": "delivery-pipeline-plugin"
    },
    {
      "name": "Delphix Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/delphix/",
      "id": "delphix"
    },
    {
      "name": "Deploy Dashboard Plugin by Namecheap",
      "url": "https://www.jenkins.io/doc/pipeline/steps/deploy-dashboard/",
      "id": "deploy-dashboard"
    },
    {
      "name": "Deploy to container Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/deploy/",
      "id": "deploy"
    },
    {
      "name": "deployment-notification",
      "url": "https://www.jenkins.io/doc/pipeline/steps/deployment-notification/",
      "id": "deployment-notification"
    },
    {
      "name": "Describe With Params Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/describe-with-params/",
      "id": "describe-with-params"
    },
    {
      "name": "Diawi Upload Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/diawi-upload/",
      "id": "diawi-upload"
    },
    {
      "name": "Digital.ai App Management Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ease-plugin/",
      "id": "ease-plugin"
    },
    {
      "name": "Dimensions Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dimensionsscm/",
      "id": "dimensionsscm"
    },
    {
      "name": "Dingding JSON Pusher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dingding-json-pusher/",
      "id": "dingding-json-pusher"
    },
    {
      "name": "DingTalk",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dingding-notifications/",
      "id": "dingding-notifications"
    },
    {
      "name": "Discord Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/discord-notifier/",
      "id": "discord-notifier"
    },
    {
      "name": "Docker Compose Build Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/docker-compose-build-step/",
      "id": "docker-compose-build-step"
    },
    {
      "name": "Docker Pipeline",
      "url": "https://www.jenkins.io/doc/pipeline/steps/docker-workflow/",
      "id": "docker-workflow"
    },
    {
      "name": "Docker plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/docker-plugin/",
      "id": "docker-plugin"
    },
    {
      "name": "Doktor",
      "url": "https://www.jenkins.io/doc/pipeline/steps/doktor/",
      "id": "doktor"
    },
    {
      "name": "Dotcom-Monitor LoadView",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dotcommonitor-loadview/",
      "id": "dotcommonitor-loadview"
    },
    {
      "name": "DotCover",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dotcoverrunner/",
      "id": "dotcoverrunner"
    },
    {
      "name": "Downstream Build Cache Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/downstream-build-cache/",
      "id": "downstream-build-cache"
    },
    {
      "name": "DRY Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dry/",
      "id": "dry"
    },
    {
      "name": "Dynatrace Application Monitoring Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dynatrace-dashboard/",
      "id": "dynatrace-dashboard"
    },
    {
      "name": "ECX Copy Data Management Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/catalogic-ecx/",
      "id": "catalogic-ecx"
    },
    {
      "name": "EDAS Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/alibabacloud-edas/",
      "id": "alibabacloud-edas"
    },
    {
      "name": "ElasTest Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/elastest/",
      "id": "elastest"
    },
    {
      "name": "ElasticBox Jenkins Kubernetes CI/CD Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-ci/",
      "id": "kubernetes-ci"
    },
    {
      "name": "Elasticsearch Query",
      "url": "https://www.jenkins.io/doc/pipeline/steps/elasticsearch-query/",
      "id": "elasticsearch-query"
    },
    {
      "name": "Email Extension Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/email-ext/",
      "id": "email-ext"
    },
    {
      "name": "Embeddable Build Status Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/embeddable-build-status/",
      "id": "embeddable-build-status"
    },
    {
      "name": "Embotics Commander Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/embotics-vcommander/",
      "id": "embotics-vcommander"
    },
    {
      "name": "Environment Dashboard Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/environment-dashboard/",
      "id": "environment-dashboard"
    },
    {
      "name": "Exclusion Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/Exclusion/",
      "id": "exclusion"
    },
    {
      "name": "Extensive Testing Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/extensivetesting/",
      "id": "extensivetesting"
    },
    {
      "name": "External Workspace Manager Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/external-workspace-manager/",
      "id": "external-workspace-manager"
    },
    {
      "name": "Fabric Beta Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fabric-beta-publisher/",
      "id": "fabric-beta-publisher"
    },
    {
      "name": "Fedora Module Build System Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fedora-module-build-system/",
      "id": "fedora-module-build-system"
    },
    {
      "name": "Figlet Buildstep",
      "url": "https://www.jenkins.io/doc/pipeline/steps/figlet-buildstep/",
      "id": "figlet-buildstep"
    },
    {
      "name": "File Operations Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/file-operations/",
      "id": "file-operations"
    },
    {
      "name": "File Parameter Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/file-parameters/",
      "id": "file-parameters"
    },
    {
      "name": "FindBugs Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/findbugs/",
      "id": "findbugs"
    },
    {
      "name": "FitNesse plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fitnesse/",
      "id": "fitnesse"
    },
    {
      "name": "Fluentd Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fluentd/",
      "id": "fluentd"
    },
    {
      "name": "Flyway Runner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/flyway-runner/",
      "id": "flyway-runner"
    },
    {
      "name": "Folder Properties Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/folder-properties/",
      "id": "folder-properties"
    },
    {
      "name": "Forensics API Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/forensics-api/",
      "id": "forensics-api"
    },
    {
      "name": "FortiCWP CICD Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/forticwp-cicd/",
      "id": "forticwp-cicd"
    },
    {
      "name": "Fortify",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fortify/",
      "id": "fortify"
    },
    {
      "name": "Fortify CloudScan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fortify-cloudscan-jenkins-plugin/",
      "id": "fortify-cloudscan-jenkins-plugin"
    },
    {
      "name": "Fortify on Demand",
      "url": "https://www.jenkins.io/doc/pipeline/steps/fortify-on-demand-uploader/",
      "id": "fortify-on-demand-uploader"
    },
    {
      "name": "Frugal Testing",
      "url": "https://www.jenkins.io/doc/pipeline/steps/frugal-testing/",
      "id": "frugal-testing"
    },
    {
      "name": "FTP Rename Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ftp-rename/",
      "id": "ftp-rename"
    },
    {
      "name": "Gating Core",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gating-core/",
      "id": "gating-core"
    },
    {
      "name": "Gatling Check Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gatling-check/",
      "id": "gatling-check"
    },
    {
      "name": "Gatling Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gatling/",
      "id": "gatling"
    },
    {
      "name": "GCloud SDK Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gcloud-sdk/",
      "id": "gcloud-sdk"
    },
    {
      "name": "GCR Vulnerability Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gcr-scanner/",
      "id": "gcr-scanner"
    },
    {
      "name": "GeneXus Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/genexus/",
      "id": "genexus"
    },
    {
      "name": "Gerrit Code Review plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gerrit-code-review/",
      "id": "gerrit-code-review"
    },
    {
      "name": "Gerrit Trigger",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gerrit-trigger/",
      "id": "gerrit-trigger"
    },
    {
      "name": "Ghost Inspector Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ghost-inspector/",
      "id": "ghost-inspector"
    },
    {
      "name": "Giphy API Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-giphy-api/",
      "id": "pipeline-giphy-api"
    },
    {
      "name": "Git Automerger Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/git-automerger/",
      "id": "git-automerger"
    },
    {
      "name": "Git Bisect Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/git-bisect/",
      "id": "git-bisect"
    },
    {
      "name": "Git Changelog",
      "url": "https://www.jenkins.io/doc/pipeline/steps/git-changelog/",
      "id": "git-changelog"
    },
    {
      "name": "Git Forensics Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/git-forensics/",
      "id": "git-forensics"
    },
    {
      "name": "Git plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/git/",
      "id": "git"
    },
    {
      "name": "Gitee Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gitee/",
      "id": "gitee"
    },
    {
      "name": "GitHub Coverage Reporter",
      "url": "https://www.jenkins.io/doc/pipeline/steps/github-coverage-reporter/",
      "id": "github-coverage-reporter"
    },
    {
      "name": "GitHub Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/github-pullrequest/",
      "id": "github-pullrequest"
    },
    {
      "name": "GitHub Issues Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/github-issues/",
      "id": "github-issues"
    },
    {
      "name": "GitHub plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/github/",
      "id": "github"
    },
    {
      "name": "GitHub Pull Request Builder",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ghprb/",
      "id": "ghprb"
    },
    {
      "name": "GitHub Pull Request Coverage Status",
      "url": "https://www.jenkins.io/doc/pipeline/steps/github-pr-coverage-status/",
      "id": "github-pr-coverage-status"
    },
    {
      "name": "GitHub Status Wrapper Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-gitstatuswrapper/",
      "id": "pipeline-gitstatuswrapper"
    },
    {
      "name": "GitLab Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gitlab-plugin/",
      "id": "gitlab-plugin"
    },
    {
      "name": "Google Chat Notification",
      "url": "https://www.jenkins.io/doc/pipeline/steps/google-chat-notification/",
      "id": "google-chat-notification"
    },
    {
      "name": "Google Cloud Build Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/google-cloudbuild/",
      "id": "google-cloudbuild"
    },
    {
      "name": "Google Cloud Storage plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/google-storage-plugin/",
      "id": "google-storage-plugin"
    },
    {
      "name": "Google Kubernetes Engine Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/google-kubernetes-engine/",
      "id": "google-kubernetes-engine"
    },
    {
      "name": "Google Play Android Publisher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/google-play-android-publisher/",
      "id": "google-play-android-publisher"
    },
    {
      "name": "GPRbuild Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gprbuild/",
      "id": "gprbuild"
    },
    {
      "name": "Gradle Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/gradle/",
      "id": "gradle"
    },
    {
      "name": "Habitat Executor",
      "url": "https://www.jenkins.io/doc/pipeline/steps/habitat/",
      "id": "habitat"
    },
    {
      "name": "Hashicorp Vault Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hashicorp-vault-pipeline/",
      "id": "hashicorp-vault-pipeline"
    },
    {
      "name": "HashiCorp Vault Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hashicorp-vault-plugin/",
      "id": "hashicorp-vault-plugin"
    },
    {
      "name": "HCL AppScan",
      "url": "https://www.jenkins.io/doc/pipeline/steps/appscan/",
      "id": "appscan"
    },
    {
      "name": "HeadSpin Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/headspin/",
      "id": "headspin"
    },
    {
      "name": "Helix QAC Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/prqa-plugin/",
      "id": "prqa-plugin"
    },
    {
      "name": "HipChat Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hipchat/",
      "id": "hipchat"
    },
    {
      "name": "HockeyApp Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hockeyapp/",
      "id": "hockeyapp"
    },
    {
      "name": "HP ALM Quality Center Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hp-quality-center/",
      "id": "hp-quality-center"
    },
    {
      "name": "HTML Publisher plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/htmlpublisher/",
      "id": "htmlpublisher"
    },
    {
      "name": "HTTP Request Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/http_request/",
      "id": "http_request"
    },
    {
      "name": "Hubot Pipeline Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hubot-steps/",
      "id": "hubot-steps"
    },
    {
      "name": "Hudson Codescanner Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/codescanner/",
      "id": "codescanner"
    },
    {
      "name": "Hugo Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hugo/",
      "id": "hugo"
    },
    {
      "name": "Hyper.sh Build Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hyper-build-step/",
      "id": "hyper-build-step"
    },
    {
      "name": "IBM Cloud DevOps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ibm-cloud-devops/",
      "id": "ibm-cloud-devops"
    },
    {
      "name": "IBM Security AppScan Source Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ibm-security-appscansource-scanner/",
      "id": "ibm-security-appscansource-scanner"
    },
    {
      "name": "IBM Security AppScan Standard Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ibm-security-appscanstandard-scanner/",
      "id": "ibm-security-appscanstandard-scanner"
    },
    {
      "name": "IBM z/OS Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zos-connector/",
      "id": "zos-connector"
    },
    {
      "name": "ICQ and MyTeam Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/icq-notification/",
      "id": "icq-notification"
    },
    {
      "name": "in-toto provenance agent",
      "url": "https://www.jenkins.io/doc/pipeline/steps/in-toto/",
      "id": "in-toto"
    },
    {
      "name": "incapptic connect uploader plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/incapptic-connect-uploader/",
      "id": "incapptic-connect-uploader"
    },
    {
      "name": "Inedo BuildMaster Plugin.",
      "url": "https://www.jenkins.io/doc/pipeline/steps/inedo-buildmaster/",
      "id": "inedo-buildmaster"
    },
    {
      "name": "Inedo ProGet Plugin.",
      "url": "https://www.jenkins.io/doc/pipeline/steps/inedo-proget/",
      "id": "inedo-proget"
    },
    {
      "name": "InfluxDB Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/influxdb/",
      "id": "influxdb"
    },
    {
      "name": "InfluxDB Query Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/influxdb-query/",
      "id": "influxdb-query"
    },
    {
      "name": "InsightAppSec",
      "url": "https://www.jenkins.io/doc/pipeline/steps/insightappsec/",
      "id": "insightappsec"
    },
    {
      "name": "InsightVM Container Image Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rapid7-insightvm-container-assessment/",
      "id": "rapid7-insightvm-container-assessment"
    },
    {
      "name": "Instana integration",
      "url": "https://www.jenkins.io/doc/pipeline/steps/instana/",
      "id": "instana"
    },
    {
      "name": "IRC Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ircbot/",
      "id": "ircbot"
    },
    {
      "name": "IronMQ-notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ironmq-notifier/",
      "id": "ironmq-notifier"
    },
    {
      "name": "Jabber (XMPP) notifier and control plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jabber/",
      "id": "jabber"
    },
    {
      "name": "JaCoCo plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jacoco/",
      "id": "jacoco"
    },
    {
      "name": "Javadoc Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/javadoc/",
      "id": "javadoc"
    },
    {
      "name": "JClouds plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jclouds-jenkins/",
      "id": "jclouds-jenkins"
    },
    {
      "name": "JDCloud CodeDeploy Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jdcloud-codedeploy/",
      "id": "jdcloud-codedeploy"
    },
    {
      "name": "Jenkins Core",
      "url": "https://www.jenkins.io/doc/pipeline/steps/core/",
      "id": "core"
    },
    {
      "name": "JGiven Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jgiven/",
      "id": "jgiven"
    },
    {
      "name": "JIRA Pipeline Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jira-steps/",
      "id": "jira-steps"
    },
    {
      "name": "Jira plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jira/",
      "id": "jira"
    },
    {
      "name": "JMH Report",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jmh-report/",
      "id": "jmh-report"
    },
    {
      "name": "JMS Messaging Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jms-messaging/",
      "id": "jms-messaging"
    },
    {
      "name": "Job Cacher plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/jobcacher/",
      "id": "jobcacher"
    },
    {
      "name": "Job DSL",
      "url": "https://www.jenkins.io/doc/pipeline/steps/job-dsl/",
      "id": "job-dsl"
    },
    {
      "name": "JUnit Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/junit/",
      "id": "junit"
    },
    {
      "name": "JUnit Realtime Test Reporter Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/junit-realtime-test-reporter/",
      "id": "junit-realtime-test-reporter"
    },
    {
      "name": "Kafka Logs Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kafkalogs/",
      "id": "kafkalogs"
    },
    {
      "name": "Karaf Build Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/karaf-build-step/",
      "id": "karaf-build-step"
    },
    {
      "name": "Katalon TestOps Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/katalon/",
      "id": "katalon"
    },
    {
      "name": "Kiuwan plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kiuwanJenkinsPlugin/",
      "id": "kiuwanjenkinsplugin"
    },
    {
      "name": "Klocwork Analysis Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/klocwork/",
      "id": "klocwork"
    },
    {
      "name": "Kryptowire Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kryptowire/",
      "id": "kryptowire"
    },
    {
      "name": "Kubernetes :: Pipeline :: Arquillian Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-pipeline-arquillian-steps/",
      "id": "kubernetes-pipeline-arquillian-steps"
    },
    {
      "name": "Kubernetes :: Pipeline :: DevOps Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-pipeline-devops-steps/",
      "id": "kubernetes-pipeline-devops-steps"
    },
    {
      "name": "Kubernetes :: Pipeline :: Kubernetes Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-pipeline-steps/",
      "id": "kubernetes-pipeline-steps"
    },
    {
      "name": "Kubernetes CLI Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-cli/",
      "id": "kubernetes-cli"
    },
    {
      "name": "Kubernetes Continuous Deploy Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes-cd/",
      "id": "kubernetes-cd"
    },
    {
      "name": "Kubernetes plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/kubernetes/",
      "id": "kubernetes"
    },
    {
      "name": "Labeled Test Groups Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/labeled-test-groups-publisher/",
      "id": "labeled-test-groups-publisher"
    },
    {
      "name": "Labelled Pipeline Steps Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/labelled-steps/",
      "id": "labelled-steps"
    },
    {
      "name": "Last Changes Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/last-changes/",
      "id": "last-changes"
    },
    {
      "name": "LIFX notifier - smart lightbulbs build indicator",
      "url": "https://www.jenkins.io/doc/pipeline/steps/lifx-notifier/",
      "id": "lifx-notifier"
    },
    {
      "name": "Lighthouse Report Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/lighthouse-report/",
      "id": "lighthouse-report"
    },
    {
      "name": "Liquibase Runner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/liquibase-runner/",
      "id": "liquibase-runner"
    },
    {
      "name": "LoadComplete support plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/loadcomplete/",
      "id": "loadcomplete"
    },
    {
      "name": "LoadNinja Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/loadninja/",
      "id": "loadninja"
    },
    {
      "name": "Loadrunner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/loadrunner/",
      "id": "loadrunner"
    },
    {
      "name": "Lockable Resources plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/lockable-resources/",
      "id": "lockable-resources"
    },
    {
      "name": "Log File Filter Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/log-file-filter/",
      "id": "log-file-filter"
    },
    {
      "name": "Log Parser Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/log-parser/",
      "id": "log-parser"
    },
    {
      "name": "Logstash",
      "url": "https://www.jenkins.io/doc/pipeline/steps/logstash/",
      "id": "logstash"
    },
    {
      "name": "mabl",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mabl-integration/",
      "id": "mabl-integration"
    },
    {
      "name": "Machine Learning Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/machine-learning/",
      "id": "machine-learning"
    },
    {
      "name": "Mailer Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mailer/",
      "id": "mailer"
    },
    {
      "name": "Marathon Deployment",
      "url": "https://www.jenkins.io/doc/pipeline/steps/marathon/",
      "id": "marathon"
    },
    {
      "name": "Mask Passwords Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mask-passwords/",
      "id": "mask-passwords"
    },
    {
      "name": "MathWorks Polyspace Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mathworks-polyspace/",
      "id": "mathworks-polyspace"
    },
    {
      "name": "MATLAB Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/matlab/",
      "id": "matlab"
    },
    {
      "name": "Mattermost Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mattermost/",
      "id": "mattermost"
    },
    {
      "name": "Maven Invoker plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/maven-invoker-plugin/",
      "id": "maven-invoker-plugin"
    },
    {
      "name": "Maven Repository Server Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/repository/",
      "id": "repository"
    },
    {
      "name": "Maven SNAPSHOT Check Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/maven-snapshot-check/",
      "id": "maven-snapshot-check"
    },
    {
      "name": "meliora-testlab",
      "url": "https://www.jenkins.io/doc/pipeline/steps/meliora-testlab/",
      "id": "meliora-testlab"
    },
    {
      "name": "Memory Map Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/memory-map/",
      "id": "memory-map"
    },
    {
      "name": "MergeBot PlasticSCM Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/plasticscm-mergebot/",
      "id": "plasticscm-mergebot"
    },
    {
      "name": "Metrics Aggregation",
      "url": "https://www.jenkins.io/doc/pipeline/steps/metrics-aggregation/",
      "id": "metrics-aggregation"
    },
    {
      "name": "Micro Focus Application Automation Tools",
      "url": "https://www.jenkins.io/doc/pipeline/steps/hp-application-automation-tools-plugin/",
      "id": "hp-application-automation-tools-plugin"
    },
    {
      "name": "Micro Focus LoadRunner Enterprise integration With Git",
      "url": "https://www.jenkins.io/doc/pipeline/steps/micro-focus-performance-center-integration/",
      "id": "micro-focus-performance-center-integration"
    },
    {
      "name": "MicroNova EXAM Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/exam/",
      "id": "exam"
    },
    {
      "name": "Minio Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/minio/",
      "id": "minio"
    },
    {
      "name": "Minio Storage",
      "url": "https://www.jenkins.io/doc/pipeline/steps/minio-storage/",
      "id": "minio-storage"
    },
    {
      "name": "MISRA Compliance Report Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/misra-compliance-report-generator/",
      "id": "misra-compliance-report-generator"
    },
    {
      "name": "Mock Load Builder Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mock-load-builder/",
      "id": "mock-load-builder"
    },
    {
      "name": "MQ Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mq-notifier/",
      "id": "mq-notifier"
    },
    {
      "name": "MQTT Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mqtt-notification-plugin/",
      "id": "mqtt-notification-plugin"
    },
    {
      "name": "MSTest plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mstest/",
      "id": "mstest"
    },
    {
      "name": "NeoLoad Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/neoload-jenkins-plugin/",
      "id": "neoload-jenkins-plugin"
    },
    {
      "name": "Netsparker Enterprise Scan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/netsparker-cloud-scan/",
      "id": "netsparker-cloud-scan"
    },
    {
      "name": "NeuVector Vulnerability Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/neuvector-vulnerability-scanner/",
      "id": "neuvector-vulnerability-scanner"
    },
    {
      "name": "Nexus Artifact Uploader",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nexus-artifact-uploader/",
      "id": "nexus-artifact-uploader"
    },
    {
      "name": "Nexus Platform Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nexus-jenkins-plugin/",
      "id": "nexus-jenkins-plugin"
    },
    {
      "name": "Nirmata Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nirmata/",
      "id": "nirmata"
    },
    {
      "name": "NodeJS Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nodejs/",
      "id": "nodejs"
    },
    {
      "name": "Non Dynamic Hello World: TESTING PLUGIN",
      "url": "https://www.jenkins.io/doc/pipeline/steps/non-dynamic-hello-world/",
      "id": "non-dynamic-hello-world"
    },
    {
      "name": "Notify.Events",
      "url": "https://www.jenkins.io/doc/pipeline/steps/notify-events/",
      "id": "notify-events"
    },
    {
      "name": "NowSecure Auto Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nowsecure-auto-security-test/",
      "id": "nowsecure-auto-security-test"
    },
    {
      "name": "NS-ND Integration Performance Publisher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/cavisson-ns-nd-integration/",
      "id": "cavisson-ns-nd-integration"
    },
    {
      "name": "NUnit plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nunit/",
      "id": "nunit"
    },
    {
      "name": "Nutanix Calm Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nutanix-calm/",
      "id": "nutanix-calm"
    },
    {
      "name": "nvm-wrapper",
      "url": "https://www.jenkins.io/doc/pipeline/steps/nvm-wrapper/",
      "id": "nvm-wrapper"
    },
    {
      "name": "OctoPerf Load Testing Plugin.",
      "url": "https://www.jenkins.io/doc/pipeline/steps/octoperf/",
      "id": "octoperf"
    },
    {
      "name": "Octopus Deploy",
      "url": "https://www.jenkins.io/doc/pipeline/steps/octopusdeploy/",
      "id": "octopusdeploy"
    },
    {
      "name": "Office 365 Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/Office-365-Connector/",
      "id": "office-365-connector"
    },
    {
      "name": "OneSky Jenkins plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/onesky/",
      "id": "onesky"
    },
    {
      "name": "OpenEdge (Progress ABL)",
      "url": "https://www.jenkins.io/doc/pipeline/steps/openedge/",
      "id": "openedge"
    },
    {
      "name": "OpenShift Client Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/openshift-client/",
      "id": "openshift-client"
    },
    {
      "name": "OpenShift Pipeline Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/openshift-pipeline/",
      "id": "openshift-pipeline"
    },
    {
      "name": "OpenStack Cloud Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/openstack-cloud/",
      "id": "openstack-cloud"
    },
    {
      "name": "OpsGenie Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/opsgenie/",
      "id": "opsgenie"
    },
    {
      "name": "OSF Builder Suite :: Standalone Sonar Linter",
      "url": "https://www.jenkins.io/doc/pipeline/steps/osf-builder-suite-standalone-sonar-linter/",
      "id": "osf-builder-suite-standalone-sonar-linter"
    },
    {
      "name": "OSF Builder Suite :: XML Linter",
      "url": "https://www.jenkins.io/doc/pipeline/steps/osf-builder-suite-xml-linter/",
      "id": "osf-builder-suite-xml-linter"
    },
    {
      "name": "OSF Builder Suite For Salesforce Commerce Cloud :: Data Import",
      "url": "https://www.jenkins.io/doc/pipeline/steps/osf-builder-suite-for-sfcc-data-import/",
      "id": "osf-builder-suite-for-sfcc-data-import"
    },
    {
      "name": "OSF Builder Suite For Salesforce Commerce Cloud :: Deploy",
      "url": "https://www.jenkins.io/doc/pipeline/steps/osf-builder-suite-for-sfcc-deploy/",
      "id": "osf-builder-suite-for-sfcc-deploy"
    },
    {
      "name": "OSF Builder Suite For Salesforce Commerce Cloud :: Run Job",
      "url": "https://www.jenkins.io/doc/pipeline/steps/osf-builder-suite-for-sfcc-run-job/",
      "id": "osf-builder-suite-for-sfcc-run-job"
    },
    {
      "name": "Ostorlab Security And Privacy Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ostorlab/",
      "id": "ostorlab"
    },
    {
      "name": "OverOps Query Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/overops-query/",
      "id": "overops-query"
    },
    {
      "name": "Oversecured Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/oversecured/",
      "id": "oversecured"
    },
    {
      "name": "OWASP Dependency-Check Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dependency-check-jenkins-plugin/",
      "id": "dependency-check-jenkins-plugin"
    },
    {
      "name": "OWASP Dependency-Track Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/dependency-track/",
      "id": "dependency-track"
    },
    {
      "name": "P4 Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/p4/",
      "id": "p4"
    },
    {
      "name": "Package Drone Deployer",
      "url": "https://www.jenkins.io/doc/pipeline/steps/package-drone/",
      "id": "package-drone"
    },
    {
      "name": "PagerDuty Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pagerduty/",
      "id": "pagerduty"
    },
    {
      "name": "Parallel Test Executor Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/parallel-test-executor/",
      "id": "parallel-test-executor"
    },
    {
      "name": "Parameterized Remote Trigger Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/Parameterized-Remote-Trigger/",
      "id": "parameterized-remote-trigger"
    },
    {
      "name": "Performance Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/performance/",
      "id": "performance"
    },
    {
      "name": "Performance Publisher plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/perfpublisher/",
      "id": "perfpublisher"
    },
    {
      "name": "Performance Signature: Dynatrace",
      "url": "https://www.jenkins.io/doc/pipeline/steps/performance-signature-dynatracesaas/",
      "id": "performance-signature-dynatracesaas"
    },
    {
      "name": "Performance Signature: Dynatrace AppMon",
      "url": "https://www.jenkins.io/doc/pipeline/steps/performance-signature-dynatrace/",
      "id": "performance-signature-dynatrace"
    },
    {
      "name": "Performance Signature: Viewer",
      "url": "https://www.jenkins.io/doc/pipeline/steps/performance-signature-viewer/",
      "id": "performance-signature-viewer"
    },
    {
      "name": "Phabricator Differential Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/phabricator-plugin/",
      "id": "phabricator-plugin"
    },
    {
      "name": "PingCode Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/worktile/",
      "id": "worktile"
    },
    {
      "name": "Pipeline Dependency Walker Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-dependency-walker/",
      "id": "pipeline-dependency-walker"
    },
    {
      "name": "Pipeline GitHub Notify Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-githubnotify-step/",
      "id": "pipeline-githubnotify-step"
    },
    {
      "name": "Pipeline Keep Running Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-keep-running-step/",
      "id": "pipeline-keep-running-step"
    },
    {
      "name": "Pipeline Maven Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-maven/",
      "id": "pipeline-maven"
    },
    {
      "name": "Pipeline NPM Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-npm/",
      "id": "pipeline-npm"
    },
    {
      "name": "Pipeline Utility Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-utility-steps/",
      "id": "pipeline-utility-steps"
    },
    {
      "name": "Pipeline: AWS Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-aws/",
      "id": "pipeline-aws"
    },
    {
      "name": "Pipeline: Bamboo Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-bamboo/",
      "id": "pipeline-bamboo"
    },
    {
      "name": "Pipeline: Basic Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-basic-steps/",
      "id": "workflow-basic-steps"
    },
    {
      "name": "Pipeline: Build Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-build-step/",
      "id": "pipeline-build-step"
    },
    {
      "name": "Pipeline: Declarative",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-model-definition/",
      "id": "pipeline-model-definition"
    },
    {
      "name": "Pipeline: Deploymon.io Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-deploymon/",
      "id": "pipeline-deploymon"
    },
    {
      "name": "Pipeline: Groovy",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-cps/",
      "id": "workflow-cps"
    },
    {
      "name": "Pipeline: HuaweiCloud Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-huaweicloud-plugin/",
      "id": "pipeline-huaweicloud-plugin"
    },
    {
      "name": "Pipeline: Input Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-input-step/",
      "id": "pipeline-input-step"
    },
    {
      "name": "Pipeline: Keep Environment Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-keepenv-step/",
      "id": "pipeline-keepenv-step"
    },
    {
      "name": "Pipeline: Milestone Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-milestone-step/",
      "id": "pipeline-milestone-step"
    },
    {
      "name": "Pipeline: Multibranch",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-multibranch/",
      "id": "workflow-multibranch"
    },
    {
      "name": "Pipeline: Nodes and Processes",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-durable-task-step/",
      "id": "workflow-durable-task-step"
    },
    {
      "name": "Pipeline: Phoenix AutoTest Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/phoenix-autotest/",
      "id": "phoenix-autotest"
    },
    {
      "name": "Pipeline: SCM Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-scm-step/",
      "id": "workflow-scm-step"
    },
    {
      "name": "Pipeline: Shared Groovy Libraries",
      "url": "https://www.jenkins.io/doc/pipeline/steps/workflow-cps-global-lib/",
      "id": "workflow-cps-global-lib"
    },
    {
      "name": "Pipeline: Stage Step",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pipeline-stage-step/",
      "id": "pipeline-stage-step"
    },
    {
      "name": "PIT Mutation Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pitmutation/",
      "id": "pitmutation"
    },
    {
      "name": "PlasticSCM Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/plasticscm-plugin/",
      "id": "plasticscm-plugin"
    },
    {
      "name": "Play Framework plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/play-autotest-plugin/",
      "id": "play-autotest-plugin"
    },
    {
      "name": "Plot plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/plot/",
      "id": "plot"
    },
    {
      "name": "PMD Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pmd/",
      "id": "pmd"
    },
    {
      "name": "Portshift Vulnerability Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/portshift-scanner/",
      "id": "portshift-scanner"
    },
    {
      "name": "Pragprog Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pragprog/",
      "id": "pragprog"
    },
    {
      "name": "PreFlight",
      "url": "https://www.jenkins.io/doc/pipeline/steps/preflight-integration/",
      "id": "preflight-integration"
    },
    {
      "name": "Pretested Integration Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pretested-integration/",
      "id": "pretested-integration"
    },
    {
      "name": "Prisma Cloud IaC Scan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/prisma-cloud-iac-scan/",
      "id": "prisma-cloud-iac-scan"
    },
    {
      "name": "Probely Security Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/probely-security/",
      "id": "probely-security"
    },
    {
      "name": "Progress MobileStudio Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teststudiomobiletesting/",
      "id": "teststudiomobiletesting"
    },
    {
      "name": "Progress TestStudio for API Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teststudioapitesting/",
      "id": "teststudioapitesting"
    },
    {
      "name": "Progress TestStudio Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teststudio/",
      "id": "teststudio"
    },
    {
      "name": "Protecode SC",
      "url": "https://www.jenkins.io/doc/pipeline/steps/protecode-sc/",
      "id": "protecode-sc"
    },
    {
      "name": "Publish Over CIFS",
      "url": "https://www.jenkins.io/doc/pipeline/steps/publish-over-cifs/",
      "id": "publish-over-cifs"
    },
    {
      "name": "Publish Over Dropbox",
      "url": "https://www.jenkins.io/doc/pipeline/steps/publish-over-dropbox/",
      "id": "publish-over-dropbox"
    },
    {
      "name": "Publish Over FTP",
      "url": "https://www.jenkins.io/doc/pipeline/steps/publish-over-ftp/",
      "id": "publish-over-ftp"
    },
    {
      "name": "Publish Over SSH",
      "url": "https://www.jenkins.io/doc/pipeline/steps/publish-over-ssh/",
      "id": "publish-over-ssh"
    },
    {
      "name": "Publish to Bitbucket Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/publish-to-bitbucket/",
      "id": "publish-to-bitbucket"
    },
    {
      "name": "Puppet Enterprise Pipeline",
      "url": "https://www.jenkins.io/doc/pipeline/steps/puppet-enterprise-pipeline/",
      "id": "puppet-enterprise-pipeline"
    },
    {
      "name": "PureLoad Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pureload/",
      "id": "pureload"
    },
    {
      "name": "Pyenv Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/pyenv-pipeline/",
      "id": "pyenv-pipeline"
    },
    {
      "name": "QF-Test Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qftest/",
      "id": "qftest"
    },
    {
      "name": "Qiniu",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qiniu/",
      "id": "qiniu"
    },
    {
      "name": "QMetry for JIRA - Test Management Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qmetry-for-jira-test-management/",
      "id": "qmetry-for-jira-test-management"
    },
    {
      "name": "QMetry Test Management Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qmetry-test-management/",
      "id": "qmetry-test-management"
    },
    {
      "name": "QRebel Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qrebel/",
      "id": "qrebel"
    },
    {
      "name": "qTest Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qtest/",
      "id": "qtest"
    },
    {
      "name": "Quality Clouds Scan Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualityclouds/",
      "id": "qualityclouds"
    },
    {
      "name": "Qualys API Security Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualys-api-security/",
      "id": "qualys-api-security"
    },
    {
      "name": "Qualys Container Scanning Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualys-cs/",
      "id": "qualys-cs"
    },
    {
      "name": "Qualys Host Scanning Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualys-vm/",
      "id": "qualys-vm"
    },
    {
      "name": "Qualys Policy Compliance Scanning Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualys-pc/",
      "id": "qualys-pc"
    },
    {
      "name": "Qualys Web App Scanning Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qualys-was/",
      "id": "qualys-was"
    },
    {
      "name": "Questa VRM",
      "url": "https://www.jenkins.io/doc/pipeline/steps/mentor-questa-vrm/",
      "id": "mentor-questa-vrm"
    },
    {
      "name": "Qy Wechat Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/qy-wechat-notification/",
      "id": "qy-wechat-notification"
    },
    {
      "name": "R Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/r/",
      "id": "r"
    },
    {
      "name": "Rabbit-MQ Publisher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rabbitmq-publisher/",
      "id": "rabbitmq-publisher"
    },
    {
      "name": "RadarGun Reporting Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/radargun-reporting/",
      "id": "radargun-reporting"
    },
    {
      "name": "Rancher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rancher/",
      "id": "rancher"
    },
    {
      "name": "Ranorex Test Execution Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ranorex-integration/",
      "id": "ranorex-integration"
    },
    {
      "name": "Raspberry Pi Build Status Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rpi-build-status/",
      "id": "rpi-build-status"
    },
    {
      "name": "ReadyAPI Functional Testing Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/soapui-pro-functional-testing/",
      "id": "soapui-pro-functional-testing"
    },
    {
      "name": "Redeploy Rancher2.x Workload Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/redeploy-rancher2-workload/",
      "id": "redeploy-rancher2-workload"
    },
    {
      "name": "Redmine Metrics Report",
      "url": "https://www.jenkins.io/doc/pipeline/steps/redmine-metrics-report/",
      "id": "redmine-metrics-report"
    },
    {
      "name": "Release Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/release/",
      "id": "release"
    },
    {
      "name": "Reliza Integration",
      "url": "https://www.jenkins.io/doc/pipeline/steps/reliza-integration/",
      "id": "reliza-integration"
    },
    {
      "name": "Repository Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/repository-connector/",
      "id": "repository-connector"
    },
    {
      "name": "Reqtify Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/reqtify/",
      "id": "reqtify"
    },
    {
      "name": "Review Board Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rb/",
      "id": "rb"
    },
    {
      "name": "Rich Text Publisher Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rich-text-publisher-plugin/",
      "id": "rich-text-publisher-plugin"
    },
    {
      "name": "Robot Framework plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/robot/",
      "id": "robot"
    },
    {
      "name": "RocketChat Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rocketchatnotifier/",
      "id": "rocketchatnotifier"
    },
    {
      "name": "RubyMetrics plugin for Jenkins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rubyMetrics/",
      "id": "rubymetrics"
    },
    {
      "name": "Run Selector Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/run-selector/",
      "id": "run-selector"
    },
    {
      "name": "Rundeck plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/rundeck/",
      "id": "rundeck"
    },
    {
      "name": "S3 publisher plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/s3/",
      "id": "s3"
    },
    {
      "name": "SaltStack plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/saltstack/",
      "id": "saltstack"
    },
    {
      "name": "Sauce OnDemand plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sauce-ondemand/",
      "id": "sauce-ondemand"
    },
    {
      "name": "SCM HttpClient",
      "url": "https://www.jenkins.io/doc/pipeline/steps/scm-httpclient/",
      "id": "scm-httpclient"
    },
    {
      "name": "SCM Skip Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/scmskip/",
      "id": "scmskip"
    },
    {
      "name": "Scoverage Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/scoverage/",
      "id": "scoverage"
    },
    {
      "name": "SCTMExecutor",
      "url": "https://www.jenkins.io/doc/pipeline/steps/SCTMExecutor/",
      "id": "sctmexecutor"
    },
    {
      "name": "SD Elements Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sdelements/",
      "id": "sdelements"
    },
    {
      "name": "Seapine Surround SCM Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/Surround-SCM-plugin/",
      "id": "surround-scm-plugin"
    },
    {
      "name": "Selenium HTML report",
      "url": "https://www.jenkins.io/doc/pipeline/steps/seleniumhtmlreport/",
      "id": "seleniumhtmlreport"
    },
    {
      "name": "Sensedia Api Platform tools",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sensedia-api-platform/",
      "id": "sensedia-api-platform"
    },
    {
      "name": "Service Now Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/service-now/",
      "id": "service-now"
    },
    {
      "name": "ServiceNow CI/CD Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/servicenow-cicd/",
      "id": "servicenow-cicd"
    },
    {
      "name": "SideeX",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sideex/",
      "id": "sideex"
    },
    {
      "name": "Simple Pull Request Job Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/simple-pull-request-job/",
      "id": "simple-pull-request-job"
    },
    {
      "name": "SimplifyQA Connector",
      "url": "https://www.jenkins.io/doc/pipeline/steps/simplify-qa-connector/",
      "id": "simplify-qa-connector"
    },
    {
      "name": "Sken.ai CLI",
      "url": "https://www.jenkins.io/doc/pipeline/steps/skenai/",
      "id": "skenai"
    },
    {
      "name": "Slack Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/slack/",
      "id": "slack"
    },
    {
      "name": "SLOCCount Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sloccount/",
      "id": "sloccount"
    },
    {
      "name": "SmileHub Notifier",
      "url": "https://www.jenkins.io/doc/pipeline/steps/smilehubnotifier/",
      "id": "smilehubnotifier"
    },
    {
      "name": "SnowGlobe Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/snowglobe/",
      "id": "snowglobe"
    },
    {
      "name": "Snyk Security Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/snyk-security-scanner/",
      "id": "snyk-security-scanner"
    },
    {
      "name": "Sonar Gerrit Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sonar-gerrit/",
      "id": "sonar-gerrit"
    },
    {
      "name": "Sonargraph Integration Jenkins Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sonargraph-integration/",
      "id": "sonargraph-integration"
    },
    {
      "name": "SonarQube Scanner for Jenkins",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sonar/",
      "id": "sonar"
    },
    {
      "name": "Split Admin plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/split-admin/",
      "id": "split-admin"
    },
    {
      "name": "Splunk Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/splunk-devops/",
      "id": "splunk-devops"
    },
    {
      "name": "Spring Config Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/spring-config/",
      "id": "spring-config"
    },
    {
      "name": "Spring Initalzr plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/spring-initalzr/",
      "id": "spring-initalzr"
    },
    {
      "name": "SQLPlus Script Runner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sqlplus-script-runner/",
      "id": "sqlplus-script-runner"
    },
    {
      "name": "Squash TM Publisher (Squash4Jenkins)",
      "url": "https://www.jenkins.io/doc/pipeline/steps/squashtm-publisher/",
      "id": "squashtm-publisher"
    },
    {
      "name": "SSH Agent Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ssh-agent/",
      "id": "ssh-agent"
    },
    {
      "name": "SSH Pipeline Steps",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ssh-steps/",
      "id": "ssh-steps"
    },
    {
      "name": "StackRox Container Image Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/stackrox-container-image-scanner/",
      "id": "stackrox-container-image-scanner"
    },
    {
      "name": "Start Windocks Containers",
      "url": "https://www.jenkins.io/doc/pipeline/steps/windocks-start-container/",
      "id": "windocks-start-container"
    },
    {
      "name": "Static Analysis Collector Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/analysis-collector/",
      "id": "analysis-collector"
    },
    {
      "name": "StepCounter Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/stepcounter/",
      "id": "stepcounter"
    },
    {
      "name": "Stoplight Report Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/stoplightio-report/",
      "id": "stoplightio-report"
    },
    {
      "name": "Subversion Partial Release Manager plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/svn-partial-release-mgr/",
      "id": "svn-partial-release-mgr"
    },
    {
      "name": "Subversion Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/subversion/",
      "id": "subversion"
    },
    {
      "name": "Summary Display Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/summary_report/",
      "id": "summary_report"
    },
    {
      "name": "Sumologic Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sumologic-publisher/",
      "id": "sumologic-publisher"
    },
    {
      "name": "SWAMP Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/swamp/",
      "id": "swamp"
    },
    {
      "name": "SWEAGLE Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sweagle/",
      "id": "sweagle"
    },
    {
      "name": "Synopsys Coverity plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/synopsys-coverity/",
      "id": "synopsys-coverity"
    },
    {
      "name": "Synopsys Detect plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/blackduck-detect/",
      "id": "blackduck-detect"
    },
    {
      "name": "Synopsys Polaris Software Integrity Platform Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/synopsys-polaris/",
      "id": "synopsys-polaris"
    },
    {
      "name": "Sysdig Secure Container Image Scanner Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/sysdig-secure/",
      "id": "sysdig-secure"
    },
    {
      "name": "Tanaguru Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tanaguru/",
      "id": "tanaguru"
    },
    {
      "name": "TAP Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tap/",
      "id": "tap"
    },
    {
      "name": "Task Scanner Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tasks/",
      "id": "tasks"
    },
    {
      "name": "Team Concert Git Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teamconcert-git/",
      "id": "teamconcert-git"
    },
    {
      "name": "Team Concert Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teamconcert/",
      "id": "teamconcert"
    },
    {
      "name": "Team Foundation Server Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tfs/",
      "id": "tfs"
    },
    {
      "name": "teamscale-upload",
      "url": "https://www.jenkins.io/doc/pipeline/steps/teamscale-upload/",
      "id": "teamscale-upload"
    },
    {
      "name": "Tekton Client Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tekton-client/",
      "id": "tekton-client"
    },
    {
      "name": "Telegram Bot Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/telegram-notifications/",
      "id": "telegram-notifications"
    },
    {
      "name": "TestComplete support plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/TestComplete/",
      "id": "testcomplete"
    },
    {
      "name": "Testein",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testein/",
      "id": "testein"
    },
    {
      "name": "TestFLO - Test Management for Jira",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testflo-for-jira-test-management-automation/",
      "id": "testflo-for-jira-test-management-automation"
    },
    {
      "name": "TestingBot plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testingbot/",
      "id": "testingbot"
    },
    {
      "name": "Testinium Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testinium/",
      "id": "testinium"
    },
    {
      "name": "TestNG Results Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testng-plugin/",
      "id": "testng-plugin"
    },
    {
      "name": "TestProject Automation Platform Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testproject/",
      "id": "testproject"
    },
    {
      "name": "TestWeaver Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/testweaver/",
      "id": "testweaver"
    },
    {
      "name": "Text Finder",
      "url": "https://www.jenkins.io/doc/pipeline/steps/text-finder/",
      "id": "text-finder"
    },
    {
      "name": "Themis Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/themis/",
      "id": "themis"
    },
    {
      "name": "ThreadFix Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/threadfix/",
      "id": "threadfix"
    },
    {
      "name": "Throttle Concurrent Builds Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/throttle-concurrents/",
      "id": "throttle-concurrents"
    },
    {
      "name": "Thycotic DevOps Secrets Vault Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/thycotic-vault/",
      "id": "thycotic-vault"
    },
    {
      "name": "TICS Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tics/",
      "id": "tics"
    },
    {
      "name": "Timestamper",
      "url": "https://www.jenkins.io/doc/pipeline/steps/timestamper/",
      "id": "timestamper"
    },
    {
      "name": "Token Macro Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/token-macro/",
      "id": "token-macro"
    },
    {
      "name": "TraceTronic ECU-TEST Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ecutest/",
      "id": "ecutest"
    },
    {
      "name": "Tricentis Continuous Integration",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tricentis-ci/",
      "id": "tricentis-ci"
    },
    {
      "name": "Tuleap API Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tuleap-api/",
      "id": "tuleap-api"
    },
    {
      "name": "Typetalk Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/typetalk/",
      "id": "typetalk"
    },
    {
      "name": "UiPath Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/uipath-automation-package/",
      "id": "uipath-automation-package"
    },
    {
      "name": "Uleska Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/uleska/",
      "id": "uleska"
    },
    {
      "name": "Updatebot Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/updatebot/",
      "id": "updatebot"
    },
    {
      "name": "Updraft Android/iOS Publisher",
      "url": "https://www.jenkins.io/doc/pipeline/steps/updraft-publisher/",
      "id": "updraft-publisher"
    },
    {
      "name": "UrbanCode Velocity Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/urbancode-velocity/",
      "id": "urbancode-velocity"
    },
    {
      "name": "User1st uTester Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/user1st-utester/",
      "id": "user1st-utester"
    },
    {
      "name": "Valgrind Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/valgrind/",
      "id": "valgrind"
    },
    {
      "name": "valid-network-plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/valid-network/",
      "id": "valid-network"
    },
    {
      "name": "Variables Replace",
      "url": "https://www.jenkins.io/doc/pipeline/steps/variables-replace-plugin/",
      "id": "variables-replace-plugin"
    },
    {
      "name": "Vdoo Vision Scanner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vdoo-vision/",
      "id": "vdoo-vision"
    },
    {
      "name": "VectorCAST Coverage",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vectorcast-coverage/",
      "id": "vectorcast-coverage"
    },
    {
      "name": "VectorCAST Execution",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vectorcast-execution/",
      "id": "vectorcast-execution"
    },
    {
      "name": "Venafi CodeSign Protect",
      "url": "https://www.jenkins.io/doc/pipeline/steps/venafi-codesigning/",
      "id": "venafi-codesigning"
    },
    {
      "name": "Venafi Machine Identity Protection",
      "url": "https://www.jenkins.io/doc/pipeline/steps/venafi-vcert/",
      "id": "venafi-vcert"
    },
    {
      "name": "Veracode Scan",
      "url": "https://www.jenkins.io/doc/pipeline/steps/veracode-scan/",
      "id": "veracode-scan"
    },
    {
      "name": "Version Number Plug-In",
      "url": "https://www.jenkins.io/doc/pipeline/steps/versionnumber/",
      "id": "versionnumber"
    },
    {
      "name": "view-cloner",
      "url": "https://www.jenkins.io/doc/pipeline/steps/view-cloner/",
      "id": "view-cloner"
    },
    {
      "name": "Violation Comments to Bitbucket Server Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/violation-comments-to-stash/",
      "id": "violation-comments-to-stash"
    },
    {
      "name": "Violation Comments to GitHub Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/violation-comments-to-github/",
      "id": "violation-comments-to-github"
    },
    {
      "name": "Violation Comments to GitLab Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/violation-comments-to-gitlab/",
      "id": "violation-comments-to-gitlab"
    },
    {
      "name": "Visual Basic 6 Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/visual-basic-6/",
      "id": "visual-basic-6"
    },
    {
      "name": "visualexpert",
      "url": "https://www.jenkins.io/doc/pipeline/steps/visualexpert/",
      "id": "visualexpert"
    },
    {
      "name": "vRealize Automation 8.x Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vrealize-automation-8/",
      "id": "vrealize-automation-8"
    },
    {
      "name": "vSphere Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vsphere-cloud/",
      "id": "vsphere-cloud"
    },
    {
      "name": "VSTest Runner plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/vstestrunner/",
      "id": "vstestrunner"
    },
    {
      "name": "Wallarm Fast",
      "url": "https://www.jenkins.io/doc/pipeline/steps/wallarm-fast/",
      "id": "wallarm-fast"
    },
    {
      "name": "WAPT Pro plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/waptpro/",
      "id": "waptpro"
    },
    {
      "name": "Warnings Next Generation Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/warnings-ng/",
      "id": "warnings-ng"
    },
    {
      "name": "Warnings Plug-in",
      "url": "https://www.jenkins.io/doc/pipeline/steps/warnings/",
      "id": "warnings"
    },
    {
      "name": "Warrior Framework Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/warrior/",
      "id": "warrior"
    },
    {
      "name": "Wattspeed",
      "url": "https://www.jenkins.io/doc/pipeline/steps/wattspeed/",
      "id": "wattspeed"
    },
    {
      "name": "Wavefront Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/wavefront/",
      "id": "wavefront"
    },
    {
      "name": "Webhook Step Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/webhook-step/",
      "id": "webhook-step"
    },
    {
      "name": "Websocket.in Notification Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/websocketin-notification/",
      "id": "websocketin-notification"
    },
    {
      "name": "White Source Jenkins plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/whitesource/",
      "id": "whitesource"
    },
    {
      "name": "Windows Azure Storage plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/windows-azure-storage/",
      "id": "windows-azure-storage"
    },
    {
      "name": "WinRM Client Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/winrm-client/",
      "id": "winrm-client"
    },
    {
      "name": "Worksoft Execution Manager Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ws-execution-manager/",
      "id": "ws-execution-manager"
    },
    {
      "name": "Workspace Cleanup Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/ws-cleanup/",
      "id": "ws-cleanup"
    },
    {
      "name": "Xcode integration",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xcode-plugin/",
      "id": "xcode-plugin"
    },
    {
      "name": "XebiaLabs XL Deploy Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/deployit-plugin/",
      "id": "deployit-plugin"
    },
    {
      "name": "XebiaLabs XL Release Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xlrelease-plugin/",
      "id": "xlrelease-plugin"
    },
    {
      "name": "XFramium Builder",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xframium/",
      "id": "xframium"
    },
    {
      "name": "XLRelease Variables Setter",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xlrelease-var-setter/",
      "id": "xlrelease-var-setter"
    },
    {
      "name": "Xooa",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xooa/",
      "id": "xooa"
    },
    {
      "name": "Xray - Test Management for Jira Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xray-connector/",
      "id": "xray-connector"
    },
    {
      "name": "xUnit plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xunit/",
      "id": "xunit"
    },
    {
      "name": "Xvfb plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xvfb/",
      "id": "xvfb"
    },
    {
      "name": "Xvnc plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/xvnc/",
      "id": "xvnc"
    },
    {
      "name": "Yet Another Docker Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/yet-another-docker-plugin/",
      "id": "yet-another-docker-plugin"
    },
    {
      "name": "Zanata Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zanata/",
      "id": "zanata"
    },
    {
      "name": "ZAP Pipeline Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zap-pipeline/",
      "id": "zap-pipeline"
    },
    {
      "name": "Zephyr Enterprise Test Management plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zephyr-enterprise-test-management/",
      "id": "zephyr-enterprise-test-management"
    },
    {
      "name": "Zephyr Scale",
      "url": "https://www.jenkins.io/doc/pipeline/steps/tm4j-automation/",
      "id": "tm4j-automation"
    },
    {
      "name": "zerobug Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zerobug/",
      "id": "zerobug"
    },
    {
      "name": "Zoho Sprints",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zohosprints/",
      "id": "zohosprints"
    },
    {
      "name": "Zoom Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zoom/",
      "id": "zoom"
    },
    {
      "name": "Zulip Plugin",
      "url": "https://www.jenkins.io/doc/pipeline/steps/zulip/",
      "id": "zulip"
    }
  ],
  "instructions": [
    {
      "command": "AlaudaDeleteBuild",
      "title": "AlaudaDeleteBuild: AlaudaDeleteBuild",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "AlaudaDeleteBuild",
      "title": "AlaudaDeleteBuild: AlaudaDeleteBuild",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "Applitools",
      "title": "Applitools: Applitools Support",
      "description": "",
      "parameters": [
        {
          "name": "serverURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notifyByCompletion",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applitoolsApiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "applitools-eyes"
    },
    {
      "command": "ArtifactoryGradleBuild",
      "title": "ArtifactoryGradleBuild: run Artifactory gradle",
      "description": "",
      "parameters": [
        {
          "name": "gradleBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.GradleBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rootDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tasks",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "switches",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "Consul",
      "title": "Consul: ConsulStep",
      "description": "",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "consulSettingsProfileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "operationList",
          "type": "Nested",
          "values": [
            "$class: 'ConsulGetKV'",
            "$class: 'ConsulServiceDiscoveryOperation'",
            "$class: 'ConsulSetKV'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "consul"
    },
    {
      "command": "DASTScan",
      "title": "DASTScan: Breachlock DAST scan",
      "description": "",
      "parameters": [
        {
          "name": "apikey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "Your API key can be found on the [Breachlock Platform](https://app.breachlock.com) under\n\n \n \n<em>**`Organization settings &gt; Integrations &gt; Jenkins`**</em>",
          "isOptional": true
        },
        {
          "name": "asset",
          "type": "String",
          "values": [],
          "description": "Select the asset that will be scanned on build.\n\n \nIf the asset you are looking for is missing:\n\n \n  \n* Make sure it's registered on the [Breachlock Platform](https://app.breachlock.com).\n\n  \n* Check if your Jenkins installation can connect to [https://app.breachlock.com/](https://app.breachlock.com).\n\n  \n* Contact support if the problem keeps persisting.",
          "isOptional": true
        },
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "The email-address you registered on [Breachlock Platform](https://app.breachlock.com).",
          "isOptional": true
        }
      ],
      "plugin": "breachlock-dast"
    },
    {
      "command": "MavenDescriptorStep",
      "title": "MavenDescriptorStep: Get Artifactory Maven descriptor",
      "description": "",
      "parameters": [
        {
          "name": "pomFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionPerModule",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnSnapshot",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "NCScanBuilder",
      "title": "NCScanBuilder: Acunetix 360 Scan",
      "description": "",
      "parameters": [
        {
          "name": "ncScanType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ncWebsiteId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ncProfileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncApiToken",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncServerURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncStopScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "acunetix-360-scan"
    },
    {
      "command": "NCScanBuilder",
      "title": "NCScanBuilder: Netsparker Enterprise Scan",
      "description": "",
      "parameters": [
        {
          "name": "ncScanType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ncWebsiteId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ncProfileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncApiToken",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncServerURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ncStopScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "netsparker-cloud-scan"
    },
    {
      "command": "OneSky",
      "title": "OneSky: Download translation resources from One Sky",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "Try to look for this on the URL after selecting the project from the menu",
          "isOptional": true
        },
        {
          "name": "resourcesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "onesky"
    },
    {
      "command": "OverOpsQuery",
      "title": "OverOpsQuery: OverOps Quality Report",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "<em>(Optional)</em> Application Name as specified in OverOps.\n \n  \n* If populated, the plugin will filter the data for the specific application in OverOps.\n\n  \n* If blank, no application filter will be applied in query.",
          "isOptional": true
        },
        {
          "name": "checkCriticalErrors",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "Use this Gate to detect specific critical errors in the current build.",
          "isOptional": true
        },
        {
          "name": "checkNewErrors",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "Use this Gate if you want to check for any new errors in the current build.",
          "isOptional": true
        },
        {
          "name": "checkResurfacedErrors",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "Use this Gate if you want to check for any errors that have resurfaced and are occurring in the current build after being marked as resolved in OverOps.",
          "isOptional": true
        },
        {
          "name": "checkUniqueErrors",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "Use this Gate to limit the number of allowable Unique Errors in the current build.",
          "isOptional": true
        },
        {
          "name": "checkVolumeErrors",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "Use this Gate to limit the Total number of allowable Errors in the current build.",
          "isOptional": true
        },
        {
          "name": "criticalExceptionTypes",
          "type": "String",
          "values": [],
          "description": "A comma delimited list of exception types that are deemed as severe regardless of their volume. If events of any exceptions listed have a count greater than zero, the build will be marked as unstable.\n \nExample: `NullPointerException,IndexOutOfBoundsException`",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "If checked, all queries with results will be displayed in the OverOps reliability report. <em>For debugging purposes only</em>.",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "<em>(Optional)</em> Deployment Name as specified in OverOps or use Jenkins environment variables.\n \nExample: `${BUILD_NUMBER}` or `${JOB_NAME}-${BUILD_NUMBER}`\n\n \n  \n*  If populated, the plugin will filter the data for the specific deployment name in OverOps\n   <blockquote>\n **Note:** If using Jenkins environment variables, they must be added to the build’s manifest file for OverOps to use. See this [link](https://doc.overops.com/docs/naming-your-application-server-deployment) for details.\n   </blockquote> \n\n  \n*  If blank, no deployment filter will be applied in the query.",
          "isOptional": true
        },
        {
          "name": "errorSuccess",
          "type": "boolean",
          "values": [],
          "description": "If checked, the build will be marked **<em>Success</em>** if unable to generate a Quality Report. By default, the build will be marked **<em>Not Built</em>** if unable to generate a Quality Report.",
          "isOptional": true
        },
        {
          "name": "linkReport",
          "type": "boolean",
          "values": [],
          "description": "Set true if you want to simply generate a link to the report to view later.\n \n\n Note: Setting this to true will not fail the build as the quality report has not been generated yet.",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "If checked the build will be marked unstable if any of the five gates are met.",
          "isOptional": true
        },
        {
          "name": "maxErrorVolume",
          "type": "int",
          "values": [],
          "description": "Set the max total error volume allowed. If exceeded the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "maxUniqueErrors",
          "type": "int",
          "values": [],
          "description": "Set the max unique error count allowed. If the target volume is exceeded the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "newEvents",
          "type": "boolean",
          "values": [],
          "description": "Check if the current build has any new errors.",
          "isOptional": true
        },
        {
          "name": "printTopIssues",
          "type": "int",
          "values": [],
          "description": "Displays the top X events (as provided by this parameter) with the highest volume of errors detected in the current build. This is used in conjunction with Max Error Volume and Unique Errors to limit the result set to the top errors which caused a build to fail.",
          "isOptional": true
        },
        {
          "name": "regexFilter",
          "type": "String",
          "values": [],
          "description": "A way to filter out specific event types from affecting the outcome of the OverOps Reliability report. Event types include: <em>Uncaught Exception, Caught Exception, Swallowed Exception, Logged Error, Logged Warning, Timer</em>. This filter enables the removal of one or more of these event types from the final results.\n \n Example filter expression with pipe separated list: `\"type\":\"s*(Logged Error|Logged Warning|Timer)\"`",
          "isOptional": true
        },
        {
          "name": "resurfacedErrors",
          "type": "boolean",
          "values": [],
          "description": "Check if the current build has any errors that have resurfaced since being marked as resolved in OverOps.",
          "isOptional": true
        },
        {
          "name": "serviceId",
          "type": "String",
          "values": [],
          "description": "The OverOps environment identifier (e.g S4567) to inspect data for this build. If no value is provided here, the value provided in the global Jenkins plugin settings will be used.",
          "isOptional": true
        },
        {
          "name": "showPassedGateEvents",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "overops-query"
    },
    {
      "command": "QFTest",
      "title": "QFTest: Run the configured QF-Test suites.",
      "description": "",
      "parameters": [
        {
          "name": "suitefield",
          "type": "Nested",
          "values": [
            "suitename",
            "customParam"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onTestError",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onTestException",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onTestFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onTestWarning",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportGenArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qftest"
    },
    {
      "command": "SWEAGLEExport",
      "title": "SWEAGLEExport: SWEAGLE Get Config",
      "description": "",
      "parameters": [
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "Give each action a descriptive name to precede the job's output in the console.",
          "isOptional": false
        },
        {
          "name": "mdsName",
          "type": "String",
          "values": [],
          "description": "Exact name of pending config data set for which the data should be exported",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "Use comma separated values for exporter variables",
          "isOptional": true
        },
        {
          "name": "exporter",
          "type": "String",
          "values": [],
          "description": "The SWEAGLE exporter to use when retrieving the config data.",
          "isOptional": true
        },
        {
          "name": "fileLocation",
          "type": "String",
          "values": [],
          "description": "Location of file within the Jenkins workspace to save the exported data.",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "Select the supported format of the file to be uploaded.",
          "isOptional": true
        },
        {
          "name": "mapToVariables",
          "type": "String",
          "values": [],
          "description": "Sets a Jenkins Environment variable to value of a configuration data item. One variable on each line. format is colon seperated key value pair VARIABLE:Path.to.node.cdi Example: INTERNAL_IP:PRD.infra.db023.ipInternal",
          "isOptional": true
        },
        {
          "name": "markFailed",
          "type": "boolean",
          "values": [],
          "description": "Mark the build as \"Failed\" should the data export fail.",
          "isOptional": true
        },
        {
          "name": "showResults",
          "type": "boolean",
          "values": [],
          "description": "Show the results of the API call in the Jenkins job console log.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sweagle"
    },
    {
      "command": "SWEAGLESnapshot",
      "title": "SWEAGLESnapshot: SWEAGLE Snapshot",
      "description": "",
      "parameters": [
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "Give each action a descriptive name to precede the job's output in the console.",
          "isOptional": false
        },
        {
          "name": "mdsName",
          "type": "String",
          "values": [],
          "description": "Exact name of pending config data set for which the snapshot should be taken.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "A description for the snapshot",
          "isOptional": true
        },
        {
          "name": "markFailed",
          "type": "boolean",
          "values": [],
          "description": "Mark the build as \"Failed\" should the snapshot fail.",
          "isOptional": true
        },
        {
          "name": "showResults",
          "type": "boolean",
          "values": [],
          "description": "Show the results of the API call in the Jenkins job console log. Warning !!! The API results of a snapshot will include the entire Config Data set.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "A single string as TAG for that snapshot - cannot contain spaces but can utilize Jenkins variable4s ex \"release1.2.${BUILD_ID}\"",
          "isOptional": true
        }
      ],
      "plugin": "sweagle"
    },
    {
      "command": "SWEAGLEUpload",
      "title": "SWEAGLEUpload: SWEAGLE Upload",
      "description": "",
      "parameters": [
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "Give each action a descriptive name to precede the job's output in the console.",
          "isOptional": false
        },
        {
          "name": "fileLocation",
          "type": "String",
          "values": [],
          "description": "Fullpath of file relatove to the Jenkins workspace using Ant file filter format for selecting multiple files with wildcard. Details [here](https://ant.apache.org/manual/api/org/apache/tools/ant/DirectoryScanner.html). Examples: myconfig.json *.json subdirectory/*.json",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "Select the supported format of the file to be uploaded.",
          "isOptional": false
        },
        {
          "name": "nodePath",
          "type": "String",
          "values": [],
          "description": "Enter the path where the data should be uploaded. Separate the nodenames in the path with a comma. In case the nodes do not yet exist, they will be created automatically.",
          "isOptional": false
        },
        {
          "name": "allowDelete",
          "type": "boolean",
          "values": [],
          "description": "**Allow Delete** If checked will delete any nodes and MDIs that are not part of the upload. If the nodes are included or inherited the nodes and MDIs at points of inclusion will also be deleted unless \"Only Parent\" is also checked.",
          "isOptional": true
        },
        {
          "name": "autoRecognize",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "A description for the snapshot",
          "isOptional": true
        },
        {
          "name": "filenameNodes",
          "type": "boolean",
          "values": [],
          "description": "**Create Filename Nodes** If checked, nodes will be created for all matching files names in the file location and file data will be placed under file name node.",
          "isOptional": true
        },
        {
          "name": "identifierWords",
          "type": "String",
          "values": [],
          "description": "**Identifier Words** To make nodes part of an array uniquely identifiable, a comma separated list of 'identifier words' can be added. If no identifierWords are provided, the behavior will default to the identifierWords listed in the find.identity_attributes_discovery.word_list preference",
          "isOptional": true
        },
        {
          "name": "markFailed",
          "type": "boolean",
          "values": [],
          "description": "Mark the build as \"Failed\" should the data upload fail for any reason.",
          "isOptional": true
        },
        {
          "name": "onlyParent",
          "type": "boolean",
          "values": [],
          "description": "**Only Parent** This controls if in case the allowDelete flag is set to true if the deletion of nodes and CDIs will only happen at the node itself, or also at any other place where the node is included or in every child node that is inheriting.",
          "isOptional": true
        },
        {
          "name": "showResults",
          "type": "boolean",
          "values": [],
          "description": "Show the results of the API call in the Jenkins job console log.",
          "isOptional": true
        },
        {
          "name": "subDirectories",
          "type": "boolean",
          "values": [],
          "description": "**Search Sub-directories** If checked sub-directories will also be searched recursively for matching files.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "A single string as TAG for that snapshot - cannot contain spaces but can utilize Jenkins variable4s ex \"release1.2.${BUILD_ID}\"",
          "isOptional": true
        },
        {
          "name": "withSnapshot",
          "type": "boolean",
          "values": [],
          "description": "**Allow Delete** If checked will delete any nodes and MDIs that are not part of the upload. In case the nodes are included or inherited, also the nodes and MDIs at points of inclusion will be deleted \n\n \n **Only Parent** If checked will delete any nodes and MDIs that are not part of the upload. In case the nodes are included or inherited, also the nodes and MDIs at points of inclusion will be deleted \n\n \n **Store Snapshot**. This controls if automatically a snapshot should be created for each of the impacted config data sets by this data upload.",
          "isOptional": true
        }
      ],
      "plugin": "sweagle"
    },
    {
      "command": "SWEAGLEValidate",
      "title": "SWEAGLEValidate: SWEAGLE Validate",
      "description": "",
      "parameters": [
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "Give each action a descriptive name to precede the job's output in the console.",
          "isOptional": false
        },
        {
          "name": "mdsName",
          "type": "String",
          "values": [],
          "description": "The exact name of the config data set which should be validated.",
          "isOptional": false
        },
        {
          "name": "errMax",
          "type": "int",
          "values": [],
          "description": "Fail build on validate errors. Set thresholds used to determine if the build should be failed based on the number of validation errors or warnings.&nbsp; Use -1 to ignore either threshold.",
          "isOptional": true
        },
        {
          "name": "markFailed",
          "type": "boolean",
          "values": [],
          "description": "Fail build on validate errors or if the pending data set fails to show up after all the retry attempts have completed.",
          "isOptional": true
        },
        {
          "name": "noPending",
          "type": "boolean",
          "values": [],
          "description": "Fail build if no data is found for the Config Data Set (CDS).",
          "isOptional": true
        },
        {
          "name": "retryCount",
          "type": "int",
          "values": [],
          "description": "Number of retry attempts while waiting for a pending config data set. Combined with with Retry Interval to force a timeout after attempts have completed. Use \"-1\" for unlimited retries.",
          "isOptional": true
        },
        {
          "name": "retryInterval",
          "type": "int",
          "values": [],
          "description": "Number of seconds between each attempt to find a matching config data set for validation. Combine with with Retry Count to force a timeout after attempts have completed.",
          "isOptional": true
        },
        {
          "name": "showResults",
          "type": "boolean",
          "values": [],
          "description": "Show the results of the API call in the Jenkins job console log.",
          "isOptional": true
        },
        {
          "name": "stored",
          "type": "boolean",
          "values": [],
          "description": "Validate the stored snapshot for the config data set instead of the pending data.",
          "isOptional": true
        },
        {
          "name": "warnMax",
          "type": "int",
          "values": [],
          "description": "Fail build on validate errors. Set thresholds used to determine if the build should be failed based on the number of validation errors or warnings.&nbsp; Use -1 to ignore either threshold.",
          "isOptional": true
        }
      ],
      "plugin": "sweagle"
    },
    {
      "command": "SimplifyQA",
      "title": "SimplifyQA: Simplify Suite Automation",
      "description": "",
      "parameters": [
        {
          "name": "api",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "token",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "simplify-qa-connector"
    },
    {
      "command": "SoapUIPro",
      "title": "SoapUIPro: ReadyAPI Test: Run Functional Test",
      "description": "",
      "parameters": [
        {
          "name": "pathToTestrunner",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pathToProjectFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCaseTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testSuite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testSuiteTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "soapui-pro-functional-testing"
    },
    {
      "command": "SonargraphReport",
      "title": "SonargraphReport: Sonargraph Integration Report Generation & Analysis",
      "description": "",
      "parameters": [
        {
          "name": "activationCode",
          "type": "String",
          "values": [],
          "description": "Sonargraph license activation code. If this parameter is not specified, you must specify a license file parameter.",
          "isOptional": true
        },
        {
          "name": "architectureViolationsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "architectureWarningsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "baselineReportPath",
          "type": "String",
          "values": [],
          "description": "Optional: Enter the path to the baseline Sonargraph XML report file (without extension \".xml\"). This path must be relative to the workspace.",
          "isOptional": true
        },
        {
          "name": "chartConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cyclicElementsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "emptyWorkspaceAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "languageCPlusPlus",
          "type": "boolean",
          "values": [],
          "description": "Select if your Sonargraph system uses C++.",
          "isOptional": true
        },
        {
          "name": "languageCSharp",
          "type": "boolean",
          "values": [],
          "description": "Select if your Sonargraph system uses C#.",
          "isOptional": true
        },
        {
          "name": "languageJava",
          "type": "boolean",
          "values": [],
          "description": "Select if your Sonargraph system uses Java.",
          "isOptional": true
        },
        {
          "name": "languagePython",
          "type": "boolean",
          "values": [],
          "description": "Select if your Sonargraph system uses Python.",
          "isOptional": true
        },
        {
          "name": "licenseFile",
          "type": "String",
          "values": [],
          "description": "Sonargraph license file location. If this parameter is not specified, you must specify the activation code parameter.",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "Path of the log file to be used for SonargraphBuild (relative to workspace of Jenkins job). Default: sonargraph_build.log.",
          "isOptional": true
        },
        {
          "name": "logLevel",
          "type": "String",
          "values": [],
          "description": "Level of logging detail. One of: off, error, warn, info, debug, trace, all. Default: info.",
          "isOptional": true
        },
        {
          "name": "metaDataFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "metrics",
          "type": "Nested",
          "values": [
            "metricName",
            "metricCategory"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityGateAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityModelFile",
          "type": "String",
          "values": [],
          "description": "Optional: Use a built-in Quality Model, or an external Quality Model instead of the Quality Model included in Sonargraph Software System. Must be either a file within workspace with extension \"sgqm\", or one of the built-in Quality Models\n \n  \n* Sonargraph:Default.sgqm (language-independent)\n\n  \n* Sonargraph:Java.sgqm (language-specific)\n\n  \n* Sonargraph:CSharp.sgqm (language-specific)\n\n  \n* Sonargraph:CPlusPlus.sgqm (language-specific)",
          "isOptional": true
        },
        {
          "name": "reportGeneration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportPath",
          "type": "String",
          "values": [],
          "description": "Enter the path to the pre-generated Sonargraph XML report file (without extension \".xml\"). This path must be relative to the workspace.",
          "isOptional": true
        },
        {
          "name": "skip",
          "type": "boolean",
          "values": [],
          "description": "Skip Sonargraph Jenkins Plugin.",
          "isOptional": true
        },
        {
          "name": "snapshotDirectory",
          "type": "String",
          "values": [],
          "description": "Target directory for the created snapshot. Only if either this parameter or snapshotFileName is provided, a snapshot will be generated. Parameter can only be used with Sonargraph Architect license.",
          "isOptional": true
        },
        {
          "name": "snapshotFileName",
          "type": "String",
          "values": [],
          "description": "The target file name (without extension). Only if either this parameter or snapshotDirectory is provided, a snapshot will be generated. Parameter can only be used with Sonargraph Architect license.",
          "isOptional": true
        },
        {
          "name": "sonargraphBuildJDK",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sonargraphBuildVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "systemDirectory",
          "type": "String",
          "values": [],
          "description": "Enter the path to the Sonargraph system (*.sonargraph) directory. This path must be relative to the workspace.",
          "isOptional": true
        },
        {
          "name": "thresholdViolationsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unassignedTypesAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useHttpProxy",
          "type": "boolean",
          "values": [],
          "description": "Use Jenkins proxy configuration when connecting to Sonargraph license server.",
          "isOptional": true
        },
        {
          "name": "virtualModel",
          "type": "String",
          "values": [],
          "description": "The virtual model to be used when checking for issues. This parameter overrides the default virtual model that is set when the system is opened.\n\n\n\n\n \n### Licensing\n\n <table>\n  <tbody>\n   <tr>\n <td>Sonargraph Explorer</td>\n <td>Changing virtual models is not supported, \"Parser\" model is taken.</td>\n   </tr>\n   <tr>\n <td>Sonargraph Architect</td>\n <td>Changing virtual models is supported, \"Modifiable.vm\" is taken by default.</td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "workItemsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspaceProfile",
          "type": "String",
          "values": [],
          "description": "The profile file name (e.g. \"BuildProfile.xml\") for transforming the workspace paths to match the build environment.",
          "isOptional": true
        },
        {
          "name": "workspaceWarningsAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sonargraph-integration"
    },
    {
      "command": "SumoPipelineLogCollection",
      "title": "SumoPipelineLogCollection: SumoPipelineLogCollection",
      "description": "",
      "parameters": [],
      "plugin": "sumologic-publisher"
    },
    {
      "command": "SumoSDOEvent",
      "title": "SumoSDOEvent: Upload Events specific to Software Delivery Optimization Solution to Sumo Logic.",
      "description": "",
      "parameters": [
        {
          "name": "eventType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fields",
          "type": "java.util.HashMap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyValueMap",
          "type": "java.util.HashMap<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sumologic-publisher"
    },
    {
      "command": "SumoUpload",
      "title": "SumoUpload: Upload files or Text to Sumo Logic HTTP source as provided in Sumo Logic Publisher Configuration.",
      "description": "",
      "parameters": [
        {
          "name": "excludePathPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fields",
          "type": "java.util.HashMap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePathPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyValueMap",
          "type": "java.util.HashMap<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sumologic-publisher"
    },
    {
      "command": "UiPathAssets",
      "title": "UiPathAssets: UiPath Manage Assets",
      "description": "",
      "parameters": [
        {
          "name": "assetsAction",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "orchestratorAddress",
          "type": "String",
          "values": [],
          "description": "Specify the address of the Orchestrator instance onto which the assets will be deployed or updated.",
          "isOptional": false
        },
        {
          "name": "orchestratorTenant",
          "type": "String",
          "values": [],
          "description": "Specify the Orchestrator tenant onto which the assets will be deployed or updated.",
          "isOptional": false
        },
        {
          "name": "folderName",
          "type": "String",
          "values": [],
          "description": "Specify the folder where assets will deploy or update.",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "Specify the path for the csv files used to describe the assets that will be deployed or updated. Please use the following file format:\n \n```groovy\nname,type,value\nasset_1_name,text,asset_value   # we can have comments\nasset_2_name,integer,123\nasset_3_name,boolean,false\nasset_4_name,credential,\"username::password\"\n    \n```\n For the update, the type column isn't used, so it can be empty but still present.",
          "isOptional": false
        }
      ],
      "plugin": "uipath-automation-package"
    },
    {
      "command": "UiPathDeploy",
      "title": "UiPathDeploy: UiPath Deploy",
      "description": "",
      "parameters": [
        {
          "name": "packagePath",
          "type": "String",
          "values": [],
          "description": "Specify the location of the package(s) to be deployed in Orchestrator. The paths are local to the workspace of the build.",
          "isOptional": false
        },
        {
          "name": "orchestratorAddress",
          "type": "String",
          "values": [],
          "description": "Specify the address of the Orchestrator instance onto which the package(s) will be deployed.",
          "isOptional": false
        },
        {
          "name": "orchestratorTenant",
          "type": "String",
          "values": [],
          "description": "Specify the Orchestrator tenant onto which the package(s) will be deployed.",
          "isOptional": false
        },
        {
          "name": "folderName",
          "type": "String",
          "values": [],
          "description": "Specify the folder to deploy to. If the folder is a classic folder, you will also need to set the environments field. For modern folders, setting the environments is not required.",
          "isOptional": false
        },
        {
          "name": "environments",
          "type": "String",
          "values": [],
          "description": "Specify the environment onto which the package will be deployed as a process. For the project and environment with existing processes, the processes will be updated to use the latest project version. Required when using a classic folder, otherwise not applicable.",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "uipath-automation-package"
    },
    {
      "command": "UiPathPack",
      "title": "UiPathPack: UiPath Pack",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectJsonPath",
          "type": "String",
          "values": [],
          "description": "The location of the project(s) to be packaged. It can be a direct path to a project.json file or a directory with one or multiple projects. In the latter case, each level one project is packaged individually",
          "isOptional": false
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "Specify the location where you want to output the NuGet package(s). The paths are local to the workspace of the build.",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orchestratorAddress",
          "type": "String",
          "values": [],
          "description": "Specify the address of the Orchestrator instance from which library dependencies should be restored.",
          "isOptional": true
        },
        {
          "name": "orchestratorTenant",
          "type": "String",
          "values": [],
          "description": "Specify the tenant of the Orchestrator instance from which library dependencies should be restored.",
          "isOptional": true
        },
        {
          "name": "outputType",
          "type": "String",
          "values": [],
          "description": "Force the output to a specific type.",
          "isOptional": true
        },
        {
          "name": "useOrchestrator",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "uipath-automation-package"
    },
    {
      "command": "UiPathRunJob",
      "title": "UiPathRunJob: UiPath Run Job",
      "description": "",
      "parameters": [
        {
          "name": "orchestratorAddress",
          "type": "String",
          "values": [],
          "description": "Specify the address of the Orchestrator instance onto which the job(s) will be ran.",
          "isOptional": false
        },
        {
          "name": "orchestratorTenant",
          "type": "String",
          "values": [],
          "description": "Specify the Orchestrator tenant onto which the job(s) will be ran.",
          "isOptional": false
        },
        {
          "name": "folderName",
          "type": "String",
          "values": [],
          "description": "Specify the folder to run to. If the folder is a modern folder, you can also target a specific user and/or a specific machine.",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "processName",
          "type": "String",
          "values": [],
          "description": "Process name.",
          "isOptional": true
        },
        {
          "name": "parametersFilePath",
          "type": "String",
          "values": [],
          "description": "The full path to a json input file.",
          "isOptional": true
        },
        {
          "name": "priority",
          "type": "Enum",
          "values": [
            "Low",
            "Normal",
            "High"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "strategy",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultFilePath",
          "type": "String",
          "values": [],
          "description": "The full path to a json file or a folder where the result json file will be created.",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "The timeout for job(s) runs in seconds. (default 1800)",
          "isOptional": true
        },
        {
          "name": "failWhenJobFails",
          "type": "boolean",
          "values": [],
          "description": "The command fails when at least one job fails. (default true)",
          "isOptional": true
        },
        {
          "name": "waitForJobCompletion",
          "type": "boolean",
          "values": [],
          "description": "Wait for job runs completion. (default true)",
          "isOptional": true
        }
      ],
      "plugin": "uipath-automation-package"
    },
    {
      "command": "UiPathTest",
      "title": "UiPathTest: UiPath Run tests",
      "description": "",
      "parameters": [
        {
          "name": "orchestratorAddress",
          "type": "String",
          "values": [],
          "description": "Specify the address of the Orchestrator instance onto which the package(s) will be deployed.",
          "isOptional": false
        },
        {
          "name": "orchestratorTenant",
          "type": "String",
          "values": [],
          "description": "Specify the Orchestrator tenant onto which the package(s) will be deployed.",
          "isOptional": false
        },
        {
          "name": "folderName",
          "type": "String",
          "values": [],
          "description": "Specify the folder to deploy to. If the folder is a classic folder and you would like to execute a transient test set, you will also need to set the environment. For modern folders, the environment is not required.",
          "isOptional": false
        },
        {
          "name": "testTarget",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "Specify the test execution target, a pre-existing test set on the Orchestrator or the tests in a package at a given path, which will be executed as part of a transient test set.",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "Nested",
          "values": [
            "AutoVersion",
            "CurrentVersion",
            "DeleteAssets",
            "DeployAssets",
            "Dynamically",
            "CustomVersion",
            "Robot",
            "TestProject",
            "TestSet",
            "Token",
            "UserPass"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testResultsOutputPath",
          "type": "String",
          "values": [],
          "description": "Specify the output path of the test results, e.g. Output\\testResults.xml. The results are output in JUnit format. If not specified, the results are output to the workspace as UiPathResults.xml.",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Specify the timeout of a test project to be deployed in Orchestrator and executed as part of a transient test set. The default value is 7200 seconds.",
          "isOptional": false
        }
      ],
      "plugin": "uipath-automation-package"
    },
    {
      "command": "VersionNumber",
      "title": "VersionNumber: Determine the correct version number",
      "description": "",
      "parameters": [
        {
          "name": "versionNumberString",
          "type": "String",
          "values": [],
          "description": "The version number format string is used to generate the version number. It will be passed through unaltered, except that any expression of the form ${variable_name, argument} will be replaced according to the table below. Arguments are optional, and, unless otherwise specified in the table below, the argument is a string of length N, and the number will be left-padded with zeros until its length equals N. It will not be padded if its length already exceeds N. For example, if the build day is 5, then ${BUILD_DAY, XX} would return 05. \n\n \n Any variable not recognized in the table below will be replaced by an environment variable of the same name. So to use the hudson build ID, stored in the environment variable BUILD_ID, you'd just use ${BUILD_ID}. If no environment variable of the appropriate name can be found, the expression will just be replaced with an empty string. \n\n \n \n\n <table>\n  <tbody>\n   <tr>\n <td> BUILD_DATE_FORMATTED </td>\n <td> If the argument for this is a quotes-enclosed java date format string, then this will be replaced with the build date formatted with that string. If there is no argument, then this will be the standard simple date format. </td>\n   </tr>\n   <tr>\n <td> BUILD_DAY </td>\n <td> The day of the build. </td>\n   </tr>\n   <tr>\n <td> BUILD_WEEK </td>\n <td> The week of the year of the build. </td>\n   </tr>\n   <tr>\n <td> BUILD_MONTH </td>\n <td> The month of the build. </td>\n   </tr>\n   <tr>\n <td> BUILD_YEAR </td>\n <td> The year of the build. </td>\n   </tr>\n   <tr>\n <td> BUILDS_TODAY </td>\n <td> The number of builds done on this calendar date. </td>\n   </tr>\n   <tr>\n <td> BUILDS_THIS_WEEK </td>\n <td> The number of builds done in this calendar week. </td>\n   </tr>\n   <tr>\n <td> BUILDS_THIS_MONTH </td>\n <td> The number of builds done in this calendar month. </td>\n   </tr>\n   <tr>\n <td> BUILDS_THIS_YEAR </td>\n <td> The number of builds done in this calendar year. </td>\n   </tr>\n   <tr>\n <td> BUILDS_ALL_TIME </td>\n <td> The number of builds done since the beginning of the project. </td>\n   </tr>\n   <tr>\n <td> MONTHS_SINCE_PROJECT_START </td>\n <td> The number of calendar months that have elapsed since the project start date. </td>\n   </tr>\n   <tr>\n <td> YEARS_SINCE_PROJECT_START </td>\n <td> The number of calendar years that have elapsed since the project start date. </td>\n   </tr>\n  </tbody>\n </table>\n \n\n\n \n Note: BUILDS_TODAY_Z, BUILDS_THIS_WEEK_Z, BUILDS_THIS_MONTH_Z, BUILDS_THIS_YEAR_Z and BUILDS_ALL_TIME_Z are zero-indexed versions of the similar named variables from above. The override build numbers are NOT zero indexed, however, if you override Builds Today with 3, then BUILDS_TODAY_Z will be 2 for the next build.",
          "isOptional": false
        },
        {
          "name": "overrideBuildsAllTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideBuildsThisMonth",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideBuildsThisWeek",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideBuildsThisYear",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideBuildsToday",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectStartDate",
          "type": "String",
          "values": [],
          "description": "The date the project began, in the format yyyy-MM-dd. This is used in calculating the number of months and years since the beginning of the project.",
          "isOptional": true
        },
        {
          "name": "skipFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionPrefix",
          "type": "String",
          "values": [],
          "description": "The prefix which is added in front of the version number to allow using the same build numbers for all the release tags. \n\n \n If this prefix contains a variable that should be substituted, make sure that the prefix is enclosed in double-quotes for variable-substitution to take place! \n\n \n Note that different to freestyle jobs, the version prefix is always automatically added to the front of the returned version and does not have to be manually specified within the version number string.",
          "isOptional": true
        },
        {
          "name": "worstResultForIncrement",
          "type": "String",
          "values": [],
          "description": "If the former build-run's result is worse than the one selected here, this will not cause the build numbers for builds today / this week / this month / this year / all time to be incremented for the next build. Basically, this keeps \"non-successful\" builds from \"eating\" build numbers. Other rules apply; for example, if a failed build is fixed on the first build of the next day, then BUILDS_TODAY will be 1 for the fixed build.",
          "isOptional": true
        }
      ],
      "plugin": "versionnumber"
    },
    {
      "command": "ViolationsToBitbucketServer",
      "title": "ViolationsToBitbucketServer: Report Violations to Bitbucket Server",
      "description": "See [Violation Comments to Bitbucket Server Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+Bitbucket+Server+Plugin) for details on how to configure and use this plugin. \n\n \n Pattern is a regular expression for matching report files. For example **.*/findbugs/.*\\.xml$** matches xml-files, in a folder named findbugs, anywhere in workspace.",
      "parameters": [
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "projectKey",
            "repoSlug",
            "pullRequestId",
            "bitbucketServerUrl",
            "commentOnlyChangedContent",
            "commentOnlyChangedContentContext",
            "commentOnlyChangedFiles",
            "commentTemplate",
            "createCommentWithAllSingleFileComments",
            "createSingleFileComments",
            "createSingleFileCommentsTasks",
            "credentialsId",
            "ignorePaths",
            "keepOldComments",
            "maxNumberOfViolations",
            "minSeverity",
            "violationConfigs"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "violation-comments-to-stash"
    },
    {
      "command": "ViolationsToGitHub",
      "title": "ViolationsToGitHub: Report Violations to GitHub",
      "description": "See [Violation Comments to GitHub Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+GitHub+Plugin) for details on how to configure and use this plugin. \n\n \n Pattern is a regular expression for matching report files. For example **.*/findbugs/.*\\.xml$** matches xml-files, in a folder named findbugs, anywhere in workspace.",
      "parameters": [
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "repositoryName",
            "repositoryOwner",
            "pullRequestId",
            "gitHubUrl",
            "commentOnlyChangedContent",
            "commentOnlyChangedFiles",
            "commentTemplate",
            "createCommentWithAllSingleFileComments",
            "createSingleFileComments",
            "credentialsId",
            "keepOldComments",
            "maxNumberOfViolations",
            "minSeverity",
            "oAuth2Token",
            "violationConfigs"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "violation-comments-to-github"
    },
    {
      "command": "ViolationsToGitLab",
      "title": "ViolationsToGitLab: Report Violations to GitLab",
      "description": "See [Violation Comments to GitLab Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+GitLab+Plugin) for details on how to configure and use this plugin. \n\n \n Pattern is a regular expression for matching report files. For example **.*/findbugs/.*\\.xml$** matches xml-files, in a folder named findbugs, anywhere in workspace.",
      "parameters": [
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "gitLabUrl",
            "projectId",
            "mergeRequestIid",
            "apiTokenCredentialsId",
            "apiTokenPrivate",
            "authMethodHeader",
            "commentOnlyChangedContent",
            "commentOnlyChangedFiles",
            "commentTemplate",
            "createCommentWithAllSingleFileComments",
            "createSingleFileComments",
            "enableLogging",
            "ignoreCertificateErrors",
            "keepOldComments",
            "maxNumberOfViolations",
            "minSeverity",
            "proxyCredentialsId",
            "proxyUri",
            "shouldSetWip",
            "violationConfigs"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "violation-comments-to-gitlab"
    },
    {
      "command": "ZeroBugPublisher",
      "title": "ZeroBugPublisher: zerobug",
      "description": "",
      "parameters": [
        {
          "name": "webSite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onlyBuildSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zerobug"
    },
    {
      "command": "_AcpAction",
      "title": "_AcpAction: Internal utility function for DevOps DSL",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skipTLSVerify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verb",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "advArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "options",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "streamStdOutToConsolePrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reference",
          "type": "java.util.HashMap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "logLevel",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "alauda-devops-pipeline"
    },
    {
      "command": "_AcpContextInit",
      "title": "_AcpContextInit: Internal utility function for Devops DSL",
      "description": "",
      "parameters": [],
      "plugin": "alauda-devops-pipeline"
    },
    {
      "command": "_OcAction",
      "title": "_OcAction: Internal utility function for OpenShift DSL",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skipTLSVerify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verb",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "advArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "options",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "streamStdOutToConsolePrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reference",
          "type": "java.util.HashMap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "logLevel",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-client"
    },
    {
      "command": "_OcContextInit",
      "title": "_OcContextInit: Internal utility function for OpenShift DSL",
      "description": "",
      "parameters": [],
      "plugin": "openshift-client"
    },
    {
      "command": "_OcWatch",
      "title": "_OcWatch: Internal utility function for OpenShift DSL",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skipTLSVerify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verb",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "advArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userArgs",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "options",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "logLevel",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-client"
    },
    {
      "command": "abapCi",
      "title": "abapCi: ABAP Continuous Integration Plugin",
      "description": "",
      "parameters": [
        {
          "name": "abapPackagename",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "atcVariant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runAtcChecks",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runUnitTests",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "treatWarningAtcChecksAsErrors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useJenkinsProjectName",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "abap-ci"
    },
    {
      "command": "acceptGitLabMR",
      "title": "acceptGitLabMR: Accept GitLab Merge Request",
      "description": "",
      "parameters": [
        {
          "name": "mergeCommitMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useMRDescription",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "removeSourceBranch",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitlab-plugin"
    },
    {
      "command": "acceptGiteeMR",
      "title": "acceptGiteeMR: Accept Gitee Pull Request",
      "description": "",
      "parameters": [
        {
          "name": "mergeCommitMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitee"
    },
    {
      "command": "acquireSemaphore",
      "title": "acquireSemaphore: Wait until the latch has counted down to zero.",
      "description": "",
      "parameters": [
        {
          "name": "semaphore",
          "type": "class com.github.topikachu.jenkins.concurrent.semaphore.SemaphoreRef",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "permit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "acrQuickTask",
      "title": "acrQuickTask: Queue an ACR Quick Task",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceGroupName",
          "type": "String",
          "values": [],
          "description": "The resource group name that the app will be associated with.",
          "isOptional": false
        },
        {
          "name": "registryName",
          "type": "String",
          "values": [],
          "description": "The Azure Container Registry name, the built image will be pushed to.",
          "isOptional": false
        },
        {
          "name": "architecture",
          "type": "String",
          "values": [],
          "description": "The OS architecture.",
          "isOptional": true
        },
        {
          "name": "buildArgs",
          "type": "Nested",
          "values": [
            "key",
            "value",
            "secrecy"
          ],
          "description": "Set build-time variables as `docker build --build-arg`.",
          "isOptional": true
        },
        {
          "name": "dockerfile",
          "type": "String",
          "values": [],
          "description": "Relative path to the source control management(git path or local directory) for the Dockerfile.",
          "isOptional": true
        },
        {
          "name": "gitPath",
          "type": "String",
          "values": [],
          "description": "Relative path in the git repo's selected branch, which will be used as docker build path. Empty means root path in the git repo.",
          "isOptional": true
        },
        {
          "name": "gitRefspec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitRepo",
          "type": "String",
          "values": [],
          "description": "Git repo which contains source code and Dockerfile, which will be used to build image. <em>Please use the URL with HTTP(S) protocol instead of SSH protocol</em> Use `https://PAT@github.com/user/repo.git` for private repo.",
          "isOptional": true
        },
        {
          "name": "imageNames",
          "type": "Nested",
          "values": [
            "image"
          ],
          "description": "After Azure Container Registry finishes building image, it pushes the image to registry with tags provided. Single Built image can be pushed with multiple repositories and tags. If no image name provided, Azure Container Registry ****WILL NOT**** push any image to registry after building.",
          "isOptional": true
        },
        {
          "name": "local",
          "type": "String",
          "values": [],
          "description": "Build docker image from a local directory. This directory will be uploaded to Azure Container Registry. It also will be used as docker build path.",
          "isOptional": true
        },
        {
          "name": "noCache",
          "type": "boolean",
          "values": [],
          "description": "Do not use cache when building the image. Enable the `no-cache` flag when build as `docker build --no-cache`",
          "isOptional": true
        },
        {
          "name": "os",
          "type": "String",
          "values": [],
          "description": "The operating system type required for the run.",
          "isOptional": true
        },
        {
          "name": "sourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tarball",
          "type": "String",
          "values": [],
          "description": "Files in a compressed archive on a remote web server. e.g.`http://remoteserver/myapp.tar.gz`",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Maximum duration for a docker build to execute in seconds. Should be in 300 to 28800.",
          "isOptional": true
        },
        {
          "name": "variant",
          "type": "String",
          "values": [],
          "description": "Variant of the CPU.",
          "isOptional": true
        }
      ],
      "plugin": "azure-container-registry-tasks"
    },
    {
      "command": "acsDeploy",
      "title": "acsDeploy: Deploy to Azure Container Service (AKS)",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "The Azure Service Principal credentials used to communicate with the Azure services. Check the following documentation for more information about the service principal:\n \n  \n* [ Use portal to create an Azure Active Directory application and service principal that can access resources ](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal)",
          "isOptional": false
        },
        {
          "name": "resourceGroupName",
          "type": "String",
          "values": [],
          "description": "Resource group of the target Azure Container Service.",
          "isOptional": false
        },
        {
          "name": "containerService",
          "type": "String",
          "values": [],
          "description": "The name of the Azure Container Service. Refer to the following documentation on how to setup Azure Container Service:\n \n  \n*  [ Deploy Kubernetes cluster for Linux containers ](https://docs.microsoft.com/en-us/azure/container-service/container-service-kubernetes-walkthrough) \n\n  \n*  [ Deploy a DC/OS cluster ](https://docs.microsoft.com/en-us/azure/container-service/container-service-dcos-quickstart)",
          "isOptional": false
        },
        {
          "name": "sshCredentialsId",
          "type": "String",
          "values": [],
          "description": "The username and private key credential used to authenticate with the ACS clusters master node. This is the private key paired with the SSH RSA public key provided when you create the ACS cluster (see [ Deploy a Docker container hosting solution using the Azure portal ](https://docs.microsoft.com/en-us/azure/container-service/container-service-deployment)). \n\n \n The username and key credentials can be updated from Azure Portal. Find the Virtual Machine for your ACS cluster master node from the portal, and you can update the credential from **SUPPORT + TROUBLESHOOTING &gt;&gt;&gt; Reset password** page.",
          "isOptional": false
        },
        {
          "name": "configFilePaths",
          "type": "String",
          "values": [],
          "description": "The path patterns for the specific cluster (Kubernetes, DC/OS, Docker Swarm) configurations you want to deploy, in the form of [Ant glob syntax](https://ant.apache.org/manual/dirtasks.html#patterns).",
          "isOptional": false
        },
        {
          "name": "containerRegistryCredentials",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "All the credentials needed for pulling images from private repositories. Specify multiple entries if your deployments need to pull images from multiple, private repositories that require authentication.",
          "isOptional": true
        },
        {
          "name": "dcosDockerCredenditalsPathShared",
          "type": "boolean",
          "values": [],
          "description": "Determine if the Docker credentials archive upload path specified above is shared among all the agents. \n\n \n To ease the shared files access, we may create share file storage for all the DC/OS agent nodes as [ this documentation (Create and mount a file share to a DC/OS cluster) ](https://docs.microsoft.com/en-us/azure/container-service/container-service-dcos-fileshare) suggests. With the help of the shared storage, we only need to upload the Docker credentials archive to the shared storage once, and all the agent nodes get the access to the resource immediately. \n\n \n Check this option if the Docker credentials archive upload path is a shared storage path.",
          "isOptional": true
        },
        {
          "name": "dcosDockerCredentialsPath",
          "type": "String",
          "values": [],
          "description": "The path on the DC/OS cluster agent nodes to store the docker credentials archive `docker.tar.gz`. Only absolute path is allowed here. Environment variable substitution is enabled for the path input. <i>Due to the limitation in the underlying Mesos fetcher used by Marathon, special characters that need URI escaping and the character set {single quote ('), back slash (\\), nul (\\0)}, are not allowed in the path, otherwise it will fail to load the resource before running the container.</i> \n\n \n If not specified, the plugin will generate a path specific for the build with the following pattern. \n\n \n```groovy\n\n/home/&lt;linuxAdminUser&gt;/acs-plugin-dcos.docker/&lt;unique-name-generated-for-the-build&gt;\n```\n\n \n The plugin will generate the docker credentials archive with the credentials provided, and upload the archive to the given path for all the agents. You can use it to construct the URI used in your Marathon application definition. \n\n \n```groovy\n\n\"uris\":  [\n    \"file://&lt;filled-path&gt;/docker.tar.gz\"\n]\n```\n\n \n The URI will be exposed with the environment variable `$MARATHON_DOCKER_CFG_ARCHIVE_URI`. You can use this in your Marathon application definition when the \"Enable Variable Substitution in Config\" option is enabled. This helps when the upload path is not filled and generated by the build, or if the path changes frequently. \n\n \n Note that if an archive exists in the target path already, the build will overwrite that file. \n\n \n Reference: [ Marathon: Using a Private Docker Registry ](https://mesosphere.github.io/marathon/docs/native-docker-private-registry.html)",
          "isOptional": true
        },
        {
          "name": "enableConfigSubstitution",
          "type": "boolean",
          "values": [],
          "description": "Substitute variables (in the form `$VARIABLE` or `${VARIABLE}`) in the configuration with values from Jenkins environment variables.\n \n This allows you to use dynamic values produced during the build in your Kubernetes or DC/OS configurations, e.g., a dynamically generated Docker image tag which will be used later in the deployment.",
          "isOptional": true
        },
        {
          "name": "secretName",
          "type": "String",
          "values": [],
          "description": "The secret name that you can use in the Kubernetes Deployment configuration for the `imagePullSecrets` entry. Environment variable substitution are supported for the name input, so you can use available environment variables to construct the name dynamically, e.g., `some-secret-$BUILD_NUMBER`. The name should be in the pattern `[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*`, i.e., dot (.) concatenated sequences of hyphen (-) separated alphanumeric words. (See [ Kubernetes Names](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/))\n \n If left blank, the plugin will generate a name based on the build name. \n\n \n The secret name will be exposed with the environment variable `$KUBERNETES_SECRET_NAME`. You can use this in your Kubernetes configuration to reference the updated secret when the \"Enable Variable Substitution in Config\" option is enabled. \n\n \n```groovy\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: some.private.registry.domain/nginx\n        ports:\n        - containerPort: 80\n      imagePullSecrets:\n      - name: $KUBERNETES_SECRET_NAME\n\n```\n\n \n Note that once the secret is created, it will only be updated by the plugin. You have to manually delete it when it is not used anymore. If this is a problem, you may use fixed name so every time the job runs, the secret gets updated and no new secret is created.",
          "isOptional": true
        },
        {
          "name": "secretNamespace",
          "type": "String",
          "values": [],
          "description": "The Kubernetes namespace in which the secrets will be created with the credentials configured below.",
          "isOptional": true
        },
        {
          "name": "swarmRemoveContainersFirst",
          "type": "boolean",
          "values": [],
          "description": "Stop and remove containers first.",
          "isOptional": true
        }
      ],
      "plugin": "azure-acs"
    },
    {
      "command": "activateDTConfiguration",
      "title": "activateDTConfiguration: activate Dynatrace profile configuration",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "addALMOctaneSonarQubeListener",
      "title": "addALMOctaneSonarQubeListener: ALM Octane SonarQube listener",
      "description": "See help information in [ALM Octane Help Center](https://admhelp.microfocus.com/octane/en/latest/Online/Content/AdminGuide/how-setup-Sonar-integration.htm)",
      "parameters": [
        {
          "name": "pushCoverage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pushVulnerabilities",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipWebhookCreation",
          "type": "boolean",
          "values": [],
          "description": "The integration with SonarQube works by using Sonar’s webhook mechanism, and contains several phases:\n \n  \n*  The plugin automatically configures a webhook in Sonar before the job runs (this requires an access token with global 'Administer' permission). \n\n  \n*  When the Sonar analysis is ready, the SonarQube server calls the configured webhook.\n\n  \n*  Results are then submitted to ALM Octane for further analysis (this requires an access token with 'Read' permissions). \n\n  If you cannot assign global 'Administer' permissions to the Sonar token (for the first phase), select \"Skip webhook creation\", and define a webhook manually in the Sonar server (either at the global level or project level) to the following URL: {jenkins_url}/webhooks/notify",
          "isOptional": true
        },
        {
          "name": "sonarServerUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sonarToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "addBadge",
      "title": "addBadge: Add Badge",
      "description": "",
      "parameters": [
        {
          "name": "icon",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "addDeployToDashboard",
      "title": "addDeployToDashboard: Deployment",
      "description": "",
      "parameters": [
        {
          "name": "env",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "deploy-dashboard"
    },
    {
      "command": "addEmbeddableBadgeConfiguration",
      "title": "addEmbeddableBadgeConfiguration: Add an Embeddable Badge Configuration",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "animatedOverlayColor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "subject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "embeddable-build-status"
    },
    {
      "command": "addErrorBadge",
      "title": "addErrorBadge: Add Error Badge",
      "description": "",
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "addGitLabMRComment",
      "title": "addGitLabMRComment: Add comment on GitLab Merge Request",
      "description": "",
      "parameters": [
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitlab-plugin"
    },
    {
      "command": "addGiteeMRComment",
      "title": "addGiteeMRComment: Add comment on Gitee Pull Request",
      "description": "",
      "parameters": [
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitee"
    },
    {
      "command": "addHtmlBadge",
      "title": "addHtmlBadge: Add a html badge Text",
      "description": "",
      "parameters": [
        {
          "name": "html",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "addInfoBadge",
      "title": "addInfoBadge: Add Info Badge",
      "description": "",
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "addInteractivePromotion",
      "title": "addInteractivePromotion: Add interactive promotion",
      "description": "",
      "parameters": [
        {
          "name": "promotionConfig",
          "type": "class org.jfrog.hudson.pipeline.common.types.PromotionConfig",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "displayName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "addRelizaRelease",
      "title": "addRelizaRelease: RelizaBuilder",
      "description": "",
      "parameters": [
        {
          "name": "artId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reliza-integration"
    },
    {
      "command": "addShortText",
      "title": "addShortText: Add Short Text",
      "description": "",
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "background",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "border",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "borderColor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "addWarningBadge",
      "title": "addWarningBadge: Add Warning Badge",
      "description": "",
      "parameters": [
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "aioImport",
      "title": "aioImport: Publish results to AIO Tests - Jira",
      "description": "",
      "parameters": [
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "<small>Jira Project key (eg. SCRUM) to which the results need to be reported to</small>",
          "isOptional": false
        },
        {
          "name": "frameworkType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resultsFilePath",
          "type": "String",
          "values": [],
          "description": "<small>Path to results file which needs to be uploaded. Path needs to be relative to workspace eg. /target/surefire-reports/testng-results.xml</small>",
          "isOptional": false
        },
        {
          "name": "addCaseToCycle",
          "type": "boolean",
          "values": [],
          "description": "<small>If checked, cases not already in cycle are added, else the cases are reported as errors</small>",
          "isOptional": false
        },
        {
          "name": "createCase",
          "type": "boolean",
          "values": [],
          "description": "<small>If checked and no case exists with a matching case key or automation key, a new case is created</small>",
          "isOptional": false
        },
        {
          "name": "apiKey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "<small>API Key from AIO Tests - to move to credentials or global config</small>",
          "isOptional": false
        },
        {
          "name": "entry",
          "type": "Nested",
          "values": [
            "$class: 'ExistingCycle'",
            "$class: 'NewCycle'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildOnFailure",
          "type": "boolean",
          "values": [],
          "description": "<small>If checked, the build result will be updated to failed, in case publishing results fails</small>",
          "isOptional": true
        },
        {
          "name": "hideDetails",
          "type": "boolean",
          "values": [],
          "description": "<small>If checked, case details from the publish results response will be hidden in job console log.</small> <small>If unchecked, status would be shown against each case that was published.</small>",
          "isOptional": true
        }
      ],
      "plugin": "aio-tests"
    },
    {
      "command": "alaudaDeployComponent",
      "title": "alaudaDeployComponent: Alauda deploy component",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "componentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "payload",
          "type": "class io.alauda.model.Kubernete",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollback",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaDeployComponent",
      "title": "alaudaDeployComponent: Alauda deploy component",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "componentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "payload",
          "type": "class io.alauda.model.Kubernete",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollback",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaDeployService",
      "title": "alaudaDeployService: Alauda deploy service",
      "description": "",
      "parameters": [
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createPayload",
          "type": "class io.alauda.model.ServiceCreatePayload",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollback",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "updatePayload",
          "type": "class io.alauda.model.ServiceUpdatePayload",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaDeployService",
      "title": "alaudaDeployService: Alauda deploy service",
      "description": "",
      "parameters": [
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createPayload",
          "type": "class io.alauda.model.ServiceCreatePayload",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollback",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "updatePayload",
          "type": "class io.alauda.model.ServiceUpdatePayload",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaNotify",
      "title": "alaudaNotify: AlaudaNotifier",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaNotify",
      "title": "alaudaNotify: AlaudaNotifier",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveComponent",
      "title": "alaudaRetrieveComponent: Retrieve the Component",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "componentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveComponent",
      "title": "alaudaRetrieveComponent: Retrieve the Component",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "componentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveIntegration",
      "title": "alaudaRetrieveIntegration: Retrieve the integration",
      "description": "",
      "parameters": [
        {
          "name": "instanceUUID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveIntegration",
      "title": "alaudaRetrieveIntegration: Retrieve the integration",
      "description": "",
      "parameters": [
        {
          "name": "instanceUUID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveService",
      "title": "alaudaRetrieveService: Retrieve the service",
      "description": "",
      "parameters": [
        {
          "name": "serviceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaRetrieveService",
      "title": "alaudaRetrieveService: Retrieve the service",
      "description": "",
      "parameters": [
        {
          "name": "serviceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaSendNotification",
      "title": "alaudaSendNotification: SendNotification",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaSendNotification",
      "title": "alaudaSendNotification: SendNotification",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaStartBuild",
      "title": "alaudaStartBuild: alaudaStartBuild",
      "description": "",
      "parameters": [
        {
          "name": "buildConfigName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commitID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alaudaStartBuild",
      "title": "alaudaStartBuild: alaudaStartBuild",
      "description": "",
      "parameters": [
        {
          "name": "buildConfigName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commitID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "alauda-pipeline"
    },
    {
      "command": "alibabaEcs",
      "title": "alibabaEcs: Cloud template provisioning",
      "description": "Creates an `Aliyun ECS Spot Instance` object, from an already globally defined cloud name and template without registering it as a Jenkins agent.",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "alibabacloud-ecs"
    },
    {
      "command": "aliyunOSSUpload",
      "title": "aliyunOSSUpload: Aliyun OSS Upload",
      "description": "",
      "parameters": [
        {
          "name": "endpoint",
          "type": "String",
          "values": [],
          "description": "Aliyun OSS Endpoint\n \n\n [config](https://oss.console.aliyun.com)",
          "isOptional": false
        },
        {
          "name": "accessKeyId",
          "type": "String",
          "values": [],
          "description": "Aliyun AccessKey\n \n\n [config](https://usercenter.console.aliyun.com/#/manage/ak)",
          "isOptional": false
        },
        {
          "name": "accessKeySecret",
          "type": "String",
          "values": [],
          "description": "Aliyun AccessKeySecret\n \n\n [config](https://usercenter.console.aliyun.com/#/manage/ak)",
          "isOptional": false
        },
        {
          "name": "bucketName",
          "type": "String",
          "values": [],
          "description": "Aliyun OSS BucketName\n \n\n [config](https://oss.console.aliyun.com)",
          "isOptional": false
        },
        {
          "name": "localPath",
          "type": "String",
          "values": [],
          "description": "Local file or directory, must begin with /",
          "isOptional": false
        },
        {
          "name": "remotePath",
          "type": "String",
          "values": [],
          "description": "Remote file or directory, must begin with /",
          "isOptional": false
        },
        {
          "name": "maxRetries",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aliyun-oss-uploader"
    },
    {
      "command": "allure",
      "title": "allure: Allure Report",
      "description": "",
      "parameters": [
        {
          "name": "results",
          "type": "Nested",
          "values": [
            "path"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commandline",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "results",
            "commandline",
            "configPath",
            "includeProperties",
            "jdk",
            "properties",
            "reportBuildPolicy"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeProperties",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jdk",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "report",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportBuildPolicy",
          "type": "Enum",
          "values": [
            "ALWAYS",
            "UNSTABLE",
            "UNSUCCESSFUL"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "allure-jenkins-plugin"
    },
    {
      "command": "anchore",
      "title": "anchore: Anchore Container Image Scanner",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name of the file that contains a list of container images for anchore to analyze, evaluate policy, and run queries against. The format for each line is \"imageId /path/to/Dockerfile\", where the Dockerfile is optional. This file must be made available (created by a prior step) to Anchore Container Image Scanner plugin.",
          "isOptional": false
        },
        {
          "name": "annotations",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "autoSubscribeTagUpdates",
          "type": "boolean",
          "values": [],
          "description": "If selected or set to 'true', the Anchore Container Image Scanner step will instruct Anchore Engine to automatically begin watching the added tag for updates from registry. Default value: 'true'",
          "isOptional": true
        },
        {
          "name": "bailOnFail",
          "type": "boolean",
          "values": [],
          "description": "If selected or set to 'true', the Anchore Container Image Scanner step will cause the build to fail if the policy evaluation result is FAIL. Default value: 'true'",
          "isOptional": true
        },
        {
          "name": "bailOnPluginFail",
          "type": "boolean",
          "values": [],
          "description": "If selected or set to 'true', the Anchore Container Image Scanner step will cause the build to fail if the plugin encounters an error. Default value: 'true'",
          "isOptional": true
        },
        {
          "name": "engineCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineRetries",
          "type": "String",
          "values": [],
          "description": "Number of polling attempts spaced at 5 second intervals spent waiting for the Anchore Engine operation to complete.",
          "isOptional": true
        },
        {
          "name": "engineurl",
          "type": "String",
          "values": [],
          "description": "Anchore Engine URL",
          "isOptional": true
        },
        {
          "name": "engineverify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forceAnalyze",
          "type": "boolean",
          "values": [],
          "description": "If selected or set to 'true', the Anchore Container Image Scanner step will instruct Anchore Engine to force analyze the image. Default value: 'false'",
          "isOptional": true
        },
        {
          "name": "policyBundleId",
          "type": "String",
          "values": [],
          "description": "ID of the policy bundle on Anchore Engine to be used for policy evaluations. If empty, the policy bundle marked active on Anchore Engine will be used by default.",
          "isOptional": true
        }
      ],
      "plugin": "anchore-container-scanner"
    },
    {
      "command": "androidApkMove",
      "title": "androidApkMove: Move Android apps to a different release track",
      "description": "If you have already uploaded files to Google Play, whether manually, via the \"Upload Android AAB/APK to Google Play\" post-build action, or by other means, this build step allows you to change the release track for specific versions.\n \n\n For example, you can use this to promote an app currently in alpha testing to the beta release track, once you've decided it's ready for a wider audience.\n \n\n Similarly, once you're ready for release, you can move from beta to a staged rollout, or directly to production.\n \n\n Note that \"downgrading\" release tracks, e.g. from production to alpha is not possible.",
      "parameters": [
        {
          "name": "apkFilesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "Application ID (i.e. APK package name) of the app being assigned to a new release track.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "filesPattern",
          "type": "String",
          "values": [],
          "description": "Specifies filenames or patterns matching one or more AAB or APK files from which the version codes should be read, in order to determine which app versions should be re-assigned to a new release track.\n \n\n Note that these files should have already been uploaded — this build step will not do any uploading; it will only move existing app versions from one release track to another. To upload app files, use the \"Upload Android AAB/APK to Google Play\" post-build action.\n \n\n You can use wildcards like \"**/build/outputs/*/*-release.apk\".\n \n\n See [ the 'includes' attribute of Ant's FileSet](https://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n\n Note that multiple entries must be comma-separated.\n \n\n The base directory is <a rel=\"nofollow\">the build's workspace</a>. You can only reference AAB or APK files that are located in your workspace.\n \n\n If no value is provided, the default is **/build/outputs/**/*.aab, **/build/outputs/**/*.apk.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "fromVersionCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "googleCredentialsId",
          "type": "String",
          "values": [],
          "description": "Specifies which credential to use in order to connect to Google Play.\n \n\n The selected credential must be a \"Google Service Account from private key\" — if you have not added one already, refer to the documentation on [this plugin's page](https://plugins.jenkins.io/google-play-android-publisher).\n \n\n By choosing the \"Parameter expression\" option, you can also provide a credential at build time, either from an environment variable, or from a build parameter, e.g. the Credentials Parameter type.\n \n\n But you can use any type of expression, so long as it expands to the name of a \"Google Service Account from private key\" credential at build time.  This field supports substituting environment variables in the form ${SOME_VARIABLE} at build time.\n \n\n Note that variables in the form $SOME_VARIABLE are <em>not</em> accepted by the Credentials Plugin.",
          "isOptional": true
        },
        {
          "name": "inAppUpdatePriority",
          "type": "String",
          "values": [],
          "description": "Specifies the priority of this app release for the in-app update feature of the Google Play Core Library.\n \n\n If you don't use this feature, or don't need to set a priority, you can leave this field blank; it will default to 0. Otherwise the value must be a whole number between 0 (lowest priority) and 5 (highest priority).\n \n\n For more information on using in-app updates, see the documentation:\n \n\n [ https://developer.android.com/guide/playcore/in-app-updates ](https://developer.android.com/guide/playcore/in-app-updates)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "The release name, used to identify this release in the Google Play Console UI. Not required to be unique among releases. If no value is entered, Google Play will set the release name to the versionName of the app file being moved.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "rolloutPercent",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rolloutPercentage",
          "type": "String",
          "values": [],
          "description": "The percentage of users in the given track to which the uploaded file(s) should be rolled out.\n \n\n If you enter 100%, the app will be rolled out to all users, and the release will be considered complete, i.e. you will be unable to reduce the rollout percentage for this release.\n \n\n If you enter 0%, a draft release will be created, meaning that users will not yet see it; the existing file(s) released in the given track, if any, will remain in place.\n \n\n For more information on staged rollouts, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/6346149 ](https://support.google.com/googleplay/android-developer/answer/6346149)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "trackName",
          "type": "String",
          "values": [],
          "description": "The release track to which the given file(s) will be re-assigned.\n \n\n This can be the name of a [custom track](https://support.google.com/googleplay/android-developer/answer/3131213#create_additional_track), or one of the built-in tracks:\n \n  \n* internal\n\n  \n* alpha\n\n  \n* beta\n\n  \n* production\n\n  For each release track, you have the choice of rolling the version(s) out to all existing users simultaneously, or doing a staged rollout so that only a fraction of your existing userbase will be able to download the new version.\n \n\n For more information on using the internal, alpha, beta or custom testing tracks, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/3131213 ](https://support.google.com/googleplay/android-developer/answer/3131213)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "versionCodes",
          "type": "String",
          "values": [],
          "description": "This specifies which version codes should be assigned to a new release track.\n \n\n Note that multiple entries must be comma-separated.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        }
      ],
      "plugin": "google-play-android-publisher"
    },
    {
      "command": "androidApkUpload",
      "title": "androidApkUpload: Upload Android AAB/APKs to Google Play",
      "description": "",
      "parameters": [
        {
          "name": "apkFilesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deobfuscationFilesPattern",
          "type": "String",
          "values": [],
          "description": "Specifies filenames or patterns matching one or more ProGuard mapping files that should be uploaded to Google Play, so that it can automatically deobfuscate stacktraces from crash reports.\n \n\n Note that if you build an Android App Bundle (AAB file) with ProGuard enabled, the mapping file should already be embedded in the app bundle (typically as BUNDLE-METADATA/com.android.tools.build.obfuscation/proguard.map.\n \n\n In such cases, you shouldn't use this option since Google Play will reject any attempt to upload a mapping file when the app bundle has one embedded.\n \n\n You can use wildcards like \"**/build/**/mapping.txt\".\n \n\n See [ the 'includes' attribute of Ant's FileSet](https://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n\n Note that multiple entries must be comma-separated.\n \n\n The base directory is <a rel=\"nofollow\">the build's workspace</a>. You can only upload mapping files that are located in your workspace.\n \n\n If there are multiple AAB/APK files being uploaded, and only one mapping file is found in the workspace, then that mapping file will be associated with each of the app files being uploaded. If there are multiple mapping files found, a basic attempt will be made to automatically associate each mapping file with its corresponding app file.\n \n\n Otherwise, if the number of mapping files found is <em>not</em> equal to the number of app files being uploaded, the build will fail, as this situation is not supported.\n \n\n For more information on deobfuscating crash stacktraces, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/6295281 ](https://support.google.com/googleplay/android-developer/answer/6295281)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "expansionFilesPattern",
          "type": "String",
          "values": [],
          "description": "Specifies filenames or patterns matching zero or more [ expansion files](https://developer.android.com/google/play/expansion-files.html) that should be associated with the APK files being uploaded to Google Play. \n\n\n\n You can list as many or as few expansion files as you like — you have the option of associating previously-uploaded expansion files with the new APKs being uploading here.\n<h2>Naming</h2> Files **must** be named in the format [main|patch].&lt;apk-version&gt;.&lt;application-id&gt;.obb\n\n\n For example:\n\n \n* main.1000.com.example.mygame.obb\n\n \n* patch.1002.com.example.mygame.obb\n\n\n<h2>Patterns</h2> You can use wildcards like \"**/build/**/*.obb\".\n\n\n See [ the 'includes' attribute of Ant's FileSet](https://ant.apache.org/manual/Types/fileset.html) for the exact format.\n\n\n Note that multiple entries must be comma-separated.\n\n\n The base directory is <a rel=\"nofollow\">the build's workspace</a>. You can only upload OBB files that are located in your workspace.\n<h2>Re-using existing expansion files</h2> If you don't provide a main or patch expansion file for every APK that you want to upload, enabling the \"Re-use expansion files from existing APKs where necessary\" option will automatically associate existing expansion file(s) with the APK(s) being uploaded.\n\n\n With this option enabled, if not enough expansion files are provided for all of the APK(s) being uploaded, this plugin will search for the <i>newest</i>, APKs on Google Play with main or patch expansion files — whether previously uploaded, or uploaded via the current build — and will associate those files with the new APK(s) being uploaded here.\n\n\n For example: If you want to upload a new APK, but the expansion files have not changed at all, you should leave the \"Expansion files\" field blank, but enable the checkbox.\n\n\n At build time, the latest existing main (and patch, if available) expansion files will be associated with the newly-uploaded APK.\n\n\n Similarly, if you have a new build, but only want to change the patch file, then just provide the patch expansion file and make sure this option is checked. The uploaded APK will have the existing main expansion file associated with it, along with the newly-uploaded patch file.\n\n\n Or, if you have a new main or patch expansion file, and want to apply that same file to multiple APKs being uploaded, name the expansion file according to the <i>lowest</i> versionCode that you're uploading. That expansion file will then be uploaded, and applied to the APKs with higher versionCodes that were uploaded in the same build.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "filesPattern",
          "type": "String",
          "values": [],
          "description": "Specifies filenames or patterns matching one or more AABs or APKs that should be uploaded to Google Play.\n \n\n You can use wildcards like \"**/build/outputs/*/*-release.apk\".\n \n\n See [ the 'includes' attribute of Ant's FileSet](https://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n\n Note that multiple entries must be comma-separated.\n \n\n The base directory is <a rel=\"nofollow\">the build's workspace</a>. You can only upload AAB or APK files that are located in your workspace.\n \n\n Applications which have several files per release, taking advantage of [ Multiple APK Support](https://developer.android.com/google/play/publishing/multiple-apks.html), must have all of their APKs uploaded together, and all APKs must have the same application identifier (APK package name).\n \n\n\n \n\n If no value is provided, the default is **/build/outputs/**/*.aab, **/build/outputs/**/*.apk.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "googleCredentialsId",
          "type": "String",
          "values": [],
          "description": "Specifies which credential to use in order to connect to Google Play.\n \n\n The selected credential must be a \"Google Service Account from private key\" — if you have not added one already, refer to the documentation on [this plugin's page](https://plugins.jenkins.io/google-play-android-publisher).\n \n\n By choosing the \"Parameter expression\" option, you can also provide a credential at build time, either from an environment variable, or from a build parameter, e.g. the Credentials Parameter type.\n \n\n But you can use any type of expression, so long as it expands to the name of a \"Google Service Account from private key\" credential at build time.  This field supports substituting environment variables in the form ${SOME_VARIABLE} at build time.\n \n\n Note that variables in the form $SOME_VARIABLE are <em>not</em> accepted by the Credentials Plugin.",
          "isOptional": true
        },
        {
          "name": "inAppUpdatePriority",
          "type": "String",
          "values": [],
          "description": "Specifies the priority of this app release for the in-app update feature of the Google Play Core Library.\n \n\n If you don't use this feature, or don't need to set a priority, you can leave this field blank; it will default to 0. Otherwise the value must be a whole number between 0 (lowest priority) and 5 (highest priority).\n \n\n For more information on using in-app updates, see the documentation:\n \n\n [ https://developer.android.com/guide/playcore/in-app-updates ](https://developer.android.com/guide/playcore/in-app-updates)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "nativeDebugSymbolFilesPattern",
          "type": "String",
          "values": [],
          "description": "Specifies filenames or patterns matching one or more zip files containing native library symbols that should be uploaded to Google Play, so that it can automatically deobfuscate native crash dumps.\n \n\n Note that if you build an Android App Bundle (AAB file) with native libraries, using Android Gradle Plugin version 4.1 or newer, you can choose to [ automatically embed](https://developer.android.com/studio/build/shrink-code#native-crash-support) the native symbols into the app bundle file.\n \n\n Therefore you don't need to use this option to upload the symbols separately. But if you do, the contents of this symbols file will supersede those embedded in the bundle.\n \n\n You can use wildcards like \"**/build/**/native-debug-symbols.zip\".\n \n\n See [ the 'includes' attribute of Ant's FileSet](https://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n\n Note that multiple entries must be comma-separated.\n \n\n The base directory is <a rel=\"nofollow\">the build's workspace</a>. You can only upload symbols files that are located in your workspace.\n \n\n If there are multiple AAB/APK files being uploaded, and only one symbols file is found in the workspace, then that symbols file will be associated with each of the app files being uploaded. If there are multiple symbols files found, a basic attempt will be made to automatically associate each symbols file with its corresponding app file.\n \n\n Otherwise, if the number of symbols files found is <em>not</em> equal to the number of app files being uploaded, the build will fail, as this situation is not supported.\n \n\n For more information on deobfuscating crash stacktraces, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/6295281 ](https://support.google.com/googleplay/android-developer/answer/6295281)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "recentChangeList",
          "type": "Nested",
          "values": [
            "language",
            "text"
          ],
          "description": "You can optionally apply \"What's new\" text to the uploaded file(s), in order to inform your user of changes contained in the new app version.\n \n\n You add entries for as many or as few of your supported language as you wish, but each language must already have been added to your app, under the \"Store Listing\" section in the Google Play Developer Console.\n \n\n The language must match the language code shown in the Developer Console, e.g. \"en-GB\" for British English, or \"ar\" for Arabic.\n \n\n The text may be between zero and 500 characters.\n \n\n For more information on describing what's new in your app, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/189724 ](https://support.google.com/googleplay/android-developer/answer/189724)  Both fields support substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "The release name, used to identify this release in the Google Play Console UI. Not required to be unique among releases. If no value is entered, Google Play will set the release name to the versionName of the app file being uploaded.\n \n\n Any instances of {versionCode} or {versionName} in the value will be replaced by the respective value from the app file being uploaded. If multiple files are uploaded, the one with the lowest versionCode will be used.\n \n\n For example, entering Version {versionName}-${GIT_COMMIT} as release name could yield a release name on Google Play something like Version 1.2.3-b2c3d3e4.  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "rolloutPercent",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rolloutPercentage",
          "type": "String",
          "values": [],
          "description": "The percentage of users in the given track to which the uploaded file(s) should be rolled out.\n \n\n If you enter 100%, the app will be rolled out to all users, and the release will be considered complete, i.e. you will be unable to reduce the rollout percentage for this release.\n \n\n If you enter 0%, a draft release will be created, meaning that users will not yet see it; the existing file(s) released in the given track, if any, will remain in place.\n \n\n For more information on staged rollouts, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/6346149 ](https://support.google.com/googleplay/android-developer/answer/6346149)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "trackName",
          "type": "String",
          "values": [],
          "description": "The release track to which the given file(s) will be assigned.\n \n\n This can be the name of a [custom track](https://support.google.com/googleplay/android-developer/answer/3131213#create_additional_track), or one of the built-in tracks:\n \n  \n* internal\n\n  \n* alpha\n\n  \n* beta\n\n  \n* production\n\n  For each release track, you have the choice of rolling your new version out to all existing users simultaneously, or doing a staged rollout so that only a fraction of your existing userbase will be able to download the new version.\n \n\n For more information on using the internal, alpha, beta or custom testing tracks, see the Google Play documentation:\n \n\n [ https://support.google.com/googleplay/android-developer/answer/3131213 ](https://support.google.com/googleplay/android-developer/answer/3131213)  This field supports substituting environment variables in the form ${SOME_VARIABLE} or $SOME_VARIABLE at build time.",
          "isOptional": true
        },
        {
          "name": "usePreviousExpansionFilesIfMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "google-play-android-publisher"
    },
    {
      "command": "androidLint",
      "title": "androidLint: Publish Android Lint results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "android-lint"
    },
    {
      "command": "ankaGetSaveImageResult",
      "title": "ankaGetSaveImageResult: Wait for previous save image requests results",
      "description": "",
      "parameters": [
        {
          "name": "shouldFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeoutMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "anka-build"
    },
    {
      "command": "ansiColor",
      "title": "ansiColor: Color ANSI Console Output",
      "description": "Adds support for standard ANSI escape sequences, including color, to Console Output.",
      "parameters": [
        {
          "name": "colorMapName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ansicolor"
    },
    {
      "command": "ansiblePlaybook",
      "title": "ansiblePlaybook: Invoke an ansible playbook",
      "description": "Execute an Ansible playbook. Only the `playbook` parameter is mandatory.",
      "parameters": [
        {
          "name": "playbook",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "become",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "becomeUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "colorized",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disableHostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dynamicInventory",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraVars",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extras",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forks",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inventory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inventoryContent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "limit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skippedTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startAtTask",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sudo",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sudoUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ansible"
    },
    {
      "command": "ansibleTower",
      "title": "ansibleTower: Have Ansible Tower run a job template",
      "description": "",
      "parameters": [
        {
          "name": "towerServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "towerCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraVars",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "importTowerLogs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "importWorkflowChildLogs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inventory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "limit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "removeColor",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scmBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipJobTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "throwExceptionWhenFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "towerLogLevel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ansible-tower"
    },
    {
      "command": "ansibleTowerProjectRevision",
      "title": "ansibleTowerProjectRevision: Have Ansible Tower update a Tower project’s revision",
      "description": "",
      "parameters": [
        {
          "name": "towerServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "towerCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "throwExceptionWhenFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ansible-tower"
    },
    {
      "command": "ansibleTowerProjectSync",
      "title": "ansibleTowerProjectSync: Have Ansible Tower update a Tower project",
      "description": "",
      "parameters": [
        {
          "name": "towerServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "towerCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "importTowerLogs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "removeColor",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "throwExceptionWhenFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "async",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ansible-tower"
    },
    {
      "command": "ansibleVault",
      "title": "ansibleVault: Invoke ansible vault",
      "description": "Execute Ansible vault. Only the `vaultCredentialsId` parameter is mandatory.",
      "parameters": [
        {
          "name": "action",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "content",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "input",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newVaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "output",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ansible"
    },
    {
      "command": "apiKey",
      "title": "apiKey: NowSecure Auto Security Test",
      "description": "",
      "parameters": [
        {
          "name": "validateDnsUrlConnection",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apiUrl",
          "type": "String",
          "values": [],
          "description": "The Base URL of the NowSecure API, by default this is https://lab-api.nowsecure.com. For Enterprise installs, this URL will differ.",
          "isOptional": true
        },
        {
          "name": "group",
          "type": "String",
          "values": [],
          "description": "Specify group-id where the app belongs",
          "isOptional": true
        },
        {
          "name": "binaryName",
          "type": "String",
          "values": [],
          "description": "Specify the filename of Android or iOS application, only apk and ipa formats are supported respectively. You can specify filename if it was generated by a previous step and is stored under the artifacts directory or the full path of the file.",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "Specify description of this step",
          "isOptional": true
        },
        {
          "name": "waitForResults",
          "type": "boolean",
          "values": [],
          "description": "Check this option if you would like to wait until security analysis is completed. This step would fail if any critical errors are found.",
          "isOptional": true
        },
        {
          "name": "waitMinutes",
          "type": "int",
          "values": [],
          "description": "Specify, in minutes, how long this step should wait for results. If analysis takes longer than this limit, the step would timeout.",
          "isOptional": true
        },
        {
          "name": "breakBuildOnScore",
          "type": "boolean",
          "values": [],
          "description": "Break the build when the application's security score is lower then the defined threshold.",
          "isOptional": true
        },
        {
          "name": "scoreThreshold",
          "type": "int",
          "values": [],
          "description": "Specify a number between 1 and 100, 1 being the lower and 100 being the highest, to act as a threshold for breaking builds.",
          "isOptional": true
        },
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "The API Key is used to authenticate against the NowSecure Auto API. See https://docs.nowsecure.com/auto/integration-services/jenkins-integration/ for instructions on generating an API Key.",
          "isOptional": true
        },
        {
          "name": "useBuildEndpoint",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showStatusMessages",
          "type": "boolean",
          "values": [],
          "description": "Specify if status messages for automation testing should be displayed",
          "isOptional": true
        },
        {
          "name": "stopTestsForStatusMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validateDnsUrlConnectionEnabled",
          "type": "boolean",
          "values": [],
          "description": "Check this option if you would like to validate DNS and URL access for NowSecure API",
          "isOptional": true
        }
      ],
      "plugin": "nowsecure-auto-security-test"
    },
    {
      "command": "appCenter",
      "title": "appCenter: Upload app to AppCenter",
      "description": "",
      "parameters": [
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "An API Token is used for authentication for all App Center API calls. Must have full access. \n\n \n Visit [https://docs.microsoft.com/en-us/appcenter/api-docs/index](https://docs.microsoft.com/en-us/appcenter/api-docs/index) for further information.",
          "isOptional": false
        },
        {
          "name": "ownerName",
          "type": "String",
          "values": [],
          "description": "The name of the owner in AppCenter. **NOTE:** This may differ to the display name that you see in the web UI. \n\n \n Visit [https://appcenter.ms/apps](https://appcenter.ms/apps), select your app, inspect the URL. \n\n \n For example the URL in AppCenter might look like: `https://appcenter.ms/users/xiola-3/apps/casey-1`. Here, the `ownerName` is `xiola-3`.",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "The name of the app in AppCenter. **NOTE:** This may differ to the display name that you see in the web UI. \n\n \n Visit [https://appcenter.ms/apps](https://appcenter.ms/apps), select your app, inspect the URL. \n\n \n For example the URL in AppCenter might look like: `https://appcenter.ms/users/xiola-3/apps/casey-1`. Here, the `appName` is `casey-1`.",
          "isOptional": false
        },
        {
          "name": "pathToApp",
          "type": "String",
          "values": [],
          "description": "Relative path to app. Supports variable substitution. \n\n \n For example: `three/days/xiola.apk` or `three/days/${APP}.apk`",
          "isOptional": false
        },
        {
          "name": "distributionGroups",
          "type": "String",
          "values": [],
          "description": "**NOTE:** Distribution groups must have permission for this app to be distributed to. \n\n \n Check your distribution groups at [https://appcenter.ms/apps](https://appcenter.ms/apps). \n\n \n For example `perry, dave, stephen, eric`",
          "isOptional": false
        },
        {
          "name": "branchName",
          "type": "String",
          "values": [],
          "description": "Name of the branch being built. Supports variable substitution. \n\n \n For example: `origin/master` or `$GIT_BRANCH`",
          "isOptional": true
        },
        {
          "name": "buildVersion",
          "type": "String",
          "values": [],
          "description": "**NOTE:** Build version might be mandatory on certain platform releases. Supports variable substitution. \n\n \n For example: `1.2.0` or `${version}`",
          "isOptional": true
        },
        {
          "name": "commitHash",
          "type": "String",
          "values": [],
          "description": "Commit hash of the commit being build. Supports variable substitution. \n\n \n For example: `0e62d85530892a9178ff2b55ac30e8ede56c9c0e` or `$GIT_COMMIT`",
          "isOptional": true
        },
        {
          "name": "mandatoryUpdate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyTesters",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pathToDebugSymbols",
          "type": "String",
          "values": [],
          "description": "Relative path to debug symbols. Supports variable substitution. \n\n \n For example: `three/days/casey.apk` or `three/days/${SYMBOLS}.apk`",
          "isOptional": true
        },
        {
          "name": "pathToReleaseNotes",
          "type": "String",
          "values": [],
          "description": "Relative path to release notes. Supports variable substitution. Supports Markdown syntax. **NOTE:** Limited to 5000 characters or less. \n\n \n For example: `three/days/linearnotes.md` or `three/days/${NOTES}.md`",
          "isOptional": true
        },
        {
          "name": "releaseNotes",
          "type": "String",
          "values": [],
          "description": "Supports Markdown syntax. **NOTE:** Limited to 5000 characters or less.",
          "isOptional": true
        }
      ],
      "plugin": "appcenter"
    },
    {
      "command": "appMonBuildEnvironment",
      "title": "appMonBuildEnvironment: Use Dynatrace AppMon to monitor tests",
      "description": "The below properties will be available as build variables in all the build steps during build. You can use them to register test run on your own (in your scripts). \n\n \n Also the properties set in global plugin configuration (\"Dynatrace Application Monitoring\" config section) will be available as build variables: <i>'dtServerUrl'</i>, <i>'dtUsername'</i> and <i>'dtPassword'</i>. \n\n \n NOTE:\n\n If you decide not to use the below properties in your scripts and to register test runs on your own, please fill at least the <i>\"System profile\"</i> field to have the post-build action working properly.",
      "parameters": [
        {
          "name": "systemProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "marker",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recordSession",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionMajor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionMilestone",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionMinor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionRevision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dynatrace-dashboard"
    },
    {
      "command": "appMonPublishTestResults",
      "title": "appMonPublishTestResults: Dynatrace AppMon - Finish Registered Tests Runs and Publish Results",
      "description": "This plugin fetches analysis data from the [AppMon Server](https://www.dynatrace.com/support/doc/appmon/) (Test Center Edition) REST interface. It displays a chart with a trend on passed/degraded/failing/... etc. tests, and also provides a detailed view for each test case showing the metrics recorded by Dynatrace Application Monitoring.",
      "parameters": [
        {
          "name": "printXmlReportForDebug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "statusNameIfDegraded",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "statusNameIfVolatile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dynatrace-dashboard"
    },
    {
      "command": "appMonRegisterTestRun",
      "title": "appMonRegisterTestRun: Dynatrace AppMon - Register Test Run",
      "description": "This step registers new Test Run with given category and returns test run id",
      "parameters": [
        {
          "name": "category",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dynatrace-dashboard"
    },
    {
      "command": "applatix",
      "title": "applatix: Applatix System Integration",
      "description": "",
      "parameters": [
        {
          "name": "axUrl",
          "type": "String",
          "values": [],
          "description": "The URL of Applatix system. For example: https://applatix.yourcompany.com",
          "isOptional": false
        },
        {
          "name": "axUsername",
          "type": "String",
          "values": [],
          "description": "Applatix credential: username",
          "isOptional": false
        },
        {
          "name": "axPassword",
          "type": "String",
          "values": [],
          "description": "Applatix credential: password",
          "isOptional": false
        },
        {
          "name": "axServiceTemplateName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "axServiceTemplateRepository",
          "type": "String",
          "values": [],
          "description": "The repository where your Service Template is.",
          "isOptional": false
        },
        {
          "name": "axServiceTemplateBranch",
          "type": "String",
          "values": [],
          "description": "The branch where your Service Template is.",
          "isOptional": false
        },
        {
          "name": "axServiceTemplateParameters",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "The parameters of your Service Template at Applatix system. It is optional. It is in JSON format, for example: {\"service\": \"service_name\", \"iterations\": 3 }",
          "isOptional": false
        }
      ],
      "plugin": "applatix"
    },
    {
      "command": "appray",
      "title": "appray: App-Ray security check",
      "description": "",
      "parameters": [
        {
          "name": "appRayUrl",
          "type": "String",
          "values": [],
          "description": "App-Ray instance URL. Default: https://demo.app-ray.co",
          "isOptional": false
        },
        {
          "name": "outputFilePath",
          "type": "String",
          "values": [],
          "description": "Name of the binary file (apk, ipa) to be scanned relative to the workspace. You can use Jenkins variables to specify the filename.",
          "isOptional": false
        },
        {
          "name": "waitTimeout",
          "type": "int",
          "values": [],
          "description": "Timeout of waiting for ending of a scan. (For big application sometimes it take more than 30 minute!)",
          "isOptional": false
        },
        {
          "name": "riskScoreThreshold",
          "type": "int",
          "values": [],
          "description": "The minimum risk score to check the apk validity. It is the output of then scan. You can check the scores on the app-ray instance.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Use email address as a username and please provide a password. The user must have full-access access right in App-Ray in order to be able to submit applications for scanning.",
          "isOptional": false
        }
      ],
      "plugin": "appray"
    },
    {
      "command": "approveReceivedEvent",
      "title": "approveReceivedEvent: Updates an Approve event in Elasticsearch",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "approved",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-devops-steps"
    },
    {
      "command": "approveRequestedEvent",
      "title": "approveRequestedEvent: Creates an Approve requested event in Elasticsearch",
      "description": "",
      "parameters": [
        {
          "name": "app",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-devops-steps"
    },
    {
      "command": "appscan",
      "title": "appscan: Run AppScan On Cloud Security Test",
      "description": "",
      "parameters": [
        {
          "name": "scanner",
          "type": "Nested",
          "values": [
            "dynamic_analyzer",
            "mobile_analyzer",
            "static_analyzer"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "application",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "email",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildNonCompliance",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failureConditions",
          "type": "Nested",
          "values": [
            "failureType",
            "threshold"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "wait",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "appscan"
    },
    {
      "command": "appscanenterprise",
      "title": "appscanenterprise: Run AppScan Enterprise Security Test",
      "description": "",
      "parameters": [
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "folder",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testPolicy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "accessId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "agent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "application",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "email",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exploreData",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failureConditions",
          "type": "Nested",
          "values": [
            "failureType",
            "threshold"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loginType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secretKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testOptimization",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trafficFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "wait",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "appscan"
    },
    {
      "command": "aqua",
      "title": "aqua: Aqua Security",
      "description": "",
      "parameters": [
        {
          "name": "locationType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "registry",
          "type": "String",
          "values": [],
          "description": "Name of a Docker registry that is defined in the Aqua Management Console. E.g. <i>Docker Hub</i>.",
          "isOptional": false
        },
        {
          "name": "register",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "localImage",
          "type": "String",
          "values": [],
          "description": "Path of local Docker image, including tag. E.g. <i>my_ubuntu:latest</i>",
          "isOptional": false
        },
        {
          "name": "hostedImage",
          "type": "String",
          "values": [],
          "description": "Path of Docker image on registry, including tag. E.g. <i>google/mysql:latest</i>",
          "isOptional": false
        },
        {
          "name": "onDisallowed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notCompliesCmd",
          "type": "String",
          "values": [],
          "description": "A shell command to execute when image does not comply with Aqua security policy",
          "isOptional": false
        },
        {
          "name": "hideBase",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "showNegligible",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "policies",
          "type": "String",
          "values": [],
          "description": "Comma separated names of image assurance policies. Available for only for local images and with scanner cli &gt; v3.2.",
          "isOptional": false
        },
        {
          "name": "customFlags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tarFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "aqua-security-scanner"
    },
    {
      "command": "aquaMicroscanner",
      "title": "aquaMicroscanner: Aqua MicroScanner",
      "description": "",
      "parameters": [
        {
          "name": "imageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onDisallowed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notCompliesCmd",
          "type": "String",
          "values": [],
          "description": "A shell command to execute when image does not comply with Aqua security policy",
          "isOptional": false
        },
        {
          "name": "outputFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aqua-microscanner"
    },
    {
      "command": "aquaServerlessScanner",
      "title": "aquaServerlessScanner: Aqua Serverless Security",
      "description": "",
      "parameters": [
        {
          "name": "onDisallowed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notCompliesCmd",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "codeScanPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customFlags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aqua-serverless"
    },
    {
      "command": "arachniScanner",
      "title": "arachniScanner: Arachni Scanner",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "URL of the system under scan.",
          "isOptional": false
        },
        {
          "name": "checks",
          "type": "String",
          "values": [],
          "description": "Here you can specify a comma separated list with the checks to load. Or leave it blank to load all checks.",
          "isOptional": false
        },
        {
          "name": "scope",
          "type": "Nested",
          "values": [
            "pageLimit",
            "excludePathPattern"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userConfig",
          "type": "Nested",
          "values": [
            "filename"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "arachni-scanner"
    },
    {
      "command": "archive",
      "title": "archive: Archive artifacts",
      "description": "Archives build output artifacts for later use. As of Jenkins 2.x, this step is deprecated in favor of the more configurable `archiveArtifacts`.",
      "parameters": [
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "Include artifacts matching this [Ant style pattern](https://ant.apache.org/manual/dirtasks.html#patterns). Use a comma separated list to add more than one expression.",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Exclude artifacts matching this [Ant-style pattern](https://ant.apache.org/manual/dirtasks.html#patterns).\n \n\n Use a comma-separated list to add more than one expression.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "archiveArtifacts",
      "title": "archiveArtifacts: Archive the artifacts",
      "description": "Archives the build artifacts (for example, distribution zip files or jar files) so that they can be downloaded later. Archived files will be accessible from the Jenkins webpage.\n \n\n Normally, Jenkins keeps artifacts for a build as long as a build log itself is kept, but if you don't need old artifacts and would rather save disk space, you can do so.\n\n\n\n\n\n\n\n  Note that the Maven job type automatically archives any produced Maven artifacts. Any artifacts configured here will be archived on top of that. Automatic artifact archiving can be disabled under the advanced Maven options.",
      "parameters": [
        {
          "name": "artifacts",
          "type": "String",
          "values": [],
          "description": "You can use wildcards like 'module/dist/**/*.zip'. See [ the includes attribute of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format -- except that \",\" (<em>comma</em>) is the only supported separator. The base directory is <a rel=\"nofollow\">the workspace</a>. You can only archive files that are located in your workspace.",
          "isOptional": false
        },
        {
          "name": "allowEmptyArchive",
          "type": "boolean",
          "values": [],
          "description": "Normally, a build fails if archiving returns zero artifacts. This option allows the archiving process to return nothing without failing the build. Instead, the build will simply throw a warning.",
          "isOptional": true
        },
        {
          "name": "caseSensitive",
          "type": "boolean",
          "values": [],
          "description": "Artifact archiver uses Ant `org.apache.tools.ant.DirectoryScanner` which by default is case sensitive. For instance, if the job produces *.hpi files, pattern \"**/*.HPI\" will fail to find them.\n \n\n\n \n\n This option can be used to disable case sensitivity. When it's unchecked, pattern \"**/*.HPI\" will match any *.hpi files, or pattern \"**/cAsEsEnSiTiVe.jar\" will match a file called caseSensitive.jar.",
          "isOptional": true
        },
        {
          "name": "defaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optionally specify the 'excludes' pattern, such as \"foo/bar/**/*\". Use \",\" to set a list of patterns. A file that matches this mask will not be archived even if it matches the mask specified in 'files to archive' section.",
          "isOptional": true
        },
        {
          "name": "fingerprint",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "followSymlinks",
          "type": "boolean",
          "values": [],
          "description": "By disabling this option all symbolic links found in the workspace will be ignored.",
          "isOptional": true
        },
        {
          "name": "onlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "core"
    },
    {
      "command": "archiveArtifactsToQiniu",
      "title": "archiveArtifactsToQiniu: Archive the artifacts to Qiniu",
      "description": "",
      "parameters": [
        {
          "name": "includeFilesGlob",
          "type": "String",
          "values": [],
          "description": "You can use wildcards like 'module/dist/**/*.zip'. See [ the includes attribute of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format. The base directory is <a rel=\"nofollow\">the workspace</a>. You can only archive files that are located in your workspace.",
          "isOptional": false
        },
        {
          "name": "excludeFilesGlob",
          "type": "String",
          "values": [],
          "description": "Optionally specify [the 'excludes' pattern](http://ant.apache.org/manual/Types/fileset.html), such as \"foo/bar/**/*\". A file that matches this mask will not be archived even if it matches the mask specified in 'files to archive' section.",
          "isOptional": false
        },
        {
          "name": "allowEmptyArchive",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useDefaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "Artifact archiver uses Ant `org.apache.tools.ant.DirectoryScanner` which excludes by default the following patterns:\n\n`**/%*%,**/.git/**,**/SCCS,**/.bzr,**/.hg/**,**/.bzrignore,**/.git,**/SCCS/**,**/.hg,**/.#*,**/vssver.scc,**/.bzr/**,**/._*,**/#*#,**/*~,**/CVS,**/.hgtags,**/.svn/**,**/.hgignore,**/.svn,**/.gitignore,**/.gitmodules,**/.hgsubstate,**/.gitattributes,**/CVS/**,**/.hgsub,**/.DS_Store,**/.cvsignore`\n\n \nThis option allows to enable or disable the default Ant exclusions.",
          "isOptional": false
        },
        {
          "name": "caseSensitive",
          "type": "boolean",
          "values": [],
          "description": "Artifact archiver uses Ant `org.apache.tools.ant.DirectoryScanner` which by default is case sensitive. For instance, if the job produces *.hpi files, pattern \"**/*.HPI\" will fail to find them.\n \n\n\n \n\n This option can be used to disable case sensitivity. When it's unchecked, pattern \"**/*.HPI\" will match any *.hpi files, or pattern \"**/cAsEsEnSiTiVe.jar\" will match a file called caseSensitive.jar.",
          "isOptional": false
        }
      ],
      "plugin": "qiniu"
    },
    {
      "command": "archiveZap",
      "title": "archiveZap: Create & Archive ZAP report",
      "description": "",
      "parameters": [
        {
          "name": "failAllAlerts",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failHighAlerts",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failMediumAlerts",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failLowAlerts",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "falsePositivesFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "arestocats",
      "title": "arestocats: aRESTocats",
      "description": "",
      "parameters": [
        {
          "name": "metricsDatafilesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resultsDatafilesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "numBuilds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "arestocats"
    },
    {
      "command": "artifactDeployer",
      "title": "artifactDeployer: Maven Artifact Deployer",
      "description": "Deploy one or more artifacts to a maven repository.",
      "parameters": [
        {
          "name": "artifacts",
          "type": "Nested",
          "values": [
            "groupId",
            "artifactId",
            "version",
            "classifier",
            "deployToLocal",
            "deployToRemote",
            "extension",
            "failOnError",
            "pomFile",
            "targetFileName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "enableRepositoryLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableTransferLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "repository-connector"
    },
    {
      "command": "artifactPromotion",
      "title": "artifactPromotion: ArtifactPromotionStep",
      "description": "",
      "parameters": [
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "classifier",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingPW",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releasePW",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "promoterClass",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extension",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipDeletion",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifact-promotion"
    },
    {
      "command": "artifactResolver",
      "title": "artifactResolver: Maven Artifact Resolver",
      "description": "Resolves artifacts against one or more remote maven repositories.",
      "parameters": [
        {
          "name": "artifacts",
          "type": "Nested",
          "values": [
            "groupId",
            "artifactId",
            "version",
            "classifier",
            "deployToLocal",
            "deployToRemote",
            "extension",
            "failOnError",
            "pomFile",
            "targetFileName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "enableRepositoryLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableTransferLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "repository-connector"
    },
    {
      "command": "artifactoryBuildTrigger",
      "title": "artifactoryBuildTrigger: Trigger Artifactory build",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryDistributeBuild",
      "title": "artifactoryDistributeBuild: Distribute build",
      "description": "",
      "parameters": [
        {
          "name": "distributionConfig",
          "type": "class org.jfrog.hudson.pipeline.common.types.DistributionConfig",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryDownload",
      "title": "artifactoryDownload: Download artifacts",
      "description": "",
      "parameters": [
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryEditProps",
      "title": "artifactoryEditProps: Edit properties",
      "description": "",
      "parameters": [
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "props",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "editType",
          "type": "Enum",
          "values": [
            "SET",
            "DELETE"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryGoPublish",
      "title": "artifactoryGoPublish: Run Artifactory Go Publish command",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.GoBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryGoRun",
      "title": "artifactoryGoRun: Run Artifactory Go command",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.GoBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goCmdArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryMavenBuild",
      "title": "artifactoryMavenBuild: run Artifactory maven",
      "description": "",
      "parameters": [
        {
          "name": "mavenBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.MavenBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pom",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goals",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryNpmCi",
      "title": "artifactoryNpmCi: Run Artifactory npm ci",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "npmBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.NpmBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryNpmInstall",
      "title": "artifactoryNpmInstall: Run Artifactory npm install",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "npmBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.NpmBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryNpmPublish",
      "title": "artifactoryNpmPublish: Run Artifactory npm publish",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "npmBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.NpmBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryNugetRun",
      "title": "artifactoryNugetRun: Run Artifactory NuGet",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nugetBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.NugetBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryPipRun",
      "title": "artifactoryPipRun: Run Artifactory pip install",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pipBuild",
          "type": "class org.jfrog.hudson.pipeline.common.types.builds.PipBuild",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "envActivation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryPromoteBuild",
      "title": "artifactoryPromoteBuild: Promote build",
      "description": "",
      "parameters": [
        {
          "name": "promotionConfig",
          "type": "class org.jfrog.hudson.pipeline.common.types.PromotionConfig",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "artifactoryUpload",
      "title": "artifactoryUpload: Upload artifacts",
      "description": "",
      "parameters": [
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "assertthatBddFeatures",
      "title": "assertthatBddFeatures: Download AssertThat features",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "Jira project id.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputFolder",
          "type": "String",
          "values": [],
          "description": "Output folder for feature files withing workspace. Default ./features/.\n\n\n By default features are downloaded to the root of the workspace.",
          "isOptional": false
        },
        {
          "name": "jql",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "mode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyURI",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraServerUrl",
          "type": "String",
          "values": [],
          "description": "Jira Server URL. Populate only if using Jira Server version (e.g. https://mycompanyjira.com). Leave blank for cloud.",
          "isOptional": false
        }
      ],
      "plugin": "assertthat-bdd-jira"
    },
    {
      "command": "assertthatBddReport",
      "title": "assertthatBddReport: Upload AssertThat report",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "Jira project id.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jsonReportFolder",
          "type": "String",
          "values": [],
          "description": "Cucumber json files folder withing the workspace. The folder where cucumber json is outputted after the tests run. e.g. ./reports/.\n \n\n By default searching for json files in the root of the workspace.",
          "isOptional": false
        },
        {
          "name": "jsonReportIncludePattern",
          "type": "String",
          "values": [],
          "description": "Pattern for json file names. Default **/*.json",
          "isOptional": false
        },
        {
          "name": "runName",
          "type": "String",
          "values": [],
          "description": "The name of the run. Default 'Test run dd MMM yyyy HH:mm:ss'",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "Report type: Cucumber or Karate",
          "isOptional": false
        },
        {
          "name": "proxyURI",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraServerUrl",
          "type": "String",
          "values": [],
          "description": "Jira Server URL. Populate only if using Jira Server version (e.g. https://mycompanyjira.com). Leave blank for cloud.",
          "isOptional": false
        }
      ],
      "plugin": "assertthat-bdd-jira"
    },
    {
      "command": "assessContainerImage",
      "title": "assessContainerImage: Assess Container Image with Rapid7 InsightVM",
      "description": "",
      "parameters": [
        {
          "name": "failOnPluginError",
          "type": "boolean",
          "values": [],
          "description": "Enable this option to fail the build if the plugin encountered any errors.",
          "isOptional": true
        },
        {
          "name": "imageId",
          "type": "String",
          "values": [],
          "description": "Provide a Docker image ID or name which can be referenced by the Docker daemon (e.g. my-repo/my-image:my-tag).",
          "isOptional": true
        },
        {
          "name": "nameRules",
          "type": "Nested",
          "values": [
            "packageName",
            "vulnerabilityCategory",
            "vulnerabilityTitle",
            "vulnerablePackageName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdRules",
          "type": "Nested",
          "values": [
            "criticalVulnerabilities",
            "cvssV2Score",
            "exploitableVulnerabilities",
            "vulnerabilitiesWithMalwareKits",
            "moderateVulnerabilities",
            "packageRiskScore",
            "riskScore",
            "severeVulnerabilities",
            "totalVulnerabilities"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "treatWarningsAsErrors",
          "type": "boolean",
          "values": [],
          "description": "Enable this option to treat warnings as errors, which will fail the build.",
          "isOptional": true
        },
        {
          "name": "workspaceDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "rapid7-insightvm-container-assessment"
    },
    {
      "command": "associateTag",
      "title": "associateTag: Associate Tag (Nexus Repository Manager 3.x)",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "The tag which will be applied to components matching the specified search criteria",
          "isOptional": false
        },
        {
          "name": "search",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "<span> The search criteria used to locate components on the target Nexus Repository Manager server. For more details, please see [ Search API ](https://help.sonatype.com/display/NXRM3/Search+API#SearchAPI-SearchComponents) </span>",
          "isOptional": false
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "audit",
      "title": "audit: 42Crunch API Contract Security Audit",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minScore",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platformUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "42crunch-security-audit"
    },
    {
      "command": "autoGrade",
      "title": "autoGrade: Autograde project",
      "description": "",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "The configuration must be a valid JSON object with respect to the [given Schema](https://github.com/jenkinsci/autograding-plugin/blob/master/etc/configuration.json). For each metric you can define the impact on the overall score and the individual scoring criteria. In order to skip one of the metrics, simply remove that part of the configuration. Note: if you configure a metric but Jenkins does not create a corresponding result, then your build we be failed with an exception.\n \n\n \n### Example\n ` { \"analysis\": { \"maxScore\": 100, \"errorImpact\": -10, \"highImpact\": -5, \"normalImpact\": -2, \"lowImpact\": -1 }, \"tests\": { \"maxScore\": 100, \"failureImpact\": -2, \"skippedImpact\": -1 }, \"coverage\": { \"maxScore\": 100, \"missedImpact\": -1 }, \"pit\": { \"maxScore\": 100, \"undetectedImpact\": -1, } } `",
          "isOptional": false
        }
      ],
      "plugin": "autograding"
    },
    {
      "command": "autocancelBranchBuildsOnPullRequestBuilds",
      "title": "autocancelBranchBuildsOnPullRequestBuilds: Autocancel branch builds on pull request builds",
      "description": "Autocancel branch builds on pull request builds will ensure running source branch builds are aborted when a new pull request build starts. \n\n\n This could happen when a branch is pushed and immediately filed as a pull request, where branch build becomes redundant. \n\n\n To match pull requests, the plugin leverages `env.CHANGE_BRANCH`, which should be set to the matching source branch name. Then, the plugin looks for branch jobs named as the source branch name under multibranch pipeline parent job to abort any running builds. \n\n\n If `env.CHANGE_BRANCH` is not defined, the step will do nothing. \n\n\n ` `\n\n\n```groovy\nautocancelBranchBuildsOnPullRequestBuilds()\n\nnode {\n    // Steps\n}\n        \n```\n` `",
      "parameters": [],
      "plugin": "autocancel"
    },
    {
      "command": "autocancelConsecutiveBuilds",
      "title": "autocancelConsecutiveBuilds: Autocancel consecutive builds",
      "description": "Autocancel consecutive builds will ensure running builds are aborted when a new build start, leaving always the last build running. \n\n\n ` `\n\n\n```groovy\nautocancelConsecutiveBuilds()\n\nnode {\n    // Steps\n}\n        \n```\n` `",
      "parameters": [],
      "plugin": "autocancel"
    },
    {
      "command": "awaitBarrier",
      "title": "awaitBarrier: Waits until all parties have invoked await on this barrier.",
      "description": "",
      "parameters": [
        {
          "name": "barrier",
          "type": "class com.github.topikachu.jenkins.concurrent.barrier.BarrierRef",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "awaitCondition",
      "title": "awaitCondition: Causes the current thread to wait until it is signalled or interrupted.",
      "description": "",
      "parameters": [
        {
          "name": "condition",
          "type": "class com.github.topikachu.jenkins.concurrent.condition.LockAndCondition",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "awaitDeployment",
      "title": "awaitDeployment: Awaiting for deployment",
      "description": "Pauses a Workflow job until artifacts are deployed to servers via configuration management tools like Chef/Puppet/etc. For this feature to work, you must also install a plugin that's specific to the configuration management tool you are using, such as the puppet plugin.",
      "parameters": [
        {
          "name": "threshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "env",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "deployment-notification"
    },
    {
      "command": "awaitDeploymentCompletion",
      "title": "awaitDeploymentCompletion: Wait for AWS CodeDeploy deployment completion",
      "description": "",
      "parameters": [
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "awaitLatch",
      "title": "awaitLatch: Wait until the latch has counted down to zero.",
      "description": "",
      "parameters": [
        {
          "name": "latch",
          "type": "class com.github.topikachu.jenkins.concurrent.latch.LatchRef",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "awsCodeBuild",
      "title": "awsCodeBuild: Invoke an AWS CodeBuild build",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactEncryptionDisabledOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactNamespaceOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactPackagingOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactPathOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "awsAccessKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "awsSecretKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "awsSessionToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildSpecFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildTimeoutOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cacheLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cacheModesOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cacheTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "certificateOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloudWatchLogsGroupNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloudWatchLogsStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloudWatchLogsStreamNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "computeTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cwlStreamingDisabled",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "downloadArtifacts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "downloadArtifactsRelativePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envVariables",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exceptionFailureMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitCloneDepthOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "insecureSslOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "localSourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideArtifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "privilegedModeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportBuildStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3LogsEncryptionDisabledOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3LogsLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3LogsStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secondaryArtifactsOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secondarySourcesOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secondarySourcesVersionOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceRoleOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceControlType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sseAlgorithm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspaceSubdir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "aws-codebuild"
    },
    {
      "command": "awsIdentity",
      "title": "awsIdentity: Print and return the AWS identity",
      "description": "",
      "parameters": [],
      "plugin": "pipeline-aws"
    },
    {
      "command": "awsebReleaser",
      "title": "awsebReleaser: AWS Elastic Beanstalk Releaser",
      "description": "",
      "parameters": [
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "Select the credentials to use.",
          "isOptional": false
        },
        {
          "name": "awsRegion",
          "type": "String",
          "values": [],
          "description": "AWS Region.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "AWS EB Application Name (e.g.: \"myapp\").",
          "isOptional": false
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "AWS EB Environment name to deploy to.",
          "isOptional": false
        },
        {
          "name": "versionLabel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-beanstalk-releaser"
    },
    {
      "command": "azureCLI",
      "title": "azureCLI: Azure CLI not found",
      "description": "",
      "parameters": [
        {
          "name": "principalCredentialId",
          "type": "String",
          "values": [],
          "description": "The Service Principal credentials required to connect to your Azure account.\n \n\n More information can be found here: [https://github.com/Azure/azure-devops-utils#user-content-create-service-principal](https://github.com/Azure/azure-devops-utils#user-content-create-service-principal)\n \n\n If you want to add an Azure credential click \"Add\" and select \"Microsoft Azure Service Principal\" from the Kind drop-down.\n \n\n If you want to remove existing Azure credentials you must go to the <a rel=\"nofollow\">Credentials Dashboard</a>.",
          "isOptional": false
        },
        {
          "name": "commands",
          "type": "Nested",
          "values": [
            "script",
            "exportVariablesString"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "azure-cli"
    },
    {
      "command": "azureDownload",
      "title": "azureDownload: Download from Azure storage",
      "description": "",
      "parameters": [
        {
          "name": "storageCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "downloadType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildSelector",
          "type": "Nested",
          "values": [
            "downstream",
            "lastWithArtifacts",
            "lastCompleted",
            "$class: 'MultiJobBuildSelector'",
            "buildParameter",
            "permalink",
            "$class: 'PromotedBuildSelector'",
            "latestSavedBuild",
            "specific",
            "lastSuccessful",
            "upstream",
            "workspace"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "containerName",
          "type": "String",
          "values": [],
          "description": "Enter a storage container name.\n \n\n Environment variables can also be referenced.\n \n\n For example: ${JOB_NAME}",
          "isOptional": true
        },
        {
          "name": "deleteFromAzureAfterDownload",
          "type": "boolean",
          "values": [],
          "description": "If checked, the file copy on Azure will be removed after it's downloaded to local.",
          "isOptional": true
        },
        {
          "name": "downloadDirLoc",
          "type": "String",
          "values": [],
          "description": "Enter a download path. If not specified, the files will be downloaded into the job's workspace.\n \n\n Environment variables can also be referenced, for example: ${JOB_NAME} If \"Flatten Directories\" is checked, this directory will contain all outputs.",
          "isOptional": true
        },
        {
          "name": "excludeFilesPattern",
          "type": "String",
          "values": [],
          "description": "Enter a pattern of blobs to exclude from the download. Ant fileset syntax. Leaving blank will download the entire container. Environment variables can also be referenced.\n \n\n For example: ${JOB_NAME}",
          "isOptional": true
        },
        {
          "name": "fileShare",
          "type": "String",
          "values": [],
          "description": "Enter a Azure File Storage Share name.\n \n\n Environment variables can also be referenced.\n \n\n For example: ${JOB_NAME}",
          "isOptional": true
        },
        {
          "name": "flattenDirectories",
          "type": "boolean",
          "values": [],
          "description": "If checked, all files specified for download will be flattened to the single download directory. If two files are named the same in different directories, only one will remain.",
          "isOptional": true
        },
        {
          "name": "includeArchiveZips",
          "type": "boolean",
          "values": [],
          "description": "The archive zip files generated (archive.zip in the root of the container/virtual path) are typically excluded from download. Check this to enable downloading of the archive zip.",
          "isOptional": true
        },
        {
          "name": "includeFilesPattern",
          "type": "String",
          "values": [],
          "description": "Enter a pattern of blobs to download. Ant fileset syntax. Environment variables can also be referenced.\n \n\n For example: ${JOB_NAME}",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "The name of the project to download the managed artifact from.",
          "isOptional": true
        }
      ],
      "plugin": "windows-azure-storage"
    },
    {
      "command": "azureFunctionAppPublish",
      "title": "azureFunctionAppPublish: Publish an Azure Function App",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "The resource group name that the app will be associated with.",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "The Azure Function App name.",
          "isOptional": false
        },
        {
          "name": "deployOnlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "If checked, application will only be deployed to Azure if the build was successful.",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "The file paths that will be deployed.\n\n \nYou can use wildcards like `**/*.js`. See the includes attribute of [Ant fileset](https://ant.apache.org/manual/Types/fileset.html) for the exact format. Multiple files can be separated by '`,`'. The base directory is the workspace. You can only deploy files that are located in your workspace.\n\n \nExample: `**/*.js,**/*.json`",
          "isOptional": true
        },
        {
          "name": "sourceDirectory",
          "type": "String",
          "values": [],
          "description": "Source directory relative to the workspace.",
          "isOptional": true
        },
        {
          "name": "targetDirectory",
          "type": "String",
          "values": [],
          "description": "Target directory relative to the site root.",
          "isOptional": true
        }
      ],
      "plugin": "azure-function"
    },
    {
      "command": "azureIoTEdgeBuild",
      "title": "azureIoTEdgeBuild: Azure IoT Edge Build",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultPlatform",
          "type": "String",
          "values": [],
          "description": "In your **.template.json**, you can leave the modules platform unspecified. For these modules, the **default platform** will be used.",
          "isOptional": true
        },
        {
          "name": "deploymentManifestFilePath",
          "type": "String",
          "values": [],
          "description": "The path of Azure IoT Edge solution **.template.json**. This file defines the modules and routes in Azure IoT Edge solution, file name must end with **.template.json**",
          "isOptional": true
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "azure-iot-edge"
    },
    {
      "command": "azureIoTEdgeDeploy",
      "title": "azureIoTEdgeDeploy: Azure IoT Edge Deploy",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootPath",
          "type": "String",
          "values": [],
          "description": "In some cases, the Edge solution is not under the root of the code repository. You can specify path to the root of Edge solution in build definition. Example: If your code repository is an Edge solution, then leave it to default value './'. If your solution is under subfolder 'edge', then set it to 'edge'\" Please notice that the module.json file path is relative to the root path of solution.",
          "isOptional": true
        },
        {
          "name": "deploymentFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "Input the IoT Edge Deployment ID, if ID exists, it will be overridden.Lowercase letters, numbers and the following characters are allowed [ -:+%_#*?!(),=@;' ], no more than 128 characters. For more information: [Visit docs](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)",
          "isOptional": true
        },
        {
          "name": "deploymentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deviceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "iothubName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "priority",
          "type": "String",
          "values": [],
          "description": "Set the priority to a positive integer to resolve deployment conflicts: when targeted by multiple deployments a device will use the one with highest priority or (in case of two deployments with the same priority) latest creation time. For more information: [Visit docs](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)",
          "isOptional": true
        },
        {
          "name": "targetCondition",
          "type": "String",
          "values": [],
          "description": "A target condition to determine which devices will be targeted with this deployment. Example tags.environment='test', properties.reported.devicemodel='4000x'",
          "isOptional": true
        }
      ],
      "plugin": "azure-iot-edge"
    },
    {
      "command": "azureIoTEdgeGenConfig",
      "title": "azureIoTEdgeGenConfig: Azure IoT Edge Generate Deployment Manifest",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultPlatform",
          "type": "String",
          "values": [],
          "description": "In your **.template.json**, you can leave the modules platform unspecified. For these modules, the **default platform** will be used.",
          "isOptional": true
        },
        {
          "name": "deploymentFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentManifestFilePath",
          "type": "String",
          "values": [],
          "description": "The path of Azure IoT Edge solution **.template.json**. This file defines the modules and routes in Azure IoT Edge solution, file name must end with **.template.json**",
          "isOptional": true
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "azure-iot-edge"
    },
    {
      "command": "azureIoTEdgePush",
      "title": "azureIoTEdgePush: Azure IoT Edge Push",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "acrName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bypassModules",
          "type": "String",
          "values": [],
          "description": "List of modules to bypass when building.\n\n \nYou can leave this field empty to build all modules\n\n \nOr use comma delimited list of modules. Example \"ModuleA,ModuleB\"",
          "isOptional": true
        },
        {
          "name": "defaultPlatform",
          "type": "String",
          "values": [],
          "description": "In your **.template.json**, you can leave the modules platform unspecified. For these modules, the **default platform** will be used.",
          "isOptional": true
        },
        {
          "name": "deploymentManifestFilePath",
          "type": "String",
          "values": [],
          "description": "The path of Azure IoT Edge solution **.template.json**. This file defines the modules and routes in Azure IoT Edge solution, file name must end with **.template.json**",
          "isOptional": true
        },
        {
          "name": "dockerRegistryEndpoint",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dockerRegistryType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "azure-iot-edge"
    },
    {
      "command": "azureKeyVault",
      "title": "azureKeyVault: azureKeyVault",
      "description": "",
      "parameters": [
        {
          "name": "secrets",
          "type": "Nested",
          "values": [
            "secretType",
            "name",
            "envVariable",
            "version"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialID",
          "type": "String",
          "values": [],
          "description": "Specify the Credential ID used for accessing KeyVault.\n \n  \n* Must be a **Microsoft Azure Service Principal** or **Managed Identities for Azure Resources**",
          "isOptional": true
        },
        {
          "name": "keyVaultURL",
          "type": "String",
          "values": [],
          "description": "OPTIONAL: Override the globally configured KeyVault URL (e.g. https://YOURKEYVAULT.vault.azure.net)",
          "isOptional": true
        }
      ],
      "plugin": "azure-keyvault"
    },
    {
      "command": "azureServiceFabricPublish",
      "title": "azureServiceFabricPublish: Deploy Service Fabric Project",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "The whole name of the application, which should be the name of the folder containing the ApplicationManifest with \"fabric:/\" added at the beginning.",
          "isOptional": true
        },
        {
          "name": "applicationType",
          "type": "String",
          "values": [],
          "description": "Should match the specified ApplicationTypeName in the Application Manifest.",
          "isOptional": true
        },
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clientCert",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clientKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configureType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "managementHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "manifestPath",
          "type": "String",
          "values": [],
          "description": "The path from the home of your Github project to the folder containing the Application Manifest. For example, \"MySFApp/MySFApp/ApplicationManifest.xml\". Used to determine version number in the deployment process.",
          "isOptional": true
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceFabric",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-fabric"
    },
    {
      "command": "azureUpload",
      "title": "azureUpload: Upload artifacts to Microsoft Azure Storage",
      "description": "",
      "parameters": [
        {
          "name": "storageCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "storageType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowAnonymousAccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "blobProperties",
          "type": "Nested",
          "values": [
            "cacheControl",
            "contentEncoding",
            "contentLanguage",
            "contentType",
            "detectContentType"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanUpContainerOrShare",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanUpVirtualPath",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "containerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "doNotFailIfArchivingReturnsNothing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "doNotUploadIndividualFiles",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "doNotWaitForPreviousBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeFilesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fileShareName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "metadata",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onlyUploadModifiedArtifacts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pubAccessible",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadArtifactsOnlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadZips",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "virtualPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "windows-azure-storage"
    },
    {
      "command": "azureVMSSUpdate",
      "title": "azureVMSSUpdate: Update Azure Virtual Machine Scale Set",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "The Azure Service Principal credentials used to communicate with the Azure services. Check the following documentation for more information about the service principal:\n \n  \n* [ Use portal to create an Azure Active Directory application and service principal that can access resources ](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal)",
          "isOptional": false
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "The resource group name that the Virtual Machine Scale Set is associated with.",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The Azure Virtual Machine Scale Set name.",
          "isOptional": false
        },
        {
          "name": "imageReference",
          "type": "Nested",
          "values": [
            "id",
            "offer",
            "publisher",
            "sku",
            "version"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "azure-vmss"
    },
    {
      "command": "azureVMSSUpdateInstances",
      "title": "azureVMSSUpdateInstances: Update Azure Virtual Machine Scale Set Instances",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "The Azure Service Principal credentials used to communicate with the Azure services. Check the following documentation for more information about the service principal:\n \n  \n* [ Use portal to create an Azure Active Directory application and service principal that can access resources ](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal)",
          "isOptional": false
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "The resource group name that the Virtual Machine Scale Set is associated with.",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The Azure Virtual Machine Scale Set name.",
          "isOptional": false
        },
        {
          "name": "instanceIds",
          "type": "String",
          "values": [],
          "description": "Instance IDs to be updated, separated by '`,`'.",
          "isOptional": false
        }
      ],
      "plugin": "azure-vmss"
    },
    {
      "command": "azureWebAppPublish",
      "title": "azureWebAppPublish: Publish an Azure Web App",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deleteTempImage",
          "type": "boolean",
          "values": [],
          "description": "If checked, the intermediate docker image will be removed from your build agent after build succeeds.",
          "isOptional": true
        },
        {
          "name": "deployOnlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "If checked, application will only be deployed to Azure if the build was successful.",
          "isOptional": true
        },
        {
          "name": "dockerFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dockerImageName",
          "type": "String",
          "values": [],
          "description": "The docker image name. Leave blank if you want to use the same name as it on Azure.\n \n\n Be sure to include the registry and account if any. See examples:\n \n\n Docker hub format: &lt;username&gt;/&lt;name&gt; eg. bitname/mysql\n \n\n Azure registry format: &lt;namePrefix.azurecr.io&gt;/&lt;repo&gt; eg. xxx.azurecr.io/mysql, xxx.azurecr.io/yyy/mysql",
          "isOptional": true
        },
        {
          "name": "dockerImageTag",
          "type": "String",
          "values": [],
          "description": "Tha tag for your image. It's recommended to use a different tag for every single build otherwise your previous images might be overridden. We suggest you to append the BuildNumber to your tag so you can easily know that with which image your web app is currently running.",
          "isOptional": true
        },
        {
          "name": "dockerRegistryEndpoint",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "The file paths that will be deployed.\n\n \nYou can use wildcards like `module/dist/**/*.py`. See the includes attribute of [Ant fileset](https://ant.apache.org/manual/Types/fileset.html) for the exact format. Multiple files can be separated by '`,`'. The base directory is the workspace. You can only deploy files that are located in your workspace.\n\n \nExamples:\n\n \n  \n*  \nJava\n \n```groovy\nwebapps/*.war\n```\n \n```groovy\n**/*.zip\n```\n \nNote: For Java application, if you choose WAR deployment, usually you should put your war file under the 'webapps' directory.\n \n\n  \n*  \nPHP\n \n```groovy\n**/*.php,composer.json\n```\n \n\n  \n*  \nPython\n \n```groovy\n**/*.py,requirements.txt\n```\n \n\n  \n*  \nNode.js\n \n```groovy\n**/*.js,package.json,process.json\n```",
          "isOptional": true
        },
        {
          "name": "publishType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipDockerBuild",
          "type": "boolean",
          "values": [],
          "description": "If checked, will skip building docker image and assume it already exists in the registry.",
          "isOptional": true
        },
        {
          "name": "slotName",
          "type": "String",
          "values": [],
          "description": "If not blank, will deploy to this deployment slot instead of the default production slot.\n\n \nSee [this article](https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-staged-publishing) for more details.",
          "isOptional": true
        },
        {
          "name": "sourceDirectory",
          "type": "String",
          "values": [],
          "description": "Source directory relative to the workspace.",
          "isOptional": true
        },
        {
          "name": "targetDirectory",
          "type": "String",
          "values": [],
          "description": "Target directory relative to the site root.",
          "isOptional": true
        }
      ],
      "plugin": "azure-app-service"
    },
    {
      "command": "azureWebAppSwapSlots",
      "title": "azureWebAppSwapSlots: Swap slots for an Azure Web App",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceSlotName",
          "type": "String",
          "values": [],
          "description": "Source slot needs to be swapped.",
          "isOptional": false
        },
        {
          "name": "targetSlotName",
          "type": "String",
          "values": [],
          "description": "Target slot needs to be swapped. It is usually the production slot.",
          "isOptional": false
        }
      ],
      "plugin": "azure-app-service"
    },
    {
      "command": "backlogPullRequest",
      "title": "backlogPullRequest: Notify Pull Request on Backlog",
      "description": "A build result is notified to a pull request. \n\n \n A inputted API Key in project settings (at the same location where you input Backlog URL) or set with 'properties' step is used. Use 'properties' when you want to use this step in multibranch pipeline.",
      "parameters": [],
      "plugin": "backlog"
    },
    {
      "command": "base64Decode",
      "title": "base64Decode: Decode Base64 string",
      "description": "",
      "parameters": [
        {
          "name": "encodedString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "alauda-devops-pipeline"
    },
    {
      "command": "bat",
      "title": "bat: Windows Batch Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "Executes a Batch script. Multiple lines allowed. When using the `returnStdout` flag, you probably wish to prefix this with `@`, lest the command itself be included in the output.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "bbs_checkout",
      "title": "bbs_checkout: BitbucketSCMStep",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the Bitbucket Server project containing the repository you want Jenkins to build from. To find a project, start typing. If it doesn't appear in the search results, the credentials that you've chosen may not have read access to it and you'll need to provide different credentials.\n\n \nTo get Jenkins to build from a personal repository, enter a tilde (`~`) followed by repository owner's username. For example, `~jsmith.`",
          "isOptional": false
        },
        {
          "name": "repositoryName",
          "type": "String",
          "values": [],
          "description": "Enter the Bitbucket Server repository you want Jenkins to build from. To find a repository, start typing. If it doesn't appear in the search results, the credentials that you've chosen may not have read access to it and you'll need to provide different credentials.\n\n \nTo get Jenkins to build from a personal repository, enter its slug. This is the URL-friendly version of the repository name. For example, a repository called my example repo will have the slug <em>my-example-repo</em>, and you can see this in its URL, https://bitbucketserver.mycompany.com/myproject/my-example-repo.",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "Choose the Bitbucket Server instance containing the repository you want Jenkins to build from. If you can't find your instance, check this plugin's configuration and try again.",
          "isOptional": false
        },
        {
          "name": "branches",
          "type": "Nested",
          "values": [
            "name"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "When running a job, Jenkins requires credentials to authenticate with Bitbucket Server. For example, to checkout the source code for builds. To do this, it needs credentials with access to the projects and repositories you want it to build from.\n\n \nYou can provide Jenkins with credentials here by:\n\n \n  \n* selecting credentials from the list\n\n  \n* adding credentials as a **Username with password** (for the password, you can enter a Bitbucket Server password or a Bitbucket Server [personal access token](https://confluence.atlassian.com/x/a97-Nw)) \n\n \n \nIn addition, you can provide Jenkins with SSH credentials below. If you do, Jenkins will use them for clone operations instead of the credentials you select here.",
          "isOptional": true
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mirrorName",
          "type": "String",
          "values": [],
          "description": "Choose the location that Jenkins should clone from when running this build. This can be the primary server or a mirror if one is available. To see available mirrors, first choose a Bitbucket Server project and repository.",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sshCredentialsId",
          "type": "String",
          "values": [],
          "description": "If specified, Jenkins will use these credentials to check out the source code for builds. If no SSH credentials are specified, Jenkins will use the basic credentials instead.\n\n \nTo provide Jenkins with SSH credentials, you can:\n\n \n  \n* choose credentials from the list\n\n  \n* add credentials as a **SSH Username with private key** (the username must be \"git\")",
          "isOptional": true
        }
      ],
      "plugin": "atlassian-bitbucket-server-integration"
    },
    {
      "command": "bearychatSend",
      "title": "bearychatSend: Send BearyChat Message",
      "description": "Simple step for sending a BearyChat message to specified channel.\n \n\n Use the advanced settings to override the BearyChat Plugin global configuration to include: `webhook` and `channel`.\n \n\n Please see the BearyChat Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` bearychatSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "This is the main text in a message attachment, and can contain standard message markup. The content will automatically collapse if it contains 700+ characters or 5+ linebreaks, and will display a \"Show more...\" link to expand the content. Message may include global variables, for example environment and currentBuild variables:\n \n\n ` bearychatSend \"Started [${env.JOB_NAME} #${env.BUILD_NUMBER}](${env.BUILD_URL})\" `",
          "isOptional": false
        },
        {
          "name": "attachmentText",
          "type": "String",
          "values": [],
          "description": "Add an **optional** attachment text for BearyChat Message. `bearychatSend message: \"Job ${env.JOB_NAME} Failed\", color: \"#ff0000\", attachmentText: \"Exception: NullPointerException\"`",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "Allows overriding the BearyChat Plugin channel specified in the global configuration.\n \n\n `bearychatSend channel: \"#channel-name\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "An **optional** value that can either be one of **green**, **red**, **grey**, **yellow**, or any **hex color code** (eg. #439FE0). This value is used to color the border along the left side of the message attachment. (So you must use with attachmentText)\n \n\n `bearychatSend color: \"#439FE0\", attachmentText: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If set to true, then the step will abort the Workflow run if there is an error sending message.\n \n\n `bearychatSend failOnError: true, message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "notification",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "Add attachment title for BearyChat message. `bearychatSend title: \"${env.JOB_NAME} #{env.JOB_NUMBER}\", url: \"{env.BUILD_URL}\"`",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "You can specify a URL for attachment title. `bearychatSend title: \"${env.JOB_NAME} #{env.JOB_NUMBER}\", url: \"{env.BUILD_URL}\"`",
          "isOptional": true
        },
        {
          "name": "webhook",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Bearychat Plugin Webhook URL specified in the global configuration.",
          "isOptional": true
        }
      ],
      "plugin": "bearychat"
    },
    {
      "command": "benchmark",
      "title": "benchmark: Benchmark",
      "description": "",
      "parameters": [
        {
          "name": "filepath",
          "type": "String",
          "values": [],
          "description": "Please insert a filepath.",
          "isOptional": false
        }
      ],
      "plugin": "benchmark-evaluator"
    },
    {
      "command": "benchmark",
      "title": "benchmark: Benchmark results",
      "description": "The Benchmark Plugin collect and display boolean and numeral results. The results may come from one or multiple files. The result may be either in XML or JSON format. The content of the file may follow either a standard or a custom schema. The schema type may be selected using the drop-down menu and the custom schema entered in the associated text area. \n In addition, the Benchmark Plugin provides the capability to associate different types of thresholds on numerical values to one or multiple results. If crossed, the thresholds will identify results as failures and ultimately trigger the build failure.\n \n The Benchmark Plugin, if successful, provides access to two pages where results are displayed. One with tables compiling information on all results and one with the details for a specific result.",
      "parameters": [
        {
          "name": "inputLocation",
          "type": "String",
          "values": [],
          "description": "Location of the result files relative to the <a rel=\"nofollow\">workspace</a>.\n \n\n The locations may include wildcards using the character \"*\".\n \n\n JSON and XML formats supported. Must match the selected schema format.\n \n\n Create a list of locations in a file with the \"*.list\" extension.",
          "isOptional": false
        },
        {
          "name": "schemaSelection",
          "type": "String",
          "values": [],
          "description": "The schema defines the content of the result files.\n \n\n JSON and XML formats supported.\n \n\n Note: xUnit is an XML format.",
          "isOptional": false
        },
        {
          "name": "truncateStrings",
          "type": "boolean",
          "values": [],
          "description": "Truncate strings to 512 characters. Strongly suggested. Affects storage processing and loading time.",
          "isOptional": false
        },
        {
          "name": "altInputSchema",
          "type": "String",
          "values": [],
          "description": "Custom schema. JSON and XML formats supported.",
          "isOptional": false
        },
        {
          "name": "altInputSchemaLocation",
          "type": "String",
          "values": [],
          "description": "Location of custom schema relative to the <a rel=\"nofollow\">workspace</a>.\n \n\n JSON and XML formats supported.",
          "isOptional": false
        },
        {
          "name": "thresholds",
          "type": "? extends org.jenkinsci.plugins.benchmark.thresholds.Threshold",
          "values": [],
          "description": "This field is meant to define additional result thresholds, not located inside the result file.",
          "isOptional": true
        }
      ],
      "plugin": "benchmark"
    },
    {
      "command": "bitbucketStatusNotify",
      "title": "bitbucketStatusNotify: Notify a build status to BitBucket.",
      "description": "",
      "parameters": [
        {
          "name": "buildState",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildDescription",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commitId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repoSlug",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "bitbucket-build-status-notifier"
    },
    {
      "command": "blazeMeterTest",
      "title": "blazeMeterTest: BlazeMeter",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the BlazeMeter credentials to use.",
          "isOptional": true
        },
        {
          "name": "workspaceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testId",
          "type": "String",
          "values": [],
          "description": "BlazeMeter's plugin for Jenkins allows users to automate load tests from the cloud post build.\n \n\n Just choose the test you want to run. Let Jenkins start and stop the test and document the results.\n \n\n After the run, a test report will be generated directly into Jenkins and [your BlazeMeter account.](https://a.blazemeter.com/user)\n \n\n If the test list is empty, you must insert your unique BlazeMeter API key into the <a rel=\"nofollow\">Jenkins settings</a>, or [create a test](https://a.blazemeter.com/user/login?destination=cloud/testing/load/home/hello) in [your BlazeMeter account.](https://a.blazemeter.com/user)",
          "isOptional": true
        },
        {
          "name": "abortJob",
          "type": "boolean",
          "values": [],
          "description": "If checked and BlazeMeter test has fails plugin will throw AbortException",
          "isOptional": true
        },
        {
          "name": "additionalTestFiles",
          "type": "String",
          "values": [],
          "description": "Before the test runs these files will be pushed to the selected BlazeMeter test. Existing files with the same name will be replaced. Provide a list of files that are locate in job workspace(relative path, each file on a new line).\n\n\n\n <i> Limitations: Supported test types: Taurus, FunctionalApi, JMeter </i>",
          "isOptional": true
        },
        {
          "name": "getJtl",
          "type": "boolean",
          "values": [],
          "description": "Check this box if you need to download JTL report after test will be over.",
          "isOptional": true
        },
        {
          "name": "getJunit",
          "type": "boolean",
          "values": [],
          "description": "Check this box if you need to download junit report after test will be over.",
          "isOptional": true
        },
        {
          "name": "jobApiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jtlPath",
          "type": "String",
          "values": [],
          "description": "Here you can define desired location for downloading jtl artifact.\n \n\n Plugin supports both absolute and relative paths.\n \n\n Jenkins environment variables will be resolved.",
          "isOptional": true
        },
        {
          "name": "junitPath",
          "type": "String",
          "values": [],
          "description": "Here you can define desired location for downloading junit artifact.\n \n\n Plugin supports both absolute and relative paths.\n \n\n Jenkins environment variables will be resolved.",
          "isOptional": true
        },
        {
          "name": "mainTestFile",
          "type": "String",
          "values": [],
          "description": "Before the test runs this file will be pushed to the selected BlazeMeter test and select as executable file. Existing file with the same name will be replaced. Provide a file that is locate in job workspace(relative path).\n\n\n\n <i> Limitations: For Taurus and FunctionalApi tests will set 'Test type': JMeter if file has '.jmx' extension and Taurus - for '.yml' and '.yaml' files. Other 'Test types', please, set in the BlazeMeter application. Supported test types: Taurus, FunctionalApi, JMeter </i>",
          "isOptional": true
        },
        {
          "name": "notes",
          "type": "String",
          "values": [],
          "description": "Enter here some notes that you want to attached to test report.",
          "isOptional": true
        },
        {
          "name": "reportLinkName",
          "type": "String",
          "values": [],
          "description": "Report link name that you will see in your build. By default it'll set: \"BlazeMeter report: BLAZEMETER_TEST_NAME\", where BLAZEMETER_TEST_NAME is a test name from app. By default max report link name length = 35, but you can increase this value using Java System property or Jenkins environment variable \"bzm.reportLinkName.length\"",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sessionProperties",
          "type": "String",
          "values": [],
          "description": "Define jmeter properties for particular session in format key1=value1,key2=value2,key3=value3.\n \n\n Properties will be pushed to every separate session of master session.",
          "isOptional": true
        }
      ],
      "plugin": "blazemeterjenkinsplugin"
    },
    {
      "command": "browserStackReportPublisher",
      "title": "browserStackReportPublisher: BrowserStack Test Report",
      "description": "",
      "parameters": [
        {
          "name": "product",
          "type": "String",
          "values": [],
          "description": "Specify the product for which the report should be generated, i.e. automate or app-automate",
          "isOptional": false
        }
      ],
      "plugin": "browserstack-integration"
    },
    {
      "command": "browserstack",
      "title": "browserstack: BrowserStack",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the BrowserStack credentials (username, access key) to use for this project.\n \n\n These values will be available as <i>BROWSERSTACK_USERNAME</i> and <i>BROWSERSTACK_ACCESS_KEY</i> environment variables.",
          "isOptional": false
        },
        {
          "name": "localConfig",
          "type": "Nested",
          "values": [
            "localPath",
            "localOptions"
          ],
          "description": "Use BrowserStack Local to securely access internal servers on BrowserStack VMs and Mobile devices.\n \n\n **Skip this if you are using BrowserStack Local bindings in your code.**\n \n\n\n \n  \n* <i>BROWSERSTACK_LOCAL</i> environment variable is set with value <i>true</i>\n\n  \n* <i>BROWSERSTACK_LOCAL_IDENTIFIER</i> environment variable contains the unique identifier set for the local testing connection",
          "isOptional": true
        }
      ],
      "plugin": "browserstack-integration"
    },
    {
      "command": "browserstackAppUploader",
      "title": "browserstackAppUploader: BrowserStack App Uploader",
      "description": "",
      "parameters": [
        {
          "name": "appPath",
          "type": "String",
          "values": [],
          "description": "Please specify the absolute path or relative to the app(.apk or .ipa) file to be uploaded.\n \n\n The app_url of the uploaded app can be accessed from the environment variable BROWSERSTACK_APP_ID.",
          "isOptional": false
        }
      ],
      "plugin": "browserstack-integration"
    },
    {
      "command": "build",
      "title": "build: Build a job",
      "description": "Triggers a new build for a given job.",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Name of a downstream job to build. May be another Pipeline job, but more commonly a freestyle or other project. Use a simple name if the job is in the same folder as this upstream Pipeline job; otherwise can use relative paths like `../sister-folder/downstream` or absolute paths like `/top-level-folder/nested-folder/downstream`.",
          "isOptional": false
        },
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "agentParameter",
            "base64File",
            "booleanParam",
            "buildMasterRelease",
            "checkboxParameter",
            "$class: 'ClearCaseUcmBaselineParameterValue'",
            "credentials",
            "$class: 'CvsTagsParamValue'",
            "$class: 'DateParameterValue'",
            "$class: 'DeployMetaDataParameterValue'",
            "file",
            "$class: 'FileSystemListParameterValue'",
            "$class: 'GeneratorKeyValueParameterValue'",
            "gitParameter",
            "imageTag",
            "$class: 'InheritableStringParameterValue'",
            "$class: 'JavaParameterValue'",
            "$class: 'JiraIssueParameterValue'",
            "$class: 'JiraVersionParameterValue'",
            "$class: 'LabelParameterValue'",
            "listGitBranches",
            "$class: 'ListSubversionTagsParameterValue'",
            "$class: 'MatrixCombinationsParameterValue'",
            "$class: 'MavenMetadataParameterValue'",
            "multiselect",
            "$class: 'NodeParameterValue'",
            "$class: 'PackageChoiceParameterValue'",
            "separator",
            "$class: 'PatchParameterValue'",
            "$class: 'PromotedBuildParameterValue'",
            "$class: 'RandomStringParameterValue'",
            "RESTList",
            "$class: 'ReviewboardParameterValue'",
            "run",
            "$class: 'SauceParameterValue'",
            "stashedFile",
            "string",
            "text",
            "$class: 'VBoxParameterValue'",
            "email",
            "validatingString",
            "$class: 'WHideParameterValue'",
            "$class: 'WReadonlyStringParameterValue'",
            "$class: 'WReadonlyTextParameterValue'",
            "extendedChoice",
            "$class: 'com.michelin.cio.hudson.plugins.passwordparam.PasswordParameterValue'",
            "$class: 'com.moded.extendedchoiceparameter.ExtendedChoiceParameterValue'",
            "password"
          ],
          "description": "A list of parameters to pass to the downstream job. When passing secrets to downstream jobs, prefer credentials parameters over password parameters. See [the documentation](https://plugins.jenkins.io/pipeline-build-step/) for details.",
          "isOptional": true
        },
        {
          "name": "propagate",
          "type": "boolean",
          "values": [],
          "description": "If enabled (default state), then the result of this step is that of the downstream build (e.g., success, unstable, failure, not built, or aborted). If disabled, then this step succeeds even if the downstream build is unstable, failed, etc.; use the `result` property of the return value as needed.",
          "isOptional": true
        },
        {
          "name": "quietPeriod",
          "type": "int",
          "values": [],
          "description": "Optional alternate quiet period (in seconds) before building. If unset, defaults to the quiet period defined by the downstream project (or finally to the system-wide default quiet period).",
          "isOptional": true
        },
        {
          "name": "wait",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-build-step"
    },
    {
      "command": "buildAddUrl",
      "title": "buildAddUrl: Build Add Url",
      "description": "",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "deploy-dashboard"
    },
    {
      "command": "buildAppend",
      "title": "buildAppend: Build append",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "buildBamboo",
      "title": "buildBamboo: Build Bamboo",
      "description": "The **buildBamboo** step provides a way to invoke Bamboo plans from within a Jenkinsfile.",
      "parameters": [
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "(required) The project key of your build plan. For example, if the build plan is \"MYPROJECT-MYPLAN\", this would be \"MYPROJECT\".",
          "isOptional": false
        },
        {
          "name": "planKey",
          "type": "String",
          "values": [],
          "description": "(required) The plan key of your build plan. For example, if the build plan is \"MYPROJECT-MYPLAN\", this would be \"MYPLAN\".",
          "isOptional": false
        },
        {
          "name": "serverAddress",
          "type": "String",
          "values": [],
          "description": "(required) The hostname or IP of the Bamboo server.",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "(required) The username to use to authenticate to Bamboo.",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "(required) The Bamboo server password.",
          "isOptional": false
        },
        {
          "name": "checkInterval",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propagate",
          "type": "boolean",
          "values": [],
          "description": "(optional) Boolean. Whether or not failures halt the pipeline. Default: True",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-bamboo"
    },
    {
      "command": "buildDescription",
      "title": "buildDescription: Changes build description",
      "description": "Normally, build description is empty, but it can be changed by setting what name new build gets. This field can contain [macros](https://wiki.jenkins.io/display/JENKINS/Token+Macro+Plugin).",
      "parameters": [
        {
          "name": "descriptionTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "build-name-setter"
    },
    {
      "command": "buildImage",
      "title": "buildImage: Builds a Docker Image",
      "description": "Builds a docker image.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The  The name of the docker image.",
          "isOptional": false
        },
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "This email will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "ignorePatterns",
          "type": "class java.util.ArrayList",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "The  This password will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "The  The path of the folder that contains the docker image.",
          "isOptional": true
        },
        {
          "name": "rm",
          "type": "boolean",
          "values": [],
          "description": "The  Flag to remove intermediate layers.",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "The  The amount of time to wait for the build to complete.",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "The  This username will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-pipeline-steps"
    },
    {
      "command": "buildMasterCreateBuild",
      "title": "buildMasterCreateBuild: Create BuildMaster Build",
      "description": "Creates a new build for the selected BuildMaster application and sets the BUILDMASTER_BUILD_NUMBER environment variable with the value returned from BuildMaster for the new build.\n\n \nIf your Jenkins job has produced artifacts to be loaded into BuildMaster, you have the following options to import the artifacts into BuildMaster:\n\n <ol type=\"a\">\n  \n* Use BuildMasters Jenkins Extensions 'Jenkins::Import-Artifact' statement to import artifacts directly from Jenkins\n\n  \n* Use BuildMasters 'Create-Artifact' statement to import files from a folder that you've placed the artifacts into from the Jenkins build (eg using [ArtifactDeployer Plugin](https://wiki.jenkins-ci.org/display/JENKINS/ArtifactDeployer+Plugin))\n\n  \n* Use an external artifact repository such as Nexus, Artifactory or ProGet\n\n \n \n**Note:** Jenkins declarative pipeline script has a somewhat restricted syntax, so to return the build number you need to wrap this in a script block. You only need to do this if you wish to use the build number in a later step. For more information see: [https://jenkins.io/doc/book/pipeline/syntax/#script](https://jenkins.io/doc/book/pipeline/syntax/#script)\n\n \n\n  \n```groovy\nscript {\n    BUILDMASTER_BUILD_NUMBER = buildMasterCreateBuild(applicationId: BUILDMASTER_APPLICATION_ID', releaseNumber: BUILDMASTER_RELEASE_NUMBER, buildVariables: 'hello=world', deployToFirstStage: [waitUntilCompleted: true])\n}\n\n```",
      "parameters": [
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "The identifier of the BuildMaster application to trigger the build for.\n\n \nOptions are:\n\n \n  \n* The BUILDMASTER_APPLICATION_ID variable populated by a previous step\n\n  \n* An application id\n\n  \n* An application name",
          "isOptional": false
        },
        {
          "name": "releaseNumber",
          "type": "String",
          "values": [],
          "description": "The BuildMaster release number to trigger the build for. Options are:\n\n \n  \n* BUILDMASTER_RELEASE_NUMBER: variable populated by a previous step\n\n  \n* Latest Active Release: will automatically get the latest active release number from BuildMaster for the selected application\n\n  \n* [Release Number]: a release number from the list of active releases\n\n \n \n<i>The job will fail if there is no active BuildMaster release.</i>",
          "isOptional": false
        },
        {
          "name": "deployToFirstStage",
          "type": "Nested",
          "values": [
            "waitUntilCompleted",
            "printLogOnFailure"
          ],
          "description": "Will trigger the deployment to the first stage, and any subsequent stages where the stage is configured to automatically deploy to the next stage.",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "Provide a list of variables to pass to the build.\n\n \n  \n* A variable must be in the format \"variable=value\"\n\n  \n* Additional variables must be declared on separate lines\n\n  \n* Lines starting with # are treated as comments\n\n  \n* When using pipeline script and you want to pass several variables use one of these formats:\n   \n \n* Separate variables using newline character. Generated script will resemble: <i>variables: 'var1=one\\nvar2=two'</i>\n\n \n* Separate variables using multi-line string. Generated script will resemble: <i>variables: '''var1=one\n\nvar2=two'''</i>",
          "isOptional": true
        }
      ],
      "plugin": "inedo-buildmaster"
    },
    {
      "command": "buildMasterDeployBuildToStage",
      "title": "buildMasterDeployBuildToStage: Deploy BuildMaster Build To Stage",
      "description": "Deploys (or re-deploys) a build to a particular stage.\n\n \n \n\n \n**Note:** that when used in a pipeline step that the applicationId, releaseNumber, and buildNumber fields are required:\n\n \n\n  \n```groovy\nbuildMasterDeployBuildToStage(applicationId: BUILDMASTER_APPLICATION_ID, releaseNumber: BUILDMASTER_RELEASE_NUMBER, buildNumber: BUILDMASTER_BUILD_NUMBER)\n\n```",
      "parameters": [
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "The identifier of the BuildMaster application to trigger the build for.\n\n \nOptions are:\n\n \n  \n* The BUILDMASTER_APPLICATION_ID variable populated by a previous step\n\n  \n* An application id\n\n  \n* An application name",
          "isOptional": false
        },
        {
          "name": "releaseNumber",
          "type": "String",
          "values": [],
          "description": "The BuildMaster release number to trigger the build for. Options are:\n\n \n  \n* BUILDMASTER_RELEASE_NUMBER: variable populated by a previous step\n\n  \n* Latest Active Release: will automatically get the latest active release number from BuildMaster for the selected application\n\n  \n* [Release Number]: a release number from the list of active releases\n\n \n \n<i>The job will fail if there is no active BuildMaster release.</i>",
          "isOptional": false
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "The BuildMaster build number to trigger the deployment for.\n\n \nThe must be set to an existing build number. Typically this would be obtained from the output of the createBuild step which populates the BUILDMASTER_BUILD_NUMBER environment variable.",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Force deployment into the stage, even if a previous stage has failed.",
          "isOptional": true
        },
        {
          "name": "printLogOnFailure",
          "type": "boolean",
          "values": [],
          "description": "If checked will print the BuildMaster log for the deployment to the Jenkins console if the build fails - but only if the \"Wait until deployment completed\" option is also checked.",
          "isOptional": true
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "Optional. If not supplied, the next stage in the pipeline will be used.",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "Set deployment level variables.",
          "isOptional": true
        },
        {
          "name": "waitUntilCompleted",
          "type": "boolean",
          "values": [],
          "description": "If checked waits until BuildMaster has completed the deployment, otherwise will exits immediately after triggering the deployment. Defaults to checked.",
          "isOptional": true
        }
      ],
      "plugin": "inedo-buildmaster"
    },
    {
      "command": "buildMasterWithApplicationRelease",
      "title": "buildMasterWithApplicationRelease: Inject BuildMaster release details as environment variables",
      "description": "Obtains the Release and Build numbers for the selected BuildMaster application from BuildMaster and injects the following environment variables into the build job:\n\n \n  \n* BUILDMASTER_APPLICATION_ID\n\n  \n* BUILDMASTER_APPLICATION_NAME\n\n  \n* BUILDMASTER_RELEASE_NUMBER\n\n  \n* BUILDMASTER_LATEST_BUILD_NUMBER\n\n  \n* BUILDMASTER_NEXT_BUILD_NUMBER\n\n \n \nIf you do not use these values in your build steps there is no requirement to use this task.\n\n \n<i>Note: If you have multiple jobs all triggering builds on the same BuildMaster application this task will queue those jobs so that you cannot get two jobs triggering a build at the same time.</i>\n\n \nWhen used within pipeline script this wraps a block and injects the above variables. Note that the applicationId parameter can contain either the id or name of a BuildMaster application.\n\n \n```groovy\nbuildMasterWithApplicationRelease('TestApplication') {\n  echo \"\"\"\n    Application id = $BUILDMASTER_APPLICATION_ID\n    Release Number = $BUILDMASTER_RELEASE_NUMBER\n    Build Number = $BUILDMASTER_BUILD_NUMBER\n  \"\"\"\n}\n\n```",
      "parameters": [
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "Select the BuildMaster application to populate environment variables for.",
          "isOptional": false
        },
        {
          "name": "releaseNumber",
          "type": "String",
          "values": [],
          "description": "Select the BuildMaster release to populate environment variables for:\n\n \n  \n* Latest Active Release: will automatically get the latest active release number from BuildMaster for the selected application\n\n  \n* [Release Number]: a release number from the list of active releases",
          "isOptional": true
        }
      ],
      "plugin": "inedo-buildmaster"
    },
    {
      "command": "buildName",
      "title": "buildName: Changes build name",
      "description": "Normally, builds are named by their sequential numbers, but you can change that here by setting what name new build gets. This field can contain [macros](https://wiki.jenkins.io/display/JENKINS/Token+Macro+Plugin).",
      "parameters": [
        {
          "name": "nameTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "build-name-setter"
    },
    {
      "command": "buildTokenTrigger",
      "title": "buildTokenTrigger: Build Token Trigger",
      "description": "",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "The full name of the job. For example: `rootJob`, `rootFolder/childJob`, or `rootFolder/childFolder/grandchildJob`",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The credentials to trigger the job with. Only **Jenkins Build Token** credentials are supported and they must be for the same Jenkins URL that the job is being triggered on.",
          "isOptional": false
        },
        {
          "name": "parameters",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "delay",
          "type": "int",
          "values": [],
          "description": "Leave blank to use the job's default quiet period, otherwise specify the number of seconds to use as the quiet period when queuing the job.",
          "isOptional": true
        },
        {
          "name": "ignoreMissing",
          "type": "boolean",
          "values": [],
          "description": "By default, if the target job cannot be found then the step will fail. When this option is selected the step will ignore a `HTTP/404` response from the remote Jenkins and return `about:missing`",
          "isOptional": true
        },
        {
          "name": "ignoreUnqueued",
          "type": "boolean",
          "values": [],
          "description": "By default, if the target job is not queued for execution then the step will fail. When this option is selected the step will ignore a `HTTP/302` response from the remote Jenkins and return `about:unqueued`.",
          "isOptional": true
        },
        {
          "name": "jenkinsUrl",
          "type": "String",
          "values": [],
          "description": "The URL of the remote Jenkins to trigger a job on. If left blank and this Jenkins has had its URL configured then the step will attempt to trigger on this Jenkins.",
          "isOptional": true
        }
      ],
      "plugin": "build-token-trigger"
    },
    {
      "command": "byteguardGreet",
      "title": "byteguardGreet: ByteGuard Build Actions",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "task_id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "byteguard-build-actions"
    },
    {
      "command": "bzt",
      "title": "bzt: Run Performance Test",
      "description": "Execute [Taurus](http://gettaurus.org/?utm_source=jenkins&utm_medium=link&utm_campaign=build_step_help) with configuration files and options. You can simply specify JMX file to run, or give list of Taurus config files and options to execute.",
      "parameters": [
        {
          "name": "params",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "alwaysUseVirtualenv",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bztVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generatePerformanceTrend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "printDebugOutput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useBztExitCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useSystemSitePackages",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance"
    },
    {
      "command": "caapmplugin",
      "title": "caapmplugin: Jenkins Plugin for CA APM",
      "description": "",
      "parameters": [
        {
          "name": "performanceComparatorProperties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loadGeneratorStartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loadGeneratorEndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loadGeneratorName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attribsStr",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ca-apm"
    },
    {
      "command": "cache",
      "title": "cache: Caches files from previous build to current build",
      "description": "",
      "parameters": [
        {
          "name": "maxCacheSize",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caches",
          "type": "Nested",
          "values": [
            "$class: 'ArbitraryFileCache'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jobcacher"
    },
    {
      "command": "cachetgatingmetrics",
      "title": "cachetgatingmetrics: Cachet Gating Metrics",
      "description": "This step returns the metrics from a build being gated.\n\n \n\n\n \n```groovy\nnode() {\n    def metricsMap = cachetgatingmetrics()\n\n    metricsMap.each{ k, v -&gt;\n        echo \"resource name: ${k}\"\n        echo \"status:        ${v.getGatingStatus()}\"\n        echo \"elapsed time:  ${v.getGatedTimeElapsed()}\"\n    }\n\n}\n\n```",
      "parameters": [],
      "plugin": "cachet-gating"
    },
    {
      "command": "carbonetes",
      "title": "carbonetes: Carbonetes Serverless Container Scanning and Policy Compliance",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildOnPluginError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildOnPolicyEvaluationFailResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "policyBundleID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "registryURI",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "carbonetes-serverless-container-scanning-and-policy-compliance"
    },
    {
      "command": "carl",
      "title": "carl: Carl",
      "description": "",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archivePdf",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityGate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "carl"
    },
    {
      "command": "castecho",
      "title": "castecho: CastEcho",
      "description": "",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "displayLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityGate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "castecho"
    },
    {
      "command": "catchError",
      "title": "catchError: Catch error and set build result to failure",
      "description": "If the body throws an exception, mark the build as a failure, but nonetheless continue to execute the Pipeline from the statement following the `catchError` step. The behavior of the step when an exception is thrown can be configured to print a message, set a build result other than failure, change the stage result, or ignore certain kinds of exceptions that are used to interrupt the build.\n \nThis step is most useful when used in Declarative Pipeline or with the options to set the stage result or ignore build interruptions. Otherwise, consider using plain `try`-`catch`(-`finally`) blocks. It is also useful when using certain post-build actions (notifiers) originally defined for freestyle projects which pay attention to the result of the ongoing build. \n\n \n\n\n \n```groovy\nnode {\n    catchError {\n        sh 'might fail'\n    }\n    step([$class: 'Mailer', recipients: 'admin@somewhere'])\n}\n\n```\n\n \nIf the shell step fails, the Pipeline build’s status will be set to failed, so that the subsequent mail step will see that this build is failed. In the case of the mail sender, this means that it will send mail. (It may also send mail if this build <em>succeeded</em> but previous ones failed, and so on.) Even in that case, this step can be replaced by the following idiom: \n\n \n\n\n \n```groovy\nnode {\n    try {\n        sh 'might fail'\n    } catch (err) {\n        echo \"Caught: ${err}\"\n        currentBuild.result = 'FAILURE'\n    }\n    step([$class: 'Mailer', recipients: 'admin@somewhere'])\n}\n\n```\n\n \nFor other cases, plain `try`-`catch`(-`finally`) blocks may be used: \n\n \n\n\n \n```groovy\nnode {\n    sh './set-up.sh'\n    try {\n        sh 'might fail'\n        echo 'Succeeded!'\n    } catch (err) {\n        echo \"Failed: ${err}\"\n    } finally {\n        sh './tear-down.sh'\n    }\n    echo 'Printed whether above succeeded or failed.'\n}\n// …and the pipeline as a whole succeeds\n\n```\n\n \nSee [this document](https://github.com/jenkinsci/workflow-basic-steps-plugin/blob/master/CORE-STEPS.md#interacting-with-build-status) for background.",
      "parameters": [
        {
          "name": "buildResult",
          "type": "String",
          "values": [],
          "description": "If an error is caught, the overall build result will be set to this value. Note that the build result can only get worse, so you cannot change the result to `SUCCESS` if the current result is `UNSTABLE` or worse. Use `SUCCESS` or `null` to keep the build result from being set when an error is caught.",
          "isOptional": true
        },
        {
          "name": "catchInterruptions",
          "type": "boolean",
          "values": [],
          "description": "If true, certain types of exceptions that are used to interrupt the flow of execution for Pipelines will be caught and handled by the step. If false, those types of exceptions will be caught and immediately rethrown. Examples of these types of exceptions include those thrown when a build is manually aborted through the UI and those thrown by the `timeout` step.",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "A message that will be logged to the console if an error is caught. If the stage result is specified, the message will also be associated with that result and may be shown in visualizations.",
          "isOptional": true
        },
        {
          "name": "stageResult",
          "type": "String",
          "values": [],
          "description": "If an error is caught, the stage result will be set to this value. If a message was specified, the message will be associated with this result. Use `SUCCESS` or `null` to keep the stage result from being set when an error is caught.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "cbt",
      "title": "cbt: CrossBrowserTesting.com",
      "description": "",
      "parameters": [
        {
          "name": "useLocalTunnel",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useTestResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tunnelName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "localTunnelPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "crossbrowsertesting"
    },
    {
      "command": "cbtScreenshotsTest",
      "title": "cbtScreenshotsTest: Run a CrossbrowserTesting.com Screenshots Test",
      "description": "",
      "parameters": [
        {
          "name": "browserList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loginProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "crossbrowsertesting"
    },
    {
      "command": "cbtSeleniumTest",
      "title": "cbtSeleniumTest: Run a CrossbrowserTesting.com Selenium Test",
      "description": "",
      "parameters": [
        {
          "name": "operatingSystem",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "browser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resolution",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "crossbrowsertesting"
    },
    {
      "command": "cfInvalidate",
      "title": "cfInvalidate: Invalidate given paths in CloudFront distribution",
      "description": "",
      "parameters": [
        {
          "name": "distribution",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitForCompletion",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnCreateChangeSet",
      "title": "cfnCreateChangeSet: Create CloudFormation change set",
      "description": "",
      "parameters": [
        {
          "name": "changeSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stack",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "create",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepParams",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationARNs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "paramsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "roleArn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTimeoutInMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTriggers",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInMinutes",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInSeconds",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnDelete",
      "title": "cfnDelete: Delete CloudFormation stack",
      "description": "Delete Cloudformation Templates",
      "parameters": [
        {
          "name": "stack",
          "type": "String",
          "values": [],
          "description": "This is the name of the existing Cloudformation template to delete",
          "isOptional": false
        },
        {
          "name": "clientRequestToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "How often to check the status of the delete operation in milliseconds. 0 will disable event printing.",
          "isOptional": true
        },
        {
          "name": "retainResources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "roleArn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInMinutes",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnDeleteStackSet",
      "title": "cfnDeleteStackSet: Delete CloudFormation Stack Set",
      "description": "",
      "parameters": [
        {
          "name": "stackSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnDescribe",
      "title": "cfnDescribe: Describe outputs of CloudFormation stack",
      "description": "",
      "parameters": [
        {
          "name": "stack",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnExecuteChangeSet",
      "title": "cfnExecuteChangeSet: Execute CloudFormation change set",
      "description": "",
      "parameters": [
        {
          "name": "changeSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stack",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInMinutes",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInSeconds",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnExports",
      "title": "cfnExports: Describe CloudFormation global exports",
      "description": "",
      "parameters": [],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnUpdate",
      "title": "cfnUpdate: Create or Update CloudFormation stack",
      "description": "",
      "parameters": [
        {
          "name": "stack",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "create",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableTerminationProtection",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepParams",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationARNs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "paramsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "roleArn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTimeoutInMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTriggers",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInMinutes",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInSeconds",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnUpdateStackSet",
      "title": "cfnUpdateStackSet: Create or Update CloudFormation Stack Set",
      "description": "",
      "parameters": [
        {
          "name": "stackSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "administratorRoleArn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "batchingOptions",
          "type": "Nested",
          "values": [
            "regions"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "create",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executionRoleName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepParams",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationARNs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "operationPreferences",
          "type": "Nested",
          "values": [
            "failureToleranceCount",
            "failureTolerancePercentage",
            "maxConcurrentCount",
            "maxConcurrentPercentage",
            "regionOrder"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "params",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "paramsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTimeoutInMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackTriggers",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInMinutes",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeoutInSeconds",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfnValidate",
      "title": "cfnValidate: Validate CloudFormation template",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "cfyAnsible",
      "title": "cfyAnsible: Run Ansible Playbook",
      "description": "",
      "parameters": [
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ansibleEnvVars",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugLevel",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "echoEnvData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "envDataLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsConfig",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "playbookPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remergeSources",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runData",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "savePlaybook",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scpExtraArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sensitiveKeys",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sftpExtraArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sshCommonArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sshExtraArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startAtTask",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "cfyAzureArm",
      "title": "cfyAzureArm: Create Azure ARM Deployment",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Azure. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "echoEnvData",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the created environment's data will be printed to the job's log.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "envDataLocation",
          "type": "String",
          "values": [],
          "description": "Path to a file that will contain the created environment's data. If not provided, the environment data won't be written.",
          "isOptional": true
        },
        {
          "name": "location",
          "type": "String",
          "values": [],
          "description": "The Azure location where the created resource group should reside in. If omitted, the value of the `azure_default_location` Cloudify secret will be used.",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "YAML/JSON of parameters to pass to the template.",
          "isOptional": true
        },
        {
          "name": "parametersAsString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parametersFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, of a YAML/JSON file containing parmaeters to pass to the template.",
          "isOptional": true
        },
        {
          "name": "resourceGroupName",
          "type": "String",
          "values": [],
          "description": "Name of resource group to create for the template.",
          "isOptional": true
        },
        {
          "name": "templateFile",
          "type": "String",
          "values": [],
          "description": "Workspace-relative path of the ARM template file.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "cfyCloudFormation",
      "title": "cfyCloudFormation: Create CloudFormation Stack",
      "description": "",
      "parameters": [
        {
          "name": "awsCredentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing AWS. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "ID to assign to the created Cloudify deployment. If not provided, one will be randomly generated. You can obtain the deployment ID from the \"environment data\" output file.",
          "isOptional": true
        },
        {
          "name": "echoEnvData",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the created environment's data will be printed to the job's log.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "envDataLocation",
          "type": "String",
          "values": [],
          "description": "Path to a file that will contain the created environment's data. If not provided, the environment data won't be written.",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parametersAsString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parametersFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, of a YAML/JSON file containing parmaeters to pass to the template.",
          "isOptional": true
        },
        {
          "name": "regionName",
          "type": "String",
          "values": [],
          "description": "AWS region to use. If not specified, the value of the `aws_region_name` secret is used.",
          "isOptional": true
        },
        {
          "name": "stackName",
          "type": "String",
          "values": [],
          "description": "Name of the new stack.",
          "isOptional": true
        },
        {
          "name": "templateBody",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateBucketName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateResourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateUrl",
          "type": "String",
          "values": [],
          "description": "URL of the Terraform template. May be a ZIP, `tar.gz`, or a Git repository.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "cfyKubernetes",
      "title": "cfyKubernetes: Create Kubernetes Resources",
      "description": "",
      "parameters": [
        {
          "name": "allowNodeRedefinition",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiKeyCredentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials entry that contains the API key.\n\n \nThis parameter is optional; the API key may also be provided through \"API options\", however this method is preferred.\n\n \nIf provided, then this credentials entry must either be of type \"text\" or \"file\". In the latter case, the file is read as-is and the resultant string is used as the API credentials.",
          "isOptional": true
        },
        {
          "name": "apiKeyFile",
          "type": "String",
          "values": [],
          "description": "Path to file, relative to the Jenkins workspace, containing the API key.\n\n \nThis parameter is optional, as the API key may be provided by other means.",
          "isOptional": true
        },
        {
          "name": "caCert",
          "type": "String",
          "values": [],
          "description": "Path, relative to the workspace's root, of a file containing the CA certificates store to use for verifying the Kubernetes host's certificate.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "definition",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "definitionAsString",
          "type": "String",
          "values": [],
          "description": "The Kubernetes application definition.",
          "isOptional": true
        },
        {
          "name": "definitionFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, to a file containing the Kubernetes application definition.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "ID to assign to the created Cloudify deployment. If not provided, one will be randomly generated. You can obtain the deployment ID from the \"environment data\" output file.",
          "isOptional": true
        },
        {
          "name": "echoEnvData",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the created environment's data will be printed to the job's log.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "envDataLocation",
          "type": "String",
          "values": [],
          "description": "Path to a file that will contain the created environment's data. If not provided, the environment data won't be written.",
          "isOptional": true
        },
        {
          "name": "gcpCredentialsFile",
          "type": "String",
          "values": [],
          "description": "A YAML/JSON file containing GCP service account details, to use for authentication against GCP.\n\n \nThis parameter is optional, and is only relevant for authenticating against GCP.\n\n \nIf provided, it should follow the same layout as described in the \"GCP Credentials ID\" parameter.",
          "isOptional": true
        },
        {
          "name": "gcpCredentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to be used for authentication against GCP.\n\n \nThis parameter is optional, and is only relevant for authenticating against GCP.\n\n \nIf provided, it should be the ID of either a string-type or file-type credentials entry, with the standard GCP service account YAML/JSON syntax:\n\n \n```groovy\n{\n  \"type\": \"...\",\n  \"project_id\": \"...\",\n  \"private_key_id\": \"...\",\n  \"private_key\": \"...\",\n  \"client_email\": \"...\",\n  \"client_id\": \"...\",\n  \"auth_uri\": \"...\",\n  \"token_uri\": \"...\",\n  \"auth_provider_x509_cert_url\": \"...\",\n  \"client_x509_cert_url\": \"...\"\n}\n\t\n```",
          "isOptional": true
        },
        {
          "name": "k8sDebug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "k8sMaster",
          "type": "String",
          "values": [],
          "description": "The Kubernetes master host to use. This can also be provided through the API Options field; it is available as a separate parameter for convenience.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "The application's namespace. **Note:** value provided here will overwrite the `namespace` value in the `options` field, if exists.",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsAsString",
          "type": "String",
          "values": [],
          "description": "Kubernetes options.",
          "isOptional": true
        },
        {
          "name": "optionsFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, to a file containing Kubernetes options.",
          "isOptional": true
        },
        {
          "name": "skipSslVerification",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sslCertFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the workspace's root, of a file containing the certificate presented to the Kubernetes host.",
          "isOptional": true
        },
        {
          "name": "sslKeyFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the workspace's root, of a file containing the key for the certificate presented to the Kubernetes host.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validateStatus",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the status of the Kubernetes application is validated after provisioning.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "cfyOutputsToInputs",
      "title": "cfyOutputsToInputs: Convert Cloudify Environment Outputs/Capabilities to Inputs",
      "description": "This step maps outputs and capabilities, of an environment created by Cloudify, into inputs of another deployment.\n\n \nThis step takes two inputs:\n\n \n  \n* A JSON file in the format generated by the \"Build Cloudify Environment\" (\"outputs file\"). For more information, refer to the tooltip of the \"Outputs File\" parameter.\n\n  \n* A JSON file (or string) containing the mapping.\n\n \n \nThe format of the mapping JSON is as follows:\n\n \n```groovy\n{\n    \"outputs\": {\n    \t\"&lt;output_name&gt;\": \"&lt;input_name&gt;\",\n    \t\"&lt;output_name&gt;\": \"&lt;input_name&gt;\",\n    \t...\n    },\n    \"capabilities\": {\n    \t\"&lt;capability_name&gt;\": \"&lt;input_name&gt;\",\n    \t\"&lt;capability_name&gt;\": \"&lt;input_name&gt;\",\n    \t...\n    }\n}\n\t\n```\n\n \nAt the end, a file will be generated, containing a JSON compatible with Cloudify's standard \"Deployment Inputs\" structure, namely:\n\n \n```groovy\n{\n\t\"&lt;input_name&gt;\": \"&lt;intput_value&gt;\",\n\t\"&lt;input_name&gt;\": \"&lt;intput_value&gt;\",\n\t...\n\t\n```\n\n \nFor example, if the \"outputs file\" is as follows:\n\n \n```groovy\n{\n\t\"outputs\": {\n\t\t\"endpoint\": \"10.0.0.130\",\n\t\t\"username\": \"centos\"\n\t},\n\t\"capabilities\": {\n\t\t\"public_key\": \"/tmp/public_key\"\n\t}\n}\n\t\n```\n\n \nAnd the mapping is as follows:\n\n \n```groovy\n{\n\t\"outputs\": {\n\t\t\"username\": \"app_username\"\n\t},\n\t\"capabilities\": {\n\t\t\"public_key\": \"app_data\"\n\t}\n}\n\t\n```\n\n \nThen the resultant inputs file will be as follows:\n\n \n```groovy\n{\n\t\"app_username\": \"centos\",\n\t\"app_data\": \"/tmp/public_key\"\n}\n\t\n```",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputsLocation",
          "type": "String",
          "values": [],
          "description": "Path to the inputs file to be created.",
          "isOptional": true
        },
        {
          "name": "mapping",
          "type": "String",
          "values": [],
          "description": "A JSON containing mapping between outputs/capabilities and inputs. For information about the structure, refer to the tooltip of this build step.",
          "isOptional": true
        },
        {
          "name": "mappingLocation",
          "type": "String",
          "values": [],
          "description": "A JSON containing mapping between outputs/capabilities and inputs. For information about the structure, refer to the tooltip of this build step.",
          "isOptional": true
        },
        {
          "name": "outputsLocation",
          "type": "String",
          "values": [],
          "description": "Location of the outputs JSON file, containing outputs and capabilities of another deployment. The file must be in the following format:\n\n \n```groovy\n{\n    \"outputs\": {\n    \t\"&lt;output_name&gt;\": \"&lt;output_value&gt;\",\n    \t\"&lt;output_name&gt;\": \"&lt;output_value&gt;\",\n    \t...\n    },\n    \"capabilities\": {\n    \t\"&lt;capability_name&gt;\": \"&lt;capability_value&gt;\",\n    \t\"&lt;capability_name&gt;\": \"&lt;capability_value&gt;\",\n    \t...\n    }\n}\n\t\n```",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "cfyTerraform",
      "title": "cfyTerraform: Apply Terraform Module",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "ID to assign to the created Cloudify deployment. If not provided, one will be randomly generated. You can obtain the deployment ID from the \"environment data\" output file.",
          "isOptional": true
        },
        {
          "name": "echoEnvData",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the created environment's data will be printed to the job's log.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "envDataLocation",
          "type": "String",
          "values": [],
          "description": "Path to a file that will contain the created environment's data. If not provided, the environment data won't be written.",
          "isOptional": true
        },
        {
          "name": "environmentVariables",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentVariablesAsString",
          "type": "String",
          "values": [],
          "description": "YAML/JSON containing environment variables to pass to the Terraform process. The provided string will be expanded for environment variables (`${VAR_NAME}`).",
          "isOptional": true
        },
        {
          "name": "environmentVariablesFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, of a YAML/JSON file containing environment variables to pass to the Terraform process.",
          "isOptional": true
        },
        {
          "name": "executable",
          "type": "String",
          "values": [],
          "description": "Path, on Cloudify Manager, of the Terraform executable. If omitted, the value of the `terraform_executable` Cloudify secret will be used.",
          "isOptional": true
        },
        {
          "name": "pluginsDirectory",
          "type": "String",
          "values": [],
          "description": "Path, on Cloudify Manager, of Terraform's plugins directory. If omitted, the value of the `terraform_plugins_dir` Cloudify secret will be used.",
          "isOptional": true
        },
        {
          "name": "storageDirectory",
          "type": "String",
          "values": [],
          "description": "Path, on Cloudify Manager, of Terraform's storage directory. If omitted, the value of the `terraform_storage_dir` Cloudify secret will be used.",
          "isOptional": true
        },
        {
          "name": "templateUrl",
          "type": "String",
          "values": [],
          "description": "URL of the Terraform template. May be a ZIP, `tar.gz`, or a Git repository.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variablesAsString",
          "type": "String",
          "values": [],
          "description": "YAML/JSON containing variables to pass to the Terraform template. The provided string will be expanded for environment variables (`${VAR_NAME}`).",
          "isOptional": true
        },
        {
          "name": "variablesFile",
          "type": "String",
          "values": [],
          "description": "Path, relative to the Jenkins workspace root, of a YAML/JSON file containing parmaeters to pass to the template.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "changeAsmVer",
      "title": "changeAsmVer: Change Assembly Version",
      "description": "This build step can be used to change the version in the AssemblyInfo.cs file from a .NET Project, it's going to find every AssemblyInfo.cs file in the workspace and change the version from [AssemblyVersion] and [AssemblyFileVersion] attributes. It's recommended to use this plugin with the auto-generated AssemblyInfo.cs from VisualStudio.",
      "parameters": [
        {
          "name": "versionPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "assemblyCompany",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyCopyright",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyCulture",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyDescription",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyFile",
          "type": "String",
          "values": [],
          "description": "Set the file name to search. If the value is empty the default filename is : **/AssemblyInfo.cs. You can use an ant fileset pattern.",
          "isOptional": true
        },
        {
          "name": "assemblyProduct",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyTitle",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assemblyTrademark",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "regexPattern",
          "type": "String",
          "values": [],
          "description": "Regex Pattern in which version is stated. Specify this value if you want to use for versioning other than assembly files (e.g. visual studio extensions .vsix). For assembly (.dll) versioning you do not need to specify anything here.",
          "isOptional": true
        },
        {
          "name": "replacementPattern",
          "type": "String",
          "values": [],
          "description": "Version value specified in regexPattern will be replaced by this. Use if you want versioning other than assembly files. e.g. \"Version(\\\"%s\\\")\" where %s will be new version number. For assembly (.dll) versioning keep this field blank.",
          "isOptional": true
        }
      ],
      "plugin": "change-assembly-version-plugin"
    },
    {
      "command": "chatterPost",
      "title": "chatterPost: Post to Chatter",
      "description": "Simple step for posting a Chatter buildUrlTitle/body to a specified channel or the user's wall.\n \n\n Usage Example:\n \n\n ` postToChatter \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Utilizes the [Credentials Plugin's](https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Plugin) <em>Username with Password</em> credentials storage to communicate with Chatter.\n \n If you're connecting from outside of your organizations trusted network, you'll also need to append your API security token to your password. \n\n \n See Identity Confirmation in the salesforce.com online help for more information.",
          "isOptional": false
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "The body text for your Chatter post",
          "isOptional": false
        },
        {
          "name": "buildUrlTitle",
          "type": "String",
          "values": [],
          "description": "The buildUrlTitle for your Chatter post. If left blank, the title will be set to your job/pipeline name and number (JOB_NAME BUILD_DISPLAY_NAME)",
          "isOptional": true
        },
        {
          "name": "recordId",
          "type": "String",
          "values": [],
          "description": "Id of record to chatter to (e.g. a group, or a custom object), leave blank to chatter to user's wall.",
          "isOptional": true
        },
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "If left blank will connect to production, if you want to connect to a sandbox or have the my domains feature enabled, enter URL of alternative login server, e.g. https://test.salesforce.com",
          "isOptional": true
        }
      ],
      "plugin": "chatter-notifier"
    },
    {
      "command": "checkETLicense",
      "title": "checkETLicense: [TT] Check ECU-TEST License",
      "description": "Check ECU-TEST license.\n **Pipelines usage:**\n \n  Signatures:\n  \n   \n```groovy\ncheckETLicense(String toolName) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\ncheckETLicense('ECU-TEST')\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "checkGatingStatus",
      "title": "checkGatingStatus: Atlassian Jira Service Desk Software Cloud Jenkins Integration (Deployment Gating)",
      "description": "",
      "parameters": [
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "atlassian-jira-software-cloud"
    },
    {
      "command": "checkout",
      "title": "checkout: Check out from version control",
      "description": "",
      "parameters": [
        {
          "name": "scm",
          "type": "Nested",
          "values": [
            "$class: 'AWSCodePipelineSCM'",
            "accurev",
            "$class: 'BazaarSCM'",
            "$class: 'BitKeeperSCM'",
            "BbS",
            "$class: 'BlameSubversionSCM'",
            "$class: 'CCUCMScm'",
            "$class: 'CVSSCM'",
            "$class: 'ClearCaseSCM'",
            "$class: 'ClearCaseUcmBaselineSCM'",
            "$class: 'ClearCaseUcmSCM'",
            "$class: 'CloneWorkspaceSCM'",
            "$class: 'CmvcSCM'",
            "$class: 'ConfigurationRotator'",
            "$class: 'CvsProjectset'",
            "$class: 'DarcsScm'",
            "$class: 'DelegateSCM'",
            "$class: 'DimensionsSCM'",
            "$class: 'DrushMakefileSCM'",
            "$class: 'EndevorConfiguration'",
            "filesystem",
            "$class: 'FeatureBranchAwareMercurialSCM'",
            "$class: 'GeneXusServerSCM'",
            "$class: 'GitSCM'",
            "$class: 'HarvestSCM'",
            "$class: 'IspwConfiguration'",
            "$class: 'IspwContainerConfiguration'",
            "$class: 'MercurialSCM'",
            "$class: 'MergeBotUpdater'",
            "$class: 'MultiSCM'",
            "none",
            "$class: 'OpenShiftImageStreams'",
            "$class: 'PdsConfiguration'",
            "$class: 'PerforceSCM'",
            "perforce",
            "$class: 'PlasticSCM'",
            "$class: 'ProxySCM'",
            "$class: 'PvcsScm'",
            "$class: 'RTCScm'",
            "$class: 'SCLMSCM'",
            "$class: 'ShellScriptSCM'",
            "$class: 'SimpleClearCaseSCM'",
            "$class: 'StarTeamSCM'",
            "$class: 'StoreSCM'",
            "$class: 'SubversionSCM'",
            "$class: 'SurroundSCM'",
            "$class: 'SynergySCM'",
            "$class: 'TeamFoundationServerScm'",
            "$class: 'VaultSCM'",
            "$class: 'hudson.plugins.gradle_repo.RepoScm'",
            "$class: 'hudson.plugins.repo.RepoScm'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "workflow-scm-step"
    },
    {
      "command": "checkstyle",
      "title": "checkstyle: [Deprecated] Publish Checkstyle analysis results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "checkstyle"
    },
    {
      "command": "chefSinatraStep",
      "title": "chefSinatraStep: Execute chef-client on remote nodes",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sinatraurl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "privatekey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "parallel",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sinatra-chef-builder"
    },
    {
      "command": "chef_cookbook_cookstyle",
      "title": "chef_cookbook_cookstyle: Chef Cookbook Lint (Cookstyle)",
      "description": "",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "chef-cookbook-pipeline"
    },
    {
      "command": "chef_cookbook_foodcritic",
      "title": "chef_cookbook_foodcritic: Chef Cookbook Lint (Foodcritic)",
      "description": "",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "chef-cookbook-pipeline"
    },
    {
      "command": "chef_cookbook_functional",
      "title": "chef_cookbook_functional: Chef Cookbook Functional",
      "description": "",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "chef-cookbook-pipeline"
    },
    {
      "command": "chef_cookbook_unit",
      "title": "chef_cookbook_unit: Chef Cookbook Unit",
      "description": "",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "chef-cookbook-pipeline"
    },
    {
      "command": "chlAtuoAction",
      "title": "chlAtuoAction: Run AutoAction",
      "description": "",
      "parameters": [
        {
          "name": "content",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "browserString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "runScriptOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rootPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "libPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "autoaction-step"
    },
    {
      "command": "chuckNorris",
      "title": "chuckNorris: Submit to Chuck Norris' will",
      "description": "",
      "parameters": [],
      "plugin": "chucknorris"
    },
    {
      "command": "cifsPublisher",
      "title": "cifsPublisher: Send build artifacts to a windows share",
      "description": "Send build artifacts to a windows share",
      "parameters": [
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "$class: 'BapFtpParamPublish'",
            "$class: 'BapSshParamPublish'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishWhenFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "retry",
            "label"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "publish-over-cifs"
    },
    {
      "command": "cleanWs",
      "title": "cleanWs: Delete workspace when build is done",
      "description": "",
      "parameters": [
        {
          "name": "cleanWhenAborted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanWhenFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanWhenNotBuilt",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanWhenSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanWhenUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanupMatrixParent",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deleteDirs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disableDeferredWipeout",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "externalDelete",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notFailBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "patterns",
          "type": "Nested",
          "values": [
            "pattern",
            "type"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipWhenFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ws-cleanup"
    },
    {
      "command": "cleanup",
      "title": "cleanup: Perforce: Cleanup",
      "description": "",
      "parameters": [
        {
          "name": "deleteClient",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "cloudBeesFlowAssociateBuildToRelease",
      "title": "cloudBeesFlowAssociateBuildToRelease: CloudBees CD - Associate Build To Release",
      "description": "Updates the specified CloudBees CD release to include information about this build run.",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "flowRuntimeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD project name.",
          "isOptional": true
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD release name.",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowCallRestApi",
      "title": "cloudBeesFlowCallRestApi: CloudBees CD - Call REST API",
      "description": "Call CloudBees CD REST API",
      "parameters": [
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "Specify the parameters for the REST API. Parameters are transformed into JSON object and used within body of HTTP request.",
          "isOptional": true
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "Specify the body for the REST API. This parameter is not used if 'Parameters' are provided.",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "envVarNameForResult",
          "type": "String",
          "values": [],
          "description": "If provided, result of calling CloudBees REST API (json output) will be stored within provided environment variable available within build.",
          "isOptional": true
        },
        {
          "name": "httpMethod",
          "type": "String",
          "values": [],
          "description": "Specify the HTTP Method",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "urlPath",
          "type": "String",
          "values": [],
          "description": "Specify the URL Path for the REST API",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowCreateAndDeployAppFromJenkinsPackage",
      "title": "cloudBeesFlowCreateAndDeployAppFromJenkinsPackage: CloudBees CD - Create/Deploy Application from Deployment Package",
      "description": "Create/Deploy an application in CloudBees CD from a deployment package.",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "Specify the location or path for the deployment package to be published to CloudBees CD. E.g., MyProject/target. Please note that your path or pattern should include manifest.json and all files that are declared in manifest.json. This field supports ant-style path pattern matching and build-time environment variables.\n \n\nFor example:\n \n\n\n \n```groovy\n\"?\" matches one character. Application.?ar will match both Application.war and Application.jar.\n\"*\" matches zero or more characters. Report.*ml will match Report.html and Report.xml.\n\"**\" matches zero or more 'directories' in a path. target/**/*.war will match all war files in any directory inside \"target\"\n    \n```\n To reference environment variable value, \"$\" should be used. For example, to reference the current build number: $BUILD_NUMBER.\n \n\n E.g., MyProject/**/*-$BUILD_NUMBER.war.",
          "isOptional": false
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runAndWaitOption",
          "type": "Nested",
          "values": [
            "checkInterval",
            "dependOnCdJobOutcome",
            "throwExceptionIfFailed"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowDeployApplication",
      "title": "cloudBeesFlowDeployApplication: CloudBees CD - Deploy Application",
      "description": "Deploy application using CloudBees CD.",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD application process name",
          "isOptional": true
        },
        {
          "name": "applicationProcessName",
          "type": "String",
          "values": [],
          "description": "Specify parameters for the CloudBees CD pipeline.",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "deployParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD environment name",
          "isOptional": true
        },
        {
          "name": "environmentProjectName",
          "type": "String",
          "values": [],
          "description": "(Optional) Specify the CloudBees CD environment project name if it is different than project for application",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD project name.",
          "isOptional": true
        },
        {
          "name": "runAndWaitOption",
          "type": "Nested",
          "values": [
            "checkInterval",
            "dependOnCdJobOutcome",
            "throwExceptionIfFailed"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validationTrigger",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowPublishArtifact",
      "title": "cloudBeesFlowPublishArtifact: CloudBees CD - Publish Artifact",
      "description": "Publish artifact to CloudBees CD Artifact Repository.",
      "parameters": [
        {
          "name": "repositoryName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD Repository.",
          "isOptional": false
        },
        {
          "name": "artifactName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the application artifact using the format &lt;group_id&gt;:&lt;artifact_key&gt;. For e.g., \"com.example:helloworld\"",
          "isOptional": false
        },
        {
          "name": "artifactVersion",
          "type": "String",
          "values": [],
          "description": "Specify the version of the application artifact. For e.g., you can specify 1.0 or 1.0-$BUILD_TAG that is based on Jenkins environment variable.",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "Specify the location or path for the artifact files to be published to CloudBees CD. This field supports ant-style path pattern matching and build-time environment variables.\n \n\nFor example:\n \n\n\n \n```groovy\n\"?\" matches one character. Application.?ar will match both Application.war and Application.jar.\n\"*\" matches zero or more characters. Report.*ml will match Report.html and Report.xml.\n\"**\" matches zero or more 'directories' in a path. target/**/*.war will match all war files in any directory inside \"target\"\n    \n```\n To reference environment variable value, \"$\" should be used. For example, to reference the current build number: $BUILD_NUMBER.\n \n\n E.g., MyProject/**/*-$BUILD_NUMBER.war.",
          "isOptional": false
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": false
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "relativeWorkspace",
          "type": "String",
          "values": [],
          "description": "Specify the relative workspace (relative to workspace root) for artifact path.",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowRunPipeline",
      "title": "cloudBeesFlowRunPipeline: CloudBees CD - Run Pipeline",
      "description": "Run a CloudBees CD pipeline.",
      "parameters": [
        {
          "name": "addParam",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "additionalOption",
          "type": "class net.sf.json.JSONArray",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pipelineName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD pipeline name.",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD project name.",
          "isOptional": true
        },
        {
          "name": "runAndWaitOption",
          "type": "Nested",
          "values": [
            "checkInterval",
            "dependOnCdJobOutcome",
            "throwExceptionIfFailed"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowRunProcedure",
      "title": "cloudBeesFlowRunProcedure: CloudBees CD - Run Procedure",
      "description": "Run a procedure in CloudBees CD.",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "procedureName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD procedure name",
          "isOptional": true
        },
        {
          "name": "procedureParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD project name.",
          "isOptional": true
        },
        {
          "name": "runAndWaitOption",
          "type": "Nested",
          "values": [
            "checkInterval",
            "dependOnCdJobOutcome",
            "throwExceptionIfFailed"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudBeesFlowTriggerRelease",
      "title": "cloudBeesFlowTriggerRelease: CloudBees CD - Trigger Release",
      "description": "Trigger release in CloudBees CD",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD project name.",
          "isOptional": true
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "Specify the CloudBees CD release name.",
          "isOptional": true
        },
        {
          "name": "runAndWaitOption",
          "type": "Nested",
          "values": [
            "checkInterval",
            "dependOnCdJobOutcome",
            "throwExceptionIfFailed"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startingStage",
          "type": "String",
          "values": [],
          "description": "*  Starting Stage: Specify starting stage to run in the CloudBees CD release pipeline (Parameter is required if ‘Stages to run’ is not used) \n\n  \n*  Stages to run: Specify stages to run in the CloudBees CD release pipeline (Parameter is required if ‘Starting Stage’ is not used. Parameter is ignored if ‘Starting Stage’ is used)",
          "isOptional": true
        },
        {
          "name": "validationTrigger",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "cloudhubDeployer",
      "title": "cloudhubDeployer: CloudHub Deployment",
      "description": "",
      "parameters": [
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "orgId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "The application name identifies your application not only in Runtime Manager but also in the public cloudhub.io domain. For example, an application named myapplication is accessible at http://myapplication.cloudhub.io. To avoid domain conflicts, the application name must be globally unique across CloudHub.The application name can contain between 3 and 42 alphanumeric characters (a-z, A-Z, 0-9) and dashes (-). They cannot contain spaces or other characters.",
          "isOptional": false
        },
        {
          "name": "muleVersion",
          "type": "String",
          "values": [],
          "description": "The runtime version must be the same Mule version used to develop your application.",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "Workspace-relative path of the artifact file to upload (it should resolve to a single file). Can use wildcards like module/dist/**/*.jar, See the @includes of [Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format. Examples: File, like target/my-mule-app.jar or target/**/*.jar : The jar file will be uploaded to cloudhub.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Jenkins credentials containing The Anypoint Platform account username and password with sufficient access to perform deployment related activities on CloudHub.",
          "isOptional": true
        },
        {
          "name": "requestMode",
          "type": "Enum",
          "values": [
            "CREATE",
            "UPDATE",
            "CREATE_OR_UPDATE",
            "UPDATE_FILE",
            "RESTART",
            "DELETE"
          ],
          "description": "Type of Operation to perform on CloudHub. CREATE - Deploy/Create new application UPDATE - Update application with new package and settings provided. UPDATE_FILE - Update just the zip/jar file of application, rest all settings ignored. CREATE_OR_UPDATE - Deploy/Create new application(if not already present) or update the existing application. RESTART - Restart the application already present. DELETE - Delete the application.",
          "isOptional": true
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "If you have global deployment enabled on your account, you can change the deployment region.",
          "isOptional": true
        },
        {
          "name": "autoScalePolicy",
          "type": "Nested",
          "values": [
            "autoScalePolicyName",
            "enableAutoScalePolicy",
            "id",
            "maxScale",
            "minScale",
            "scaleBasedOn",
            "scaleDown",
            "scaleDownNextScaleWaitMins",
            "scaleDownPeriodCount",
            "scaleDownValue",
            "scaleType",
            "scaleUp",
            "scaleUpNextScaleWaitMins",
            "scaleUpPeriodCount",
            "scaleUpValue"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "autoStart",
          "type": "boolean",
          "values": [],
          "description": "Check this flag to autostart the application after it is deployed",
          "isOptional": true
        },
        {
          "name": "debugMode",
          "type": "Enum",
          "values": [
            "ENABLED",
            "DISABLED"
          ],
          "description": "Use this to log additional details/info from the http requests.",
          "isOptional": true
        },
        {
          "name": "enableAutoScalePolicy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envVars",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "you can specify properties (key-value pairs) that the application uses during deployment and while running.",
          "isOptional": true
        },
        {
          "name": "ignoreGlobalSettings",
          "type": "boolean",
          "values": [],
          "description": "If checked settings from global configuration will be used that are under manage jenkins.",
          "isOptional": true
        },
        {
          "name": "logLevels",
          "type": "Nested",
          "values": [
            "levelCategory",
            "packageName"
          ],
          "description": "You can configure the logging level (DEBUG, WARN, ERROR, or INFO) for the application",
          "isOptional": true
        },
        {
          "name": "loggingNgEnabled",
          "type": "boolean",
          "values": [],
          "description": "Check this if you want to use your own logging solution using Log4j configuration.",
          "isOptional": true
        },
        {
          "name": "monitoringAutoRestart",
          "type": "boolean",
          "values": [],
          "description": "CloudHub automatically restarts your application when the monitoring system discovers an issue.",
          "isOptional": true
        },
        {
          "name": "monitoringEnabled",
          "type": "boolean",
          "values": [],
          "description": "Use Anypoint Monitoring and Visualizer for Mule applications running on supported versions of Mule.",
          "isOptional": true
        },
        {
          "name": "objectStoreV1",
          "type": "boolean",
          "values": [],
          "description": "Object Store v2 is enabled by default in Mule 4. In Mule 3, select this option to use Object Store v1.",
          "isOptional": true
        },
        {
          "name": "persistentQueues",
          "type": "boolean",
          "values": [],
          "description": "You can use persistent queues on your application to store data in an input queue to disk. Persistent queues protect against message loss and enable you to distribute workloads across a set of workers.",
          "isOptional": true
        },
        {
          "name": "persistentQueuesEncrypted",
          "type": "boolean",
          "values": [],
          "description": "If you enable persistent queues, you can optionally encrypt the data stored in the input queue on disk.",
          "isOptional": true
        },
        {
          "name": "timeoutConnection",
          "type": "int",
          "values": [],
          "description": "Max time to try before failing the request.",
          "isOptional": true
        },
        {
          "name": "timeoutResponse",
          "type": "int",
          "values": [],
          "description": "Max time to wait for response before failing the request.",
          "isOptional": true
        },
        {
          "name": "verifyDeployments",
          "type": "boolean",
          "values": [],
          "description": "Verify if API is stated after deployment.",
          "isOptional": true
        },
        {
          "name": "verifyIntervalInSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workerAmount",
          "type": "int",
          "values": [],
          "description": "No of workers to run for API.",
          "isOptional": true
        },
        {
          "name": "workerCpu",
          "type": "String",
          "values": [],
          "description": "Compute Capacity for each worker(vCores). Check MuleSoft Documentation for available sizes([worker-size-and-vcores](https://docs.mulesoft.com/runtime-manager/deploying-to-cloudhub#worker-size-and-vcores)). Example Values :- 0.1, 2 or 16",
          "isOptional": true
        },
        {
          "name": "workerMemory",
          "type": "String",
          "values": [],
          "description": "Heap memory (Or Ram) for each worker. Check MuleSoft Documentation for available sizes ([worker-size-and-vcores](https://docs.mulesoft.com/runtime-manager/deploying-to-cloudhub#worker-size-and-vcores). Example Values :- \"500 MB\", \"1.5 GB\" or \"32 GB\"",
          "isOptional": true
        },
        {
          "name": "workerType",
          "type": "String",
          "values": [],
          "description": "Type of worker to use \"Micro\", \"Small\", \"Medium\" or \"Large\". Check MuleSoft Documentation for additional details.",
          "isOptional": true
        },
        {
          "name": "workerWeight",
          "type": "String",
          "values": [],
          "description": "Weight for worker type. Check MuleSoft Documentation for available sizes([worker-size-and-vcores](https://docs.mulesoft.com/runtime-manager/deploying-to-cloudhub#worker-size-and-vcores)). Example Values :- 0.1, 0.2 or 1",
          "isOptional": true
        }
      ],
      "plugin": "cloudhub-deployer"
    },
    {
      "command": "cloudshareDockerMachine",
      "title": "cloudshareDockerMachine: CloudShare Docker-Machine",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Override the default docker-machine name for this project.\n \n\n You can use environment variables. The default value is jenkins-$JOB_NAME, which means an environment by the name of docker-machine-jenkins-[job name] would be used.",
          "isOptional": true
        },
        {
          "name": "expiryDays",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cloudshare-docker"
    },
    {
      "command": "cm",
      "title": "cm: Plastic SCM",
      "description": "",
      "parameters": [
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeset",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanup",
          "type": "Enum",
          "values": [
            "MINIMAL",
            "STANDARD",
            "FULL",
            "DELETE"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "directory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "plasticscm-plugin"
    },
    {
      "command": "cmake",
      "title": "cmake: Run cmake with arbitrary arguments",
      "description": "Runs the tool and returns the exit code of the process.",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "arguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoredExitCodes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cmakebuilder"
    },
    {
      "command": "cmakeBuild",
      "title": "cmakeBuild: Generate build-scripts with cmake and execute them",
      "description": "Uses CMake to generate build-scripts and can run these.\n \n\n This invokes `cmake` with the given options to generate the build scripts.\n \n\n Any non-zero exit code during build-script generation causes Jenkins to mark the build as a failure.\n \n To run the generated build script, you have to add <i>build tool invocation</i> steps. \n For example, to run the equivalent of the `sh` shell script\n \n```groovy\n\n   mkdir build && cd build\n   cmake -G Ninja &lt;workpace-root&gt;/source\n   DESTDIR=&lt;workpace-root&gt;/artifacts ninja all install\n  \n```\n you would enter the following pipeline script:\n \n```groovy\n\n  cmakeBuild\n      generator: 'Ninja',\n      buildDir: 'build',\n      sourceDir: 'source',\n      installation: 'InSearchPath',\n      steps: [\n          [args: 'all install', envVars: 'DESTDIR=${WORKSPACE}/artifacts']\n      ]\n  \n```",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cleanBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cmakeArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generator",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preloadScript",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "steps",
          "type": "Nested",
          "values": [
            "args",
            "envVars",
            "withCmake"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cmakebuilder"
    },
    {
      "command": "cobertura",
      "title": "cobertura: Publish Cobertura Coverage Report",
      "description": "",
      "parameters": [
        {
          "name": "autoUpdateHealth",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "autoUpdateStability",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "classCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "coberturaReportFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "conditionalCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableNewApi",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failNoReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failUnhealthy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fileCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "lineCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxNumberOfBuilds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "methodCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onlyStable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "packageCoverageTargets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceEncoding",
          "type": "Enum",
          "values": [
            "ASCII",
            "Big5",
            "Big5_HKSCS",
            "Big5_Solaris",
            "Cp037",
            "Cp1006",
            "Cp1025",
            "Cp1026",
            "Cp1046",
            "Cp1047",
            "Cp1097",
            "Cp1098",
            "Cp1112",
            "Cp1122",
            "Cp1123",
            "Cp1124",
            "Cp1140",
            "Cp1141",
            "Cp1142",
            "Cp1143",
            "Cp1144",
            "Cp1145",
            "Cp1146",
            "Cp1147",
            "Cp1148",
            "Cp1149",
            "Cp1250",
            "Cp1251",
            "Cp1252",
            "Cp1253",
            "Cp1254",
            "Cp1255",
            "Cp1256",
            "Cp1257",
            "Cp1258",
            "Cp1381",
            "Cp1383",
            "Cp273",
            "Cp277",
            "Cp278",
            "Cp280",
            "Cp284",
            "Cp285",
            "Cp297",
            "Cp33722",
            "Cp420",
            "Cp424",
            "Cp437",
            "Cp500",
            "Cp737",
            "Cp775",
            "Cp838",
            "Cp850",
            "Cp852",
            "Cp855",
            "Cp856",
            "Cp857",
            "Cp858",
            "Cp860",
            "Cp861",
            "Cp862",
            "Cp863",
            "Cp864",
            "Cp865",
            "Cp866",
            "Cp868",
            "Cp869",
            "Cp870",
            "Cp871",
            "Cp874",
            "Cp875",
            "Cp918",
            "Cp921",
            "Cp922",
            "Cp930",
            "Cp933",
            "Cp935",
            "Cp937",
            "Cp939",
            "Cp942",
            "Cp942C",
            "Cp943",
            "Cp943C",
            "Cp948",
            "Cp949",
            "Cp949C",
            "Cp950",
            "Cp964",
            "Cp970",
            "EUC_CN",
            "EUC_JP",
            "EUC_JP_LINUX",
            "EUC_JP_Solaris",
            "EUC_KR",
            "EUC_TW",
            "GB18030",
            "GBK",
            "ISCII91",
            "ISO2022_CN_CNS",
            "ISO2022_CN_GB",
            "ISO2022CN",
            "ISO2022JP",
            "ISO2022KR",
            "ISO8859_1",
            "ISO8859_13",
            "ISO8859_15",
            "ISO8859_2",
            "ISO8859_3",
            "ISO8859_4",
            "ISO8859_5",
            "ISO8859_6",
            "ISO8859_7",
            "ISO8859_8",
            "ISO8859_9",
            "JISAutoDetect",
            "KOI8_R",
            "MacArabic",
            "MacCentralEurope",
            "MacCroatian",
            "MacCyrillic",
            "MacDingbat",
            "MacGreek",
            "MacHebrew",
            "MacIceland",
            "MacRoman",
            "MacRomania",
            "MacSymbol",
            "MacThai",
            "MacTurkish",
            "MacUkraine",
            "MS874",
            "MS932",
            "MS936",
            "MS949",
            "MS950",
            "MS950_HKSCS",
            "PCK",
            "SJIS",
            "TIS620",
            "UnicodeBig",
            "UnicodeBigUnmarked",
            "UnicodeLittle",
            "UnicodeLittleUnmarked",
            "UTF_16",
            "UTF_8",
            "x_iso_8859_11",
            "x_Johab"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "zoomCoverageChart",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cobertura"
    },
    {
      "command": "codefreshLaunch",
      "title": "codefreshLaunch: Launch a Codefresh Composition",
      "description": "",
      "parameters": [
        {
          "name": "cfComposition",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cfVars",
          "type": "Nested",
          "values": [
            "Variable",
            "Value"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codefresh"
    },
    {
      "command": "codefreshRun",
      "title": "codefreshRun: Trigger a Codefresh Pipeline",
      "description": "",
      "parameters": [
        {
          "name": "cfBranch",
          "type": "String",
          "values": [],
          "description": "Optionally enter the name of the branch to use for the build. Leave empty to use the default branch.",
          "isOptional": true
        },
        {
          "name": "cfPipeline",
          "type": "String",
          "values": [],
          "description": "Choose the pipeline to trigger from the list of all your defined Codefresh pipelines. If the list is empty - verify your Codefresh authentication in Jenkins system config section.",
          "isOptional": true
        },
        {
          "name": "cfVars",
          "type": "Nested",
          "values": [
            "Variable",
            "Value"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codefresh"
    },
    {
      "command": "codescene",
      "title": "codescene: Run CodeScene Delta Analysis",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select username/password credentials defined in Jenkins configuration. This is a safe way to use credentials in Jenkins plugin. See [Injecting Secrets into Jenkins Build Jobs](https://support.cloudbees.com/hc/en-us/articles/203802500-Injecting-Secrets-into-Jenkins-Build-Jobs) for more details.",
          "isOptional": false
        },
        {
          "name": "deltaAnalysisUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "analyzeBranchDiff",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "analyzeLatestIndividually",
          "type": "boolean",
          "values": [],
          "description": "Commits not seen in previous successful builds will be used for separate delta analyses.",
          "isOptional": true
        },
        {
          "name": "baseRevision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "couplingThresholdPercent",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnDecliningCodeHealth",
          "type": "boolean",
          "values": [],
          "description": "Check this option to mark the build as unstable if the Code Health of a hotspot declines.",
          "isOptional": true
        },
        {
          "name": "failOnFailedGoal",
          "type": "boolean",
          "values": [],
          "description": "Check this option to mark the build as unstable if a goal -- as defined by CodeScene's Intelligent Notes -- is violated. This could be a supervised hotspot that suddenly declines in Code Health, or a module indicated as No Problem that starts to accumulate complex code, etc.",
          "isOptional": true
        },
        {
          "name": "letBuildPassOnFailedAnalysis",
          "type": "boolean",
          "values": [],
          "description": "By default we fail the build if CodeScene couldn't run an analysis (e.g. couldn't update the repository). This behaviour can be overridden here.",
          "isOptional": true
        },
        {
          "name": "markBuildAsUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "originUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "riskThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useBiomarkers",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codescene"
    },
    {
      "command": "codesonar",
      "title": "codesonar: Codesonar",
      "description": "",
      "parameters": [
        {
          "name": "conditions",
          "type": "Nested",
          "values": [
            "warningCountIncreaseNewOnly",
            "cyclomaticComplexity",
            "redAlerts",
            "warningCountAbsoluteSpecifiedScoreAndHigher",
            "warningCountIncreaseOverall",
            "warningCountIncreaseSpecifiedScoreAndHigher",
            "yellowAlerts"
          ],
          "description": "Choose the condition you want Codesonar to use for build verification",
          "isOptional": false
        },
        {
          "name": "protocol",
          "type": "String",
          "values": [],
          "description": "Choose http or https",
          "isOptional": false
        },
        {
          "name": "hubAddress",
          "type": "String",
          "values": [],
          "description": "IP address of the Codesonar hub",
          "isOptional": false
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "The name of the project. All characters allowed",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "Codesonar credentials",
          "isOptional": false
        },
        {
          "name": "visibilityFilter",
          "type": "String",
          "values": [],
          "description": "The visibility filter is used to filter which warnings that are used for the conditions. It matches the items under \"Visible Warnings\" under an analysis in CodeSonar. Please use the ID number of the filter you want to use. You can find the ID numbers under this url **hub_address**/savedsearches.html?filter=3&ssdomain=0&ssearchsgrd=Ay_0D_BTl3BTl3AgBg",
          "isOptional": true
        }
      ],
      "plugin": "codesonar"
    },
    {
      "command": "collectBranchesToAlmOctane",
      "title": "collectBranchesToAlmOctane: ALM Octane branch collector",
      "description": "This step is responsible for collecting branches from the SCM tool and injecting them to ALM Octane.\n \n\n\n \n\n\n \n\n Supported version of ALM Octane: 15.1.74 and later.\n \n\n\n \n\n You can change the behaviour of this step by adding the following parameters to the job:\n \n  \n* **branches_active_branch_days**: Only active branches can be added/update to ALM Octane. Default is 90 days.\n\n  \n\n\n  \n* **branches_max_branches_to_fill**: Relevant for GitHub repository only. Max branches to fetch info. Branch for which info is not fetched, cannot be added to ALM Octane. Default is 1000.\n\n  \n\n\n \n \n\n\n \n\n **Supported SCM Tools: **\n \n\n\n <table width=\"100%\">\n  <thead>\n   <tr>\n <td>SCM Tool</td>\n <td>Supported types of authentication</td>\n <td>How to create PAT (Personal access token)</td>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n <td>Bitbucket Server</td>\n <td>User/password and PAT</td>\n <td>Click on your profile icon -&gt; Manage account -&gt; Personal access tokens -&gt; Create a token (Assign Read permissions for both Projects and Repositories)</td>\n   </tr>\n   <tr>\n <td>Github Cloud</td>\n <td>PAT only</td>\n <td rowspan=\"2\">Click on your profile icon -&gt; Settings -&gt; Developer settings -&gt; Personal access tokens -&gt; Generate new token (Uncheck all scopes to grants read-only access)</td>\n   </tr>\n   <tr>\n <td>Github Server</td>\n <td>User/password and PAT</td>\n   </tr>\n  </tbody>\n </table>\n \n\n Note : To create PAT credentials in Jenkins , use \"Secret text\" kind of credentials in \"Add Credentials\" dialog",
      "parameters": [
        {
          "name": "configurationId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scmTool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repositoryUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "collectEnv",
      "title": "collectEnv: Collect environment variables and system properties",
      "description": "",
      "parameters": [
        {
          "name": "env",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.Env",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "collectIssues",
      "title": "collectIssues: Collect issues from git and add them to a build",
      "description": "",
      "parameters": [
        {
          "name": "issues",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.Issues",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "config",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "collectPullRequestsToAlmOctane",
      "title": "collectPullRequestsToAlmOctane: ALM Octane pull-request collector",
      "description": "This step is responsible for collecting pull requests from the SCM tool and injecting them to ALM Octane. See help information in [ALM Octane Help Center](https://admhelp.microfocus.com/octane/en/latest/Online/Content/UserGuide/articles-pull-requests.htm).\n \n\n\n \n\n Every time pull requests are sent to ALM Octane the last update time is saved. The next time, only pull requests and commits that were updated after this time will be sent to ALM Octane.\n \n\n\n \n\n Supported version of ALM Octane: 15.0.49 and later.\n \n\n\n \n\n You can change the behaviour of this step by adding the following parameters to the job:\n \n  \n* **pullrequests_min_update_time**: Use this parameter to override the last update time that is updated after each successful injection to ALM Octane.\n\n  \n\n\n  \n* **pullrequests_max_pr_to_collect**: Max number of pull requests to collect. Default is 100.\n\n  \n\n\n  \n* **pullrequests_max_commits_to_collect**: Max number of commits to collect for each pull request. Default is 100.\n\n  \n\n\n \n \n\n\n \n\n **Supported SCM Tools: **\n \n\n\n <table width=\"100%\">\n  <thead>\n   <tr>\n <td>SCM Tool</td>\n <td>Supported types of authentication</td>\n <td>How to create PAT (Personal access token)</td>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n <td>Bitbucket Server</td>\n <td>User/password and PAT</td>\n <td>Click on your profile icon -&gt; Manage account -&gt; Personal access tokens -&gt; Create a token (Assign Read permissions for both Projects and Repositories)</td>\n   </tr>\n   <tr>\n <td>Github Cloud</td>\n <td>PAT only</td>\n <td rowspan=\"2\">Click on your profile icon -&gt; Settings -&gt; Developer settings -&gt; Personal access tokens -&gt; Generate new token (Uncheck all scopes to grants read-only access)</td>\n   </tr>\n   <tr>\n <td>Github Server</td>\n <td>User/password and PAT</td>\n   </tr>\n  </tbody>\n </table>\n \n\n Note : To create PAT credentials in Jenkins , use \"Secret text\" kind of credentials in \"Add Credentials\" dialog",
      "parameters": [
        {
          "name": "configurationId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scmTool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repositoryUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceBranchFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetBranchFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "commonResultUploadBuilder",
      "title": "commonResultUploadBuilder: Upload test result to ALM using field mapping",
      "description": "",
      "parameters": [
        {
          "name": "almServerName",
          "type": "String",
          "values": [],
          "description": "The name of the ALM Server.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "The Domain of the project to be used.",
          "isOptional": false
        },
        {
          "name": "clientType",
          "type": "String",
          "values": [],
          "description": "Client type is required for some ALM above 12.60 in authentication.",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "The project to be used.",
          "isOptional": false
        },
        {
          "name": "almTestFolder",
          "type": "String",
          "values": [],
          "description": "The path of the test folder that will contain the uploaded test. The path doesn't include the Root test folder (Subject).\n \n\n For example, sampletestfolder\\subfolder means, the tests will be uploaded to test folder named 'subfolder', which is under the test folder named 'sampletestfolder',\n \n\n and 'sampletestfolder' is under the root test folder 'Subject'.",
          "isOptional": false
        },
        {
          "name": "almTestSetFolder",
          "type": "String",
          "values": [],
          "description": "The path of the testset folder that will contain the uploaded testset. The path doesn't include the Root testset folder.\n \n\n For example, sampletestsetfolder\\subfolder means, the testsets will be uploaded to testset folder named 'subfolder', which is under the testset folder named 'sampletestsetfolder',\n \n\n and 'sampletestsetfolder' is under the root testset folder 'Root'.",
          "isOptional": false
        },
        {
          "name": "testingResultFile",
          "type": "String",
          "values": [],
          "description": "setting that specifies the generated raw XML report files, such as **/junitResult.xml. Basedir of the fileset is the root path of current job and workspace.",
          "isOptional": false
        },
        {
          "name": "runStatusMapping",
          "type": "String",
          "values": [],
          "description": "Run status mapping field is for mapping the test result's status values to ALM run status value. Yaml key represents the test result run status value. You should first set the status field in field mapping. Yaml value represents the ALM run status values. There are following status in ALM:\n\n No Run\n\n Passed\n\n Failed\n\n Blocked\n\n Not Completed\n\n \n  Take following test result as example: &lt;test-case name=\"ExampleTestOfNUnit.TestMultiplicationFail\" executed=\"True\" result=\"Failure\" success=\"False\" time=\"0.122\" asserts=\"1\"&gt;  **Sample field mapping:** run: status: \"x: success\"  **Sample status mapping:** status: True: \"Passed\" False: \"Failed\"",
          "isOptional": false
        },
        {
          "name": "fieldMapping",
          "type": "String",
          "values": [],
          "description": "Field mapping content is a yaml format configuration. Three sections are required. They are 'testset', 'test' and 'run'. Each section should has a 'root' property indicates the root node of the testset or test or run. Please note that test's root is based on testset's root. Run's root is based on test's root.\n\n \nBeside root, you can define any field you want to upload as an ALM entity. Yaml key represents the entity's field name. Yaml value represents the entity's field value.\n\n \nIf you want to upload a value to a User defined field, you could use a key starts with 'udf|' follows by the UDF label. Such as 'udf-duration' would upload value to a UDF field which has label as 'duration'.\n\n \nFor the yaml value part, there're two types of value. Value starts with 'x:' means the following value represents the xpath in the test result file. Value starts with 'v:' means the following value is a string value which would be applied to every entity.\n\n \nYou can use '|' in yame value for combining several parts together.\n **Sample test result:** &lt;?xml version='1.0' encoding='UTF-8'?&gt; &lt;result&gt; &lt;suites&gt; &lt;suite&gt; &lt;file&gt;Changes file&lt;/file&gt; &lt;name&gt;Changes Test Set 1&lt;/name&gt; &lt;duration&gt;2.293&lt;/duration&gt; &lt;cases&gt; &lt;case&gt; &lt;duration&gt;8.293&lt;/duration&gt; &lt;className&gt;ChangesManagement&lt;/className&gt; &lt;testName&gt;test1&lt;/testName&gt; &lt;testVersion&gt;4.0&lt;/testVersion&gt; &lt;skipped&gt;false&lt;/skipped&gt; &lt;failedSince&gt;0&lt;/failedSince&gt; &lt;/case&gt; &lt;case&gt; &lt;duration&gt;8.293&lt;/duration&gt; &lt;className&gt;ChangesManagement&lt;/className&gt; &lt;testName&gt;List changes 2&lt;/testName&gt; &lt;testVersion&gt;4.0&lt;/testVersion&gt; &lt;skipped&gt;false&lt;/skipped&gt; &lt;failedSince&gt;0&lt;/failedSince&gt; &lt;/case&gt; &lt;/cases&gt; &lt;/suite&gt; &lt;duration&gt;0.576&lt;/duration&gt; &lt;/result&gt; **Sample field mapping:**  testset: root: \"x:/result/suites/suite\" name: \"x:file|v:_|x:name\" udf|duration: \"x:duration\" subtype-id: \"v:hp.qc.test-set.external\" test: root: \"x:cases/case\" name: \"x:testName\" subtype-id: \"v:EXTERNAL-TEST\" udf|duration: \"x:duration\" udf|test version: \"x:testVersion\" run: root: \"x:.\" duration: \"x:duration\" status: \"x:failedSince\"",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "compareVersions",
      "title": "compareVersions: Compare two version number strings",
      "description": "Compare two version numbers with each other. See [VersionNumber.java](https://github.com/jenkinsci/lib-version-number/blob/master/src/main/java/hudson/util/VersionNumber.java) for how version strings are handled. \n\n\n The return value is an Integer; \n\n\n \n* `-1` if `v1 &lt; v2`\n\n \n* `0` if `v1 == v2`\n\n \n* `1` if `v1 &gt; v2`",
      "parameters": [
        {
          "name": "v1",
          "type": "String",
          "values": [],
          "description": "The version number string that will be compared to `v2`.",
          "isOptional": false
        },
        {
          "name": "v2",
          "type": "String",
          "values": [],
          "description": "The version number string that `v1` will be compared to.",
          "isOptional": false
        },
        {
          "name": "failIfEmpty",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if `v1` or `v2` is empty or `null`. \n\n\n By default the empty string or `null` is treated as the lowest version and will not fail the build. I.e.: \n\n\n \n* `null` compared to `null` ` == 0`\n\n \n* empty compared to empty ` == 0`\n\n \n* `null` compared to empty ` == 0`\n\n \n* `null` or empty compared to anything ` == -1`\n\n \n* anything compared to `null` or empty ` == 1`",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "conanAddRemote",
      "title": "conanAddRemote: Add new repo to Conan config",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "conanHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verifySSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "conanAddUser",
      "title": "conanAddUser: Add new user to Conan config",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "conanHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "configFileProvider",
      "title": "configFileProvider: Provide Configuration files",
      "description": "Make <a rel=\"nofollow\">globally configured</a> files available in your local workspace. All files configured via the [config-file-provider plugin](https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin) are available and can be referenced.",
      "parameters": [
        {
          "name": "managedFiles",
          "type": "Nested",
          "values": [
            "fileId",
            "replaceTokens",
            "targetLocation",
            "variable"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "config-file-provider"
    },
    {
      "command": "container",
      "title": "container: Run build steps in a container",
      "description": "Selects a container of the agent pod so that all shell steps are executed in that container.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "shell",
          "type": "String",
          "values": [],
          "description": "Specifies a shell which will run inside the container and process requests from Jenkins to run executables, set environment variables, and similar infrastructure. \n\n\n This does **not** affect the shell used to run user code, such as `sh` steps. To run your scripts with a specific shell on Linux, use an interpreter line: \n\n\n```groovy\nsh '''#!/bin/bash\nfor x in {0..9}; do echo x; done\n'''\n```\n\n\n or just use a subprocess and an externally versioned script: \n\n\n```groovy\nsh 'bash ci.sh'\n```\n\n\n On Windows, choose between the `bat` or `powershell` steps. \n\n\n For a pod running on Linux, defaults to `sh`, which should be in `$PATH`; for a pod running on Windows, defaults to `cmd`, which should be in `%Path%`. Should not generally be overridden.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes"
    },
    {
      "command": "containerLog",
      "title": "containerLog: Get container log from Kubernetes",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name of the container, as specified in `containerTemplate`.",
          "isOptional": false
        },
        {
          "name": "limitBytes",
          "type": "int",
          "values": [],
          "description": "If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.",
          "isOptional": true
        },
        {
          "name": "returnLog",
          "type": "boolean",
          "values": [],
          "description": "Return the container log. If not checked, the log will be printed to the build log.",
          "isOptional": true
        },
        {
          "name": "sinceSeconds",
          "type": "int",
          "values": [],
          "description": "A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned.",
          "isOptional": true
        },
        {
          "name": "tailingLines",
          "type": "int",
          "values": [],
          "description": "If set, the number of lines from the end of the log to show. If not specified, log is shown from the creation of the container or limited by \"sinceSeconds\".",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes"
    },
    {
      "command": "contentReplace",
      "title": "contentReplace: Content Replace",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "Nested",
          "values": [
            "filePath",
            "fileEncoding",
            "configs"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "content-replace"
    },
    {
      "command": "contentReplace",
      "title": "contentReplace: Variables Replace",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "Nested",
          "values": [
            "filePath",
            "fileEncoding",
            "variablesPrefix",
            "variablesSuffix",
            "emptyValue",
            "configs"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "variables-replace-plugin"
    },
    {
      "command": "contrastAgent",
      "title": "contrastAgent: Download latest Contrast agent",
      "description": "Pipeline step for adding a Contrast agent to your build.\n \n\n Usage Example:\n \n\n ` contrastAgent profile: 'Localhost', outputDirectory: \"${project.build.directory} + '/tmp'\" `",
      "parameters": [
        {
          "name": "profile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "agentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "contrast-continuous-application-security"
    },
    {
      "command": "contrastVerification",
      "title": "contrastVerification: Verify vulnerabilities in a build",
      "description": "Pipeline step for verifying your build with Contrast.\n \n\n Usage Example:\n \n\n ` contrastVerification profile: 'Localhost', applicationId: 'cb3ea678-38c8-4487-ba94-692a117e7966', count: 10, rule: 'xss', severity: 'High', queryBy: 1 `\n \n\n The plugin can use either the unique identifier appVersionTag or the startDate to filter vulnerabilities and check conditions. You can change the format used by the plugin to create appVersionTag or set the plugin to use startDate using queryBy pipeline parameter. Three options are available:\n \n\n 1 - appVersionTag, format: applicationId-${BUILD_NUMBER} (default)\n \n\n 2 - appVersionTag, format: applicationId-${JOB_NAME}-${BUILD_NUMBER}\n \n\n 3 - startDate (Build timestamp)\n \n\n 4 - Job parameter (or environment variable): APPVERSIONTAG\n \n\n\n \n\n If you use the APPVERSIONTAG environment variable, the value can be any format of your choice.\n \n\n Please note that the \"queryBy\" option should match the \"contrast.override.appversion\" parameter you pass to the Contrast Java agent when running your application. In case you use the third \"queryBy\" option, passing the \"contrast.override.appversion\" parameter to Contrast Java agent is not required.",
      "parameters": [
        {
          "name": "profile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "count",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rule",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryBy",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "agentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "appVersionTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "contrast-continuous-application-security"
    },
    {
      "command": "convertTestsToRun",
      "title": "convertTestsToRun: ALM Octane testing framework converter",
      "description": "This build step is intended to support execution of automated tests from Micro Focus ALM Octane.\n \n\n The builder searches for the \"testsToRun\" parameter which is sent from ALM Octane as part of the execution framework.\n \n\n Once it is found, its value is converted to the format of the selected testing framework, and injected to the \"testsToRunConverted\" environment parameter.\n \n\n Later, the new parameter can be used in the appropriate execution builder.\n \n  \n*  To use in parameter <i>textboxes</i>, use the following syntax: **${testsToRunConverted}**\n\n  \n\n\n  \n*  To use in the <i>scripts</i>, use the following syntax:\n   \n \n* Linux shell: $testsToRunConverted\n\n \n* Windows batch command: %testsToRunConverted%\n\n \n* Pipeline script (workflow job): \"${params.testsToRunConverted}\"\n\n \n\n See examples in the tables below:\n   <table width=\"100%\">\n <thead>\n <tr>\n <td width=\"20%\">Framework</td>\n <td>Linux shell</td>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>Maven Surefire</td>\n <td>mvn clean -Dtest=$testsToRunConverted test</td>\n </tr>\n <tr>\n <td>Maven Failsafe</td>\n <td>mvn clean -Dit.test=$testsToRunConverted verify</td>\n </tr>\n <tr>\n <td>Gradle</td>\n <td>gradle test $testsToRunConverted</td>\n </tr>\n <tr>\n <td>Protractor</td>\n <td>protractor conf.js --grep=\"$testsToRunConverted\"</td>\n </tr>\n <tr>\n <td>Cucumber-JVM over Maven</td>\n <td>mvn clean -Dcucumber.options=\"$testsToRunConverted\" test</td>\n </tr>\n <tr>\n <td>JBehave over Maven</td>\n <td>mvn clean -Dfeatures=\"$testsToRunConverted\" test</td>\n </tr>\n </tbody>\n   </table> \n\n\n   <table width=\"100%\">\n <thead>\n <tr>\n <td width=\"20%\">Framework</td>\n <td>Windows batch command</td>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>Maven Surefire</td>\n <td>mvn clean -Dtest=%testsToRunConverted% test</td>\n </tr>\n <tr>\n <td>Maven Failsafe</td>\n <td>mvn clean -Dit.test=%testsToRunConverted% verify</td>\n </tr>\n <tr>\n <td>Gradle</td>\n <td>gradle test %testsToRunConverted%</td>\n </tr>\n <tr>\n <td>Protractor</td>\n <td>protractor conf.js --grep=\"%testsToRunConverted%\"</td>\n </tr>\n <tr>\n <td>Cucumber-JVM over Maven</td>\n <td>mvn clean -Dcucumber.options=\"%testsToRunConverted%\" test</td>\n </tr>\n <tr>\n <td>JBehave over Maven</td>\n <td>mvn clean -Dfeatures=\"%testsToRunConverted%\" test</td>\n </tr>\n </tbody>\n   </table> \n\n\n   <table width=\"100%\">\n <thead>\n <tr>\n <td width=\"20%\">Framework</td>\n <td>Pipeline script</td>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>Maven Surefire</td>\n <td>bat 'mvn clean -Dtest=${params.testsToRunConverted} test'</td>\n </tr>\n <tr>\n <td>Maven Failsafe</td>\n <td>bat 'mvn clean -Dit.test=${params.testsToRunConverted} verify'</td>\n </tr>\n <tr>\n <td>Gradle</td>\n <td>bat 'gradle test ${params.testsToRunConverted}'</td>\n </tr>\n <tr>\n <td>Protractor</td>\n <td>bat(/protractor conf.js --grep=\"${params.testsToRunConverted}\"/)</td>\n </tr>\n <tr>\n <td>Cucumber-JVM over Maven</td>\n <td>bat(/mvn clean -Dcucumber.options=\"${params.testsToRunConverted}\" test/)</td>\n </tr>\n <tr>\n <td>JBehave over Maven</td>\n <td>bat(/mvn clean -Dfeatures=\"${testsToRunConverted}\" test/)</td>\n </tr>\n </tbody>\n   </table> \n\n \n\n \n \n\n Notes/Limitations :\n \n\n\n \n  \n*  **UFT**: In order to build a UFT MTBX file, this builder needs to know the test check-out directory. By default this is the job workspace directory. If tests are checked out in another directory, define in the job a String parameter \"testsToRunCheckoutDirectory\" with the correct directory.\n\n  \n*  **JUnit/TestNG**: Supported for JUnit 4.7+, Surefire Plugin 2.19+, Failsafe Plugin 2.12.1+.\n\n  \n*  **Cucumber-JVM over Maven**: If your project contains several run classes, specify a run class that will be used, otherwise all run classes will be executed by Cucumber. You can specify test runner by adding: '-Dtest=[runner class name]' to the Maven command \n\n  \n*  **JBehave over Maven**: read more about integration with JBehave [here](https://github.com/MicroFocus/octane-jbehave-gherkin-reporter/blob/main/README.md) \n\n \n \n\n\n \n\n See more help information in [ALM Octane Help Center](https://admhelp.microfocus.com/octane/en/latest/Online/Content/AdminGuide/how-setup-testing-integration.htm)",
      "parameters": [
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "Select the testing framework whose format you want to convert to.",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "In the 'Custom conversion format' field, enter json that describes how to convert tests from raw format to the format of your testing framework. After conversion, the result is injected to the \"testsToRunConverted\" parameter.\n \n\n\n \n\n <i>**Note**: Click \"Validate\" to check the correctness of the inserted configuration.</i>\n \n\n\n \n\n The following are the components that you can use in the \"Custom conversion format\" :\n \n  \n* **testPattern** - describes the pattern for converting single test. All parameters that needs to be replaced be real test data, should start with $, for example **$package**, **$class**, **$testName**, **$externalRunId**, **$myCustomParam**. All other characters in the pattern will appear in the final result as is.\n\n  \n* **testDelimiter** - the delimiter used to separate different tests.\n\n  \n* **prefix** - a prefix for the whole conversion result.\n\n  \n* **suffix** - a suffix for the whole conversion result.\n\n  \n* **allowDuplication** - indicate whether duplications are allowed in final result. Default is true.\n\n  \n* **testsToRunConvertedParameter** - the parameter name that will contain the conversion result. Default value is \"testsToRunConverted\".\n\n  \n* **replacements** - the array of replace methods.\n\n  The minimal configuration is:\n \n\n\n \n\n\n \n```groovy\n{\n    \"testPattern\": \"$package.$class#$testName\",\n    \"testDelimiter\": \",\"\n}\n    \n```\n\n \n\nFor example:\n \n\n\n \n\n The <i>testsToRun</i> parameter received 2 tests separated by a semicolon: **v1:myPackage1|myClass1|myTest1<i>;</i>myPackage2|myClass2|myTest2**\n \n\n The defined <i>testPattern</i> is: **$package.$class#$testName**\n \n\n The defined <i>testDelimiter</i> is: ** , **\n \n  \n* **$package** variable will get a value of <i>myPackage1</i> for the first test and <i>myPackage2</i> for the second test.\n\n  \n* **$class** variable will get a value of <i>myClass1</i> for the first test and <i>myClass2</i> for the second test.\n\n  \n* **$testName** variable will get a value of <i>myTest1</i> for the first test and <i>myTest2</i> for the second test.\n\n \n \n\nThe <i>testsToRunConverted</i> parameter will be equal: **myPackage1.myClass1#myTest1,myPackage2.myClass2#myTest2**\n \n\n\n \n\n Optional:\n \n\n There is a possibility to alter values received from ALM Octane, for example to set lowercase to the testName, replace spaces by '_', and so on.\n \n\n Here are examples of available replace methods. Each replace method contains \"target\" property that define what parts of the test pattern are affected by replace method, available values are $package,$class,$testName. Its possible to put several values separated by '|'. The replacements are executed in the order they appear in the 'Custom conversion format' json.\n \n```groovy\n\"replacements\": [\n{\n    \"type\": \"**replaceRegex**\",\n    \"target\": \"$package|$class|$testName\",\n    \"regex\": \"aaa\",\n    \"replacement\": \"bbb\",\n    \"description\": \"Replaces all the sequence of characters matching the regex with a replacement string.\"\n},{\n    \"type\": \"**replaceRegexFirst**\",\n    \"target\": \"$package|$class|$testName\",\n    \"regex\": \"aaa\",\n    \"replacement\": \"bbb\",\n    \"description\": \"Replaces the first substring that matches the given regex with the given replacement.\"\n},{\n    \"type\": \"**replaceString**\",\n    \"target\": \"$package|$class|$testName\",\n    \"string\": \"xxx\",\n    \"replacement\": \"yyy\",\n    \"description\": \"Replaces all occurrences of ‘string’ with ‘replacement’.\"\n},{\n    \"type\": \"**joinString**\",\n    \"target\": \"$package|$class|$testName\",\n    \"prefix\": \"xxx\",\n    \"suffix\": \"yyy\",\n    \"description\": \"Add prefix and suffix to the test template.\"\n},{\n    \"type\": \"**toLowerCase**\",\n    \"target\": \"$package|$class|$testName\",\n    \"description\": \"Convert test template to lower case.\"\n},{\n    \"type\": \"**toUpperCase**\",\n    \"target\": \"$package|$class|$testName\",\n    \"description\": \"Convert test template to upper  case.\"\n},{\n    \"type\": \"**notLatinAndDigitToOctal**\",\n    \"target\": \"$package|$class|$testName\",\n    \"description\": \"Replaces all non-latin characters and digits ^[a-zA-Z0-9] to their ASCII octal value.\"\n}]\n\n```",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "copy",
      "title": "copy: CopyStep",
      "description": "You can use the step copy files from master to current slaver.",
      "parameters": [
        {
          "name": "dstFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepMeta",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "srcFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "copyArtifacts",
      "title": "copyArtifacts: Copy artifacts from another project",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "The name of the project to copy artifacts from.\n\n\n \n* ****Maven projects:****\n\n \n  \n Artifacts from all modules will be copied. Enter JOBNAME/MODULENAME here to copy from a particular module; you may copy/paste this from the URL for that module when browsing Jenkins.\n\n **Example:** MyMavenJob/my.group$MyModule \n\n \n \n* ****Matrix projects:****\n\n \n  \n Artifacts from all configurations will be copied, each into a subdirectory with the name of the configuration as seen in its URL when browsing Jenkins.\n\n **Example:** If the target directory is given as fromMatrix then the copy could create $WORKSPACE/fromMatrix/label=slaveA/dist/mybuild.jar and $WORKSPACE/fromMatrix/label=slaveB/dist/mybuild.jar. \n\n  \n To copy from a particular configuration, enter JOBNAME/AXIS=VALUE,.. as seen in the URL for that configuration.\n\n **Example:** MyMatrixJob/jdk=Java6u17 \n\n  \n To copy artifacts from one matrix project to another, use a parameter to select the matching configuration in the source project.\n\n **Example:** OtherMatrixJob/jdk=$jdk \n\n \n \n* ****Multibranch Pipeline projects:****\n\n \n  \n Use a path consisting of the project name followed by the branch name.\n\n **Example:** /MyMultibranchProject/MyBranch \n\n  \n Special letters like '/' in branch names should be escaped. You can see the exact name in \"Full project name\" in job pages of each branch.\n\n **Example:** ../MyMultibranchProject/feature%2Fnavigation \n\n \n \nSee the wiki page [\"How to reference another project by name\"](https://wiki.jenkins.io/display/JENKINS/How+to+reference+another+project+by+name) for more information.",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Specify paths or patterns of artifacts to exclude, even if specified in \"Artifacts to copy\". Can be blank.",
          "isOptional": true
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "Relative paths to artifact(s) to copy or leave blank to copy all artifacts. This works just as a filter, and doesn't care whether all specified artifacts really exists. Check the /artifact/ browser of a build to see the relative paths to use here, as the build page typically hides intermediate directories. Can use wildcards like module/dist/**/*.zip, and use comma (followed by optional whitespace) to separate multiple entries. See the @includes of [Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format. May also contain references to build parameters like $PARAM.",
          "isOptional": true
        },
        {
          "name": "fingerprintArtifacts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "flatten",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optional",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "String",
          "values": [],
          "description": "Jobs may be filtered to select only builds matching particular parameters or other build variables. Use PARAM=VALUE,... to list the parameter filter; this is the same syntax as described for multiconfiguration jobs in <i>Project name</i> except with parameters instead of axis values. For example, FOO=bar,BAZ=true examines only builds that ran with parameter FOO set to bar and the checkbox for BAZ was checked. \n\n \n You shouldn't use \"Build selector for Copy Artifact\" parameters here, as it doesn't preserve compatibility when you upgrade plugins, and doesn't work for builds built before upgrading.",
          "isOptional": true
        },
        {
          "name": "resultVariableSuffix",
          "type": "String",
          "values": [],
          "description": "The build number of the selected build will be recorded into the variable named COPYARTIFACT_BUILD_NUMBER_(SUFFIX) for later build steps to reference. You can specify that suffix part for that variable here.\n \n If not specified, the source project name will be used instead (in all uppercase, and sequences of characters other than A-Z replaced by a single underscore). \n\n \n**Example**: \n\n <table>\n  <tbody>\n   <tr>\n <th>Source project name</th>\n <th>Suffix to be used</th>\n   </tr>\n   <tr>\n <td>Project-ABC</td>\n <td>PROJECT_ABC</td>\n   </tr>\n   <tr>\n <td>tool1-release1.2</td>\n <td>TOOL_RELEASE_</td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "selector",
          "type": "Nested",
          "values": [
            "downstream",
            "lastWithArtifacts",
            "lastCompleted",
            "$class: 'MultiJobBuildSelector'",
            "buildParameter",
            "permalink",
            "$class: 'PromotedBuildSelector'",
            "latestSavedBuild",
            "specific",
            "lastSuccessful",
            "upstream",
            "workspace"
          ],
          "description": "How to select the build to copy artifacts from, such as latest successful or stable build, or latest \"keep forever\" build. Other plugins may provide additional selections.\n \n\n The build number of the selected build will be recorded in the environment for later build steps to reference. For details, see the help of \"Result variable suffix\" in \"Advanced\" section.",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "Target base directory for copy, or leave blank to use the <a rel=\"nofollow\">workspace</a>. Directory (and parent directories, if any) will be created if needed. May contain references to build parameters like $PARAM.",
          "isOptional": true
        }
      ],
      "plugin": "copyartifact"
    },
    {
      "command": "countDownLatch",
      "title": "countDownLatch: Decrements the count of the latch.",
      "description": "",
      "parameters": [
        {
          "name": "latch",
          "type": "class com.github.topikachu.jenkins.concurrent.latch.LatchRef",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "coverityIssueCheck",
      "title": "coverityIssueCheck: Check for Issues in Coverity View",
      "description": "",
      "parameters": [
        {
          "name": "coverityInstanceUrl",
          "type": "String",
          "values": [],
          "description": "Specify which Synopsys Coverity connect instance to check for issues.",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the Coverity project the view is associated with.",
          "isOptional": true
        },
        {
          "name": "returnIssueCount",
          "type": "boolean",
          "values": [],
          "description": "If checked, will return the number of issues discovered in the specified Coverity view instead of throwing an exception.",
          "isOptional": true
        },
        {
          "name": "viewName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the Coverity view that you would like to check for issues.",
          "isOptional": true
        }
      ],
      "plugin": "synopsys-coverity"
    },
    {
      "command": "coverityResults",
      "title": "coverityResults: Publish Coverity View Results",
      "description": "The Publish Coverity View Results step will retrieve issues from the configured Coverity Connect Instance, Project, and View. This step does not run any Coverity Analysis tools, it only retrieves the latest issues for the configured Project and View. It is recommended to run Coverity analyze and commit as prior step(s) in the pipeline to retrieve up to date results. \n\n \n The Instance is configured in the Global Configuration, use the name of the instance or this step. The Project is the string name identifier of the Coverity Connect project. The View is the name or numeric ID of the view to retrieve issues from. Any filtering details for issue results this pipeline step will use can be configured in the Coverity Connect UI, it is recommended to use a custom \"Issues: By Snapshot\" view for this pipeline. \n\n \n **Note:** if the are multiple streams in the project the view should be configured so the view filter uses only the stream for this pipeline. Additionally, it is recommended to filter the status value to not retrieve any Fixed or Dismissed issues.",
      "parameters": [
        {
          "name": "connectInstance",
          "type": "String",
          "values": [],
          "description": "Select the Coverity Connect instance that should be used to fetch results. Instances can be added in the global configuration page under the Coverity section.",
          "isOptional": false
        },
        {
          "name": "connectView",
          "type": "String",
          "values": [],
          "description": "The Coverity Connect view that will be used to fetch the issues. This view should be configured to show issues for the project and stream which this pipeline is for.",
          "isOptional": false
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "The Coverity Connect Project to fetch issues from. Projects will be listed in the Coverity Connect UI under Configuration -&gt; Projects & Streams or by using the top right search to view all projects. The plain text project name can be used here. \n\n \n **Note:** by default all Streams within a project will be used, so the View specified in conjunction with this value can filter the stream appropriately.",
          "isOptional": false
        },
        {
          "name": "abortPipeline",
          "type": "boolean",
          "values": [],
          "description": "Abort the pipeline run if issues are found in the specified view. Optional value which defaults to false.",
          "isOptional": true
        },
        {
          "name": "failPipeline",
          "type": "boolean",
          "values": [],
          "description": "Mark the pipeline run as a failure if issues are found in the specified view. Optional value which defaults to false.",
          "isOptional": true
        },
        {
          "name": "unstable",
          "type": "boolean",
          "values": [],
          "description": "Mark the pipeline run as unstable if issues are found in the specified view. Optional value which defaults to false.",
          "isOptional": true
        }
      ],
      "plugin": "coverity"
    },
    {
      "command": "cpack",
      "title": "cpack: Run cpack",
      "description": "Runs the tool and returns the exit code of the process.",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "arguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoredExitCodes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cmakebuilder"
    },
    {
      "command": "createBarrier",
      "title": "createBarrier: Create a Cyclic Barrier.",
      "description": "",
      "parameters": [
        {
          "name": "count",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "createCloudifyEnv",
      "title": "createCloudifyEnv: Create Cloudify Environment",
      "description": "Creates a topology from an environment blueprint.\n\n \nThe \"Output File\" parameter denotes where the new environment's outputs will be written to. Later build steps can inspect this file in order to grab information pertinent to them (such as IP addresses, user names and so forth).\n\n \n All input fields support standard Jenkins parameters' expansion. For example, the string `${app_name}` will be expanded, in runtime, to the value of a build parameter called `app_name` . \n\n \nFor explanation about the format of the outputs file, refer to the help tooltip for that parameter.",
      "parameters": [
        {
          "name": "blueprintId",
          "type": "String",
          "values": [],
          "description": "Unique identifier for the created deployment.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "Identifies the blueprint to create a deployment off.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "echoOutputs",
          "type": "boolean",
          "values": [],
          "description": "At the end of the build step, print the outputs and capabilities to the console.",
          "isOptional": true
        },
        {
          "name": "inputs",
          "type": "String",
          "values": [],
          "description": "A YAML/JSON containing inputs for the deployment. These inputs will be merged with inputs provided through the \" `inputs file` \" parameter.",
          "isOptional": true
        },
        {
          "name": "inputsFile",
          "type": "String",
          "values": [],
          "description": "A path (relative to the workspace root) to a YAML/JSON file containing inputs for the deployment. These inputs will be merged with inputs provided through the \" `inputs` \" parameter.",
          "isOptional": true
        },
        {
          "name": "mapping",
          "type": "String",
          "values": [],
          "description": "If specified, this YAML/JSON will be used to transform a YAML/JSON coming from the \"inputs file\" parameter. This is useful if the \"inputs file\" is the result of a different Cloudify environment build.\n\n \nThis parameter must not be provided if \"mapping file\" is provided.",
          "isOptional": true
        },
        {
          "name": "mappingFile",
          "type": "String",
          "values": [],
          "description": "If specified, this YAML/JSON file will be used to transform a YAML/JSON coming from the \"inputs file\" parameter. This is useful if the \"inputs file\" is the result of a different Cloudify environment build.\n\n \nThis parameter must not be provided if \"mapping\" is provided.",
          "isOptional": true
        },
        {
          "name": "outputFile",
          "type": "String",
          "values": [],
          "description": "Name of file into which the deployment's outputs and capabilities will be written. The file will be a JSON, adhering to the following format:\n\n \n```groovy\n{\n    \"outputs\": &lt;outputs_dictionary&gt;,\n    \"capabilities\": &lt;capabilities_dictionary&gt;\n}\n\t\n```",
          "isOptional": true
        },
        {
          "name": "skipInstall",
          "type": "boolean",
          "values": [],
          "description": "Only create a Cloudify deployment; skip running the `install` workflow.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "createCondition",
      "title": "createCondition: Create a lock.",
      "description": "",
      "parameters": [],
      "plugin": "concurrent-step"
    },
    {
      "command": "createDeployment",
      "title": "createDeployment: Deploys an application revision through the specified deployment group (AWS CodeDeploy).",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentConfigName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentGroupName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fileExistsBehavior",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitHubCommitId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitHubRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreApplicationStopFailures",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3Bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3BundleType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "s3Key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForCompletion",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "createDeploymentEvent",
      "title": "createDeploymentEvent: create Dynatrace Deployment event",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "createDynamicAnkaNode",
      "title": "createDynamicAnkaNode: create dynamic anka node",
      "description": "",
      "parameters": [
        {
          "name": "masterVmId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "SSHPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deleteLatest",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dontAppendTimestamp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environments",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "group",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jnlpJenkinsOverrideUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jnlpTunnel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAliveOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labelString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "launchDelay",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "launchMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mode",
          "type": "Enum",
          "values": [
            "NORMAL",
            "EXCLUSIVE"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numberOfExecutors",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "priority",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pushTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteFS",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "retentionStrategy",
          "type": "Nested",
          "values": [
            "$class: 'AlmostAlways'",
            "always",
            "$class: 'AzureVMCloudOnceRetentionStrategy'",
            "$class: 'AzureVMCloudPoolRetentionStrategy'",
            "azureVMCloudRetentionStrategy",
            "$class: 'ContainerIdleRetentionStrategy'",
            "$class: 'ContainerOnceRetentionStrategy'",
            "demand",
            "$class: 'DockerCloudRetentionStrategy'",
            "$class: 'DockerSwarmAgentRetentionStrategy'",
            "$class: 'IdleTimeCloudRetentionStrategy'",
            "schedule",
            "$class: 'VSphereCloudRetentionStrategy'",
            "$class: 'com.github.kostyasha.yad.strategy.DockerOnceRetentionStrategy'",
            "$class: 'com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy'",
            "$class: 'com.veertu.plugin.anka.RunOnceCloudRetentionStrategy'",
            "$class: 'io.jenkins.plugins.orka.RunOnceCloudRetentionStrategy'",
            "$class: 'org.jenkinsci.plugins.vsphere.RunOnceCloudRetentionStrategy'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveImage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "suspend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateDescription",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "anka-build"
    },
    {
      "command": "createDynatraceDeploymentEvent",
      "title": "createDynatraceDeploymentEvent: create Dynatrace Deployment event",
      "description": "",
      "parameters": [
        {
          "name": "envId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customProperties",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "entityIds",
          "type": "Nested",
          "values": [
            "$class: 'Application'",
            "$class: 'Host'",
            "$class: 'Process'",
            "$class: 'ProcessGroup'",
            "$class: 'Service'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagMatchRules",
          "type": "Nested",
          "values": [
            "meTypes",
            "tags"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatracesaas"
    },
    {
      "command": "createEnvironment",
      "title": "createEnvironment: Creates the testing environment. Locates, installs and waits for installed resources to become ready",
      "description": "",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "annotations",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scriptEnvironmentVariables",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentSetupScriptUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentTeardownScriptUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentConfigUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentDependencies",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitTimeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitForServiceList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceLazyCreateEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceCleanupEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceDestroyEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-arquillian-steps"
    },
    {
      "command": "createEvent",
      "title": "createEvent: Creates a JSON payload event in Elasticsearch",
      "description": "",
      "parameters": [
        {
          "name": "json",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "index",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-devops-steps"
    },
    {
      "command": "createLatch",
      "title": "createLatch: Create a count down latch.",
      "description": "",
      "parameters": [
        {
          "name": "count",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "createMemoryDump",
      "title": "createMemoryDump: create memory dump",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "agent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "autoPostProcess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "capturePrimitives",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "captureStrings",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dogc",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "lockSession",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "createSemaphore",
      "title": "createSemaphore: Create a semaphore.",
      "description": "",
      "parameters": [
        {
          "name": "permit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "createSummary",
      "title": "createSummary: Print Message",
      "description": "",
      "parameters": [
        {
          "name": "icon",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "createTag",
      "title": "createTag: Create Tag (Nexus Repository Manager 3.x)",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "Tag name is required and must be unique. Name can only contain letters, numbers, underscores, hyphens and dots and cannot start with an underscore or dot. The name cannot exceed 256 characters",
          "isOptional": false
        },
        {
          "name": "tagAttributesJson",
          "type": "String",
          "values": [],
          "description": "Optional metadata for the tag in JSON format. These attributes will be merged with those contained in the attributes file if both are provided. Attributes in this field will override those present in the file",
          "isOptional": true
        },
        {
          "name": "tagAttributesPath",
          "type": "String",
          "values": [],
          "description": "The file path (environment-aware) to the optional metadata for the tag, using the workspace as the base path",
          "isOptional": true
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "createThreadDump",
      "title": "createThreadDump: create thread dump",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "agent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lockSession",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "crxBuild",
      "title": "crxBuild: Build a Content Package on CRX",
      "description": "Create and build a content package on CRX by specifying a workspace filter, and then download it to the workspace to get archived as a backup, or as the beginning of a magical content package adventure, full of drama, suspense, and deployments to lower environments!",
      "parameters": [
        {
          "name": "packageId",
          "type": "String",
          "values": [],
          "description": "Specify a list of package IDs to replicate from each specified Base URL. Each package ID string must occupy its own line.\n \n\n\n \n\n A Package ID consists of the group, the name, and the version of a package, separated by colons (':'), as in: \"group:name:version\". The version may be omitted.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "baseUrl",
          "type": "String",
          "values": [],
          "description": "Specify the base URL of the Adobe Granite server, including hostname and port. The CRX Package Manager service path will be appended to this value for all requests. For example, **http://localhost:4502** or **https://author.mycorp.com**, etc.\n \n\n\n \n\n If login credentials for the server are different than those configured in the Connection Options section, you may override them in the Base URL by inserting `username[:password]@` between the scheme and the hostname.\n \n\n\n \n\n For example, to override the Username without changing the associated password or private key, you may use the following form:\n \n\n\n \n\n http://**deployer@**localhost:4502\n \n\n\n \n\n To override the credentials completely, provide a username and password (which may be provided by an encrypted parameter) by separating them with a colon, as shown below:\n \n\n http://**deployer:Password123@**localhost:4502\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the login credentials for authenticating requests to the CRX server.\n \n\n\n \n\n **[Signature]** credentials may be used if the target server supports HTTP Signature Authentication using the keyId format, `/$username/keys/$fingerprint`.\n \n\n\n \n\n Select \"-none-\" to use the default credentials set in the global **CRX Content Package Deployer - HTTP Client** configuration.",
          "isOptional": true
        },
        {
          "name": "download",
          "type": "boolean",
          "values": [],
          "description": "Check this box to download the package after building it.",
          "isOptional": true
        },
        {
          "name": "localDirectory",
          "type": "String",
          "values": [],
          "description": "Specify a path relative to the workspace where the package will be downloaded (if the \"Download\" box is checked).\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "requestTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for a response for each individual request. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "serviceTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for PackageManager service availability between sending POST requests. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "waitDelay",
          "type": "long",
          "values": [],
          "description": "Specify a delay in milliseconds before calls to check for Package Manager service availability. Increase this value if a /crx/packmgr node is sometimes created in the repository by this step, indicating that the Package Manager servlet was brought down for bundle installation AFTER a successful check for service availability, but BEFORE the next POST request was sent. What happens is that the SlingPostServlet takes over when the crx-packagemgr bundle is refreshed and creates nodes for any POST requests that it handles. Increasing this delay gives more time for the bundle refresh process to begin on the server.",
          "isOptional": true
        },
        {
          "name": "wspFilter",
          "type": "String",
          "values": [],
          "description": "Specify a package workspace filter in a simple text format that will be applied to the package before build. This defines what content will be captured by the package.\n \n\n\n \n\n Simple spec is defined simply as a line-by-line format where:\n \n\n\n \n  \n* each line consists of significant text before an optional comment character (#)\n\n  \n* each line that begins with a \"/\" begins a new filter root.\n\n  \n* the first non-empty, non-comment line must define a new filter root\n\n  \n* each non-empty, non-comment line after a filter root that begins with a \"+\" or \"-\" defines an include or exclude rule, respectively. Everything following the \"+\" or \"-\" must be a valid regular expression\n\n  Content is \"covered\" by a filter root if the content path starts with, or is the same as the filter root path. Once the \"covering\" filter root is identified, its include/exclude rules are evaluated from top to bottom, by matching the content path against each rule pattern (which is a Java regular expression). The last rule whose pattern matches the content path defines whether that content is included (line starts with \"+\") or excluded (line starts with \"-\"). If no rules are defined, all content covered by that root path is included\n \n\n\n \n\n For example, to include everything under /etc except for packages:\n \n\n\n \n\n\n \n```groovy\n        /etc                 # define /etc as the filter root\n        +/etc(/.*)?          # include everything under /etc\n        -/etc/packages(/.)?  # exclude package paths\n    \n```\n To create a package for a project \"acme\" defined in CRX DE Lite, a filter may look like this:\n \n\n\n \n\n\n \n```groovy\n        /content/acme        # include the site content\n        /apps/acme           # include the app code\n    \n```\n This field supports parameter tokens.",
          "isOptional": true
        }
      ],
      "plugin": "crx-content-package-deployer"
    },
    {
      "command": "crxDeploy",
      "title": "crxDeploy: Deploy Content Packages to CRX",
      "description": "Deploy CRX Content Package files from the workspace to a configured Adobe Granite repository via the CRX Package Manager.\n \n\n\n \n\n Only package files with **.zip** or **.jar** extensions will be identified and deployed.",
      "parameters": [
        {
          "name": "packageIdFilters",
          "type": "String",
          "values": [],
          "description": "Specify a list of package ID filters and path filters to match against identified Vault packages located in the workspace. Each filter string must occupy its own line.\n \n\n\n \n\n A Package ID consists of the group, the name, and the version of a package, separated by colons (':').\n \n\n Package ID filters must follow one of three patterns:\n \n\n\n \n  \n*  group:name:version \n\n  \n*  group:name \n\n  \n*  name \n\n  Each segment in the package ID filter may be either ommitted or replaced with an asterisk ('*') to represent a wildcard.\n \n\n\n \n\n This step now supports path filters as well. A path filter is a path suffix relative to the localDirectory ending in '.zip' or '.jar', which may include '**', '*', and '?' wildcard characters.\n \n\n\n \n\n For example, this pattern will match all zip files under the Local Directory:\n \n\n\n \n\n\n \n```groovy\n        **/*.zip\n    \n```\n This pattern will only match packages located directly under the Packages folder whose filenames begin with 'acme-':\n \n\n\n \n\n\n \n```groovy\n        Packages/acme-*.zip\n    \n```\n Matching packages will be uploaded in the order in which the filters are specified. Only the highest matching version of a package identified by 'group:name' will be deployed, and it will only be deployed once per build step, regardless of the number of matching filters.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "baseUrls",
          "type": "String",
          "values": [],
          "description": "Specify the base URL of the Adobe Granite server, including hostname and port. The CRX Package Manager service path will be appended to this value for all requests. For example, **http://localhost:4502** or **https://author.mycorp.com**, etc.\n \n\n\n \n\n Multiple urls can be specified, one per line. All specified packages will be deployed to one server before beginning deployments to the next one.\n \n\n\n \n\n If login credentials for one of the servers are different than those configured in the Connection Options section, you may override them in the Base URL by inserting `username[:password]@` between the scheme and the hostname.\n \n\n\n \n\n For example, to override the Username without changing the associated password or private key, you may use the following form:\n \n\n\n \n\n http://**deployer@**localhost:4502\n \n\n\n \n\n To override the credentials completely, provide a username and password (which may be provided by an encrypted parameter) by separating them with a colon, as shown below:\n \n\n\n \n\n http://**deployer:Password123@**localhost:4502\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "acHandling",
          "type": "String",
          "values": [],
          "description": "Change the way content ACL's included in the package filter scope are handled during installation.\n \n  \n* **Defer to Package**\n\n  \n   Allow package to specify AC Handling mode. (This can be dangerous. Consider using a **Validate CRX Content Packages** step to check packages for destructive AC Handling rules before you deploy them.)\n  \n  \n* **Ignore**\n\n  \n   Ignores the packaged access control and leaves the target unchanged.\n  \n  \n* **MergePreserve**\n\n  \n   Merge access control in the content with the one provided with the package by adding the access control entries of principals not present in the content (i.e. content first). It never alters access control entries already existing in the content.\n  \n  \n* **Merge**\n\n  \n   Merge access control provided with the package with the one in the content by replacing the access control entries of corresponding principals (i.e. package first). It never alters access control entries of principals not present in the package.\n  \n  \n* **Overwrite**\n\n  \n   Applies the access control provided with the package to the target. This also removes existing access control.\n  \n  \n* **Clear**\n\n  \n   Clears all access control on the target system.",
          "isOptional": true
        },
        {
          "name": "autosave",
          "type": "int",
          "values": [],
          "description": "Specify the number of changes to batch before saving the JCR session during package installation.",
          "isOptional": true
        },
        {
          "name": "behavior",
          "type": "String",
          "values": [],
          "description": "Specify the behavior when a package exists on the target server that has the same package ID as one you are trying to deploy.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the login credentials with which content packages will be deployed to the CRX server.\n \n\n\n \n\n **[Signature]** credentials may be used if the target server supports HTTP Signature Authentication using the keyId format, `/$username/keys/$fingerprint`.\n \n\n\n \n\n Select \"-none-\" to use the default credentials set in the global **CRX Content Package Deployer - HTTP Client** configuration.",
          "isOptional": true
        },
        {
          "name": "disableForJobTesting",
          "type": "boolean",
          "values": [],
          "description": "Check this box to disable package deployment during Jenkins Job testing. For example, it is often necessary to test changes to artifact resolution configuration or to test Vault package identification. By checking this box, you can be sure that no installation will occur on any Granite server, and you will also see additional debug messaging in the console log describing the results of identification of Vault packages in the workspace.",
          "isOptional": true
        },
        {
          "name": "localDirectory",
          "type": "String",
          "values": [],
          "description": "Specify a path relative to the workspace in which to scan for packages.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "values": [],
          "description": "Check this box to install any sub-packages along with the deployed package.",
          "isOptional": true
        },
        {
          "name": "replicate",
          "type": "boolean",
          "values": [],
          "description": "Check this box to replicate each package after installation. This will not be attempted if the package installation fails, and only packages which have actually been installed by this step (rather than simply uploaded or skipped) will be replicated. This happens asynchronously, so you won't really know if the replication was successful or not unless you manually check your replication agent logs. For this reason, it might be better instead to deploy to each replication target directly.",
          "isOptional": true
        },
        {
          "name": "requestTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for a response for each individual request. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "serviceTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for PackageManager service availability between sending POST requests. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "waitDelay",
          "type": "long",
          "values": [],
          "description": "Specify a delay in milliseconds before calls to check for Package Manager service availability. Increase this value if a /crx/packmgr node is sometimes created in the repository by this step, indicating that the Package Manager servlet was brought down for bundle installation AFTER a successful check for service availability, but BEFORE the next POST request was sent. What happens is that the SlingPostServlet takes over when the crx-packagemgr bundle is refreshed and creates nodes for any POST requests that it handles. Increasing this delay gives more time for the bundle refresh process to begin on the server.",
          "isOptional": true
        }
      ],
      "plugin": "crx-content-package-deployer"
    },
    {
      "command": "crxDownload",
      "title": "crxDownload: Download Content Packages from CRX",
      "description": "Download CRX Content Package files from a configured Adobe Granite repository into the workspace via the CRX Package Manager.",
      "parameters": [
        {
          "name": "packageIds",
          "type": "String",
          "values": [],
          "description": "Specify a list of package IDs to download to the workspace. Each package ID string must occupy its own line.\n \n\n\n \n\n A Package ID consists of the group, the name, and the version of a package, separated by colons (':'), as in: \"group:name:version\".\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "baseUrl",
          "type": "String",
          "values": [],
          "description": "Specify the base URL of the Adobe Granite server, including hostname and port. The CRX Package Manager service path will be appended to this value for all requests. For example, **http://localhost:4502** or **https://author.mycorp.com**, etc.\n \n\n\n \n\n If login credentials for the server are different than those configured in the Connection Options section, you may override them in the Base URL by inserting `username[:password]@` between the scheme and the hostname.\n \n\n\n \n\n For example, to override the Username without changing the associated password or private key, you may use the following form:\n \n\n\n \n\n http://**deployer@**localhost:4502\n \n\n\n \n\n To override the credentials completely, provide a username and password (which may be provided by an encrypted parameter) by separating them with a colon, as shown below:\n \n\n\n \n\n http://**deployer:Password123@**localhost:4502\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the login credentials with which content packages will be downloaded from the CRX server.\n \n\n\n \n\n **[Signature]** credentials may be used if the target server supports HTTP Signature Authentication using the keyId format, `/$username/keys/$fingerprint`.\n \n\n\n \n\n Select \"-none-\" to use the default credentials set in the global **CRX Content Package Deployer - HTTP Client** configuration.",
          "isOptional": true
        },
        {
          "name": "ignoreErrors",
          "type": "boolean",
          "values": [],
          "description": "Check this box to ignore errors during download such that the build continues after completion of this step.",
          "isOptional": true
        },
        {
          "name": "localDirectory",
          "type": "String",
          "values": [],
          "description": "Specify a path relative to the workspace to which packages will be downloaded.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "rebuild",
          "type": "boolean",
          "values": [],
          "description": "Check this box to rebuild each package before downloading it. If rebuilding a package fails, the job will fail, unless Ignore Errors is also checked. If there are errors during rebuild, but it is ultimately reported as successful, then the job will be marked as unstable and the download step will continue.",
          "isOptional": true
        },
        {
          "name": "requestTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for a response for each individual request. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "serviceTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for PackageManager service availability between sending POST requests. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "waitDelay",
          "type": "long",
          "values": [],
          "description": "Specify a delay in milliseconds before calls to check for Package Manager service availability. Increase this value if a /crx/packmgr node is sometimes created in the repository by this step, indicating that the Package Manager servlet was brought down for bundle installation AFTER a successful check for service availability, but BEFORE the next POST request was sent. What happens is that the SlingPostServlet takes over when the crx-packagemgr bundle is refreshed and creates nodes for any POST requests that it handles. Increasing this delay gives more time for the bundle refresh process to begin on the server.",
          "isOptional": true
        }
      ],
      "plugin": "crx-content-package-deployer"
    },
    {
      "command": "crxReplicate",
      "title": "crxReplicate: Replicate Content Packages from CRX",
      "description": "Asynchronously replicate CRX Content Packages from one-or-more configured Adobe Granite repositories to wherever their replication agents may take them. This is probably not the most deterministic way to install packages on publish servers, so prefer using the \"Deploy Content Packages\" step if possible.",
      "parameters": [
        {
          "name": "packageIds",
          "type": "String",
          "values": [],
          "description": "Specify a list of package IDs to replicate from each specified Base URL. Each package ID string must occupy its own line.\n \n\n\n \n\n A Package ID consists of the group, the name, and the version of a package, separated by colons (':'), as in: \"group:name:version\".\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "baseUrls",
          "type": "String",
          "values": [],
          "description": "Specify the base URL of the Adobe Granite server, including hostname and port. The CRX Package Manager service path will be appended to this value for all requests. For example, **http://localhost:4502** or **https://author.mycorp.com**, etc.\n \n\n\n \n\n Multiple urls can be specified, one per line. All specified packages will be replicated from one server before beginning replications from the next one.\n \n\n\n \n\n If login credentials for one of the servers are different than those configured in the Connection Options section, you may override them in the Base URL by inserting `username[:password]@` between the scheme and the hostname.\n \n\n\n \n\n For example, to override the Username without changing the associated password or private key, you may use the following form:\n \n\n\n \n\n http://**deployer@**localhost:4502\n \n\n\n \n\n To override the credentials completely, provide a username and password (which may be provided by an encrypted parameter) by separating them with a colon, as shown below:\n \n\n\n \n\n http://**deployer:Password123@**localhost:4502\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the login credentials with which content packages will be replicated from the CRX server.\n \n\n\n \n\n **[Signature]** credentials may be used if the target server supports HTTP Signature Authentication using the keyId format, `/$username/keys/$fingerprint`.\n \n\n\n \n\n Select \"-none-\" to use the default credentials set in the global **CRX Content Package Deployer - HTTP Client** configuration.",
          "isOptional": true
        },
        {
          "name": "ignoreErrors",
          "type": "boolean",
          "values": [],
          "description": "Check this box to ignore errors during replication such that the build continues after completion of this step.",
          "isOptional": true
        },
        {
          "name": "requestTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for a response for each individual request. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "serviceTimeout",
          "type": "long",
          "values": [],
          "description": "Specify the timeout in milliseconds to wait for PackageManager service availability between sending POST requests. Specify a value of 0 to use default behavior.",
          "isOptional": true
        },
        {
          "name": "waitDelay",
          "type": "long",
          "values": [],
          "description": "Specify a delay in milliseconds before calls to check for Package Manager service availability. Increase this value if a /crx/packmgr node is sometimes created in the repository by this step, indicating that the Package Manager servlet was brought down for bundle installation AFTER a successful check for service availability, but BEFORE the next POST request was sent. What happens is that the SlingPostServlet takes over when the crx-packagemgr bundle is refreshed and creates nodes for any POST requests that it handles. Increasing this delay gives more time for the bundle refresh process to begin on the server.",
          "isOptional": true
        }
      ],
      "plugin": "crx-content-package-deployer"
    },
    {
      "command": "crxValidate",
      "title": "crxValidate: Validate CRX Content Packages",
      "description": "Validate that content packages in the workspace conform to restrictions on the scope of their WorkspaceFilter and on the types of embedded files. Use this to enforce security policies to prevent developers from deploying content or code through continuous integration.\n \n\n\n \n\n Only package files with **.zip** or **.jar** extensions will be identified and deployed.",
      "parameters": [
        {
          "name": "packageIdFilters",
          "type": "String",
          "values": [],
          "description": "Specify a list of package ID filters to match against identified Vault packages located in the workspace. Each filter string must occupy its own line.\n \n\n\n \n\n A Package ID consists of the group, the name, and the version of a package, separated by colons (':').\n \n\n\n \n\n Package ID filters must follow one of three patterns:\n \n\n\n \n  \n*  group:name:version \n\n  \n*  group:name \n\n  \n*  name \n\n  Each segment in the package ID filter may be either ommitted or replaced with an asterisk ('*') to represent a wildcard.\n \n\n\n \n\n This step now supports path filters as well. A path filter is a path suffix relative to the localDirectory ending in '.zip' or '.jar', which may include '**', '*', and '?' wildcard characters.\n \n\n\n \n\n For example, this pattern will match all zip files under the Local Directory:\n \n\n\n \n\n\n \n```groovy\n        **/*.zip\n    \n```\n This pattern will only match packages located directly under the Packages folder whose filenames begin with 'acme-':\n \n\n\n \n\n\n \n```groovy\n        Packages/acme-*.zip\n    \n```\n Matching packages will be validated in the order in which the filters are specified. At least one package must match each filter or the step will fail.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "allowNonCoveredRoots",
          "type": "boolean",
          "values": [],
          "description": "Check this box to allow package workspace filters to cover roots which are not covered by the validation workspace filter.",
          "isOptional": true
        },
        {
          "name": "forbiddenACHandlingModeSet",
          "type": "String",
          "values": [],
          "description": "Select a set of AC Handling Modes to forbid, to prevent destructive or unauthorized changes to Access Control Lists, at the package level:\n \n\n\n \n\n\n \n  \n* **Skip Validation**\n\n  \n   Do not validate package AC Handling Mode.\n  \n  \n* **No Clear**\n\n  \n   Forbid the \"Clear\" AC Handling Mode, which resets all covered ACLs (Forbids \"Clear\").\n  \n  \n* **No Unsafe**\n\n  \n   Forbid any AC Handling Mode which may delete ACLs for unspecified users (Forbids \"Clear\", \"Overwrite\").\n  \n  \n* **Allow Additive**\n\n  \n   Forbid any AC Handling Mode which may delete or overwrite an existing ACL (Forbids \"Clear\", \"Overwrite\", \"Merge\").\n  \n  \n* **No ACLs**\n\n  \n   Forbid any AC Handling Mode other than \"Ignore\" (Forbids \"Clear\", \"Overwrite\", \"Merge\", \"MergePreserve\").",
          "isOptional": true
        },
        {
          "name": "forbiddenExtensions",
          "type": "String",
          "values": [],
          "description": "List of file extensions to scan the package for (as a jar file), one per line. For example, specify the following to ensure that embedded jar files and package files are not included in the package even if the workspace filter does not cover the paths from where they could be theoretically installed:\n \n\n\n \n\n\n \n```groovy\n        .jar\n        .zip\n    \n```\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "forbiddenFilterRootPrefixes",
          "type": "String",
          "values": [],
          "description": "List of path prefixes which are forbidden to be the same path or an ancestor of any workspace filter root. Surrounding whitespace and trailing slashes are ignored and the prefix is treated as an atomic path. For example:\n \n\n\n \n\n\n \n```groovy\n/apps/system\n```\n\n \n\n will fail a package defining a filter root of\n \n```groovy\n/apps/system/config\n```\n\n \n\n but it will not fail a package filter covering only\n \n```groovy\n/apps/systemOfADown/config\n```\n\n \n\n Use this test to safeguard entire repository trees from package installation or uninstallation.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "localDirectory",
          "type": "String",
          "values": [],
          "description": "Specify a path relative to the workspace in which to scan for packages to validate.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "pathsDeniedForInclusion",
          "type": "String",
          "values": [],
          "description": "List of test paths which must be \"excluded\" by the package filter in order to be considered valid. For example:\n \n\n\n \n\n\n \n```groovy\n        /apps/system/rep:policy\n        /etc/map/http/site_root_redirect\n    \n```\n Use this test to safeguard specific paths or possible paths within unrestricted roots from overly broad workspace filters.\n \n\n\n \n\n This field supports parameter tokens.",
          "isOptional": true
        },
        {
          "name": "validationFilter",
          "type": "String",
          "values": [],
          "description": "Specify a validation workspace filter in a simple text format that each package workspace filter will be evaluated against.\n \n\n\n \n\n Simple spec is defined simply as a line-by-line format where:\n \n\n\n \n  \n* each line consists of significant text before an optional comment character (#)\n\n  \n* each line that begins with a \"/\" begins a new filter root.\n\n  \n* the first non-empty, non-comment line must define a new filter root\n\n  \n* each non-empty, non-comment line after a filter root that begins with a \"+\" or \"-\" defines an include or exclude rule, respectively. Everything following the \"+\" or \"-\" must be a valid regular expression\n\n  A package filter root is \"covered\" by a validation filter root if the package filter root path starts with, or is the same as the validation filter root path. Once the \"covering\" validation filter root is identified, the package filter root's include/exclude rules are inspected to be sure that they contain all of the validation filter's rules in order, at the end of the list.\n \n\n\n \n\n For example, to require that packages exclude the /etc/packages folder:\n \n\n\n \n\n\n \n```groovy\n        /etc                 # define /etc as the filter root\n        -/etc/packages(/.)?  # exclude package paths\n    \n```\n This field supports parameter tokens.",
          "isOptional": true
        }
      ],
      "plugin": "crx-content-package-deployer"
    },
    {
      "command": "cryptomove",
      "title": "cryptomove: Run a command with CryptoMove Key Vault",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The command you want to run with your CryptoMove Key Vault secrets.",
          "isOptional": false
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cryptomove"
    },
    {
      "command": "ctest",
      "title": "ctest: Run ctest",
      "description": "Runs the tool and returns the exit code of the process.",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "arguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoredExitCodes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cmakebuilder"
    },
    {
      "command": "ctmInitiatePipeline",
      "title": "ctmInitiatePipeline: Initiate a Continuum Pipeline Definition with matching 'key' information.",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "Continuum server's root URL. If not specified, the value of <em>CTM_SERVER_URL</em> environment variable will be used.",
          "isOptional": false
        },
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "Continuum API token. When specified, this value has precedence over selected credential.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credential that contains the Continuum API key as password. If not specified, the value of <em>CTM_CRED_ID</em> environment variable will be used.",
          "isOptional": true
        },
        {
          "name": "definition",
          "type": "String",
          "values": [],
          "description": "Id or name of the pipeline definition to initiate.",
          "isOptional": true
        },
        {
          "name": "environmentVariables",
          "type": "String",
          "values": [],
          "description": "Comma-separated list of environment variables to be included as 'details'. Enter '*' to include all variables.",
          "isOptional": true
        },
        {
          "name": "group",
          "type": "String",
          "values": [],
          "description": "Summary name (i.e. branch name) used to group all runs of this definition/project combination. Describes your 'use' of this pipeline.",
          "isOptional": true
        },
        {
          "name": "instanceName",
          "type": "String",
          "values": [],
          "description": "An explicit name for this unique run (Autogenerated if omitted).",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Mark current job as **unstable** if this step fails to initiate Continuum pipeline.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "An identifying name for a continuum project (i.e. repo name). Useful if a single pipeline definition supports multiple projects.",
          "isOptional": true
        }
      ],
      "plugin": "continuum"
    },
    {
      "command": "ctmPostPiData",
      "title": "ctmPostPiData: Post data to the workspace on a running Continuum pipeline instance.",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "Continuum server's root URL. If not specified, the value of <em>CTM_SERVER_URL</em> environment variable will be used.",
          "isOptional": false
        },
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "Continuum API token. When specified, this value has precedence over selected credential.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credential that contains the Continuum API key as password. If not specified, the value of <em>CTM_CRED_ID</em> environment variable will be used.",
          "isOptional": true
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "The key to set in the workspace data.",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Mark current job as **unstable** if this step fails to post data to Continuum pipeline(s).",
          "isOptional": true
        },
        {
          "name": "pi",
          "type": "String",
          "values": [],
          "description": "The ids of continuum pipelines (comma-separated) to post the data to. If this parameter is not provided, the pipelines that are initiated in the current run will be used.",
          "isOptional": true
        },
        {
          "name": "useLastPi",
          "type": "boolean",
          "values": [],
          "description": "Whether to post the data to all the pipelines or the last pipeline (initiated in the current run using <em>ctmInitiatePipeline</em> step). This flag is only relevant when <em>pi</em> parameter is not specified.",
          "isOptional": true
        },
        {
          "name": "value",
          "type": "String",
          "values": [],
          "description": "Value for the specified key.",
          "isOptional": true
        }
      ],
      "plugin": "continuum"
    },
    {
      "command": "ctmSetPiData",
      "title": "ctmSetPiData: Set workspace data on a running Continuum pipeline instance.",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "Continuum server's root URL. If not specified, the value of <em>CTM_SERVER_URL</em> environment variable will be used.",
          "isOptional": false
        },
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "Continuum API token. When specified, this value has precedence over selected credential.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credential that contains the Continuum API key as password. If not specified, the value of <em>CTM_CRED_ID</em> environment variable will be used.",
          "isOptional": true
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "The key to set in the workspace data.",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Mark current job as **unstable** if this step fails to post data to Continuum pipeline(s).",
          "isOptional": true
        },
        {
          "name": "pi",
          "type": "String",
          "values": [],
          "description": "The ids of continuum pipelines (comma-separated) to set the data on. If this parameter is not provided, the pipelines that are initiated in the current run will be used.",
          "isOptional": true
        },
        {
          "name": "useLastPi",
          "type": "boolean",
          "values": [],
          "description": "Whether to set the data on all the pipelines or the last pipeline (initiated in the current run using <em>ctmInitiatePipeline</em> step). This flag is only relevant when <em>pi</em> parameter is not specified.",
          "isOptional": true
        },
        {
          "name": "value",
          "type": "String",
          "values": [],
          "description": "Value for the specified key.",
          "isOptional": true
        }
      ],
      "plugin": "continuum"
    },
    {
      "command": "cucumber",
      "title": "cucumber: Publish Cucumber test result report",
      "description": "Cucumber test results report in JSON format. When this option is configured, Jenkins can provide useful information about test results, such as historical test result trends, a web UI for viewing test reports, tracking failures, and so on.\n \n To use this feature, first set up your build to run tests, then specify the path to Cucumber JSON files in the [Ant glob syntax](http://ant.apache.org/manual/Types/fileset.html), such as **/build/test-reports/*.json. Be sure not to include any non-report files into this pattern. You can specify only one file pattern. \n\n \n Once there are a few builds running with test results, you should start seeing something like [this](https://wiki.jenkins-ci.org/display/JENKINS/Cucumber+Test+Result+Plugin).",
      "parameters": [
        {
          "name": "testResults",
          "type": "String",
          "values": [],
          "description": "ANT Glob set.",
          "isOptional": false
        },
        {
          "name": "ignoreBadSteps",
          "type": "boolean",
          "values": [],
          "description": "Ignore not closed steps in broken JSON for GherkinParser. See: [#JENKINS-21835](https://issues.jenkins-ci.org/browse/JENKINS-21835)",
          "isOptional": true
        }
      ],
      "plugin": "cucumber-testresult-plugin"
    },
    {
      "command": "cucumber",
      "title": "cucumber: Cucumber reports",
      "description": "**Publishes Cucumber results**\n\n\nThis plugin requires that you use **cucumber** library to generate a **json** report. The plugin uses the json report to produce html reports that are available from jenkins on the build page after a build has run.\n\n\n```groovy\n\timport cucumber.junit.Cucumber;\n\timport org.junit.runner.RunWith;\n\n\t@RunWith(Cucumber.class)\n\t@Cucumber.Options(format = {\"pretty\", \"html:target/cucumber\", \"json:target/cucumber.json\"})\n\tpublic class MyTest {\n\n\t}\n\n```",
      "parameters": [
        {
          "name": "fileIncludePattern",
          "type": "String",
          "values": [],
          "description": "Filter for the files that should be processed. Leave empty to use default pattern `**/*.json`.",
          "isOptional": false
        },
        {
          "name": "buildStatus",
          "type": "String",
          "values": [],
          "description": "Build [result](http://javadoc.jenkins-ci.org/hudson/model/Result.html) to which the build should be set when the report is marked as failed or unstable.",
          "isOptional": true
        },
        {
          "name": "classifications",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "Configure additional information as key-value displayed on main page of the report.",
          "isOptional": true
        },
        {
          "name": "classificationsFilePattern",
          "type": "String",
          "values": [],
          "description": "Filter for the properties files that should be processed as classifications. Leave empty to use default pattern `**/*.properties`.",
          "isOptional": true
        },
        {
          "name": "expandAllSteps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedFeaturesNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of failed features above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "failedFeaturesPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of failed features above which build result is changed.",
          "isOptional": true
        },
        {
          "name": "failedScenariosNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of failed scenarios above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "failedScenariosPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of failed scenarios above which build result is changed.",
          "isOptional": true
        },
        {
          "name": "failedStepsNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of failed steps above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "failedStepsPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of failed steps above which build result is changed.",
          "isOptional": true
        },
        {
          "name": "fileExcludePattern",
          "type": "String",
          "values": [],
          "description": "Filter for the files that should be excluded from the report.",
          "isOptional": true
        },
        {
          "name": "hideEmptyHooks",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jsonReportDirectory",
          "type": "String",
          "values": [],
          "description": "Directory where the JSON cucumber reports are located. By default and for empty value whole workspace is scanned.",
          "isOptional": true
        },
        {
          "name": "mergeFeaturesById",
          "type": "boolean",
          "values": [],
          "description": "Merge features with different JSON files that have same ID so scenarios are be stored in single feature.",
          "isOptional": true
        },
        {
          "name": "mergeFeaturesWithRetest",
          "type": "boolean",
          "values": [],
          "description": "Merge features and scenarios from different JSON files of different runs into a single report by features and scenarios ids.\n\n\n **Example:**\n\n Original cucumber report is \"cucumber.json\". Let's look a situation when couple of tests failed there. Cucumber runner generates a new report, for example, cucumber-rerun.json as a result of rerun the failed tests. \n\n In that case you will have a merged report where all failed tests from the original cucumber.json file are overridden with the results from the cucumber-rerun.json.",
          "isOptional": true
        },
        {
          "name": "pendingStepsNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of pending steps above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "pendingStepsPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of pending steps above which build result is changed.",
          "isOptional": true
        },
        {
          "name": "reportTitle",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipEmptyJSONFiles",
          "type": "boolean",
          "values": [],
          "description": "Skip empty JSON reports. If this flag is not selected then report generation fails on empty file.",
          "isOptional": true
        },
        {
          "name": "skippedStepsNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of skipped steps above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "skippedStepsPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of skipped steps above which build result is changed.",
          "isOptional": true
        },
        {
          "name": "sortingMethod",
          "type": "String",
          "values": [],
          "description": "This section allows to configure what is default sorting method for features:\n\n\n \n* NATURAL - keeps same order as it was in JSON file\n\n \n* ALPHABETICAL - sorts rows alphabetically",
          "isOptional": true
        },
        {
          "name": "stopBuildOnFailedReport",
          "type": "boolean",
          "values": [],
          "description": "The default behaviour is to carry on with the build even if the cucumber report contains failures. This option stops the build. Particularly useful when for example there is a need for all tests to pass before deploying to production. Note that this overrides the Build Status option, and it always marks the build as failed.",
          "isOptional": true
        },
        {
          "name": "trendsLimit",
          "type": "int",
          "values": [],
          "description": "Number of historical reports that should be presented.\n\n\n \n* set to -1 so trends won't be displayed and history won't be stored\n\n \n* set to 0 then all historical reports will be stored and displayed\n\n \n* set to other positive value to decide how many historical reports should be presented by trends.",
          "isOptional": true
        },
        {
          "name": "undefinedStepsNumber",
          "type": "int",
          "values": [],
          "description": "Maximum number of undefined steps above which build result is triggered. Provide value -1 if the rule should be skipped.",
          "isOptional": true
        },
        {
          "name": "undefinedStepsPercentage",
          "type": "double",
          "values": [],
          "description": "Maximum percentage of undefined steps above which build result is changed.",
          "isOptional": true
        }
      ],
      "plugin": "cucumber-reports"
    },
    {
      "command": "cucumberSlackSend",
      "title": "cucumberSlackSend: Send cucumber notifications to slack",
      "description": "Simple step for sending a cucumber report to a slack channel.\n \n\n Usage Example:\n \n\n ` cucumberSlackSend channel:'testchannel', json:'target/cucumber-results.json' `",
      "parameters": [
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extra",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideSuccessfulResults",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "json",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cucumber-slack-notifier"
    },
    {
      "command": "currentNamespace",
      "title": "currentNamespace: Returns the current namespace",
      "description": "",
      "parameters": [
        {
          "name": "fallbackNamespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-arquillian-steps"
    },
    {
      "command": "datadog",
      "title": "datadog: DatadogOptions",
      "description": "",
      "parameters": [
        {
          "name": "collectLogs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "datadog"
    },
    {
      "command": "debianPbuilder",
      "title": "debianPbuilder: Debian Pbuilder",
      "description": "",
      "parameters": [
        {
          "name": "additionalBuildResults",
          "type": "String",
          "values": [],
          "description": "When running a build in the chroot environment, there are occasionally files that you must retrieve from the chroot that are not part of the normal build. For example, some files that you may need to get back would include test results, auto-generated files, etc.\n\n \n\n Set this variable in order to get the files back from the chroot build environment.\n\n \n\n The files that are retrieved will also automatically be archived as well with the other build results.\n\n \n\n This must be a comma-separated list; spaces are allowed.",
          "isOptional": true
        },
        {
          "name": "architecture",
          "type": "String",
          "values": [],
          "description": "The architecture to build this as. \n\n \n\n If the project is using the Matrix Build plugin, leave this blank (the architectures to build for are defined by the 'architecture' environment variable). \n\n \n\n This is mostly to support Pipeline, however it can be used as a normal parameter as well.",
          "isOptional": true
        },
        {
          "name": "buildAsTag",
          "type": "boolean",
          "values": [],
          "description": "Set this to mark this as building a tag. When a build comes from a tag, the deb version does not get incremented(i.e. it is exactly as set in the debian/changelog file). If using SVN, this plugin automatically looks at the SVN_URL_1 environment variable to see if the string \"tags/\" exists. If it does, the build will act as though this parameter is set. If using Git, this plugin automatically looks at the GIT_BRANCH environment variable to see if the string \"tags/\" exists. If it does, the build will act as though this parameter is set. Alternatively, you can also set the environment variable DEB_PBUILDER_BUILDING_TAG to either true or false.",
          "isOptional": true
        },
        {
          "name": "components",
          "type": "String",
          "values": [],
          "description": "The components to build with. By default, pbuilder sets this to 'main'. If you're building an Ubuntu package, you may need to set this to \"main restricted universe multiverse\"\n\n \n\n The setting guessComponents must be false for this setting to be honored.",
          "isOptional": true
        },
        {
          "name": "debianDirLocation",
          "type": "String",
          "values": [],
          "description": "The location of the debian/ directory, relative to workspace root\n\n \nThis may also be set globally",
          "isOptional": true
        },
        {
          "name": "distribution",
          "type": "String",
          "values": [],
          "description": "The distribution to build for. By default, this checks the distribution that is set in debian/changelog. If the version in the changelog is UNRELEASED, it attempts to use the currently running distribution if this parameter is NULL or a 0-length string.",
          "isOptional": true
        },
        {
          "name": "guessComponents",
          "type": "boolean",
          "values": [],
          "description": "If set to true, automatically try to guess the components. This means that if we think we are building an Ubuntu package on Debian, our components will be automatically set to \"main restricted universe multiverse\"",
          "isOptional": true
        },
        {
          "name": "keyring",
          "type": "String",
          "values": [],
          "description": "The keyring to build with. By default, we will attempt to figure out if we are building a Debian package on Ubuntu, and if we think that we are this will be set to /usr/share/keyrings/debian-archive-keyring.gpg. This file is part of the debian-archive-keyring package. If you need to use a custom keyring, put it in here. If for some reason the auto-detection is not working properly, set this to the string 'disabled' and no keyring settings for pbuilder will be set.",
          "isOptional": true
        },
        {
          "name": "mirrorSite",
          "type": "String",
          "values": [],
          "description": "The mirror site to use. If this is not set or a 0-length string, then the default mirror site for this distribution will be used. The default mirror site is defined in /etc/pbuilderrc",
          "isOptional": true
        },
        {
          "name": "numberCores",
          "type": "int",
          "values": [],
          "description": "The number of cores to use when building. By default, this is 1. Set to -1 in order to use as many cores as possible when building. In order for this to take effect, you need to make sure that your debian/rules is setup properly. See [ this post.](http://askubuntu.com/questions/337093/how-to-run-parallel-make-with-debuild)",
          "isOptional": true
        },
        {
          "name": "pristineTarName",
          "type": "String",
          "values": [],
          "description": "If this field set, and if source/format indicates that this is a quilt package, we will attempt to checkout the given original tar file.",
          "isOptional": true
        }
      ],
      "plugin": "debian-pbuilder"
    },
    {
      "command": "defensics",
      "title": "defensics: (no description)",
      "description": "",
      "parameters": [
        {
          "name": "configurationFilePath",
          "type": "String",
          "values": [],
          "description": "The file path where the test configuration file (*.set or *.testplan) for this job can be found, relative to the project's workspace. \n\n \nA test configuration file defines what kind of testing is to be done, and can be created using Defensics. Configure a test suite in Defensics and save the settings file in File -&gt; Save Settings.",
          "isOptional": false
        },
        {
          "name": "configurationOverrides",
          "type": "String",
          "values": [],
          "description": "Additional test configuration settings that override the settings saved in the test configuration file. This can be useful if, for example, the test target address needs to be set dynamically.\n\n \nThe available settings are the same as the Defensics command line settings. Each setting should follow the format '--setting-name value'. Multiple settings are separated with spaces.\n\n \nExample for HTTP Server Test Suite: \n\n \n```groovy\n--uri https://example.com --http-status-filter \"1xx 2xx 3xx\" \n```",
          "isOptional": true
        },
        {
          "name": "defensicsInstance",
          "type": "String",
          "values": [],
          "description": "Select Defensics instance to use for running tests. Instances can be added in Jenkins' global configuration under the Defensics section.",
          "isOptional": true
        },
        {
          "name": "saveResultPackage",
          "type": "boolean",
          "values": [],
          "description": "Check this if you want Jenkins to download the Defensics result package and store it for the build. The result package includes all logs for the test run. The package can be downloaded from the build status page. Use with caution as the package filesize can be large.",
          "isOptional": true
        }
      ],
      "plugin": "defensics"
    },
    {
      "command": "deleteCloudifyBlueprint",
      "title": "deleteCloudifyBlueprint: Delete Cloudify Blueprint",
      "description": "Use this step to delete a Cloudify blueprint from Cloudify Manager.",
      "parameters": [
        {
          "name": "blueprintId",
          "type": "String",
          "values": [],
          "description": "ID of blueprint to delete.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "deleteCloudifyEnv",
      "title": "deleteCloudifyEnv: Delete Cloudify Environment",
      "description": "Deletes a Cloudify environment.",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deleteBlueprintIfLast",
          "type": "boolean",
          "values": [],
          "description": "If checked, and this is the last environment for the associated blueprint, then also delete the blueprint.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreFailure",
          "type": "boolean",
          "values": [],
          "description": "If checked, then failures during the removal of the environment will be ignored.",
          "isOptional": true
        },
        {
          "name": "skipUninstall",
          "type": "boolean",
          "values": [],
          "description": "Only delete the Cloudify deployment; skip running the `uninstall` workflow.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "deleteComponents",
      "title": "deleteComponents: Delete Components (Nexus Repository Manager 3.x)",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "Components associated with this tag will be deleted",
          "isOptional": false
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "deleteDir",
      "title": "deleteDir: Recursively delete the current directory from the workspace",
      "description": "Recursively deletes the current directory and its contents. Symbolic links and junctions will not be followed but will be removed. To delete a specific directory of a workspace wrap the `deleteDir` step in a `dir` step.",
      "parameters": [],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "dependencyCheck",
      "title": "dependencyCheck: Invoke Dependency-Check",
      "description": "",
      "parameters": [
        {
          "name": "additionalArguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "odcInstallation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipOnScmChange",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipOnUpstreamChange",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dependency-check-jenkins-plugin"
    },
    {
      "command": "dependencyCheckPublisher",
      "title": "dependencyCheckPublisher: Publish Dependency-Check results",
      "description": "",
      "parameters": [
        {
          "name": "failedNewCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newThresholdAnalysisExploitable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "totalThresholdAnalysisExploitable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dependency-check-jenkins-plugin"
    },
    {
      "command": "dependencyTrackPublisher",
      "title": "dependencyTrackPublisher: Publish BOM to Dependency-Track",
      "description": "",
      "parameters": [
        {
          "name": "artifact",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "synchronous",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "autoCreateProjects",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dependencyTrackApiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dependencyTrackFrontendUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dependencyTrackUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newThresholdAnalysisExploitable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideGlobals",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "totalThresholdAnalysisExploitable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalCritical",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalMedium",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dependency-track"
    },
    {
      "command": "deploy",
      "title": "deploy: Deploy war/ear to a container",
      "description": "",
      "parameters": [
        {
          "name": "adapters",
          "type": "Nested",
          "values": [
            "glassfish2",
            "glassfish3",
            "glassfish4",
            "jboss3",
            "jboss4",
            "jboss5",
            "jboss6",
            "jboss7",
            "tomcat4",
            "tomcat5",
            "tomcat6",
            "tomcat7",
            "tomcat8",
            "tomcat9"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "war",
          "type": "String",
          "values": [],
          "description": "War/ear files to deploy. Relative to the workspace root. You can also specify Ant-style GLOBs, like \"**/*.war\"",
          "isOptional": false
        },
        {
          "name": "contextPath",
          "type": "String",
          "values": [],
          "description": "The context path that the container should use to publish the WAR/EAR. Note that this may get overridden if the WAR/EAR to deploy has container-specific configuration embedded inside.",
          "isOptional": true
        },
        {
          "name": "onFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "deploy"
    },
    {
      "command": "deployAPI",
      "title": "deployAPI: Deploy the given API Gateway API",
      "description": "",
      "parameters": [
        {
          "name": "api",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "deployArtifacts",
      "title": "deployArtifacts: Deploy artifacts",
      "description": "",
      "parameters": [
        {
          "name": "deployer",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "deployLambda",
      "title": "deployLambda: AWS Lambda deployment",
      "description": "",
      "parameters": [
        {
          "name": "lambdaUploadBuildStepVariables",
          "type": "Nested",
          "values": [
            "awsRegion",
            "functionName",
            "updateMode",
            "alias",
            "artifactLocation",
            "awsAccessKeyId",
            "awsSecretKey",
            "createAlias",
            "deadLetterQueueArn",
            "description",
            "enableDeadLetterQueue",
            "environmentConfiguration",
            "handler",
            "memorySize",
            "publish",
            "role",
            "runtime",
            "securityGroups",
            "subnets",
            "timeout",
            "useInstanceCredentials"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-lambda"
    },
    {
      "command": "devSpacesCleanup",
      "title": "devSpacesCleanup: Cleanup dev spaces",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "aksName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "devSpaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "helmReleaseName",
          "type": "String",
          "values": [],
          "description": "Release name of helm installation. Leave this field blank if helm is not used for the deployment.",
          "isOptional": true
        },
        {
          "name": "helmTillerNamespace",
          "type": "String",
          "values": [],
          "description": "Namespace of Tiller. Will use the default namespace \"azds\" of Azure Dev Spaces if this field is left blank.",
          "isOptional": true
        },
        {
          "name": "helmTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "kubeConfigId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceGroupName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "azure-dev-spaces"
    },
    {
      "command": "devSpacesCreate",
      "title": "devSpacesCreate: Create dev spaces",
      "description": "",
      "parameters": [
        {
          "name": "azureCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "aksName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "kubeconfigId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceGroupName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sharedSpaceName",
          "type": "String",
          "values": [],
          "description": "The name of the parent dev space of the current dev space.",
          "isOptional": true
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "azure-dev-spaces"
    },
    {
      "command": "devicefarm",
      "title": "devicefarm: Run Tests on AWS Device Farm",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Name of AWS Device Farm project to use. This can be found in your AWS web console.\n \n\n <u>Examples:</u>\n \n\n demoproject\n \n\n My FireOS Project\n \n\n My Android Project\n \n\n In case you are not able to see the Projects, refer to [troubleshooting guide](https://github.com/awslabs/aws-device-farm-jenkins-plugin#project-section-not-being-populated-with-latest-data)",
          "isOptional": false
        },
        {
          "name": "devicePoolName",
          "type": "String",
          "values": [],
          "description": "Name of AWS Device Farm device pool to use.\n \n\n <u>Examples:</u>\n \n\n Top 10 devices\n \n\n Top 25 devices\n \n\n My Custom Tablet Pool",
          "isOptional": false
        },
        {
          "name": "testSpecName",
          "type": "String",
          "values": [],
          "description": "Use the default YAML spec, or select one of your saved YAML spec.",
          "isOptional": false
        },
        {
          "name": "environmentToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appArtifact",
          "type": "String",
          "values": [],
          "description": "**File pattern (local to workspace) where the newly built application (.apk, .ipa) exists. \n\n Leave it blank when it is a web application. **\n \n\n <u>Examples:</u>\n \n\n **/build/apk/MyApp-*-debug.apk\n \n\n /bin/apk/MyApp.apk",
          "isOptional": false
        },
        {
          "name": "runName",
          "type": "String",
          "values": [],
          "description": "Name pattern to name your Device Farm Run. You can also use Jenkins environment variables.\n \n\n <u>Examples:</u>\n \n\n SanityTest-${BUILD_TAG}\n \n\n IntegrationTest-${BUILD_ID}",
          "isOptional": false
        },
        {
          "name": "testToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "storeResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "isRunUnmetered",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "eventCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "eventThrottle",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "seed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumJavaJUnitTest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumJavaTestNGTest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumPythonTest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumRubyTest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumNodeTest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "calabashFeatures",
          "type": "String",
          "values": [],
          "description": "File pattern (local to workspace) where Calabash features archive.\n \n\n <u>Examples:</u>\n \n\n **/bin/tests/*.zip\n \n\n /tests/Calabash/features.zip",
          "isOptional": false
        },
        {
          "name": "calabashTags",
          "type": "String",
          "values": [],
          "description": "Comma separated list of tags which will be passed to Calabash.\n \n\n <u>Examples:</u>\n \n\n @working",
          "isOptional": false
        },
        {
          "name": "calabashProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "junitArtifact",
          "type": "String",
          "values": [],
          "description": "File pattern (local to workspace) where the JUnit tests exist.\n \n\n <u>Examples:</u>\n \n\n **/build/apk/MyApp-*-tests.apk\n \n\n /artifacts/MyAppTests.apk",
          "isOptional": false
        },
        {
          "name": "junitFilter",
          "type": "String",
          "values": [],
          "description": "Comma separated list of TestCase/TestSuite names which will be run.\n \n\n <u>Examples:</u>\n \n\n Running a single testcase: com.android.foo.FooTest\n \n\n Running a single test: com.android.foo.FooTest#testFoo\n \n\n Running multiple tests: com.android.foo.FooTest,com.android.foo.BarTest",
          "isOptional": false
        },
        {
          "name": "uiautomatorArtifact",
          "type": "String",
          "values": [],
          "description": "File pattern (local to workspace) where the UI Automator tests JAR exists.\n \n\n <u>Examples:</u>\n \n\n **/build/tests/MyApp-*-tests.jar\n \n\n /artifacts/MyAppTests.jar",
          "isOptional": false
        },
        {
          "name": "uiautomatorFilter",
          "type": "String",
          "values": [],
          "description": "Comma separated list of TestCase/TestSuite names which will be run.\n \n\n <u>Examples:</u>\n \n\n Running a single testcase: com.android.foo.FooTest\n \n\n Running a single test: com.android.foo.FooTest#testFoo\n \n\n Running multiple tests: com.android.foo.FooTest,com.android.foo.BarTest",
          "isOptional": false
        },
        {
          "name": "uiautomationArtifact",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xctestArtifact",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xctestFilter",
          "type": "String",
          "values": [],
          "description": "A test filter string.\n \n\n <u>Examples:</u>\n \n\n Running a single test class: \"LoginTests\"\n \n\n Running a multiple test classes: \"LoginTests,SmokeTests\"\n \n\n Running a single test: \"LoginTests/testValid\"\n \n\n Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"",
          "isOptional": false
        },
        {
          "name": "xctestUiArtifact",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xctestUiFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumVersionJunit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumVersionPython",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appiumVersionTestng",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifWebApp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extraData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extraDataArtifact",
          "type": "String",
          "values": [],
          "description": "File pattern (local to workspace) where the extra date file (.zip) exists.\n \n\n <u>Examples:</u>\n \n\n **/build/apk/extra-data.zip",
          "isOptional": false
        },
        {
          "name": "deviceLocation",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deviceLatitude",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deviceLongitude",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "radioDetails",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifBluetooth",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifWifi",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifGPS",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifNfc",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobTimeoutMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifVideoRecording",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifAppPerformanceMonitoring",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreRunError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifVpce",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ifSkipAppResigning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vpceServiceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-device-farm"
    },
    {
      "command": "dimensionsscm",
      "title": "dimensionsscm: Dimensions",
      "description": "",
      "parameters": [
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "canJobDelete",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobExpand",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobForce",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobNoMetadata",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobNoTouch",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobRevert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canJobUpdate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "certificateAlias",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "certificatePassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "certificatePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "eol",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "folders",
          "type": "Nested",
          "values": [
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keystoreDatabase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keystorePassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keystorePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keystoreServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pathsToExclude",
          "type": "Nested",
          "values": [
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "permissions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pluginDatabase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pluginServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteCertificatePassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secureAgentAuth",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeZone",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userDatabase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dimensionsscm"
    },
    {
      "command": "dingding",
      "title": "dingding: Dingding Json Pusher",
      "description": "",
      "parameters": [
        {
          "name": "accessToken",
          "type": "String",
          "values": [],
          "description": "这里填写钉钉机器人产生URL中的accessToken, **请注意**不要填写完整的URL",
          "isOptional": false
        },
        {
          "name": "jsonFilePath",
          "type": "String",
          "values": [],
          "description": "被推送的JSON文件路径",
          "isOptional": false
        }
      ],
      "plugin": "dingding-json-pusher"
    },
    {
      "command": "dingtalk",
      "title": "dingtalk: DingTalk",
      "description": "",
      "parameters": [
        {
          "name": "robot",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "at",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "atAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "btnLayout",
          "type": "Enum",
          "values": [
            "H",
            "V"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "btns",
          "type": "Nested",
          "values": [
            "title",
            "actionUrl"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideAvatar",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "messageUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "picUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "singleTitle",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "singleUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "type",
          "type": "Enum",
          "values": [
            "TEXT",
            "LINK",
            "MARKDOWN",
            "ACTION_CARD"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dingding-notifications"
    },
    {
      "command": "dir",
      "title": "dir: Change current directory",
      "description": "Change current directory. Any step inside the `dir` block will use this directory as current and any relative path will use it as base path.",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "discordSend",
      "title": "discordSend: Send an embed message to Webhook URL",
      "description": "",
      "parameters": [
        {
          "name": "webhookURL",
          "type": "String",
          "values": [],
          "description": "If you don't have a webhook url take a look at [this intro to Discord Webhooks](https://support.discordapp.com/hc/en-us/articles/228383668-Intro-to-Webhooks).\n \n\nPaste the entire url in the textbox.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "Message text which supports limited markdown.\n \n\n\n \n\nSee [Markdown Text 101 (Chat Formatting: Bold, Italic, Underline)](https://support.discordapp.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-) for more info on markdown support.",
          "isOptional": true
        },
        {
          "name": "footer",
          "type": "String",
          "values": [],
          "description": "Text in footer of message",
          "isOptional": true
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "URL of the image under everything",
          "isOptional": true
        },
        {
          "name": "link",
          "type": "String",
          "values": [],
          "description": "When set the title of the message comes clickable and leads to this url.\n \n\n\n \n\nTo link the executed job use `env.BUILD_URL`.\n \n\nThis requires Jenkins URL to be set in Global Settings.",
          "isOptional": true
        },
        {
          "name": "notes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "result",
          "type": "String",
          "values": [],
          "description": "Enum to set the build result. Accepts values `SUCCESS|UNSTABLE|FAILURE|ABORTED`. This field is preferred over success and unstable.",
          "isOptional": true
        },
        {
          "name": "successful",
          "type": "boolean",
          "values": [],
          "description": "Either colors the message as green or red depending on success.\n \n\nUse `currentBuild.resultIsBetterOrEqualTo('SUCCESS')` to color the message green on success or red otherwise.",
          "isOptional": true
        },
        {
          "name": "thumbnail",
          "type": "String",
          "values": [],
          "description": "URL to image displayed on the right.",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "Message title\n \n\n\n \n\nTo set title to job name, use `env.JOB_NAME`.",
          "isOptional": true
        },
        {
          "name": "unstable",
          "type": "boolean",
          "values": [],
          "description": "Set to true to set the color to yellow (only when the build was successful, else this is omitted).",
          "isOptional": true
        }
      ],
      "plugin": "discord-notifier"
    },
    {
      "command": "discoverGitReferenceBuild",
      "title": "discoverGitReferenceBuild: Discover Git reference build",
      "description": "",
      "parameters": [
        {
          "name": "defaultBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "latestBuildIfNotFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxCommits",
          "type": "int",
          "values": [],
          "description": "The Default value is 100 commits, so if the branch has more than 100 commits since the last contact with the master branch the reference finder will stop. If for some reason the finder will not be able to find an intersection between the current branch and the master branch (for unknown reason) this check will ensure that the finder will not take forever to search for it. But this scenario should not occur and usually developing branches should not be that far from the master branch.",
          "isOptional": true
        },
        {
          "name": "referenceJob",
          "type": "String",
          "values": [],
          "description": "The reference job is the baseline that is used to determine which of the issues in the current build are new, outstanding, or fixed. This baseline is also used to determine the number of new issues for the quality gate evaluation.",
          "isOptional": true
        },
        {
          "name": "scm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipUnknownCommits",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "git-forensics"
    },
    {
      "command": "discoverReferenceBuild",
      "title": "discoverReferenceBuild: Discover reference build",
      "description": "",
      "parameters": [
        {
          "name": "referenceJob",
          "type": "String",
          "values": [],
          "description": "The reference job is the baseline that is used to determine which of the issues in the current build are new, outstanding, or fixed. This baseline is also used to determine the number of new issues for the quality gate evaluation.",
          "isOptional": true
        }
      ],
      "plugin": "forensics-api"
    },
    {
      "command": "disk",
      "title": "disk: Disk Threshold",
      "description": "You can use the step copy files from master to current slaver.",
      "parameters": [
        {
          "name": "root",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "threshold",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "dockerFingerprintFrom",
      "title": "dockerFingerprintFrom: Record trace of a Docker image used in FROM",
      "description": "Records the fact that a Docker image was built from another. **Deprecated:** Fingerprints produced by this step are not used anywhere, and the parsing code has major limitations. See https://github.com/jenkinsci/docker-workflow-plugin/pull/149#issuecomment-451305522 and https://groups.google.com/d/msg/jenkinsci-dev/k13SfZcBWVg/iQghmCQrEAAJ If are a user of the Docker Traceability plugin you need to call this Step manually during the build. The mentioned limitations will limit the useability of this step for this purpose.",
      "parameters": [
        {
          "name": "dockerfile",
          "type": "String",
          "values": [],
          "description": "Workspace-relative path of a `Dockerfile` which will be parsed for its `FROM` instruction.",
          "isOptional": false
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "ID or tag of the image which was just built, like `--tag` of `docker build`.",
          "isOptional": false
        },
        {
          "name": "commandLine",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "docker-workflow"
    },
    {
      "command": "dockerFingerprintRun",
      "title": "dockerFingerprintRun: Record trace of a Docker image run in a container",
      "description": "Records the fact that a Docker image was used by this build. **Deprecated:** Fingerprints produced by this step are not used anywhere, and the parsing code has major limitations. See https://github.com/jenkinsci/docker-workflow-plugin/pull/149#issuecomment-451305522 and https://groups.google.com/d/msg/jenkinsci-dev/k13SfZcBWVg/iQghmCQrEAAJ If are a user of the Docker Traceability plugin you need to call this Step manually during the build. The mentioned limitations will limit the useability of this step for this purpose.",
      "parameters": [
        {
          "name": "containerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "docker-workflow"
    },
    {
      "command": "dockerNode",
      "title": "dockerNode: Docker Node (⚠️ Experimental)",
      "description": "Allocates a new Jenkins agent using a specified Docker image and runs tasks on it. Example: \n\n \n```groovy\ndockerNode('jenkins/jnlp-agent-maven') {\n    git 'https://github.com/jglick/simple-maven-project-with-tests'\n    sh 'mvn -B -Dmaven.test.failure.ignore install'\n    junit '**/target/surefire-reports/TEST-*.xml'\n}\n```",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "connector",
          "type": "Nested",
          "values": [
            "attach",
            "jnlp",
            "ssh"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dockerHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteFs",
          "type": "String",
          "values": [],
          "description": "Use a specific root directory for the Jenkins agent. This includes a `workspace` subdirectory as well as various control files. If not specified, uses the `WORKDIR` from the image.",
          "isOptional": true
        }
      ],
      "plugin": "docker-plugin"
    },
    {
      "command": "dockerPullStep",
      "title": "dockerPullStep: Artifactory docker pull",
      "description": "",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "dockerPushStep",
      "title": "dockerPushStep: Artifactory docker push",
      "description": "",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "properties",
          "type": "com.google.common.collect.ArrayListMultimap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "dockerShell",
      "title": "dockerShell: [Experimental] Docker Shell Step",
      "description": "",
      "parameters": [
        {
          "name": "connector",
          "type": "Nested",
          "values": [
            "$class: 'CloudNameDockerConnector'",
            "$class: 'DockerConnector'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "containerLifecycle",
          "type": "Nested",
          "values": [
            "createContainer",
            "image",
            "pullImage",
            "removeContainer",
            "stopContainer"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executorScript",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "longConnector",
          "type": "Nested",
          "values": [
            "$class: 'CloudNameDockerConnector'",
            "$class: 'DockerConnector'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shellScript",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "yet-another-docker-plugin"
    },
    {
      "command": "doktor",
      "title": "doktor: Publish documentation to Confluence",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markdownIncludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markdownExcludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "asciidocIncludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "asciidocExcludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "doktor"
    },
    {
      "command": "dotcomMonitor",
      "title": "dotcomMonitor: LoadView-Run load test scenario",
      "description": "",
      "parameters": [
        {
          "name": "scenarioId",
          "type": "String",
          "values": [],
          "description": "Unique ID of the load test scenario to run",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorThreshold",
          "type": "int",
          "values": [],
          "description": "Mark the build as 'Passed' if the percentage of errors is less than the threshold",
          "isOptional": false
        },
        {
          "name": "avgTime",
          "type": "int",
          "values": [],
          "description": "Mark the build as 'Passed' if the average response time is less than the threshold",
          "isOptional": false
        }
      ],
      "plugin": "dotcommonitor-loadview"
    },
    {
      "command": "dotcover",
      "title": "dotcover: Generate code coverage data and report(s)",
      "description": "Executes tests and generates code coverage data and reports. The coverage data and reports are not archived for you. You need to do this as a separate step.",
      "parameters": [
        {
          "name": "NDependXmlReportPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "coverageAssemblyInclude",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "coverageClassInclude",
          "type": "String",
          "values": [],
          "description": "Includes the specified classes for which coverage data will be generated. \n\n \n For an in-depth explanation of how filtering is applied, please see the [DotCover documentation](https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html)",
          "isOptional": true
        },
        {
          "name": "coverageExclude",
          "type": "String",
          "values": [],
          "description": "Excludes the specified assemblies from coverage data. Note, that in addition to this exclusion definition, the assemblies matched by the glob in the global tool configuration for DotCover (named mandatory excludes) will ALWAYS be appended. \n\n \n For an in-depth explanation of how filtering is applied, please see the [DotCover documentation](https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html)",
          "isOptional": true
        },
        {
          "name": "coverageFunctionInclude",
          "type": "String",
          "values": [],
          "description": "Semicolon-separated list of names of methods to include in the coverage. \n\n \n For an in-depth explanation of how filtering is applied, please see the [DotCover documentation](https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html)",
          "isOptional": true
        },
        {
          "name": "detailedXMLReportPath",
          "type": "String",
          "values": [],
          "description": "Set the path to the detailed XML report with coverage data that DotCover will generate. The default is unset in which case DotCover will not generate this report.",
          "isOptional": true
        },
        {
          "name": "htmlReportPath",
          "type": "String",
          "values": [],
          "description": "Path to the HTML report with coverage data that DotCover will generate. The default path is 'index.html'. This setting will have DotCover produce an index.html in the workspace + a subfolder with the data used in this webpage.",
          "isOptional": true
        },
        {
          "name": "outputDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "processExclude",
          "type": "String",
          "values": [],
          "description": "Semicolon-separated list of process names. These processes will be disregarded in the test execution when DotCover is gathering coverage data. This can be helpful in scenarios where it is necessary to strictly define the scope of executables that are part of a test. For instance, DotCover sometimes (mistakenly) detects a database server as part of the the code being exercised in the test run, which can case problems with the coverage data because it tries to include the DB server in the scope of the test. For an in-depth explanation of how filtering is applied, please see the [DotCover documentation](https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html)",
          "isOptional": true
        },
        {
          "name": "processInclude",
          "type": "String",
          "values": [],
          "description": "Semicolon-separated list of process names. These processes will be considered in scope for the test execution when DotCover is gathering coverage data. This is helpful when it is necessary to restrict what executables are part of a test. For an in-depth explanation of how filtering is applied, please see the [DotCover documentation](https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html)",
          "isOptional": true
        },
        {
          "name": "vsTestArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to pass to the VsTest test runner. These are simply passed through to the runner, so take care to quote them properly!",
          "isOptional": true
        },
        {
          "name": "vsTestAssemblyFilter",
          "type": "String",
          "values": [],
          "description": "A glob that picks the test assemblies to include when gathering coverage data. The default value is **/*Test/bin/**/Release/*Test.dll",
          "isOptional": true
        },
        {
          "name": "vsTestCaseFilter",
          "type": "String",
          "values": [],
          "description": "The testcase filter to pass to vstest. See [this page](https://docs.microsoft.com/en-us/visualstudio/test/vstest-console-options?irgwc=1&OCID=AID2000142_aff_7593_1375745&tduid=(ir__vbyjjphsywkfr1ve0hnrewwq9n2xjlp6grxrzewx00)(7593)(1375745)()()&irclickid=_vbyjjphsywkfr1ve0hnrewwq9n2xjlp6grxrzewx00&view=vs-2019) for in-depth explanation of vstest parameters.",
          "isOptional": true
        },
        {
          "name": "vsTestPlatform",
          "type": "String",
          "values": [],
          "description": "The platform that is targeted by the tests when run through the test runner. Currently x86, x64 and ARM are supported.",
          "isOptional": true
        }
      ],
      "plugin": "dotcoverrunner"
    },
    {
      "command": "dotnetBuild",
      "title": "dotnetBuild: .NET: Build project (build)",
      "description": "The `dotnet build` command builds the project and its dependencies into a set of binaries. The binaries include the project's code in Intermediate Language (IL) files with a <em>.dll</em> extension. Depending on the project type and settings, other files may be included, such as:\n\n\n\n \n*  An executable that can be used to run the application, if the project type is an executable targeting .NET Core 3.0 or later. \n\n \n* Symbol files used for debugging, with a <em>.pdb</em> extension.\n\n \n* A <em>.deps.json</em> file, which lists the dependencies of the application or library.\n\n \n* A <em>.runtimeconfig.json</em> file, which specifies the shared runtime and its version for an application.\n\n \n* Other libraries that the project depends on (via project references or NuGet package references).\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build))",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Defines the build configuration. The default for most projects is `Debug`, but you can override the build configuration settings in your project.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Forces all dependencies to be resolved even if the last restore was successful. Specifying this flag is the same as deleting the <em>project.assets.json</em> file.",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "Compiled for a specific [framework](https://docs.microsoft.com/en-us/dotnet/standard/frameworks). The framework must be defined in the [project file](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj).",
          "isOptional": true
        },
        {
          "name": "noDependencies",
          "type": "boolean",
          "values": [],
          "description": "Ignores project-to-project references and only restores the root project.",
          "isOptional": true
        },
        {
          "name": "noIncremental",
          "type": "boolean",
          "values": [],
          "description": "Marks the build as unsafe for incremental build. This flag turns off incremental compilation and forces a clean rebuild of the project's dependency graph.",
          "isOptional": true
        },
        {
          "name": "noRestore",
          "type": "boolean",
          "values": [],
          "description": "Doesn't execute an implicit restore when running the command.",
          "isOptional": true
        },
        {
          "name": "nologo",
          "type": "boolean",
          "values": [],
          "description": "Doesn't display the startup banner or the copyright message.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.0</em>",
          "isOptional": true
        },
        {
          "name": "option",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsString",
          "type": "String",
          "values": [],
          "description": "For more information about these options, see the [MSBuild Command-Line Reference](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference).\n\n\n\n\n  If targets and/or properties are also configured, those will be passed <em>after</em> these options.",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "Directory in which to place the built binaries. If not specified, the default path is `./bin/&lt;configuration&gt;/&lt;framework&gt;/`. For projects with multiple target frameworks (via the `TargetFrameworks` property), you also need to specify a specific framework when you specify this option.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The MSBuild project or solution to build. If a directory is specified, MSBuild searches it for a (single) file that has a file extension that ends in <em>proj</em> or <em>sln</em>, and uses that file. If nothing is specified, the current working directory is searched in the same way.",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesString",
          "type": "String",
          "values": [],
          "description": "Additional MSBuild properties to set. These should be specified one per line, in Java [properties syntax](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "Specifies the target runtime. For a list of Runtime Identifiers (RIDs), see the [RID catalog](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog).",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "shutDownBuildServers",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet build-server shutdown` will be executed after the main command, shutting down build servers that may have been started.\n\n\n\n\n  Note: If this is not specified, a build that causes such a build server to be started may <q>hang</q> until those server processes end. As such, it's recommended to specify this for the last .NET-related step in a job. If using multiple SDKs, each needs its own shutdown (e.g. the .NET Core 3.1 SDK will not shut down build servers from the .NET 5.0 SDK).\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetsString",
          "type": "String",
          "values": [],
          "description": "Specifies the MSBuild targets to build. If none are specified, the default target specified in the project will be built.",
          "isOptional": true
        },
        {
          "name": "unstableIfWarnings",
          "type": "boolean",
          "values": [],
          "description": "If this is set and the build completes successfully with warnings, the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the MSBuild verbosity level.",
          "isOptional": true
        },
        {
          "name": "versionSuffix",
          "type": "String",
          "values": [],
          "description": "Sets the value of the `$(VersionSuffix)` property to use when building the project. This only works if the `$(Version)` property isn't set. Then, `$(Version)` is set to the `$(VersionPrefix)` combined with the `$(VersionSuffix)`, separated by a dash.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetClean",
      "title": "dotnetClean: .NET: Clean project output (clean)",
      "description": "The `dotnet clean` command cleans the output of the previous build. It's implemented as an [MSBuild target](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-targets), so the project is evaluated when the command is run. Only the outputs created during the build are cleaned. Both intermediate (<em>obj</em>) and final output (<em>bin</em>) folders are cleaned.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-clean))",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Defines the build configuration. The default for most projects is `Debug`, but you can override the build configuration settings in your project. This option is only required when cleaning if you specified it during build time.",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "The [framework](https://docs.microsoft.com/en-us/dotnet/standard/frameworks) that was specified at build time. The framework must be defined in the [project file](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj). If you specified the framework at build time, you must specify the framework when cleaning.",
          "isOptional": true
        },
        {
          "name": "nologo",
          "type": "boolean",
          "values": [],
          "description": "Doesn't display the startup banner or the copyright message.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.0</em>",
          "isOptional": true
        },
        {
          "name": "option",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsString",
          "type": "String",
          "values": [],
          "description": "For more information about these options, see the [MSBuild Command-Line Reference](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference).\n\n\n\n\n  If targets and/or properties are also configured, those will be passed <em>after</em> these options.",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "The directory that contains the build artifacts to clean. If you specified the framework when the project was built, that same framework should also be specified for this cleanup action.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The MSBuild project or solution to clean. If a directory is specified, MSBuild searches it for a (single) file that has a file extension that ends in <em>proj</em> or <em>sln</em>, and uses that file. If nothing is specified, the current working directory is searched in the same way.",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesString",
          "type": "String",
          "values": [],
          "description": "Additional MSBuild properties to set. These should be specified one per line, in Java [properties syntax](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "Cleans the output folder of the specified runtime. This is used when a [self-contained deployment](https://docs.microsoft.com/en-us/dotnet/core/deploying/#publish-self-contained) was created.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "shutDownBuildServers",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet build-server shutdown` will be executed after the main command, shutting down build servers that may have been started.\n\n\n\n\n  Note: If this is not specified, a build that causes such a build server to be started may <q>hang</q> until those server processes end. As such, it's recommended to specify this for the last .NET-related step in a job. If using multiple SDKs, each needs its own shutdown (e.g. the .NET Core 3.1 SDK will not shut down build servers from the .NET 5.0 SDK).\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "unstableIfWarnings",
          "type": "boolean",
          "values": [],
          "description": "If this is set and the build completes successfully with warnings, the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the MSBuild verbosity level.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetListPackage",
      "title": "dotnetListPackage: .NET: Show dependencies (list package)",
      "description": "The `dotnet list package` command provides a convenient option to list all NuGet package references for a specific project or a solution. You first need to build the project in order to have the assets needed for this command to process.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-list-package))",
      "parameters": [
        {
          "name": "config",
          "type": "String",
          "values": [],
          "description": "Configuration file containing the NuGet sources to use when searching for newer packages. Applies only when asked to show deprecated or outdated packages.",
          "isOptional": true
        },
        {
          "name": "deprecated",
          "type": "boolean",
          "values": [],
          "description": "Lists packages that have been deprecated.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.1.300</em>",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "frameworks",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "frameworksString",
          "type": "String",
          "values": [],
          "description": "Displays only the packages applicable for the specified [target frameworks](https://docs.microsoft.com/en-us/dotnet/standard/frameworks).",
          "isOptional": true
        },
        {
          "name": "highestMinor",
          "type": "boolean",
          "values": [],
          "description": "Considers only the packages with a matching major version number when searching for newer packages. Applies only when asked to show deprecated or outdated packages.",
          "isOptional": true
        },
        {
          "name": "highestPatch",
          "type": "boolean",
          "values": [],
          "description": "Considers only the packages with a matching major and minor version numbers when searching for newer packages. Applies only when asked to show deprecated or outdated packages.",
          "isOptional": true
        },
        {
          "name": "includePrerelease",
          "type": "boolean",
          "values": [],
          "description": "Considers packages with prerelease versions when searching for newer packages. Applies only when asked to show deprecated or outdated packages.",
          "isOptional": true
        },
        {
          "name": "includeTransitive",
          "type": "boolean",
          "values": [],
          "description": "Lists transitive packages, in addition to the top-level packages. When specifying this option, you get a list of packages that the top-level packages depend on.",
          "isOptional": true
        },
        {
          "name": "outdated",
          "type": "boolean",
          "values": [],
          "description": "Lists packages that have newer versions available.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The project or solution file to operate on. If not specified, the command searches the current directory for one. If more than one solution or project is found, an error is thrown.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcesString",
          "type": "String",
          "values": [],
          "description": "The NuGet sources to use when searching for newer packages. Applies only when asked to show deprecated or outdated packages.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the verbosity level of the command.\n\n\n\n\n\n\n\n Note that this option only has an effect since the .NET 5 SDK.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetNuGetDelete",
      "title": "dotnetNuGetDelete: .NET: Delete/Unlist NuGet package (nuget delete)",
      "description": "The `dotnet nuget delete` command deletes or unlists a package from the server. For [nuget.org](https://www.nuget.org/), the action is to unlist the package.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-delete))",
      "parameters": [
        {
          "name": "apiKeyId",
          "type": "String",
          "values": [],
          "description": "The API key for the server.",
          "isOptional": true
        },
        {
          "name": "forceEnglishOutput",
          "type": "boolean",
          "values": [],
          "description": "Forces the application to run using an invariant, English-based culture.",
          "isOptional": true
        },
        {
          "name": "noServiceEndpoint",
          "type": "boolean",
          "values": [],
          "description": "Doesn't append \"api/v2/package\" to the source URL.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "packageName",
          "type": "String",
          "values": [],
          "description": "Name/ID of the package to delete.",
          "isOptional": true
        },
        {
          "name": "packageVersion",
          "type": "String",
          "values": [],
          "description": "Version of the package to delete.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "String",
          "values": [],
          "description": "Specifies the server URL. Supported URLs for nuget.org include `https://www.nuget.org`, `https://www.nuget.org/api/v3`, and `https://www.nuget.org/api/v2/package`. For private feeds, replace the host name (for example, `%hostname%/api/v3`).",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetNuGetLocals",
      "title": "dotnetNuGetLocals: .NET: Clear/List NuGet cache locations (nuget locals)",
      "description": "The `dotnet nuget locals` command clears or lists local NuGet resources in the http-request cache, temporary cache, or machine-wide global packages folder.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-locals))",
      "parameters": [
        {
          "name": "cacheLocation",
          "type": "String",
          "values": [],
          "description": "The cache location to list or clear. It accepts one of the following values:\n \n  \n*  `all`: Indicates that the specified operation is applied to all cache types: http-request cache, global packages cache, and the temporary cache. \n\n  \n*  `global-packages`: Indicates that the specified operation is applied only to the global packages cache. The other cache locations aren't affected. \n\n  \n*  `http-cache`: Indicates that the specified operation is applied only to the http-request cache. The other cache locations aren't affected. \n\n  \n*  `temp`: Indicates that the specified operation is applied only to the temporary cache. The other cache locations aren't affected.",
          "isOptional": true
        },
        {
          "name": "forceEnglishOutput",
          "type": "boolean",
          "values": [],
          "description": "Forces the application to run using an invariant, English-based culture.",
          "isOptional": true
        },
        {
          "name": "operation",
          "type": "String",
          "values": [],
          "description": "Two operations are supported:\n \n  \n*  `clear`: The contents of the cache directories are deleted recursively. The executing user/group must have permission to the files in the cache directories. If not, an error is displayed indicating the files/folders that weren't cleared. \n\n  \n* `list`: Displays the path to the specified cache location.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetNuGetPush",
      "title": "dotnetNuGetPush: .NET: Publish NuGet package (nuget push)",
      "description": "The `dotnet nuget push` command pushes a package to the server and publishes it. The push command uses server and credential details found in the system's NuGet config file or chain of config files. For more information on config files, see [Configuring NuGet Behavior](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior). NuGet's default configuration is obtained by loading <em>%AppData%\\NuGet\\NuGet.config</em> (Windows) or <em>$HOME/.local/share</em> (Linux/macOS), then loading any <em>nuget.config</em> or <em>.nuget\\nuget.config</em> starting from the root of drive and ending in the current directory.\n\n\n\n\n  The command pushes an existing package. It doesn't create a package. To create a package, use `dotnet pack`.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push))",
      "parameters": [
        {
          "name": "apiKeyId",
          "type": "String",
          "values": [],
          "description": "The API key for the server.",
          "isOptional": true
        },
        {
          "name": "disableBuffering",
          "type": "boolean",
          "values": [],
          "description": "Disables buffering when pushing to an HTTP(S) server to reduce memory usage.",
          "isOptional": true
        },
        {
          "name": "forceEnglishOutput",
          "type": "boolean",
          "values": [],
          "description": "Forces the application to run using an invariant, English-based culture.",
          "isOptional": true
        },
        {
          "name": "noServiceEndpoint",
          "type": "boolean",
          "values": [],
          "description": "Doesn't append \"api/v2/package\" to the source URL.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "noSymbols",
          "type": "boolean",
          "values": [],
          "description": "Doesn't push symbols (even if present).",
          "isOptional": true
        },
        {
          "name": "root",
          "type": "String",
          "values": [],
          "description": "Specifies the file path to the package(s) to be pushed.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "skipDuplicate",
          "type": "boolean",
          "values": [],
          "description": "When pushing multiple packages to an HTTP(S) server, treats any 409 Conflict response as a warning so that the push can continue.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.1</em>",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "String",
          "values": [],
          "description": "Specifies the server URL. Supported URLs for nuget.org include `https://www.nuget.org`, `https://www.nuget.org/api/v3`, and `https://www.nuget.org/api/v2/package`. For private feeds, replace the host name (for example, `%hostname%/api/v3`).\n \n\n This option is required unless `DefaultPushSource` config value is set in the NuGet config file.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "symbolApiKeyId",
          "type": "String",
          "values": [],
          "description": "The API key for the symbol server.",
          "isOptional": true
        },
        {
          "name": "symbolSource",
          "type": "String",
          "values": [],
          "description": "Specifies the symbol server URL.",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Specifies the timeout for pushing to a server in seconds. Defaults to 300 seconds (5 minutes). Specifying 0 (zero seconds) applies the default value.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetPack",
      "title": "dotnetPack: .NET: Create NuGet package (pack)",
      "description": "The `dotnet pack` command builds the project and creates NuGet packages. The result of this command is a NuGet package (that is, a <em>.nupkg</em> file).\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-pack))",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Defines the build configuration. The default for most projects is `Debug`, but you can override the build configuration settings in your project.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Forces all dependencies to be resolved even if the last restore was successful. Specifying this flag is the same as deleting the <em>project.assets.json</em> file.",
          "isOptional": true
        },
        {
          "name": "includeSource",
          "type": "boolean",
          "values": [],
          "description": "Includes the debug symbols NuGet packages in addition to the regular NuGet packages in the output directory. The sources files are included in the `src` folder within the symbols package.",
          "isOptional": true
        },
        {
          "name": "includeSymbols",
          "type": "boolean",
          "values": [],
          "description": "Includes the debug symbols NuGet packages in addition to the regular NuGet packages in the output directory.",
          "isOptional": true
        },
        {
          "name": "noBuild",
          "type": "boolean",
          "values": [],
          "description": "Doesn't build the project before packing, and does not perform an implicit restore.",
          "isOptional": true
        },
        {
          "name": "noDependencies",
          "type": "boolean",
          "values": [],
          "description": "Ignores project-to-project references and only restores the root project.",
          "isOptional": true
        },
        {
          "name": "noRestore",
          "type": "boolean",
          "values": [],
          "description": "Doesn't execute an implicit restore when running the command.",
          "isOptional": true
        },
        {
          "name": "nologo",
          "type": "boolean",
          "values": [],
          "description": "Doesn't display the startup banner or the copyright message.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.0</em>",
          "isOptional": true
        },
        {
          "name": "option",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsString",
          "type": "String",
          "values": [],
          "description": "For more information about these options, see the [MSBuild Command-Line Reference](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference).\n\n\n\n\n  If targets and/or properties are also configured, those will be passed <em>after</em> these options.",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "Places the built packages in the directory specified.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The project or solution to pack. It's either a path to a csproj file, vbproj file, fsproj file, a solution file, or to a directory. If not specified, the command searches the current directory for a project or solution file.",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesString",
          "type": "String",
          "values": [],
          "description": "Additional MSBuild properties to set. These should be specified one per line, in Java [properties syntax](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "Specifies the target runtime to restore packages for. For a list of Runtime Identifiers (RIDs), see the [RID catalog](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog).",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "shutDownBuildServers",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet build-server shutdown` will be executed after the main command, shutting down build servers that may have been started.\n\n\n\n\n  Note: If this is not specified, a build that causes such a build server to be started may <q>hang</q> until those server processes end. As such, it's recommended to specify this for the last .NET-related step in a job. If using multiple SDKs, each needs its own shutdown (e.g. the .NET Core 3.1 SDK will not shut down build servers from the .NET 5.0 SDK).\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "unstableIfWarnings",
          "type": "boolean",
          "values": [],
          "description": "If this is set and the build completes successfully with warnings, the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the MSBuild verbosity level.",
          "isOptional": true
        },
        {
          "name": "versionSuffix",
          "type": "String",
          "values": [],
          "description": "Defines the value for the `$(VersionSuffix)` MSBuild property in the project.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetPublish",
      "title": "dotnetPublish: .NET: Publish project (publish)",
      "description": "`dotnet publish` compiles the application, reads through its dependencies specified in the project file, and publishes the resulting set of files to a directory. The output includes the following assets:\n \n  \n* Intermediate Language (IL) code in an assembly with a <em>dll</em> extension.\n\n  \n* A <em>.deps.json</em> file that includes all of the dependencies of the project.\n\n  \n*  A <em>.runtimeconfig.json</em> file that specifies the shared runtime that the application expects, as well as other configuration options for the runtime (for example, garbage collection type). \n\n  \n* The application's dependencies, which are copied from the NuGet cache into the output folder.\n\n  The `dotnet publish` command's output is ready for deployment to a hosting system (for example, a server, PC, Mac, laptop) for execution. It's the only officially supported way to prepare the application for deployment. Depending on the type of deployment that the project specifies, the hosting system may or may not have the .NET Core shared runtime installed on it. For more information, see [ Publish .NET Core apps with the .NET Core CLI ](https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-cli).\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish))",
      "parameters": [
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Defines the build configuration. The default for most projects is `Debug`, but you can override the build configuration settings in your project.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Forces all dependencies to be resolved even if the last restore was successful. Specifying this flag is the same as deleting the <em>project.assets.json</em> file.",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "Publishes the application for the specified [target framework](https://docs.microsoft.com/en-us/dotnet/standard/frameworks). You must specify the target framework in the project file.",
          "isOptional": true
        },
        {
          "name": "manifest",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "manifests",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "manifestsString",
          "type": "String",
          "values": [],
          "description": "Specifies one or several [target manifests](https://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store) to use to trim the set of packages published with the app. The manifest file is part of the output of the `[dotnet store command](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-store)`.",
          "isOptional": true
        },
        {
          "name": "noBuild",
          "type": "boolean",
          "values": [],
          "description": "Doesn't build the project before publishing, and does not perform an implicit restore.",
          "isOptional": true
        },
        {
          "name": "noDependencies",
          "type": "boolean",
          "values": [],
          "description": "Ignores project-to-project references and only restores the root project.",
          "isOptional": true
        },
        {
          "name": "noRestore",
          "type": "boolean",
          "values": [],
          "description": "Doesn't execute an implicit restore when running the command.",
          "isOptional": true
        },
        {
          "name": "nologo",
          "type": "boolean",
          "values": [],
          "description": "Doesn't display the startup banner or the copyright message.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.0</em>",
          "isOptional": true
        },
        {
          "name": "option",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsString",
          "type": "String",
          "values": [],
          "description": "For more information about these options, see the [MSBuild Command-Line Reference](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference).\n\n\n\n\n  If targets and/or properties are also configured, those will be passed <em>after</em> these options.",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "Specifies the path for the output directory.\n \n\n If not specified, it defaults to <em>[project_file_folder]./bin/[configuration]/[framework]/publish/</em> for a runtime-dependent executable and cross-platform binaries. It defaults to <em>[project_file_folder]/bin/[configuration]/[framework]/[runtime]/publish/</em> for a self-contained executable.\n \n\n In a web project, if the output folder is in the project folder, successive `dotnet publish` commands result in nested output folders. For example, if the project folder is <em>myproject</em>, and the publish output folder is <em>myproject/publish</em>, and you run `dotnet publish` twice, the second run puts content files such as <em>.config</em> and <em>.json</em> files in <em>myproject/publish/publish</em>. To avoid nesting publish folders, specify a publish folder that is not **directly** under the project folder, or exclude the publish folder from the project.\n\n\n\n\n  Some behaviour depends on the SDK version:\n \n  \n*  .NET Core 3.x SDK and later: If a relative path is specified when publishing a project, the output directory generated is relative to the current working directory, not to the project file location.\n\n If a relative path is specified when publishing a solution, all output for all projects goes into the specified folder relative to the current working directory. To make publish output go to separate folders for each project, specify a relative path by using the msbuild `PublishDir` property instead of this option. \n\n  \n*  .NET Core 2.x SDK: If a relative path is specified when publishing a project, the output directory generated is relative to the project file location, not to the current working directory.\n\n If a relative path is specified when publishing a solution, each project's output goes into a separate folder relative to the project file location. If an absolute path is specified when publishing a solution, all publish output for all projects goes into the specified folder.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The project or solution (or directory containing a project or solution) to publish. If not specified, the current directory is used.\n \n\n Note that the use of a solution instead of a project was added in the .NET Core 3.0 SDK.",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesString",
          "type": "String",
          "values": [],
          "description": "Additional MSBuild properties to set. These should be specified one per line, in Java [ properties syntax ](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).\n\n\n\n\n  Properties of particular interest to `dotnet publish`:\n \n  \n*  `PublishProfile=Properties\\PublishProfiles\\profile.pubxml`: Use a <em>.pubxml</em> to set publish-related properties. See [ Visual Studio publish profiles (.pubxml) for ASP.NET Core app deployment ](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/visual-studio-publish-profiles) for more information. \n\n  \n*  `PublishReadyToRun=true`: Compiles application assemblies as ReadyToRun (R2R) format. R2R is a form of ahead-of-time (AOT) compilation. For more information, see [ReadyToRun images](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#readytorun-images).\n\n Available since .NET Core 3.0 SDK. \n\n  \n*  `PublishSingleFile=true`: Packages the app into a platform-specific single-file executable. The executable is self-extracting and contains all dependencies (including native) that are required to run the app. When the app is first run, the application is extracted to a directory based on the app name and build identifier. Startup is faster when the application is run again. The application doesn't need to extract itself a second time unless a new version is used.\n\n For more information about single-file publishing, see the [ single-file bundler design document ](https://github.com/dotnet/designs/blob/master/accepted/2020/single-file/design.md).\n\n Available since .NET Core 3.0 SDK. \n\n  \n*  `PublishTrimmed=true`: Trims unused libraries to reduce the deployment size of an app when publishing a self-contained executable. For more information, see [ Trim self-contained deployments and executables ](https://docs.microsoft.com/en-us/dotnet/core/deploying/trim-self-contained).\n\n Available since .NET Core 3.0 SDK. \n\n  Note that it is recommended to specify all of these, other than `PublishProfile`, in a publish profile rather than here.",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "Publishes the application for a given runtime. For a list of Runtime Identifiers (RIDs), see the [RID catalog](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog). For more information, see [.NET Core application publishing](https://docs.microsoft.com/en-us/dotnet/core/deploying/) and [Publish .NET Core apps with the .NET Core CLI](https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-cli).",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "selfContained",
          "type": "boolean",
          "values": [],
          "description": "Publishes the .NET Core runtime with your application so the runtime doesn't need to be installed on the target machine. Enabled by default if a runtime identifier is specified and the project is an executable project (not a library project). For more information, see [.NET Core application publishing](https://docs.microsoft.com/en-us/dotnet/core/deploying/) and [Publish .NET Core apps with the .NET Core CLI](https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-cli).",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "shutDownBuildServers",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet build-server shutdown` will be executed after the main command, shutting down build servers that may have been started.\n\n\n\n\n  Note: If this is not specified, a build that causes such a build server to be started may <q>hang</q> until those server processes end. As such, it's recommended to specify this for the last .NET-related step in a job. If using multiple SDKs, each needs its own shutdown (e.g. the .NET Core 3.1 SDK will not shut down build servers from the .NET 5.0 SDK).\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "unstableIfWarnings",
          "type": "boolean",
          "values": [],
          "description": "If this is set and the build completes successfully with warnings, the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the MSBuild verbosity level.",
          "isOptional": true
        },
        {
          "name": "versionSuffix",
          "type": "String",
          "values": [],
          "description": "Defines the version suffix to replace the asterisk (`*`) in the version field of the project file.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetRestore",
      "title": "dotnetRestore: .NET: Restore project dependencies (restore)",
      "description": "The `dotnet restore` command uses NuGet to restore dependencies as well as project-specific tools that are specified in the project file. In most cases, you don't need to explicitly use the `dotnet restore` command, since a NuGet restore is run implicitly if necessary when you run the following commands:\n\n\n\n \n* [dotnet new](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new)\n\n \n* [dotnet build](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build)\n\n \n* [dotnet build-server](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build-server)\n\n \n* [dotnet run](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-run)\n\n \n* [dotnet test](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test)\n\n \n* [dotnet publish](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish)\n\n \n* [dotnet pack](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-pack)\n\n\n\n\n  Sometimes, it might be inconvenient to run the implicit NuGet restore with these commands. For example, some automated systems, such as build systems, need to call `dotnet restore` explicitly to control when the restore occurs so that they can control network usage. To prevent the implicit NuGet restore, you can use the `--no-restore` flag with any of these commands to disable implicit restore.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore))",
      "parameters": [
        {
          "name": "configfile",
          "type": "String",
          "values": [],
          "description": "The NuGet configuration file (<em>nuget.config</em>) to use for the restore operation.",
          "isOptional": true
        },
        {
          "name": "disableParallel",
          "type": "boolean",
          "values": [],
          "description": "Disables restoring multiple projects in parallel.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Forces all dependencies to be resolved even if the last restore was successful. Specifying this flag is the same as deleting the <em>project.assets.json</em> file.",
          "isOptional": true
        },
        {
          "name": "forceEvaluate",
          "type": "boolean",
          "values": [],
          "description": "Forces restore to reevaluate all dependencies even if a lock file already exists.",
          "isOptional": true
        },
        {
          "name": "ignoreFailedSources",
          "type": "boolean",
          "values": [],
          "description": "Only warn about failed sources if there are packages meeting the version requirement.",
          "isOptional": true
        },
        {
          "name": "lockFilePath",
          "type": "String",
          "values": [],
          "description": "Output location where project lock file is written. By default, this is <em>PROJECT_ROOT\\packages.lock.json</em>.",
          "isOptional": true
        },
        {
          "name": "lockedMode",
          "type": "boolean",
          "values": [],
          "description": "Don't allow updating project lock file.",
          "isOptional": true
        },
        {
          "name": "noCache",
          "type": "boolean",
          "values": [],
          "description": "Specifies to not cache HTTP requests.",
          "isOptional": true
        },
        {
          "name": "noDependencies",
          "type": "boolean",
          "values": [],
          "description": "When restoring a project with project-to-project (P2P) references, restores the root project and not the references.",
          "isOptional": true
        },
        {
          "name": "packages",
          "type": "String",
          "values": [],
          "description": "Specifies the directory for restored packages.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "Optional path to the project file to restore.",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runtimes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runtimesString",
          "type": "String",
          "values": [],
          "description": "Specifies runtimes for the package restore. This is used to restore packages for runtimes not explicitly listed in the `&lt;RuntimeIdentifiers&gt;` tag in the <em>.csproj</em> file. For a list of Runtime Identifiers (RIDs), see the [RID catalog](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog).",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcesString",
          "type": "String",
          "values": [],
          "description": "Specifies NuGet package sources to use during the restore operation. This setting overrides all of the sources specified in the <em>nuget.config</em> files.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "useLockFile",
          "type": "boolean",
          "values": [],
          "description": "Enables the project lock file to be generated and used with restore.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the verbosity level of the command.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetTest",
      "title": "dotnetTest: .NET: Run unit tests (test)",
      "description": "The `dotnet test` command is used to execute unit tests in a given solution. It builds the solution and runs a test host application for each test project in the solution. The test host executes tests in the given project using a test framework, for example: MSTest, NUnit, or xUnit, and reports the success or failure of each test. If all tests are successful, the test runner returns 0 as an exit code; otherwise if any test fails, it returns 1.\n\n\n\n\n  For multi-targeted projects, tests are run for each targeted framework. The test host and the unit test framework are packaged as NuGet packages and are restored as ordinary dependencies for the project.\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test))",
      "parameters": [
        {
          "name": "blame",
          "type": "boolean",
          "values": [],
          "description": "Runs the tests in blame mode. This option is helpful in isolating problematic tests that cause the test host to crash. When a crash is detected, it creates an sequence file in `TestResults/&lt;Guid&gt;/&lt;Guid&gt;_Sequence.xml` that captures the order of tests that were run before the crash.",
          "isOptional": true
        },
        {
          "name": "blameCrash",
          "type": "boolean",
          "values": [],
          "description": "Runs the tests in blame mode and collects a crash dump when the test host exits unexpectedly. This option depends on the version of .NET used, the type of error, and the operating system.\n \n\n For exceptions in managed code, a dump will be automatically collected on .NET 5.0 and later versions. It will generate a dump for the test host or any child process that also ran on .NET 5.0 and crashed. Crashes in native code will not generate a dump. This option works on Windows, macOS, and Linux.\n \n\n Crash dumps in native code, or when using .NET Core 3.1 or earlier versions, can only be collected on Windows, by using Procdump. A directory that contains <em>procdump.exe</em> and <em>procdump64.exe</em> must be in the PATH or PROCDUMP_PATH environment variable. [Download the tools.](https://docs.microsoft.com/en-us/sysinternals/downloads/procdump) Implies `--blame`.\n \n\n To collect a crash dump from a native application running on .NET 5.0 or later, the usage of Procdump can be forced by setting the `VSTEST_DUMP_FORCEPROCDUMP` environment variable to `1`.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "blameCrashCollectAlways",
          "type": "boolean",
          "values": [],
          "description": "Collects a crash dump on expected as well as unexpected test host exit.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "blameCrashDumpType",
          "type": "String",
          "values": [],
          "description": "The type of crash dump to be collected. Implies `--blame-crash`.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "blameHang",
          "type": "boolean",
          "values": [],
          "description": "Run the tests in blame mode and collects a hang dump when a test exceeds the given timeout.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "blameHangDumpType",
          "type": "String",
          "values": [],
          "description": "The type of crash dump to be collected. It should be `full`, `mini`, or `none`. When `none` is specified, the test host is terminated on timeout, but no dump is collected. Implies `--blame-hang`.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "blameHangTimeout",
          "type": "int",
          "values": [],
          "description": "Per-test timeout, in milliseconds, after which a hang dump is triggered and the test host process and all of its child processes are dumped and terminated.\n \n\n When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit and NUnit the timeout is renewed after every test case. For MSTest, the timeout is used for all test cases. This option is supported on Windows with netcoreapp2.1 and later, on Linux with netcoreapp3.1 and later, and on macOS with net5.0 or later. Implies `--blame` and `--blame-hang`.\n\n\n\n <em>**Available since:** .NET 5.0 preview SDK</em>",
          "isOptional": true
        },
        {
          "name": "collect",
          "type": "String",
          "values": [],
          "description": "Enables a data collector for the test run. For more information, see [Monitor and analyze test run](https://aka.ms/vstest-collect).",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Defines the build configuration. The default for most projects is `Debug`, but you can override the build configuration settings in your project.",
          "isOptional": true
        },
        {
          "name": "diag",
          "type": "String",
          "values": [],
          "description": "Enables diagnostic mode for the test platform and writes diagnostic messages to the specified file and to files next to it. The process that is logging the messages determines which files are created, such as `*.host_&lt;date&gt;.txt` for the test host log, and `*.datacollector_&lt;date&gt;.txt` for the data collector log.",
          "isOptional": true
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "Filters out tests in the current project using the given expression. For more information, see the [Filter option details](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test#filter-option-details) section. For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](https://docs.microsoft.com/en-us/dotnet/core/testing/selective-unit-tests?pivots=mstest).",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "Forces the use of `dotnet` or a .NET Framework test host for the test binaries. This option only determines which type of host to use. The actual framework version to be used is determined by the <em>runtimeconfig.json</em> of the test project. When not specified, the [TargetFramework assembly attribute](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.versioning.targetframeworkattribute) is used to determine the type of host. When that attribute is stripped from the <em>.dll</em>, the .NET Framework host is used.",
          "isOptional": true
        },
        {
          "name": "listTests",
          "type": "boolean",
          "values": [],
          "description": "List all of the discovered tests in the current project.",
          "isOptional": true
        },
        {
          "name": "logger",
          "type": "String",
          "values": [],
          "description": "Specifies a logger for test results. Unlike MSBuild, `dotnet test` doesn't accept abbreviations: instead of \"`console;v=d`\", use \"`console;verbosity=detailed`\".",
          "isOptional": true
        },
        {
          "name": "noBuild",
          "type": "boolean",
          "values": [],
          "description": "Doesn't build the project before packing, and does not perform an implicit restore.",
          "isOptional": true
        },
        {
          "name": "noRestore",
          "type": "boolean",
          "values": [],
          "description": "Doesn't execute an implicit restore when running the command.",
          "isOptional": true
        },
        {
          "name": "nologo",
          "type": "boolean",
          "values": [],
          "description": "Doesn't display the startup banner or the copyright message.\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 3.0</em>",
          "isOptional": true
        },
        {
          "name": "option",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionsString",
          "type": "String",
          "values": [],
          "description": "For more information about these options, see the [MSBuild Command-Line Reference](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference).\n\n\n\n\n  If targets and/or properties are also configured, those will be passed <em>after</em> these options.",
          "isOptional": true
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "Directory in which to find the binaries to run. If not specified, the default path is `./bin/&lt;configuration&gt;/&lt;framework&gt;/`. For projects with multiple target frameworks (via the `TargetFrameworks` property), you also need to specify a framework when you specify this option. `dotnet test` always runs tests from the output directory. You can use [AppDomain.BaseDirectory](https://docs.microsoft.com/en-us/dotnet/api/system.appdomain.basedirectory) to consume test assets in the output directory.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "What to test. This can be one of:\n \n  \n* Path to a test project.\n\n  \n* Path to a solution.\n\n  \n* Path to a directory that contains a project or a solution.\n\n  \n* Path to a test project <em>.dll</em> file.\n\n  If not specified, it searches for a project or a solution in the current directory.",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesString",
          "type": "String",
          "values": [],
          "description": "Additional MSBuild properties to set. These should be specified one per line, in Java [properties syntax](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).",
          "isOptional": true
        },
        {
          "name": "resultsDirectory",
          "type": "String",
          "values": [],
          "description": "The directory where the test results are going to be placed. If the specified directory doesn't exist, it's created. The default is `TestResults` in the directory that contains the project file.",
          "isOptional": true
        },
        {
          "name": "runSettings",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runSettingsString",
          "type": "String",
          "values": [],
          "description": "Inline `RunSettings` values, specified in in Java [properties syntax](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Properties.html#load(java.io.Reader)).",
          "isOptional": true
        },
        {
          "name": "runtime",
          "type": "String",
          "values": [],
          "description": "The target runtime to test for.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "settings",
          "type": "String",
          "values": [],
          "description": "The `.runsettings` file to use for running the tests. Note that the `TargetPlatform` element (x86|x64) has no effect for `dotnet test`. To run tests that target x86, install the x86 version of .NET Core. The bitness of the <em>dotnet.exe</em> that is on the path is what will be used for running tests.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "shutDownBuildServers",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet build-server shutdown` will be executed after the main command, shutting down build servers that may have been started.\n\n\n\n\n  Note: If this is not specified, a build that causes such a build server to be started may <q>hang</q> until those server processes end. As such, it's recommended to specify this for the last .NET-related step in a job. If using multiple SDKs, each needs its own shutdown (e.g. the .NET Core 3.1 SDK will not shut down build servers from the .NET 5.0 SDK).\n\n\n\n\n\n\n <em>**Available since:** .NET Core SDK 2.1</em>",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "testAdapterPath",
          "type": "String",
          "values": [],
          "description": "Path to a directory to be searched for additional test adapters. Only <em>.dll</em> files with suffix `.TestAdapter.dll` are inspected. If not specified, the directory of the test <em>.dll</em> is searched.",
          "isOptional": true
        },
        {
          "name": "unstableIfWarnings",
          "type": "boolean",
          "values": [],
          "description": "If this is set and the build completes successfully with warnings, the build will be marked as unstable.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the MSBuild verbosity level.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "dotnetToolRestore",
      "title": "dotnetToolRestore: .NET: Restore local tools (tool restore)",
      "description": "The `dotnet tool restore` command finds the tool manifest file that is in scope for the current directory and installs the tools that are listed in it. For information about manifest files, see [Install a local tool](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#install-a-local-tool) and [Invoke a local tool](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools#invoke-a-local-tool).\n\n\n\n\n  (see also: [Microsoft Documentation](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-restore))",
      "parameters": [
        {
          "name": "additionalSource",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "additionalSources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "additionalSourcesString",
          "type": "String",
          "values": [],
          "description": "Adds additional NuGet package sources to use during installation.",
          "isOptional": true
        },
        {
          "name": "configfile",
          "type": "String",
          "values": [],
          "description": "The NuGet configuration (<em>nuget.config</em>) file to use.",
          "isOptional": true
        },
        {
          "name": "disableParallel",
          "type": "boolean",
          "values": [],
          "description": "Prevent restoring multiple projects in parallel.",
          "isOptional": true
        },
        {
          "name": "ignoreFailedSources",
          "type": "boolean",
          "values": [],
          "description": "Treat package source failures as warnings.",
          "isOptional": true
        },
        {
          "name": "noCache",
          "type": "boolean",
          "values": [],
          "description": "Do not cache packages and http requests.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.\n \n\n If the default is specified, you either need to use the <q>With .NET</q> element (or a `withDotNet` block in a pipeline script) to specify one, or ensure this step runs on a node that has a .NET SDK installed and in the path.",
          "isOptional": true
        },
        {
          "name": "showSdkInfo",
          "type": "boolean",
          "values": [],
          "description": "If enabled, `dotnet --info` will be executed before the main command. This shows a list of available SDKs and runtimes, indicating which one is currently being used.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        },
        {
          "name": "toolManifest",
          "type": "String",
          "values": [],
          "description": "Path to the manifest file.",
          "isOptional": true
        },
        {
          "name": "verbosity",
          "type": "String",
          "values": [],
          "description": "Sets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.",
          "isOptional": true
        },
        {
          "name": "workDirectory",
          "type": "String",
          "values": [],
          "description": "The directory in which to execute the command. By default, this is the current directory (for freestyle jobs, that is the root of the job's workspace).",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "downloadFeatureFiles",
      "title": "downloadFeatureFiles: Zephyr Scale: Download Feature Files",
      "description": "Downloads feature files from Zephyr Scale.",
      "parameters": [
        {
          "name": "serverAddress",
          "type": "String",
          "values": [],
          "description": "One of the preconfigured Jira instances. If you do not have any, please go to General Configuration and set up a new Jira instance.",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "Jira project key to filter test cases.",
          "isOptional": false
        },
        {
          "name": "targetPath",
          "type": "String",
          "values": [],
          "description": "The path where the downloaded feature files will be placed.",
          "isOptional": false
        }
      ],
      "plugin": "tm4j-automation"
    },
    {
      "command": "downloadProgetPackage",
      "title": "downloadProgetPackage: ProGet Package Download",
      "description": "Downloads a universal ProGet package to specified folder and will optionally unpack it for you.\n \n Download options are: \n\n \n  \n* Package - Download ProGet universal package (ZIP file with extension of 'upack')\n\n  \n* Content as ZIP - Download content as ZIP file\n\n  \n* Content as TGZ - Download content as TGZ file\n\n  \n* Unpack Content - Extract the package content once downloaded\n\n  In all cases except 'Unpack Content' the environment variable PROGET_FILE will be populated with the name of the downloaded file\n \n\n\n \nSee [Inedo documentation](http://inedo.com/support/documentation/proget/reference/universal-feed-api-and-package-format).",
      "parameters": [
        {
          "name": "feedName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "groupName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "packageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "downloadFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "downloadFolder",
          "type": "String",
          "values": [],
          "description": "The folder to download the package to. The path can include environment variables in the format ${VAR} or $VAR.\n \nIf a full pathname is not supplied then the downloaded package 'should' end up in the workspace, but this is not guaranteed. If you wish the package to be placed in the workspace the it is best to use the Jenkins variable <i>${WORKSPACE}</i>\n\n \nSee <a rel=\"nofollow\">the list of available environment variables</a>.",
          "isOptional": false
        }
      ],
      "plugin": "inedo-proget"
    },
    {
      "command": "downstreamBuilds",
      "title": "downstreamBuilds: Provide list of downstream builds",
      "description": "",
      "parameters": [
        {
          "name": "run",
          "type": "class org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "downstream-build-cache"
    },
    {
      "command": "downstreamPublisher",
      "title": "downstreamPublisher: [TT] Downstream Report Generation",
      "description": "Generates report downstream-based on another Jenkins node. In order to work the ECU-TEST workspace has to be copied to that node with all relevant data (i.e. report directory) to generate reports. This can be achieved for free-style projects with the [Copy Artifact Plugin](https://plugins.jenkins.io/copyartifact) or in pipelines with the stash/unstash commands.",
      "parameters": [
        {
          "name": "workspace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "publishATX",
            "publishETLogs",
            "publishUNIT",
            "publishGenerators",
            "publishTMS",
            "publishTRF",
            "publishTraceAnalysis"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "dropbox",
      "title": "dropbox: Publish to Dropbox folder",
      "description": "",
      "parameters": [
        {
          "name": "sourceFiles",
          "type": "String",
          "values": [],
          "description": "Files to upload to the Dropbox location.\n\n \nThe string is a comma separated list of includes for an Ant fileset eg. '**/*.jar' (see [Patterns](http://ant.apache.org/manual/dirtasks.html#patterns) in the Ant manual).\n\n The base directory for this fileset is the workspace.",
          "isOptional": false
        },
        {
          "name": "remoteDirectory",
          "type": "String",
          "values": [],
          "description": "Destination folder.\n\n \nThis folder will be below the one in the global configuration. The folder will be created if does not exist.",
          "isOptional": false
        },
        {
          "name": "configName",
          "type": "String",
          "values": [],
          "description": "Select an Dropbox location from the list configured in the global configuration of this Jenkins.\n\n \nThe configuration defines the account properties and base directory of the Dropbox location.",
          "isOptional": false
        },
        {
          "name": "cleanRemote",
          "type": "boolean",
          "values": [],
          "description": "Select to delete all files and directories within the remote directory before transferring files.",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "flatten",
          "type": "boolean",
          "values": [],
          "description": "Only create files on the server, do not create directories (except for the remote directory).\n\n \nAll files that have been selected to transfer must have unique filenames. Publishing will stop and fail as soon as a duplicate filename is found when using the flatten option.",
          "isOptional": true
        },
        {
          "name": "pruneDays",
          "type": "int",
          "values": [],
          "description": "Directory created more then this number of days ago are considered old for pruning of root.",
          "isOptional": true
        },
        {
          "name": "pruneRoot",
          "type": "boolean",
          "values": [],
          "description": "Directories older then the max days will be deleted.\n\n \n A date format directory format can lead to a long list of directories. Removing old directories in the remote root will allow you to prune that list.",
          "isOptional": true
        },
        {
          "name": "remoteDirectorySDF",
          "type": "boolean",
          "values": [],
          "description": "Select this to include the timestamp in the remote directory.\n\n \n The timestamp is the date of build. This setting turns the remote directory option into a java SimpleDateFormat. The SimpleDateFormat(SDF) uses letters to represent components of the date, like the month, year, or day of the week. The [SimpleDateFormat documentation](http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html) has more information about the date patterns. As the SDF reserves all of the letters [A-Z][a-z], any that you want to appear literally in the directory that is created will need to be quoted.",
          "isOptional": true
        },
        {
          "name": "removePrefix",
          "type": "String",
          "values": [],
          "description": "First part of the file path that should not be created on the remote server.\n\n \nDirectory structures are created relative to the base directory, which is usually the workspace.You normally do not want the full path to these files to be created on the server. For example if Source files were target/deployment/images/**/ then you may want Remove prefix to be target/deployment This would create the images folder under the remote directory, and not target/deployment If you use remove prefix, then ALL source file paths MUST start with the prefix.",
          "isOptional": true
        }
      ],
      "plugin": "publish-over-dropbox"
    },
    {
      "command": "dry",
      "title": "dry: [Deprecated] Publish duplicate code analysis results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "highThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "normalThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "dry"
    },
    {
      "command": "ebCreateApplication",
      "title": "ebCreateApplication: Creates a new Elastic Beanstalk application",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebCreateApplicationVersion",
      "title": "ebCreateApplicationVersion: Creates a new version for an elastic beanstalk application",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionLabel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "s3Bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "s3Key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebCreateConfigurationTemplate",
      "title": "ebCreateConfigurationTemplate: Creates a new configuration template for an elastic beanstalk application",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "templateName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "solutionStackName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceConfigurationApplication",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceConfigurationTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebCreateEnvironment",
      "title": "ebCreateEnvironment: Creates a new Elastic Beanstalk environment",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "solutionStackName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "updateOnExisting",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionLabel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebSwapEnvironmentCNAMEs",
      "title": "ebSwapEnvironmentCNAMEs: Swaps the CNAMEs of two elastic beanstalk environments.",
      "description": "",
      "parameters": [
        {
          "name": "destinationEnvironmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "destinationEnvironmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceEnvironmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceEnvironmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebWaitOnEnvironmentHealth",
      "title": "ebWaitOnEnvironmentHealth: Waits until the specified environment application becomes available",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "health",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stabilityThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ebWaitOnEnvironmentStatus",
      "title": "ebWaitOnEnvironmentStatus: Waits until the specified environment becomes available",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ec2",
      "title": "ec2: Cloud template provisioning",
      "description": "Creates an `AWS Instance` object, from an already globally defined cloud name and label without registering it as a Jenkins agent.",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ec2"
    },
    {
      "command": "ec2ShareAmi",
      "title": "ec2ShareAmi: Share an AMI with other accounts",
      "description": "",
      "parameters": [
        {
          "name": "accountIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "amiId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "echo",
      "title": "echo: Print Message",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "ecrDeleteImage",
      "title": "ecrDeleteImage: Delete ecr images",
      "description": "",
      "parameters": [
        {
          "name": "imageIds",
          "type": "Nested",
          "values": [
            "imageDigest",
            "imageTag"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "registryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ecrListImages",
      "title": "ecrListImages: List ECR Images",
      "description": "",
      "parameters": [
        {
          "name": "filter",
          "type": "Nested",
          "values": [
            "tagStatus"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "registryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ecrLogin",
      "title": "ecrLogin: Create and return the ECR login string",
      "description": "",
      "parameters": [
        {
          "name": "email",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "registryIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ecrSetRepositoryPolicy",
      "title": "ecrSetRepositoryPolicy: Set ECR Repository Policy",
      "description": "",
      "parameters": [
        {
          "name": "policyText",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "registryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ecsTaskTemplate",
      "title": "ecsTaskTemplate: Define a task template to use in the AWS ECS plugin",
      "description": "",
      "parameters": [
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "assignPublicIp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "containerUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cpu",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environments",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executionRole",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraHosts",
          "type": "Nested",
          "values": [
            "ipAddress",
            "hostname"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inheritFrom",
          "type": "String",
          "values": [],
          "description": "You can pre-configure a task template in the system settings. Configure the label of this template to inherit from here.",
          "isOptional": true
        },
        {
          "name": "launchType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logDriver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logDriverOptions",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "memory",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "memoryReservation",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mountPoints",
          "type": "Nested",
          "values": [
            "name",
            "sourcePath",
            "containerPath",
            "readOnly"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "networkMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrides",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "placementStrategies",
          "type": "Nested",
          "values": [
            "type",
            "field"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platformVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "portMappings",
          "type": "Nested",
          "values": [
            "containerPort",
            "hostPort",
            "protocol"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "privileged",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteFSRoot",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repositoryCredentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "securityGroups",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sharedMemorySize",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "subnets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "taskDefinitionOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "taskrole",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uniqueRemoteFSRoot",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "amazon-ecs"
    },
    {
      "command": "edasClient",
      "title": "edasClient: Deploy to EDAS",
      "description": "",
      "parameters": [
        {
          "name": "extensions",
          "type": "Nested",
          "values": [
            "deployEDASApplication",
            "InsertEDASApplication",
            "deployEDASK8sApplication",
            "insertEDASK8sApplication"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "alibabacloud-edas"
    },
    {
      "command": "elastest",
      "title": "elastest: Integrate Jenkins with ElasTest",
      "description": "",
      "parameters": [
        {
          "name": "TJobId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "monitoring",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "surefireReportsPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sut",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sutParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tss",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "elastest"
    },
    {
      "command": "elbDeregisterInstance",
      "title": "elbDeregisterInstance: Deregisters the specified instances from the specified load balancer.",
      "description": "",
      "parameters": [
        {
          "name": "targetGroupARN",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "elbIsInstanceDeregistered",
      "title": "elbIsInstanceDeregistered: Registers the specified instances from the specified load balancer.",
      "description": "",
      "parameters": [
        {
          "name": "targetGroupARN",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "elbIsInstanceRegistered",
      "title": "elbIsInstanceRegistered: Registers the specified instances from the specified load balancer.",
      "description": "",
      "parameters": [
        {
          "name": "targetGroupARN",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "elbRegisterInstance",
      "title": "elbRegisterInstance: Registers the specified instances from the specified load balancer.",
      "description": "",
      "parameters": [
        {
          "name": "targetGroupARN",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "emailext",
      "title": "emailext: Extended Email",
      "description": "Step for sending email via the email-ext plugin.",
      "parameters": [
        {
          "name": "subject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attachLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "attachmentsPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "compressLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "from",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mimeType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "postsendScript",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "presendScript",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recipientProviders",
          "type": "Nested",
          "values": [
            "buildUser",
            "culprits",
            "developers",
            "brokenTestsSuspects",
            "brokenBuildSuspects",
            "recipients",
            "requestor",
            "upstreamDevelopers"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "replyTo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveOutput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "to",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "email-ext"
    },
    {
      "command": "emailextrecipients",
      "title": "emailextrecipients: Extended Email Recipients",
      "description": "",
      "parameters": [
        {
          "name": "recipientProviders",
          "type": "Nested",
          "values": [
            "buildUser",
            "culprits",
            "developers",
            "brokenTestsSuspects",
            "brokenBuildSuspects",
            "recipients",
            "requestor",
            "upstreamDevelopers"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "email-ext"
    },
    {
      "command": "envVarsForTool",
      "title": "envVarsForTool: Fetches the environment variables for a given tool in a list of 'FOO=bar' strings suitable for the withEnv step.",
      "description": "",
      "parameters": [
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "toolVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-model-definition"
    },
    {
      "command": "environmentDashboard",
      "title": "environmentDashboard: Details for Environment dashboard",
      "description": "",
      "parameters": [
        {
          "name": "nameOfEnv",
          "type": "String",
          "values": [],
          "description": "Specify the environment name that you are deploying to.\n \n\n You can use jenkins environment variable in the text area.\n \n\n E.g: DEV or TEST or PROD",
          "isOptional": false
        },
        {
          "name": "componentName",
          "type": "String",
          "values": [],
          "description": "Specify the component name that you are deploying to.\n \n\n You can use jenkins environment variable in the text area.\n \n\n E.g: WEBAPP or DB or JBoss",
          "isOptional": false
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "The build name or value that should be displayed.\n \n\n You can use jenkins environment variables here.\n \n\n E.g: ${BUILD_NUMBER}",
          "isOptional": false
        },
        {
          "name": "buildJob",
          "type": "String",
          "values": [],
          "description": "Enter the name of the Jenkins job that built the code being deployed (so that the dashboard can link to it) <i>(Optional)</i>\n \n\n Do not use unless your build number refers to a Jenkins build number!",
          "isOptional": false
        },
        {
          "name": "packageName",
          "type": "String",
          "values": [],
          "description": "Package name is an optional value that can be set along with the build number.\n \n\n Some projects may use this to describe what the build being deployed is all about.",
          "isOptional": false
        },
        {
          "name": "addColumns",
          "type": "boolean",
          "values": [],
          "description": "Use this to add additional columns to the dashboard history pop-ups.",
          "isOptional": false
        },
        {
          "name": "data",
          "type": "Nested",
          "values": [
            "columnName",
            "contents"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "environment-dashboard"
    },
    {
      "command": "error",
      "title": "error: Error signal",
      "description": "Signals an error. Useful if you want to conditionally abort some part of your program. You can also just `throw new Exception()`, but this step will avoid printing a stack trace.",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "evaluateGate",
      "title": "evaluateGate: IBM Cloud DevOps Gate",
      "description": "",
      "parameters": [
        {
          "name": "policy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forceDecision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolchainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "eventSourceLambda",
      "title": "eventSourceLambda: AWS Lambda eventsource mapping",
      "description": "",
      "parameters": [
        {
          "name": "lambdaEventSourceBuildStepVariables",
          "type": "Nested",
          "values": [
            "awsRegion",
            "functionName",
            "eventSourceArn",
            "awsAccessKeyId",
            "awsSecretKey",
            "functionAlias",
            "useInstanceCredentials"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-lambda"
    },
    {
      "command": "examCleanTarget",
      "title": "examCleanTarget: Clear EXAM target",
      "description": "",
      "parameters": [],
      "plugin": "exam"
    },
    {
      "command": "examRun_Groovy",
      "title": "examRun_Groovy: Invoke EXAM Groovy Script",
      "description": "For projects that use EXAM as the test system. This causes Jenkins to invoke EXAM with the given options.",
      "parameters": [
        {
          "name": "examName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startElement",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "examModel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modelConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaOpts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStartElement",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "exam"
    },
    {
      "command": "examTest_ExecutionFile",
      "title": "examTest_ExecutionFile: Invoke EXAM (execution file)",
      "description": "For projects that use EXAM as the test system. This causes Jenkins to invoke EXAM with the given options.",
      "parameters": [
        {
          "name": "examName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pythonName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "examReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "systemConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clearWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaOpts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelLibCtrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelTestCtrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelTestLogic",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pathExecutionFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pathPCode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfMeasureImages",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfReportTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfSelectFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testrunFilter",
          "type": "Nested",
          "values": [
            "name",
            "value",
            "adminCases",
            "activateTestcases"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "exam"
    },
    {
      "command": "examTest_Model",
      "title": "examTest_Model: Invoke EXAM (model)",
      "description": "For projects that use EXAM as the test system. This causes Jenkins to invoke EXAM with the given options.",
      "parameters": [
        {
          "name": "examName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pythonName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "examReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executionFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "systemConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clearWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "examModel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaOpts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelLibCtrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelTestCtrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loglevelTestLogic",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modelConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfMeasureImages",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfReportTemplate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pdfSelectFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testrunFilter",
          "type": "Nested",
          "values": [
            "name",
            "value",
            "adminCases",
            "activateTestcases"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "exam"
    },
    {
      "command": "execMan",
      "title": "execMan: Run Execution Manager Request",
      "description": "",
      "parameters": [
        {
          "name": "requestType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "altEMConfig",
          "type": "Nested",
          "values": [
            "url",
            "credentials"
          ],
          "description": "Optional alternative Execution Manager configuration. If provided, these parameters override those specified in Jenkins global configuration.",
          "isOptional": true
        },
        {
          "name": "bookmark",
          "type": "Nested",
          "values": [
            "name",
            "folder"
          ],
          "description": "Select this to run a predefined bookmark configured on the Execution Manager via the Management Studio.",
          "isOptional": true
        },
        {
          "name": "execParams",
          "type": "Nested",
          "values": [
            "list"
          ],
          "description": "Optional execution request parameters. Both a key and value must be specified. The value can refer to Jenkins environment variables using this syntax - **${**<em>JENKINS_ENV_VAR</em>**}**. For example - **${BUILD_ID}**.",
          "isOptional": true
        },
        {
          "name": "postExecute",
          "type": "Nested",
          "values": [
            "action",
            "params"
          ],
          "description": "Optional post execution action. To perform any post action, provide action name along with the need parameters.",
          "isOptional": true
        },
        {
          "name": "processList",
          "type": "Nested",
          "values": [
            "database",
            "project",
            "processes",
            "folder",
            "requestName"
          ],
          "description": "Select this to execute a list of Certify processes without creating a request or bookmark first.",
          "isOptional": true
        },
        {
          "name": "request",
          "type": "Nested",
          "values": [
            "name"
          ],
          "description": "Select this to run a predefined request configured on the Execution Manager.",
          "isOptional": true
        },
        {
          "name": "waitConfig",
          "type": "Nested",
          "values": [
            "pollInterval",
            "maxRunTime"
          ],
          "description": "Optional execution request wait configuration. Both the polling interval and maximum run time must be specified in seconds.",
          "isOptional": true
        }
      ],
      "plugin": "ws-execution-manager"
    },
    {
      "command": "executeCerberusCampaign",
      "title": "executeCerberusCampaign: Execute Cerberus Campaign",
      "description": "",
      "parameters": [
        {
          "name": "campaignName",
          "type": "String",
          "values": [],
          "description": "Enter the campaign name.",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "browser",
          "type": "String",
          "values": [],
          "description": "either\n \n\n - Robot\n \n\n or\n \n\n - Robot server ip + Robot server port + browser\n \n\n\n \n\n If you enter a robot, no need to enter Robot server ip + Robot server port + browser",
          "isOptional": false
        },
        {
          "name": "screenshot",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pageSource",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "seleniumLog",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeOut",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retries",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "priority",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "Tag for the execution of this campaign. Tag is used to group and display all testcases execution of the campaign.\n \n\n Use **$[current_timestamp]** to put the current timestamp to the job execution.",
          "isOptional": false
        },
        {
          "name": "ss_p",
          "type": "String",
          "values": [],
          "description": "either\n \n\n - Robot\n \n\n or\n \n\n - Robot server ip + Robot server port + browser\n \n\n\n \n\n If you enter a robot, no need to enter Robot server ip + Robot server port + browser",
          "isOptional": false
        },
        {
          "name": "ssIp",
          "type": "String",
          "values": [],
          "description": "either\n \n\n - Robot\n \n\n or\n \n\n - Robot server ip + Robot server port + browser\n \n\n\n \n\n If you enter a robot, no need to enter Robot server ip + Robot server port + browser",
          "isOptional": false
        },
        {
          "name": "robot",
          "type": "String",
          "values": [],
          "description": "either\n \n\n - Robot\n \n\n or\n \n\n - Robot server ip + Robot server port + browser\n \n\n\n \n\n If you enter a robot, no need to enter Robot server ip + Robot server port + browser",
          "isOptional": false
        },
        {
          "name": "manualHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "manualContextRoot",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "country",
          "type": "String",
          "values": [],
          "description": "If empty, the countries defined on the campaign will be used.",
          "isOptional": false
        },
        {
          "name": "cerberusUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeOutForCampaignExecution",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cerberus-testing"
    },
    {
      "command": "executeCloudifyWorkflow",
      "title": "executeCloudifyWorkflow: Execute Cloudify Workflow",
      "description": "This step executes a workflow on Cloudify Manager.",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "ID of the Cloudify environment to delete.",
          "isOptional": true
        },
        {
          "name": "executionParameters",
          "type": "String",
          "values": [],
          "description": "Parameters to pass to the execution, in YAML/JSON format.",
          "isOptional": true
        },
        {
          "name": "printLogs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the execution's events and logs are printed to the build log. Note that this implies \"wait for completion\".",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        },
        {
          "name": "waitForCompletion",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the build waits for the execution to finish. If the execution ends in any way other than success, the build step will fail.",
          "isOptional": true
        },
        {
          "name": "workflowId",
          "type": "String",
          "values": [],
          "description": "The ID of the workflow to execute.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "executeKatalon",
      "title": "executeKatalon: Execute Katalon Studio Tests",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "location",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executeArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "x11Display",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xvfbConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "katalon"
    },
    {
      "command": "executeKatalonTestOps",
      "title": "executeKatalonTestOps: Execute Katalon TestOps Plan",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "planId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "katalon"
    },
    {
      "command": "exportIpa",
      "title": "exportIpa: Export IPA",
      "description": "",
      "parameters": [
        {
          "name": "appURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiveDir",
          "type": "String",
          "values": [],
          "description": "Specify the location of the path (usually BUILD_DIR specified by xcodebuild) to read the Archive for exporting the IPA file. \n\n Supports all macros and also environment and [build variables](http://ci.jenkins-ci.org/env-vars.html) from the [Token Macro Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin).\n\n For example you can use the value :\n\n \n\n \n```groovy\n${WORKSPACE}/build\n```",
          "isOptional": true
        },
        {
          "name": "assetPackManifestURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "compileBitcode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "copyProvisioningProfile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "developmentTeamID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "developmentTeamName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayImageURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fullSizeImageURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipaExportMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipaName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipaOutputDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPwd",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "manualSigning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "packResourcesAsset",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "provisioningProfiles",
          "type": "Nested",
          "values": [
            "provisioningProfileAppId",
            "provisioningProfileUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourcesAssetURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "signingMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stripSwiftSymbols",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "symRoot",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thinning",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unlockKeychain",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadBitcode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSymbols",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeProjectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeSchema",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeWorkspaceFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xcode-plugin"
    },
    {
      "command": "exportPackages",
      "title": "exportPackages: [TT] Export Packages",
      "description": "Exports ECU-TEST packages and their attributes to a test management system like RQM or ALM.",
      "parameters": [
        {
          "name": "exportConfigs",
          "type": "Nested",
          "values": [
            "$class: 'ExportPackageAttributeConfig'",
            "$class: 'ExportPackageConfig'",
            "$class: 'ExportProjectAttributeConfig'",
            "$class: 'ExportProjectConfig'",
            "$class: 'ImportPackageAttributeConfig'",
            "$class: 'ImportPackageConfig'",
            "$class: 'ImportPackageDirConfig'",
            "$class: 'ImportProjectArchiveConfig'",
            "$class: 'ImportProjectAttributeConfig'",
            "$class: 'ImportProjectConfig'",
            "$class: 'ImportProjectDirConfig'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "exportProjects",
      "title": "exportProjects: [TT] Export Projects",
      "description": "Exports ECU-TEST projects and their attributes to a test management system like RQM or ALM.",
      "parameters": [
        {
          "name": "exportConfigs",
          "type": "Nested",
          "values": [
            "$class: 'ExportPackageAttributeConfig'",
            "$class: 'ExportPackageConfig'",
            "$class: 'ExportProjectAttributeConfig'",
            "$class: 'ExportProjectConfig'",
            "$class: 'ImportPackageAttributeConfig'",
            "$class: 'ImportPackageConfig'",
            "$class: 'ImportPackageDirConfig'",
            "$class: 'ImportProjectArchiveConfig'",
            "$class: 'ImportProjectAttributeConfig'",
            "$class: 'ImportProjectConfig'",
            "$class: 'ImportProjectDirConfig'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "exws",
      "title": "exws: Use external workspace",
      "description": "Based on the input parameter, it defines the local path to the workspace, and switches to it. The complete workspace path follows the pattern:\n \n <i>/nodeMountPoint/physicalPathOnDisk/$JOB_NAME/$BUILD_NUMBER</i> \n where\n \n  \n*  <i>nodeMountPoint</i> is defined either in the Node configuration, External Workspace section, or in the Jenkins global config, the <i>External Workspace Template</i> section. Firstly it searches for the disk definition in the Jenkins global config (the <i>Template</i> lookup is done based on the <i>Node label</i> parameter), then it fallbacks to searching in the Node configuration. \n\n  \n*  <i>physicalPathOnDisk</i> is defined in the Jenkins global config, the <i>External Workspace Definitions</i> section.",
      "parameters": [
        {
          "name": "externalWorkspace",
          "type": "class org.jenkinsci.plugins.ewm.model.ExternalWorkspace",
          "values": [],
          "description": "The object returned by the <i>exwsAllocate</i> step. \n\n \n Basic usage: \n\n \n```groovy\n    def extWorkspace = exwsAllocate diskPoolId: 'diskpool1'\n    node ('linux') {\n        exws (extWorkspace) {\n            scm checkout\n            sh 'mvn clean install -DskipTests'\n        }\n    }\n    node ('test') {\n        exws (extWorkspace) {\n            sh 'mvn test'\n        }\n    }\n    \n```",
          "isOptional": false
        }
      ],
      "plugin": "external-workspace-manager"
    },
    {
      "command": "exwsAllocate",
      "title": "exwsAllocate: Allocate external workspace",
      "description": "Allocates a disk from the given <i>Disk Pool Ref ID</i>. By default, the disk with the most available space is selected. On that disk, it computes the workspace path based on the formula: <i>physicalPathOnDisk/$JOB_NAME/$BUILD_NUMBER</i>, where <i>physicalPathOnDisk</i> is defined in the Jenkins global config, <i>External Workspace Definitions</i> section. \n\n \n If you provide the <i>Upstream</i> parameter, then the <i>Disk Pool Ref ID</i> parameter will be ignored. In this case, the step will allocate the same workspace as used by its upstream job. By default, it will select the workspace used by the last stable build from the upstream job.",
      "parameters": [
        {
          "name": "diskPoolId",
          "type": "String",
          "values": [],
          "description": "The reference to the Disk Pool ID defined in the Jenkins global config.",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "The workspace path on the Disk can be configured within the Build DSL. If the <i>path</i> parameter is provided, the <i>exwsAllocate</i> step will allocate this workspace path on the Disk. If it's not provided, the <i>exwsAllocate</i> step will fallback to using the <i>Workspace path template</i> parameter defined in the Jenkins global config, <i>External Workspace Definitions</i> section, if any. \n\n \n Basic Pipeline example: \n\n \n```groovy\n    def customPath = \"${env.JOB_NAME}/${PULL_REQUEST_NUMBER_PARAM}/${env.BUILD_NUMBER}\"\n    def extWorkspace = exwsAllocate diskPoolId: 'diskpool1', path: customPath\n    ...\n    \n```\n\n \n Note: It's recommended to use <i>${ }</i> for variable declaration, instead of standalone <i>$</i> symbol, as shown in the examples.",
          "isOptional": true
        },
        {
          "name": "selectedRun",
          "type": "class org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper",
          "values": [],
          "description": "If you provide this parameter, the <i>exwsAllocate</i> step will allocate the first workspace used by the selected run. \n\n \n This is a <i>RunWrapper</i> object. You can get a reference by using the <i>runSelector</i> step from the <i>Run Selector Plugin</i>. \n\n \n Basic usage example: \n\n \n```groovy\n    def run = selectRun 'upstream-project-name'\n    def extWorkspace = exwsAllocate selectedRun: run\n    ...\n    \n```",
          "isOptional": true
        },
        {
          "name": "strategy",
          "type": "Nested",
          "values": [
            "fastestReadSpeed",
            "fastestWriteSpeed",
            "mostUsableSpace"
          ],
          "description": "Provide Disk allocation strategy as step parameter. This will override the strategy defined in the Jenkins global config. \n\n \n **Note:** Some Disk allocation strategies may require additional information to be provided. For example, if you choose the fastest read/write speed strategy, then you must provide, for each disk, its read/write speeds. These values should be set in the <i>Disk Information</i> section, for each <i>Disk</i> entry from the Jenkins global config.",
          "isOptional": true
        }
      ],
      "plugin": "external-workspace-manager"
    },
    {
      "command": "fabric",
      "title": "fabric: Upload .apk to Fabric Beta",
      "description": "",
      "parameters": [
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "Fabric API key can be found [here](https://fabric.io/settings/organizations) under your account.",
          "isOptional": false
        },
        {
          "name": "buildSecret",
          "type": "String",
          "values": [],
          "description": "Fabric build secret can be found [here](https://fabric.io/settings/organizations) under your account.",
          "isOptional": false
        },
        {
          "name": "releaseNotesType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notifyTestersType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseNotesParameter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseNotesFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apkPath",
          "type": "String",
          "values": [],
          "description": "File path relative to the workspace (e.g. \"app/build/outputs/apk/app-debug.apk\").\n \n\n If multiple file paths are specified (delimited by a comma), then all .apk files will be uploaded.",
          "isOptional": false
        },
        {
          "name": "testersEmails",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testersGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "organization",
          "type": "String",
          "values": [],
          "description": "Fabric Organization is necessary if you want the plugin to output links for your builds (they look like https://fabric.io/{organization}/android/apps/{package}/beta/releases/{id} as well as set environment variable FABRIC_BETA_BUILD_URL (FABRIC_BETA_BUILD_URL_n if there are multiple APKs). Leave the field empty if you don't need this.",
          "isOptional": false
        },
        {
          "name": "useAntStyleInclude",
          "type": "boolean",
          "values": [],
          "description": "Interprets the apk path as ant-style include pattern (i.e. supporting glob patterns like * and **) relative to the workspace.",
          "isOptional": false
        }
      ],
      "plugin": "fabric-beta-publisher"
    },
    {
      "command": "figlet",
      "title": "figlet: Figlet",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "figlet-buildstep"
    },
    {
      "command": "fileExists",
      "title": "fileExists: Verify if file exists in workspace",
      "description": "Checks if the given file (as relative path to current directory) exists. Returns `true | false`.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Relative (`/`-separated) path to file within a workspace to verify its existence.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "fileOperations",
      "title": "fileOperations: File Operations",
      "description": "",
      "parameters": [
        {
          "name": "fileOperations",
          "type": "Nested",
          "values": [
            "fileCopyOperation",
            "fileCreateOperation",
            "fileDeleteOperation",
            "fileDownloadOperation",
            "fileJoinOperation",
            "filePropertiesToJsonOperation",
            "fileRenameOperation",
            "fileTransformOperation",
            "fileUnTarOperation",
            "fileUnZipOperation",
            "fileZipOperation",
            "folderCopyOperation",
            "folderCreateOperation",
            "folderDeleteOperation",
            "folderRenameOperation"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "file-operations"
    },
    {
      "command": "findBuildScans",
      "title": "findBuildScans: Find published build scans",
      "description": "Inspect build log for published Gradle build scans. The build scans will be shown on the pipeline build page.",
      "parameters": [],
      "plugin": "gradle"
    },
    {
      "command": "findFiles",
      "title": "findFiles: Find files in the workspace",
      "description": "Find files in the current working directory. The step returns an array of file info objects who's properties you can see in the below example.\n\n <em>Ex: </em> ` def files = findFiles(glob: '**/TEST-*.xml') echo \"\"\"${files[0].name} ${files[0].path} ${files[0].directory} ${files[0].length} ${files[0].lastModified}\"\"\" `",
      "parameters": [
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "[Ant style pattern](https://ant.apache.org/manual/dirtasks.html#patterns) of file paths that should match. If this property is set all descendants of the current working directory will be searched for a match and returned, if it is omitted only the direct descendants of the directory will be returned.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "findText",
      "title": "findText: Search files or the console log for regular expression(s)",
      "description": "",
      "parameters": [
        {
          "name": "alsoCheckConsoleOutput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildResult",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fileSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notBuiltIfFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "regexp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "succeedIfFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "textFinders",
          "type": "Nested",
          "values": [
            "regexp",
            "alsoCheckConsoleOutput",
            "buildResult",
            "changeCondition",
            "fileSet"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableIfFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "text-finder"
    },
    {
      "command": "findbugs",
      "title": "findbugs: [Deprecated] Publish FindBugs analysis results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isRankActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "findbugs"
    },
    {
      "command": "fingerprint",
      "title": "fingerprint: Record fingerprints of files to track usage",
      "description": "Jenkins can record the 'fingerprint' of files (most often jar files) to keep track of where/when those files are produced and used. When you have inter-dependent projects on Jenkins, this allows you to quickly find out answers to questions like:\n \n  \n*  I have foo.jar on my HDD but which build number of FOO did it come from? \n\n  \n*  My BAR project depends on foo.jar from the FOO project. \n\n  \n* \n   \n \n*  Which build of foo.jar is used in BAR #51? \n\n \n*  Which build of BAR contains my bug fix to foo.jar #32? \n\n   \n\n \n \n To use this feature, all of the involved projects (not just the project in which a file is produced, but also the projects in which the file is used) need to use this and record fingerprints. \n\n \n See [this document](https://jenkins.io/redirect/fingerprint) for more details.",
      "parameters": [
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "Can use wildcards like `module/dist/**/*.zip` (see the [@includes of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format). The base directory is <a rel=\"nofollow\">the workspace</a>.",
          "isOptional": false
        },
        {
          "name": "caseSensitive",
          "type": "boolean",
          "values": [],
          "description": "Fingerprinter uses Ant `org.apache.tools.ant.DirectoryScanner` which by default is case sensitive. For instance, if the job produces *.hpi files, pattern \"**/*.HPI\" will fail to find them.\n \n\n\n \n\n This option can be used to disable case sensitivity. When it's unchecked, pattern \"**/*.HPI\" will match any *.hpi files, or pattern \"**/cAsEsEnSiTiVe.jar\" will match a file called caseSensitive.jar.",
          "isOptional": true
        },
        {
          "name": "defaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optionally specify the 'excludes' pattern, such as \"foo/bar/**/*\". Use \",\" to set a list of patterns. A file that matches this mask will not be fingerprinted even if it matches the mask specified in 'files to fingerprint' section.",
          "isOptional": true
        }
      ],
      "plugin": "core"
    },
    {
      "command": "flywayrunner",
      "title": "flywayrunner: Invoke Flyway",
      "description": "",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "flywayCommand",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "locations",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commandLineArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "flyway-runner"
    },
    {
      "command": "fodPollResults",
      "title": "fodPollResults: Poll Fortify on Demand for Results",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollingInterval",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clientSecret",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "policyFailureBuildResultPreference",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "fodPollResults",
      "title": "fodPollResults: Poll Fortify on Demand for Results",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollingInterval",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clientSecret",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "policyFailureBuildResultPreference",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "fodStaticAssessment",
      "title": "fodStaticAssessment: Run Fortify on Demand Upload",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entitlementPreference",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inProgressBuildResultType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inProgressScanActionType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "purchaseEntitlements",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remediationScanPreferenceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "srcLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "fodStaticAssessment",
      "title": "fodStaticAssessment: Run Fortify on Demand Upload",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entitlementPreference",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inProgressBuildResultType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inProgressScanActionType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "purchaseEntitlements",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remediationScanPreferenceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "srcLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "fortiCWPScanner",
      "title": "fortiCWPScanner: Scan container images",
      "description": "",
      "parameters": [
        {
          "name": "imageName",
          "type": "String",
          "values": [],
          "description": "Name of the image to scan",
          "isOptional": false
        },
        {
          "name": "block",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publish",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "forticwp-cicd"
    },
    {
      "command": "fortifyClean",
      "title": "fortifyClean: Run Fortify SCA clean",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyClean",
      "title": "fortifyClean: Run Fortify SCA clean",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyCloudScan",
      "title": "fortifyCloudScan: Invoke Fortify CloudScan",
      "description": "",
      "parameters": [
        {
          "name": "buildId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useAutoHeap",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xmx",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rmiWorkerMaxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildLabel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useSsc",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sscToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "upToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scanArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "noDefaultRules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "disableSourceRendering",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "disableSnippets",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "quick",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rules",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useParallelAnalysis",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sensorPool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fortify-cloudscan-jenkins-plugin"
    },
    {
      "command": "fortifyRemoteAnalysis",
      "title": "fortifyRemoteAnalysis: Upload a project for remote Fortify SCA analysis",
      "description": "",
      "parameters": [
        {
          "name": "remoteAnalysisProjectType",
          "type": "Nested",
          "values": [
            "fortifyGradle",
            "fortifyMaven",
            "fortifyOther",
            "fortifyPHP",
            "fortifyPython"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remoteOptionalConfig",
          "type": "Nested",
          "values": [
            "customRulepacks",
            "filterFile",
            "notifyEmail",
            "scanOptions",
            "sensorPoolUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSSC",
          "type": "Nested",
          "values": [
            "appName",
            "appVersion",
            "filterSet",
            "pollingInterval",
            "searchCondition",
            "timeout"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyRemoteAnalysis",
      "title": "fortifyRemoteAnalysis: Upload a project for remote Fortify SCA analysis",
      "description": "",
      "parameters": [
        {
          "name": "remoteAnalysisProjectType",
          "type": "Nested",
          "values": [
            "fortifyGradle",
            "fortifyMaven",
            "fortifyOther",
            "fortifyPHP",
            "fortifyPython"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remoteOptionalConfig",
          "type": "Nested",
          "values": [
            "customRulepacks",
            "filterFile",
            "notifyEmail",
            "scanOptions",
            "sensorPoolUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSSC",
          "type": "Nested",
          "values": [
            "appName",
            "appVersion",
            "filterSet",
            "pollingInterval",
            "searchCondition",
            "timeout"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyRemoteArguments",
      "title": "fortifyRemoteArguments: Set options for remote Fortify SCA analysis",
      "description": "",
      "parameters": [
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "transOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyRemoteArguments",
      "title": "fortifyRemoteArguments: Set options for remote Fortify SCA analysis",
      "description": "",
      "parameters": [
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "transOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyRemoteScan",
      "title": "fortifyRemoteScan: Upload a translated project for remote scan",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remoteOptionalConfig",
          "type": "Nested",
          "values": [
            "customRulepacks",
            "filterFile",
            "notifyEmail",
            "scanOptions",
            "sensorPoolUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSSC",
          "type": "Nested",
          "values": [
            "appName",
            "appVersion",
            "filterSet",
            "pollingInterval",
            "searchCondition",
            "timeout"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyRemoteScan",
      "title": "fortifyRemoteScan: Upload a translated project for remote scan",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remoteOptionalConfig",
          "type": "Nested",
          "values": [
            "customRulepacks",
            "filterFile",
            "notifyEmail",
            "scanOptions",
            "sensorPoolUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSSC",
          "type": "Nested",
          "values": [
            "appName",
            "appVersion",
            "filterSet",
            "pollingInterval",
            "searchCondition",
            "timeout"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyScan",
      "title": "fortifyScan: Run Fortify SCA scan",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "addOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customRulepacks",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyScan",
      "title": "fortifyScan: Run Fortify SCA scan",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "addOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customRulepacks",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyTranslate",
      "title": "fortifyTranslate: Run Fortify SCA translation",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectScanType",
          "type": "Nested",
          "values": [
            "fortifyAdvanced",
            "fortifyDevenv",
            "fortifyDotnetSrc",
            "fortifyGradle",
            "fortifyJava",
            "fortifyMaven3",
            "fortifyMSBuild",
            "fortifyOther"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyTranslate",
      "title": "fortifyTranslate: Run Fortify SCA translation",
      "description": "",
      "parameters": [
        {
          "name": "buildID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectScanType",
          "type": "Nested",
          "values": [
            "fortifyAdvanced",
            "fortifyDevenv",
            "fortifyDotnetSrc",
            "fortifyGradle",
            "fortifyJava",
            "fortifyMaven3",
            "fortifyMSBuild",
            "fortifyOther"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addJVMOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHeap",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyUpdate",
      "title": "fortifyUpdate: Update Fortify Security Content",
      "description": "",
      "parameters": [
        {
          "name": "updateServerURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "locale",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyUpdate",
      "title": "fortifyUpdate: Update Fortify Security Content",
      "description": "",
      "parameters": [
        {
          "name": "updateServerURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "locale",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyUpload",
      "title": "fortifyUpload: Upload Fortify scan results to SSC",
      "description": "",
      "parameters": [
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteria",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "fortifyUpload",
      "title": "fortifyUpload: Upload Fortify scan results to SSC",
      "description": "",
      "parameters": [
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteria",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterSet",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "fortify"
    },
    {
      "command": "frugalTesting",
      "title": "frugalTesting: Frugal Testing",
      "description": "",
      "parameters": [
        {
          "name": "userId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "runTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "getJtl",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "frugal-testing"
    },
    {
      "command": "ftp",
      "title": "ftp: FtpStep",
      "description": "You can use the step upload a file to file server.",
      "parameters": [
        {
          "name": "serverHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "srcFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serverPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "ftpPublisher",
      "title": "ftpPublisher: Send build artifacts over FTP",
      "description": "Send build artifacts over FTP",
      "parameters": [
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "ftpRetry",
            "ftpLabel",
            "ftpCredentials"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to continue publishing to the other FTP servers after a problem with a previous server",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to mark the build as a failure if there is a problem publishing to a server. The default is to mark the build as unstable",
          "isOptional": false
        },
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "Select to publish from the Jenkins master.\n\n \nThe default is to publish from the server that holds the files to transfer (workspace on the slave, or artifacts directory on the master)\n\n Enabling this option could help dealing with strict network configurations and firewall rules.\n\n This option will cause the files to be transferred through the master before being sent to the remote server, this may increase network traffic, and could increase the build time.",
          "isOptional": false
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "Set the NODE_NAME for the master Jenkins.\n\n \nSet this option to give a value to the NODE_NAME environment variable when the value is missing (the Jenkins master).\n\n This is useful if you use the $NODE_NAME variable in the remoteDirectory option and the build may occur on the master.",
          "isOptional": false
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "parameterName"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "publish-over-ftp"
    },
    {
      "command": "gatlingArchive",
      "title": "gatlingArchive: Archive Gatling reports",
      "description": "",
      "parameters": [],
      "plugin": "gatling"
    },
    {
      "command": "gatlingCheck",
      "title": "gatlingCheck: GatlingCheckStep",
      "description": "",
      "parameters": [
        {
          "name": "metrics",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "gatling-check"
    },
    {
      "command": "gcrImageVulnerabilityScanner",
      "title": "gcrImageVulnerabilityScanner: GCR Image Vulnerability Scanner",
      "description": "",
      "parameters": [
        {
          "name": "imageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gcr-scanner"
    },
    {
      "command": "generateCache",
      "title": "generateCache: [TT] Generate Caches",
      "description": "Generate ECU-TEST file caches (A2L, ELF, Bus, Model and Service caches are supported).",
      "parameters": [
        {
          "name": "caches",
          "type": "Nested",
          "values": [
            "type",
            "filePath",
            "dbChannel",
            "clear"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "gerritCheck",
      "title": "gerritCheck: Gerrit Review Check",
      "description": "",
      "parameters": [
        {
          "name": "checks",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gerrit-code-review"
    },
    {
      "command": "gerritComment",
      "title": "gerritComment: Gerrit Review Comment",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "line",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gerrit-code-review"
    },
    {
      "command": "gerritReview",
      "title": "gerritReview: Gerrit Review Label",
      "description": "",
      "parameters": [
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "java.util.Map<java.lang.String, java.lang.Integer>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "score",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gerrit-code-review"
    },
    {
      "command": "getATXServer",
      "title": "getATXServer: Get TEST-GUIDE server by name",
      "description": "Gets a TEST-GUIDE server instance by name which must be present in the TEST-GUIDE installations. Existing settings can be discovered and overridden afterwards.\n\n \nFor providing secrets like upload authentication key or proxy settings utilize [credentials binding](https://plugins.jenkins.io/credentials-binding/) and pass as masked environment variables.\n\n \n  Signatures:\n  \n   \n```groovy\nATX.server(String atxName) : ATXServer\n            \n```\n\n   \n```groovy\nATXServer.getSetting(String settingName) : ATXSetting\n            \n```\n\n   \n```groovy\nATXServer.getSettings() : Map&lt;String, Object&gt;\n            \n```\n\n   \n```groovy\nATXServer.overrideSetting(String settingName, Object settingValue) : void\n            \n```\n\n   \n```groovy\nATXServer.overrideSettings(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nATX.server('TEST-GUIDE')\n            \n```\n\n   \n```groovy\nATX.server atxName: 'TEST-GUIDE'\n            \n```\n\n   \n```groovy\ndef server ATX.server atxName: 'TEST-GUIDE'\nserver.getSetting('serverURL')\nserver.getSettings()\nserver.overrideSetting('uploadToServer', true)\nserver.overrideSettings([serverURL: 'localhost', useHttpsConnection: true])\n            \n```",
      "parameters": [
        {
          "name": "atxName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "getArtifactoryServer",
      "title": "getArtifactoryServer: Get Artifactory server from Jenkins config",
      "description": "",
      "parameters": [
        {
          "name": "artifactoryServerID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "getContext",
      "title": "getContext: Get contextual object from internal APIs",
      "description": "Obtains a contextual object as in `StepContext.get`; cf. `withContext`. Takes a single `type` argument. Example: \n\n\n```groovy\ngetContext hudson.FilePath\n```\n\n\n For use from trusted code, such as global libraries, which can manipulate internal Jenkins APIs.",
      "parameters": [
        {
          "name": "type",
          "type": "java.lang.Class<?>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "getCustomBuildProperty",
      "title": "getCustomBuildProperty: Get custom build property",
      "description": "Get a custom build property from the nearest previous build.",
      "parameters": [
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "custom-build-properties"
    },
    {
      "command": "getDatabaseConnection",
      "title": "getDatabaseConnection: Get Database Connection",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "Unique identifier for this database connection, used to select this connection with the `sql` step",
          "isOptional": true
        },
        {
          "name": "type",
          "type": "Enum",
          "values": [
            "GLOBAL",
            "PERITEM"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "database"
    },
    {
      "command": "getETInstallation",
      "title": "getETInstallation: Get ECU-TEST installation by name",
      "description": "Gets an ECU-TEST installation instance by name which must be present in Jenkins global tool configuration.\n\n \n  Signatures:\n  \n   \n```groovy\nET.installation(String toolName) : ETInstance\n            \n```\n\n   \n```groovy\nET.installation(Map&lt;String, Object&gt; installArgs) : ETInstance\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nET.installation('ECU-TEST')\n            \n```\n\n   \n```groovy\nET.installation toolName: 'ECU-TEST'\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "getImageVulnsFromQualys",
      "title": "getImageVulnsFromQualys: Scan container images with Qualys CS",
      "description": "",
      "parameters": [
        {
          "name": "useGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useLocalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiPass",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnSevereVulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity1Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity2Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity3Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity4Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity5Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev1Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev2Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev3Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev4Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev5Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnQidFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qidList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnCVEs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cveList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnSoftware",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "softwareList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isPotentialVulnsToBeChecked",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isExcludeConditions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeBy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByCvss",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cvssVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cvssThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-cs"
    },
    {
      "command": "getLastChangesPublisher",
      "title": "getLastChangesPublisher: Get Last Changes Publisher",
      "description": "",
      "parameters": [
        {
          "name": "since",
          "type": "Enum",
          "values": [
            "PREVIOUS_REVISION",
            "LAST_SUCCESSFUL_BUILD",
            "LAST_TAG"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "Enum",
          "values": [
            "LINE",
            "SIDE"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "matching",
          "type": "Enum",
          "values": [
            "NONE",
            "LINE",
            "WORD"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "showFiles",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "synchronisedScroll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "matchWordsThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "matchingMaxComparisons",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "specificRevision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vcsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "specificBuild",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "last-changes"
    },
    {
      "command": "ghostInspector",
      "title": "ghostInspector: Run Ghost Inspector Test Suite",
      "description": "",
      "parameters": [
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "Enter your Ghost Inspector API key. This is a unique, private key provided with your account which allows you to access the API. You can find it in your [Account Settings](https://app.ghostinspector.com/account) in the Ghost Inspector application.",
          "isOptional": false
        },
        {
          "name": "suiteId",
          "type": "String",
          "values": [],
          "description": "Enter the ID of the Ghost Inpsector suite that you would like to execute.",
          "isOptional": false
        },
        {
          "name": "startUrl",
          "type": "String",
          "values": [],
          "description": "(Optional) Enter a custom URL to run the test suite on. If you're running your tests on the local build of your application, you may wish to create an [local tunnel](https://ghostinspector.com/docs/test-local-and-firewalled-websites/) and use that URL here.",
          "isOptional": false
        },
        {
          "name": "params",
          "type": "String",
          "values": [],
          "description": "(Optional) Additional parameters to pass to the API in the form of \"viewport=1024x768&customVar=foo\". You may wish to [override the screen size or include custom variables](https://ghostinspector.com/docs/api/suites/#execute).",
          "isOptional": false
        }
      ],
      "plugin": "ghost-inspector"
    },
    {
      "command": "giphyRandom",
      "title": "giphyRandom: GiphyRandomStepImpl",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rating",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-giphy-api"
    },
    {
      "command": "giphySearch",
      "title": "giphySearch: GiphySearchStepImpl",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rating",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-giphy-api"
    },
    {
      "command": "giphySearchRandomByKeyword",
      "title": "giphySearchRandomByKeyword: GiphySearchRandomByKeywordStep",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rating",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-giphy-api"
    },
    {
      "command": "giphyTranslate",
      "title": "giphyTranslate: GiphyTranslateStepImpl",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imageSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rating",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-giphy-api"
    },
    {
      "command": "git",
      "title": "git: Git",
      "description": "Git step. It performs a clone from the specified repository. \n\n \n Use the [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) to generate a sample pipeline script for the git step. More advanced checkout operations require the `checkout` step rather than the `git` step. Examples of the `git` step include: \n\n \n  \n* <a rel=\"nofollow\">Git step with defaults</a>\n\n  \n* <a rel=\"nofollow\">Git step with https and a specific branch</a>\n\n  \n* <a rel=\"nofollow\">Git step with ssh and a private key credential</a>\n\n  \n* <a rel=\"nofollow\">Git step with https and changelog disabled</a>\n\n  \n* <a rel=\"nofollow\">Git step with git protocol and polling disabled</a>\n\n  See the <a rel=\"nofollow\">argument descriptions</a> for more details.\n \n\n\n \n The `git` step is a simplified shorthand for a subset of the more powerful `checkout` step: \n\n \n```groovy\ncheckout([$class: 'GitSCM', branches: [[name: '*/master']],\n    userRemoteConfigs: [[url: 'http://git-server/user/repository.git']]])\n\n```\n\n \n\n\n \n **NOTE:** The `checkout` step is the **preferred SCM checkout method**. It provides significantly more functionality than the `git` step. \n\n \nUse the [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) to generate a sample pipeline script for the checkout step. \n\n \n The `checkout` step can be used in many cases where the `git` step cannot be used. Refer to the [git plugin documentation](https://plugins.jenkins.io/git#extensions) for detailed descriptions of options available to the checkout step. For example, the `git` step does **not** support: \n\n \n  \n* SHA-1 checkout\n\n  \n* Tag checkout\n\n  \n* Submodule checkout\n\n  \n* Sparse checkout\n\n  \n* Large file checkout (LFS)\n\n  \n* Reference repositories\n\n  \n* Branch merges\n\n  \n* Repository tagging\n\n  \n* Custom refspecs\n\n  \n* Timeout configuration\n\n  \n* Changelog calculation against a non-default reference\n\n  \n* Stale branch pruning\n\n \n \n\n  **<a rel=\"nofollow\">Example: Git step with defaults</a>**\n \n Checkout from the git plugin source repository using https protocol, no credentials, and the master branch. \n\n \nThe [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) generates this example: \n\n \n```groovy\ngit 'https://github.com/jenkinsci/git-plugin'\n\n```\n\n \n\n **<a rel=\"nofollow\">Example: Git step with https and a specific branch</a>**\n \n Checkout from the Jenkins source repository using https protocol, no credentials, and a specific branch (stable-2.204). Note that this must be a local branch name like 'master' or 'develop'. \n\n \n **Branch names that are not supported by the `git` step** \n\n \n  \n*  Remote branch names like 'origin/master' and 'origin/develop' are **not supported** as the branch argument\n\n  \n* SHA-1 hashes are **not supported** as the branch argument\n\n  \n* Tag names are **not supported** as the branch argument\n\n \n \n Remote branch names, SHA-1 hashes, and tag names **are supported** by the general purpose `checkout` step. \n\n \nThe [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) generates this example: \n\n \n```groovy\ngit branch: 'stable-2.204',\n    url: 'https://github.com/jenkinsci/jenkins.git'\n\n```\n\n \n\n **<a rel=\"nofollow\">Example: Git step with ssh and a private key credential</a>**\n \n Checkout from the git client plugin source repository using ssh protocol, private key credentials, and the master branch. The credential must be a private key credential if the remote git repository is accessed with the ssh protocol. The credential must be a username / password credential if the remote git repository is accessed with http or https protocol. \n\n \nThe [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) generates this example: \n\n \n```groovy\ngit credentialsId: 'my-private-key-credential-id',\n    url: 'git@github.com:jenkinsci/git-client-plugin.git'\n\n```\n\n \n\n **<a rel=\"nofollow\">Example: Git step with https and changelog disabled</a>**\n \n Checkout from the Jenkins source repository using https protocol, no credentials, the master branch, and changelog calculation disabled. If changelog is `false`, then the changelog will not be computed for this job. If changelog is `true` or is not set, then the changelog will be computed. See the [workflow scm step documentation](https://github.com/jenkinsci/workflow-scm-step-plugin/blob/master/README.md#changelogs) for more changelog details. \n\n \nThe [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) generates this example: \n\n \n```groovy\ngit changelog: false,\n    url: 'https://github.com/jenkinsci/credentials-plugin.git'\n\n```\n\n \n\n **<a rel=\"nofollow\">Example: Git step with git protocol and polling disabled</a>**\n \n Checkout from the Jenkins platform labeler repository using git protocol, no credentials, the master branch, and no polling for changes. If poll is `false`, then the remote repository will not be polled for changes. If poll is `true` or is not set, then the remote repository will be polled for changes. See the [workflow scm step documentation](https://github.com/jenkinsci/workflow-scm-step-plugin/blob/master/README.md#polling) for more polling details. \n\n \nThe [Pipeline Snippet Generator](https://jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) generates this example: \n\n \n```groovy\ngit poll: false,\n    url: 'git://github.com/jenkinsci/platformlabeler-plugin.git'\n\n```\n\n \n\n  **<a rel=\"nofollow\">Argument Descriptions</a>**",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "URL of the repository to be checked out in the workspace. Required parameter. \n\n \n Repository URL's should follow the [git URL guidelines](https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a). Git steps to access a secured repository should provide a Jenkins credential with the `credentialsId` argument rather than embedding credentials in the URL. Credentials embedded in a repository URL may be visible in console logs or in other log files.",
          "isOptional": false
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "Branch to be checked out in the workspace. Default is '`master`'. \n\n \n Note that this must be a local branch name like 'master' or 'develop'. Remote branch names like 'origin/master' and 'origin/develop' are **not supported** as the branch argument. Tag names are **not supported** as the branch argument. SHA-1 hashes are **not supported** as the branch argument. Remote branch names, tag names, and SHA-1 hashes are supported by the general purpose `checkout` step.",
          "isOptional": true
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "Compute changelog for this job. Default is '`true`'. \n\n \n If `changelog` is false, then the changelog will not be computed for this job. If `changelog` is true or is not set, then the changelog will be computed.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Identifier of the credential used to access the remote git repository. Default is '&lt;empty&gt;'. \n\n \n The credential must be a private key credential if the remote git repository is accessed with the ssh protocol. The credential must be a username / password credential if the remote git repository is accessed with http or https protocol.",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "Poll remote repository for changes. Default is '`true`'. \n\n \n If `poll` is false, then the remote repository will not be polled for changes. If `poll` is true or is not set, then the remote repository will be polled for changes.",
          "isOptional": true
        }
      ],
      "plugin": "git"
    },
    {
      "command": "gitAutomerger",
      "title": "gitAutomerger: Git automerge",
      "description": "",
      "parameters": [
        {
          "name": "checkoutFromRemote",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "detailConflictReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "limitAuthorsInDetailReport",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "limitCommitsInDetailReport",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logLevel",
          "type": "Enum",
          "values": [
            "TRACE",
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mergeRules",
          "type": "Nested",
          "values": [
            "path",
            "resolution"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseBranchPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "git-automerger"
    },
    {
      "command": "gitChangelog",
      "title": "gitChangelog: Changelog from Git repository",
      "description": "",
      "parameters": [
        {
          "name": "customIssues",
          "type": "Nested",
          "values": [
            "name",
            "issuePattern",
            "link",
            "title"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dateFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extendedVariables",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "from",
          "type": "Nested",
          "values": [
            "type",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitHub",
          "type": "Nested",
          "values": [
            "api",
            "token",
            "issuePattern"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitLab",
          "type": "Nested",
          "values": [
            "server",
            "token",
            "issuePattern",
            "projectName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreCommitsIfMessageMatches",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreCommitsIfOlderThan",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreCommitsWithoutIssue",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreTagsIfNameMatches",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jira",
          "type": "Nested",
          "values": [
            "server",
            "issuePattern",
            "username",
            "password",
            "basicAuthString"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noIssueName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "readableTagName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "removeIssueFromMessage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "returnType",
          "type": "Enum",
          "values": [
            "STRING",
            "CONTEXT"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeZone",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "to",
          "type": "Nested",
          "values": [
            "type",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "untaggedName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "git-changelog"
    },
    {
      "command": "gitHubPRStatus",
      "title": "gitHubPRStatus: GitHub PR: set 'pending' status",
      "description": "",
      "parameters": [
        {
          "name": "statusMessage",
          "type": "Nested",
          "values": [
            "content"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "gitPush",
      "title": "gitPush: Git push step",
      "description": "",
      "parameters": [
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "simple-pull-request-job"
    },
    {
      "command": "gitStatusWrapper",
      "title": "gitStatusWrapper: gitStatusWrapper",
      "description": "The `gitStatusWrapper` step wraps a block of commands and handles PENDING/SUCCESS/FAILURE git statuses automatically\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
      "parameters": [
        {
          "name": "account",
          "type": "String",
          "values": [],
          "description": "The GitHub account that owns the repos that contains the commit to notify\n\n \n<em>Default:</em> If SCM used, plugin will attempt to get details from SCM execution\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The GitHub credentials, username/password or username/accessToken",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "The notification description, it will be displayed by GitHub\n\n \n<em>Default:</em> \"\"\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "failureDescription",
          "type": "String",
          "values": [],
          "description": "The notification description for a failure, it will be displayed by GitHub\n\n \n<em>Default:</em> value set to description\n\n \nThis field can also be given a regular expression to evaluate on the entire build log. To have the expression evaluated, wrap it with \"/\". Example: `\"/^buildVersion=(.*)$/\"` \n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "gitApiUrl",
          "type": "String",
          "values": [],
          "description": "If you are a user of GitHub Enterprise use this field to set your custom API endpoint\n\n \n<em>Default:</em> https://api.github.com",
          "isOptional": true
        },
        {
          "name": "gitHubContext",
          "type": "String",
          "values": [],
          "description": "The git status context key. Keys are used by GitHub to differentiate between notifications\n\n \n<em>Default:</em> gitStatusWrapper\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "The GitHub repository that contains the commit to validate, must be owned by the user specified in the account field\n\n \n<em>Default:</em> If SCM used, plugin will attempt to get details from SCM execution\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "sha",
          "type": "String",
          "values": [],
          "description": "The SHA that identifies the commit to notify\n\n \n<em>Default:</em> If SCM used, plugin will attempt to get details from SCM execution\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "successDescription",
          "type": "String",
          "values": [],
          "description": "The notification description for a success, it will be displayed by GitHub\n\n \n<em>Default:</em> value set to description\n\n \nThis field can also be given a regular expression to evaluate on the entire build log. To have the expression evaluated, wrap it with \"/\". Example: `\"/^buildVersion=(.*)$/\"` \n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        },
        {
          "name": "targetUrl",
          "type": "String",
          "values": [],
          "description": "Use this field to specify a custom target URL for the notification\n\n \n<em>Default:</em> Jenkins build URL\n\n \nCheck documentation [here](https://developer.github.com/v3/repos/statuses/)",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-gitstatuswrapper"
    },
    {
      "command": "gitToIspwIntegration",
      "title": "gitToIspwIntegration: Git to ISPW Integration",
      "description": "Push Git changes to ISPW.",
      "parameters": [
        {
          "name": "app",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "branchMapping",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitRepoUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ispwConfigPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runtimeConfig",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stream",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "compuware-ispw-operations"
    },
    {
      "command": "gitbisect",
      "title": "gitbisect: Git Bisect",
      "description": "",
      "parameters": [
        {
          "name": "jobToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goodStartCommit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "badEndCommit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "searchIdentifier",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "revisionParameterName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retryCount",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continuesBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "minSuccessfulIterations",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideGitCommand",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitCommand",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "git-bisect"
    },
    {
      "command": "githubNotify",
      "title": "githubNotify: Notifies GitHub of the status of a Pull Request",
      "description": "The `githubNotify` step gives full controll to pipelines about the commit status\n\n \nYou can check the oficial GitHub's documentation about statutes [here](https://developer.github.com/v3/repos/statuses/)",
      "parameters": [
        {
          "name": "status",
          "type": "Enum",
          "values": [
            "PENDING",
            "SUCCESS",
            "ERROR",
            "FAILURE"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "The notification description, it will be displayed by GitHub\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": false
        },
        {
          "name": "account",
          "type": "String",
          "values": [],
          "description": "The GitHub account that owns the repos that contains the commit to notify\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": true
        },
        {
          "name": "context",
          "type": "String",
          "values": [],
          "description": "The Notification key, keys are used by GitHub to diferentiate between notifications, two notification with the same key are meant to be the same\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The GitHub credentials, username/password or username/accessToken",
          "isOptional": true
        },
        {
          "name": "gitApiUrl",
          "type": "String",
          "values": [],
          "description": "If you are a user of GitHub Enterprise use this field to set your custom API endpoint",
          "isOptional": true
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "The GitHub repository that contains the commit to validate, must be owned by the user specified in the account field\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": true
        },
        {
          "name": "sha",
          "type": "String",
          "values": [],
          "description": "The SHA that identifies the commit to notify\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": true
        },
        {
          "name": "targetUrl",
          "type": "String",
          "values": [],
          "description": "Use this field to specify a custom target URL for the notification, if not specified the build's URL will be used\n\n \nYou can check the oficial GitHub's documentation [here](https://developer.github.com/v3/repos/statuses/#create-a-status)",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-githubnotify-step"
    },
    {
      "command": "githubPRAddLabels",
      "title": "githubPRAddLabels: GitHub PR: add labels",
      "description": "",
      "parameters": [
        {
          "name": "labelProperty",
          "type": "Nested",
          "values": [
            "labels"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusVerifier",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorHandler",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "githubPRClosePublisher",
      "title": "githubPRClosePublisher: GitHub PR: close PR",
      "description": "",
      "parameters": [
        {
          "name": "statusVerifier",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorHandler",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "githubPRComment",
      "title": "githubPRComment: GitHub PR: post comment",
      "description": "",
      "parameters": [
        {
          "name": "comment",
          "type": "Nested",
          "values": [
            "content"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusVerifier",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorHandler",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "githubPRRemoveLabels",
      "title": "githubPRRemoveLabels: GitHub PR: remove labels",
      "description": "",
      "parameters": [
        {
          "name": "labelProperty",
          "type": "Nested",
          "values": [
            "labels"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusVerifier",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorHandler",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "githubPRStatusPublisher",
      "title": "githubPRStatusPublisher: GitHub PR: set PR status",
      "description": "",
      "parameters": [
        {
          "name": "statusMsg",
          "type": "Nested",
          "values": [
            "content"
          ],
          "description": "Description message for GitHub status.",
          "isOptional": false
        },
        {
          "name": "unstableAs",
          "type": "Enum",
          "values": [
            "PENDING",
            "SUCCESS",
            "ERROR",
            "FAILURE"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildMessage",
          "type": "Nested",
          "values": [
            "successMsg",
            "failureMsg"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusVerifier",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "errorHandler",
          "type": "Nested",
          "values": [
            "buildStatus"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "gitlabBuilds",
      "title": "gitlabBuilds: Notify gitlab about pending builds",
      "description": "",
      "parameters": [
        {
          "name": "builds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitlab-plugin"
    },
    {
      "command": "gitlabCommitStatus",
      "title": "gitlabCommitStatus: Update the commit status in GitLab depending on the build status",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "builds",
          "type": "Nested",
          "values": [
            "connection",
            "name",
            "projectId",
            "revisionHash"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "connection",
          "type": "Nested",
          "values": [
            "gitLabConnection",
            "jobCredentialId",
            "useAlternativeCredential"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitlab-plugin"
    },
    {
      "command": "googleCloudBuild",
      "title": "googleCloudBuild: Execute Google Cloud Build",
      "description": "This build step invokes Google Cloud Build.",
      "parameters": [
        {
          "name": "input",
          "type": "Nested",
          "values": [
            "credentialsId",
            "request",
            "source",
            "substitutionList",
            "substitutions"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "google-cloudbuild"
    },
    {
      "command": "googleStorageBucketLifecycle",
      "title": "googleStorageBucketLifecycle: Google Storage Bucket Lifecycle",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ttl",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "google-storage-plugin"
    },
    {
      "command": "googleStorageBuildLogUpload",
      "title": "googleStorageBuildLogUpload: Google Storage Build Log Upload",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "logName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pathPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sharedPublicly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showInline",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "google-storage-plugin"
    },
    {
      "command": "googleStorageDownload",
      "title": "googleStorageDownload: Google Storage Download",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bucketUri",
          "type": "String",
          "values": [],
          "description": "This specifies the cloud object to download from Cloud Storage. You can view these by visiting the \"Cloud Storage\" section of the [Cloud Console](https://cloud.google.com/console) for your project.\n\n A single asterisk can be specified in the object path (not the bucket name), past the last \"/\". The asterisk behaves consistently with [gsutil](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). For example, `gs://my-bucket-name/pre/a_*.txt` would match the objects in cloud bucket `my-bucket-name` that are named `pre/a_2.txt` or `pre/a_abc23-4.txt`, but not `pre/a_2/log.txt`.",
          "isOptional": false
        },
        {
          "name": "localDirectory",
          "type": "String",
          "values": [],
          "description": "The local directory that will store the downloaded files. The path specified is considered relative to the build's workspace. Example value: \n\n \n  \n* path/to/dir",
          "isOptional": false
        },
        {
          "name": "pathPrefix",
          "type": "String",
          "values": [],
          "description": "The specified prefix will be stripped from all downloaded filenames. Filenames that do not start with this prefix will not be modified. If this prefix does not have a trailing slash, it will be added automatically.",
          "isOptional": true
        }
      ],
      "plugin": "google-storage-plugin"
    },
    {
      "command": "googleStorageUpload",
      "title": "googleStorageUpload: Google Storage Classic Upload",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pathPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sharedPublicly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showInline",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "google-storage-plugin"
    },
    {
      "command": "googlechatnotification",
      "title": "googlechatnotification: Google Chat Notification",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "Single/multiple comma separated HTTPS URLs or/and single/multiple comma separated Credential IDs to send build notifications to Google Chat rooms.\n \n\n To use Credential ID as URL identifier configure entire URL as secret in credential. Use id:credential_id as value in URL.\n \n\n Different Ways to define:\n \n\n 1) https://chat.googleapis.com/v1/spaces/room_id/messages?key=key_id&token=token_id\n \n\n 2) https://chat.googleapis.com/v1/spaces/room_id/messages?key=key_id&token=token_id, https://chat.googleapis.com/v1/spaces/room_id2/messages?key=key_id2&token=token_id2\n \n\n 3) id:credential_id_for_room1\n \n\n 4) id:credential_id_for_room1, id:credential_id_for_room2\n \n\n 5) https://chat.googleapis.com/v1/spaces/room_id/messages?key=key_id&token=token_id, id:credential_id_for_room2",
          "isOptional": false
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "Message which is part of chat notification. You can use token macro pre defined variables with custom message.",
          "isOptional": false
        },
        {
          "name": "notifyAborted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyBackToNormal",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyNotBuilt",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifySuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sameThreadNotification",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "suppressInfoLoggers",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "google-chat-notification"
    },
    {
      "command": "gprbuild",
      "title": "gprbuild: Execute GPRbuild build tool",
      "description": "This build step can be used to build GNAT project files by invoking GPRbuild.",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "Name of the GNAT installation to use as configured in Jenkins.",
          "isOptional": true
        },
        {
          "name": "names",
          "type": "String",
          "values": [],
          "description": "Main source files represent the sources to be used as the main programs. If they are not specified on the command line, GPRbuild uses the source files specified with the Main attribute in the project file. If none exists, then no executable will be built. It is also possible to specify absolute file names, or file names relative to the current directory.",
          "isOptional": true
        },
        {
          "name": "proj",
          "type": "String",
          "values": [],
          "description": "GPRbuild requires a project file, which may be specified on the command line either directly or through the `-P` switch. If not specified, GPRbuild uses the project file <em>default.gpr</em> if there is one in the current working directory. Otherwise, if there is only one project file in the current working directory, GPRbuild uses this project file.",
          "isOptional": true
        },
        {
          "name": "switches",
          "type": "String",
          "values": [],
          "description": "GPRbuild takes into account switches that may be specified on the command line or in attributes Switches(&lt;main or language&gt;) or Default_Switches (&lt;language&gt;) in package Builder of the main project.\n \n\n \n\n   Go to AdaCore [documentation for switches](https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug/building_with_gprbuild.html#switches).",
          "isOptional": true
        }
      ],
      "plugin": "gprbuild"
    },
    {
      "command": "greet",
      "title": "greet: Say hello world",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Your name.",
          "isOptional": false
        },
        {
          "name": "useFrench",
          "type": "boolean",
          "values": [],
          "description": "Use French?",
          "isOptional": true
        }
      ],
      "plugin": "non-dynamic-hello-world"
    },
    {
      "command": "gxserver",
      "title": "gxserver: Checks out (or updates) a GeneXus Knowledge Base from a GeneXus Server",
      "description": "GeneXus&nbsp;Server step. It checks out (or updates) a Knowledge Base from a GeneXus&nbsp;Server.",
      "parameters": [
        {
          "name": "serverURL",
          "type": "String",
          "values": [],
          "description": "URL of the GeneXus&nbsp;Server from which to obtain (or update) a local copy of a Knowledge&nbsp;Base (eg:&nbsp;\"https://sandbox.genexusserver.com/v16\").",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use when authenticating to the GeneXus&nbsp;Server. \n\n \n Select the credentials you want to use or click \"Add\" to enter a new user/password pair.",
          "isOptional": false
        },
        {
          "name": "kbName",
          "type": "String",
          "values": [],
          "description": "Name of the Knowledge&nbsp;Base in GeneXus&nbsp;Server from which to obtain (or update) a local copy.",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "Compute changelog for this job. Default is '`true`'. \n\n \n If `changelog` is false, then the changelog will not be computed for this job. If `changelog` is true or is not set, then the changelog will be computed.",
          "isOptional": true
        },
        {
          "name": "gxInstallationId",
          "type": "String",
          "values": [],
          "description": "GeneXus installation to use when creating (or updating) a local copy of a Knowledge&nbsp;Base from a GeneXus&nbsp;Server.",
          "isOptional": true
        },
        {
          "name": "kbDbCredentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use when to connecting to SQL&nbsp;Server. \n\n \n Select \"none\" for Windows Authentication.",
          "isOptional": true
        },
        {
          "name": "kbDbInSameFolder",
          "type": "boolean",
          "values": [],
          "description": "Create the database files in the same folder as the Knowledge&nbsp;Base when checking out. Default is '`true`'. \n\n \n If `kbDbInSameFolder` is true or not set, then the database files will be created in the same folder as the Knowledge&nbsp;Base. If `kbDbInSameFolder` is false, then the database files will be created in the default folder configured for the SQL Server at `kbDbServerInstance (optional)`.",
          "isOptional": true
        },
        {
          "name": "kbDbName",
          "type": "String",
          "values": [],
          "description": "Name of the SQL Server database used for the local Knowledge&nbsp;Base. \n\n \n Leave it blank to use the default database name.",
          "isOptional": true
        },
        {
          "name": "kbDbServerInstance",
          "type": "String",
          "values": [],
          "description": "SQL Server used by GeneXus for the local Knowledge Base.",
          "isOptional": true
        },
        {
          "name": "kbVersion",
          "type": "String",
          "values": [],
          "description": "Name of the Version that will be selected when creating a local copy of the Knowledge Base. \n\n \n If you leave it blank the 'Trunk' version will be selected by default.",
          "isOptional": true
        },
        {
          "name": "localKbPath",
          "type": "String",
          "values": [],
          "description": "Path to the local Knowledge Base to use as working copy. \n\n \n If you leave it blank the default `${WORKSPACE}\\KBname` will apply.",
          "isOptional": true
        },
        {
          "name": "localKbVersion",
          "type": "String",
          "values": [],
          "description": "Name of the Version in the local Knowledge Base that is linked to the Version in the server. \n\n \n If you leave it blank the 'Trunk' version will be selected by default.",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "Poll GeneXus&nbsp;Server for changes. Default is '`true`'. \n\n \n If `poll` is true or is not set, then the GeneXus&nbsp;Server will be polled for changes.",
          "isOptional": true
        }
      ],
      "plugin": "genexus"
    },
    {
      "command": "habitat",
      "title": "habitat: Habitat Executor",
      "description": "",
      "parameters": [
        {
          "name": "task",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "directory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifact",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "origin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bldrUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "lastBuildFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "searchString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "binary",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "docker",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "habitat"
    },
    {
      "command": "headspin",
      "title": "headspin: HeadSpin Jenkins Plugin",
      "description": "",
      "parameters": [
        {
          "name": "apiTokenId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "devices",
          "type": "Nested",
          "values": [
            "location",
            "device",
            "carrier",
            "desiredCapabilities",
            "testShellCommand"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "headspin"
    },
    {
      "command": "healthAnalyzer",
      "title": "healthAnalyzer: Micro Focus Health Analyzer",
      "description": "",
      "parameters": [
        {
          "name": "products",
          "type": "Nested",
          "values": [
            "$class: 'HealthAnalyzerLrStep'"
          ],
          "description": "Choose the products that you would like to test that correspond to the relevant build step.",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "hipchatSend",
      "title": "hipchatSend: Send HipChat Message",
      "description": "Simple step for sending a HipChat message to designated room.\n \n\n Use the advanced settings to override the HipChat Plugin global configuration to include: HipChat Server, API Token, API Version (1 or 2) and Send As (v1 API only).\n \n\n Please see the HipChat Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` hipchatSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<a rel=\"nofollow\">Open</a>)\" `",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "**REQUIRED** The message body\n \n\n Valid length range: 1 - 10000.\n \n\n Message may include global variables, for example environment and currentBuild variables:\n \n\n ` hipchatSend \"${env.JOB_NAME} ${env.BUILD_NUMBER} status: ${currentBuild.result} (<a rel=\"nofollow\">Open</a>)\" `",
          "isOptional": false
        },
        {
          "name": "color",
          "type": "Enum",
          "values": [
            "YELLOW",
            "GREEN",
            "RED",
            "PURPLE",
            "GRAY",
            "RANDOM"
          ],
          "description": "**OPTIONAL** Background color for message.\n \n\n Valid values: YELLOW, GREEN, RED, PURPLE, GRAY, RANDOM.\n \n\n Defaults to 'GRAY'.\n \n\n `hipchatSend color: \"YELLOW\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "The credential selected here will be used to send out the notification. If no credential is specified here, the credential selected in the global configuration will be used instead.\n \n\n In case a new credential needs to be created, make sure that the newly created credential uses \"Secret text\" kind.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If set to true, then the step will abort the Workflow run as a failure if there is an error sending message.\n \n\n `hipchatSend failOnError: true, message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "icon",
          "type": "String",
          "values": [],
          "description": "Link to an icon that should be displayed in the notification, when cards are enabled. Defaults to Jenkins logo.",
          "isOptional": true
        },
        {
          "name": "notify",
          "type": "boolean",
          "values": [],
          "description": "**OPTIONAL** Whether this message should trigger a user notification (change the tab color, play a sound, notify mobile phones, etc). Each recipient's notification preferences are taken into account.\n \n\n Defaults to **false**.\n \n\n `hipchatSend notify: true, message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "room",
          "type": "String",
          "values": [],
          "description": "Allows overriding the HipChat Plugin default room.\n \n\n `hipchatSend room: \"room-name\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "sendAs",
          "type": "String",
          "values": [],
          "description": "Allows overriding the HipChat Plugin default Send As value (v1 API only).",
          "isOptional": true
        },
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "Allows overriding the HipChat Plugin default HipChat Server.",
          "isOptional": true
        },
        {
          "name": "textFormat",
          "type": "boolean",
          "values": [],
          "description": "Enable this setting to send the notification in text format. HTML format is used if this setting is disabled.",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "v2enabled",
          "type": "boolean",
          "values": [],
          "description": "Allows overriding the HipChat Plugin default API Version to use - v1 or v2.\n \n\n hipchatSend Workflow step defaults to v2 API",
          "isOptional": true
        }
      ],
      "plugin": "hipchat"
    },
    {
      "command": "hockeyApp",
      "title": "hockeyApp: Upload to HockeyApp",
      "description": "",
      "parameters": [
        {
          "name": "applications",
          "type": "Nested",
          "values": [
            "apiToken",
            "appId",
            "notifyTeam",
            "filePath",
            "dsymPath",
            "libsPath",
            "tags",
            "teams",
            "mandatory",
            "downloadAllowed",
            "oldVersionHolder",
            "releaseNotesMethod",
            "uploadMethod"
          ],
          "description": "A list of applications that will be uploaded to HockeyApp",
          "isOptional": false
        },
        {
          "name": "baseUrl",
          "type": "String",
          "values": [],
          "description": "An alternate host url for HockeyApp service. For example for self hosted solutions.",
          "isOptional": true
        },
        {
          "name": "debugMode",
          "type": "boolean",
          "values": [],
          "description": "Prints extra debug information on every request. This has no effect if set in globally in the Jenkins configuration.",
          "isOptional": true
        },
        {
          "name": "failGracefully",
          "type": "boolean",
          "values": [],
          "description": "Do not mark the build as a failure iIf the upload to HockeyApp fails.",
          "isOptional": true
        }
      ],
      "plugin": "hockeyapp"
    },
    {
      "command": "http",
      "title": "http: HttpStep",
      "description": "This DSL step could help you send a http request in your pipeline.",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "method",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "responseBody",
          "type": "String",
          "values": [],
          "description": "If you want to save your http response body into a file. Please input your file name. The file will be saved in the root of workspace.",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "httpRequest",
      "title": "httpRequest: Perform an HTTP Request and return a response object",
      "description": "Performs an HTTP request, and returns a response object. \n\n \nUsage example:\n\n \n```groovy\n        def response = httpRequest 'http://localhost:8080/jenkins/api/json?pretty=true'\n        println(\"Status: \"+response.status)\n        println(\"Content: \"+response.content)\n        \n```\n\n \nIf Jenkins restarts after the HTTP request is made, but before the HTTP response is received, the HTTP request fails.\n\n \nvalidResponseCodes is a comma-separated string of single values or from:to ranges. For example '200' to accept only 200 or '201,301:303' to accept 201 as well as the range from 301 to 303.\n\n \n\n\n \n The methods of the response object are: \n\n \n  \n*  String getContent(): The HTTP Response entity. This means the text of the response without the headers. If the response does not contain an entity, getContent() returns null. \n\n  \n*  int getStatus(): The HTTP status code.",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "acceptType",
          "type": "Enum",
          "values": [
            "NOT_SET",
            "TEXT_HTML",
            "TEXT_PLAIN",
            "APPLICATION_FORM",
            "APPLICATION_JSON",
            "APPLICATION_JSON_UTF8",
            "APPLICATION_TAR",
            "APPLICATION_ZIP",
            "APPLICATION_OCTETSTREAM"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authentication",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "consoleLogResponseBody",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contentType",
          "type": "Enum",
          "values": [
            "NOT_SET",
            "TEXT_HTML",
            "TEXT_PLAIN",
            "APPLICATION_FORM",
            "APPLICATION_JSON",
            "APPLICATION_JSON_UTF8",
            "APPLICATION_TAR",
            "APPLICATION_ZIP",
            "APPLICATION_OCTETSTREAM"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customHeaders",
          "type": "Nested",
          "values": [
            "name",
            "value",
            "maskValue"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpMode",
          "type": "Enum",
          "values": [
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "DELETE",
            "OPTIONS",
            "PATCH"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpProxy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreSslErrors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "multipartName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "outputFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "quiet",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "requestBody",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "responseHandle",
          "type": "Enum",
          "values": [
            "NONE",
            "LEAVE_OPEN",
            "STRING"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useSystemProperties",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validResponseCodes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validResponseContent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "wrapAsMultipart",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "http_request"
    },
    {
      "command": "hub_scan",
      "title": "hub_scan: Black Duck Hub Integration",
      "description": "",
      "parameters": [
        {
          "name": "scans",
          "type": "Nested",
          "values": [
            "scanTarget"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "hubProjectName",
          "type": "String",
          "values": [],
          "description": "Provide the name of the Hub project that you would like to link these scans to.",
          "isOptional": false
        },
        {
          "name": "hubProjectVersion",
          "type": "String",
          "values": [],
          "description": "Provide the Version of the Hub project that you would like to link these scans to.",
          "isOptional": false
        },
        {
          "name": "hubVersionPhase",
          "type": "String",
          "values": [],
          "description": "Choose the Phase at which this Version is in its life cycle.",
          "isOptional": false
        },
        {
          "name": "hubVersionDist",
          "type": "String",
          "values": [],
          "description": "Choose how this Version is planned to be distributed.",
          "isOptional": false
        },
        {
          "name": "scanMemory",
          "type": "String",
          "values": [],
          "description": "Specify the memory, in megabytes, you would like to allocate for the BlackDuck Scan. Default: 4096",
          "isOptional": false
        },
        {
          "name": "shouldGenerateHubReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectLevelAdjustments",
          "type": "boolean",
          "values": [],
          "description": "Always maintain component adjustments to all versions of this project.",
          "isOptional": false
        },
        {
          "name": "bomUpdateMaximumWaitTime",
          "type": "String",
          "values": [],
          "description": "Maximum time to wait (in minutes) for the BOM to be updated with the scan results.\n \n\n This also gets used as the maximum time to wait for the Report to be generated.\n \n\n Default: 5 minutes",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "If checked, the scan results will be put in a json file within the log directory in /data/\n \n\n When running a dry run the Report generation and Failure Conditions will be skipped.",
          "isOptional": false
        },
        {
          "name": "cleanupOnSuccessfulScan",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the plugin will delete the log files produced by the CLI if the scan is successful.",
          "isOptional": false
        },
        {
          "name": "excludePatterns",
          "type": "Nested",
          "values": [
            "exclusionPattern"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "codeLocationName",
          "type": "String",
          "values": [],
          "description": "This will change the name of the Code Location that is created by this scan.\n \n\n An example of a consistent Code Location across nodes and builds would be ${JENKINS_URL}-${JOB_NAME}\n \n\n WARNING: This will only work with a single target specified.",
          "isOptional": false
        },
        {
          "name": "unmapPreviousCodeLocations",
          "type": "boolean",
          "values": [],
          "description": "Any Code Locations that were not part of the current scan, and are mapped to this Project and Version, will be unmapped from this Version.",
          "isOptional": false
        },
        {
          "name": "deletePreviousCodeLocations",
          "type": "boolean",
          "values": [],
          "description": "Any Code Locations that were not part of the current scan, and are mapped to this Project and Version, will be deleted.",
          "isOptional": false
        }
      ],
      "plugin": "blackduck-hub"
    },
    {
      "command": "hub_scan_failure",
      "title": "hub_scan_failure: Black Duck Hub Failure Conditions (Hub 3.0+)",
      "description": "",
      "parameters": [
        {
          "name": "failBuildForPolicyViolations",
          "type": "boolean",
          "values": [],
          "description": "This will check the the Version of the Project specified to see if any of the BOM entries violate policies defined in the Hub.\n \n\n If there are BOM entries that do violate Policies, the Build will be set to FAILURE",
          "isOptional": false
        },
        {
          "name": "buildStateOnFailure",
          "type": "String",
          "values": [],
          "description": "If the Failure Condition is met, then the Build will be set to this state on completion.\n \n\n Success = Will not fail the Build\n \n\n Unstable = Will set the Build Result to Unstable\n \n\n Failure = Will set the Build Result to Failure",
          "isOptional": false
        }
      ],
      "plugin": "blackduck-hub"
    },
    {
      "command": "hubotApprove",
      "title": "hubotApprove: Hubot: Send approval message",
      "description": "This step sends a message to hubot and pauses Pipeline execution and allows the user to interact and control the flow of the build. Only a basic \"process\" or \"abort\" option is provided in the stage view. You can optionally request information back, hence the name of the step. The parameter entry screen can be accessed via a link at the bottom of the build console log or via link in the sidebar for a build.",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "Required: message to be sent to room.",
          "isOptional": true
        },
        {
          "name": "extraData",
          "type": "Nested",
          "values": [],
          "description": "Map - Any map serializable, extra data that can be used to make more meaningful messages, for example slack attachments.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "String",
          "values": [],
          "description": "failOnError - 'true' or 'false', string it was converted from boolean since 2.0.0 version, fail build when there is error while sending message to hubot or during any stage with these steps.",
          "isOptional": true
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "Every `hubotApprove` step has an unique ID. It is used in the generated URL to proceed or abort. \n\n\n A specific ID could be used, for example, to mechanically respond to the input from some external process/tool.",
          "isOptional": true
        },
        {
          "name": "ok",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "agentParameter",
            "$class: 'AppDetectorParamaterDefinition'",
            "$class: 'ArtifactRepoParamDefinition'",
            "$class: 'AutoCompleteStringParameterDefinition'",
            "base64File",
            "booleanParam",
            "buildMasterRelease",
            "checkboxParameter",
            "choice",
            "$class: 'ClearCaseUcmBaselineParameterDefinition'",
            "$class: 'CloudSelectorParameter'",
            "credentials",
            "$class: 'CvsTagsParamDefinition'",
            "$class: 'DateParameterDefinition'",
            "$class: 'DeployMetaDataParameterDefinition'",
            "$class: 'DropdownAutocompleteParameterDefinition'",
            "$class: 'ExtensibleChoiceParameterDefinition'",
            "file",
            "$class: 'FileSystemListParameterDefinition'",
            "$class: 'GeneratorChoiceParameterDefinition'",
            "$class: 'GeneratorKeyValueParameterDefinition'",
            "gitParameter",
            "$class: 'GithubBranchParameterDefinition'",
            "$class: 'GlobalVariableStringParameterDefinition'",
            "imageTag",
            "$class: 'InheritableStringParameterDefinition'",
            "$class: 'InheritableStringParameterReferenceDefinition'",
            "$class: 'JFrogPipelinesParameter'",
            "$class: 'JavaParameterDefinition'",
            "$class: 'JiraIssueParameterDefinition'",
            "$class: 'JiraVersionParameterDefinition'",
            "$class: 'LabelParameterDefinition'",
            "listGitBranches",
            "$class: 'ListSubversionTagsParameterDefinition'",
            "$class: 'MatrixCombinationsParameterDefinition'",
            "$class: 'MavenMetadataParameterDefinition'",
            "multiselect",
            "$class: 'NetstormTestParameterDefinition'",
            "$class: 'NodeParameterDefinition'",
            "$class: 'PackageChoiceParameterDefinition'",
            "$class: 'PackageParameterDefinition'",
            "separator",
            "$class: 'PatchParameterDefinition'",
            "$class: 'PersistentBooleanParameterDefinition'",
            "$class: 'PersistentChoiceParameterDefinition'",
            "$class: 'PersistentPackageParameterDefinition'",
            "$class: 'PersistentStringParameterDefinition'",
            "$class: 'PersistentTextParameterDefinition'",
            "$class: 'PersistentYumParameterDefinition'",
            "$class: 'PromotedBuildParameterDefinition'",
            "$class: 'PromotionLevelParameter'",
            "$class: 'RandomStringParameterDefinition'",
            "RESTList",
            "$class: 'ReviewboardParameterDefinition'",
            "$class: 'RunFilterParameter'",
            "run",
            "$class: 'RunSelectorParameter'",
            "$class: 'SauceParameterDefinition'",
            "$class: 'ScriptSelectionTaskDefinition'",
            "snParam",
            "$class: 'SpringBootLibrariesListParameterDefinition'",
            "$class: 'StashBranchParameterDefinition'",
            "stashedFile",
            "string",
            "$class: 'TestExecuter'",
            "text",
            "uploadPgyerTimeoutParameter",
            "$class: 'ToolVersionParameterDefinition'",
            "uploadPgyerUploadParameter",
            "$class: 'VBoxParameterDefinition'",
            "email",
            "validatingString",
            "$class: 'VersionParameterDefinition'",
            "$class: 'WHideParameterDefinition'",
            "$class: 'WReadonlyStringParameterDefinition'",
            "$class: 'WReadonlyTextParameterDefinition'",
            "extendedChoice",
            "$class: 'com.michelin.cio.hudson.plugins.passwordparam.PasswordParameterDefinition'",
            "$class: 'com.moded.extendedchoiceparameter.ExtendedChoiceParameterDefinition'",
            "$class: 'com.perfectomobile.jenkins.copyartifact.BuildSelectorParameter'",
            "password",
            "buildSelector"
          ],
          "description": "Request that the submitter specify one or more parameter values when approving. If just one parameter is listed, its value will become the value of the `input` step. If multiple parameters are listed, the return value will be a map keyed by the parameter names. If parameters are not requested, the step returns nothing if approved. \n\n\n On the parameter entry screen you are able to enter values for parameters that are defined in this field.",
          "isOptional": true
        },
        {
          "name": "room",
          "type": "String",
          "values": [],
          "description": "Optional: room name\n \n\n It is optional only when environment variable HUBOT_DEFAULT_ROOM is provided or the room is provided through site.",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "Optional: site name\n \n\n It is optional when there is default site configured at any parent folder level or global level. Note: This is only applicable when room, url or failOnError is not provided.",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "any string that would be helpful for hubot script write to make more meaningful cards, for example to decide a color for failure/success message.",
          "isOptional": true
        },
        {
          "name": "submitter",
          "type": "String",
          "values": [],
          "description": "User IDs and/or <em>external</em> group names of person or people permitted to respond to the input, separated by ','. If you configure \"alice, bob\", will match with \"alice\" but not with \"bob\". You need to remove all the white spaces.",
          "isOptional": true
        },
        {
          "name": "submitterParameter",
          "type": "String",
          "values": [],
          "description": "If specified, this is the name of the return value that will contain the ID of the user that approves this input. The return value will be handled in a fashion similar to the `parameters` value.",
          "isOptional": true
        },
        {
          "name": "tokens",
          "type": "String",
          "values": [],
          "description": "Comma separated tokens, refer to the Token Macro plugin for more information. Don't append ${}. Values are being evaluated and being send to hubot endpoint.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hubot-steps"
    },
    {
      "command": "hubotSend",
      "title": "hubotSend: Hubot: Send message",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "Required: message to be sent to room.",
          "isOptional": true
        },
        {
          "name": "extraData",
          "type": "Nested",
          "values": [],
          "description": "Map - Any map serializable, extra data that can be used to make more meaningful messages, for example slack attachments.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "String",
          "values": [],
          "description": "failOnError - 'true' or 'false', string it was converted from boolean since 2.0.0 version, fail build when there is error while sending message to hubot or during any stage with these steps.",
          "isOptional": true
        },
        {
          "name": "room",
          "type": "String",
          "values": [],
          "description": "Optional: room name\n \n\n It is optional only when environment variable HUBOT_DEFAULT_ROOM is provided or the room is provided through site.",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "Optional: site name\n \n\n It is optional when there is default site configured at any parent folder level or global level. Note: This is only applicable when room, url or failOnError is not provided.",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "any string that would be helpful for hubot script write to make more meaningful cards, for example to decide a color for failure/success message.",
          "isOptional": true
        },
        {
          "name": "tokens",
          "type": "String",
          "values": [],
          "description": "Comma separated tokens, refer to the Token Macro plugin for more information. Don't append ${}. Values are being evaluated and being send to hubot endpoint.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hubot-steps"
    },
    {
      "command": "hugo",
      "title": "hugo: Hugo Builder",
      "description": "",
      "parameters": [
        {
          "name": "baseUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildFuture",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "destination",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hugoHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hugo"
    },
    {
      "command": "hugoGitPublish",
      "title": "hugoGitPublish: Hugo Git Publisher",
      "description": "",
      "parameters": [
        {
          "name": "targetUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authorEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authorName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commitLog",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "committerEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "committerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hugo"
    },
    {
      "command": "hugoGitSubmodulePublsh",
      "title": "hugoGitSubmodulePublsh: Hugo Git Submodule Publisher",
      "description": "",
      "parameters": [
        {
          "name": "authorEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authorName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commitLog",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "committerEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "committerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hugo"
    },
    {
      "command": "icqMessage",
      "title": "icqMessage: Send message to ICQ or MyTeam",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filepath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "recipients",
          "type": "Nested",
          "values": [
            "id"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "succeeded",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "aborted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "icq-notification"
    },
    {
      "command": "importDeveloperProfile",
      "title": "importDeveloperProfile: Import developer profile",
      "description": "",
      "parameters": [
        {
          "name": "importIntoExistingKeychain",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPwd",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "profileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xcode-plugin"
    },
    {
      "command": "importPackages",
      "title": "importPackages: [TT] Import Packages",
      "description": "Imports ECU-TEST packages and their attributes from a test management system like RQM or ALM.",
      "parameters": [
        {
          "name": "importConfigs",
          "type": "Nested",
          "values": [
            "$class: 'ExportPackageAttributeConfig'",
            "$class: 'ExportPackageConfig'",
            "$class: 'ExportProjectAttributeConfig'",
            "$class: 'ExportProjectConfig'",
            "$class: 'ImportPackageAttributeConfig'",
            "$class: 'ImportPackageConfig'",
            "$class: 'ImportPackageDirConfig'",
            "$class: 'ImportProjectArchiveConfig'",
            "$class: 'ImportProjectAttributeConfig'",
            "$class: 'ImportProjectConfig'",
            "$class: 'ImportProjectDirConfig'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "importProjects",
      "title": "importProjects: [TT] Import Projects",
      "description": "Imports ECU-TEST projects and their attributes from an archive or a test management system like RQM or ALM.",
      "parameters": [
        {
          "name": "importConfigs",
          "type": "Nested",
          "values": [
            "$class: 'ExportPackageAttributeConfig'",
            "$class: 'ExportPackageConfig'",
            "$class: 'ExportProjectAttributeConfig'",
            "$class: 'ExportProjectConfig'",
            "$class: 'ImportPackageAttributeConfig'",
            "$class: 'ImportPackageConfig'",
            "$class: 'ImportPackageDirConfig'",
            "$class: 'ImportProjectArchiveConfig'",
            "$class: 'ImportProjectAttributeConfig'",
            "$class: 'ImportProjectConfig'",
            "$class: 'ImportProjectDirConfig'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "importZapScanPolicy",
      "title": "importZapScanPolicy: Import a ZAP scan policy from the specified path",
      "description": "",
      "parameters": [
        {
          "name": "policyPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "importZapUrls",
      "title": "importZapUrls: Load a list of URLs for ZAP to use from the specified path",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "inNamespace",
      "title": "inNamespace: Run build steps inside an arquillian cube kubernetes managed namespace",
      "description": "",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of the namespace/project to use/create.",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "annotations",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceLazyCreateEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceDestroyEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-arquillian-steps"
    },
    {
      "command": "inSession",
      "title": "inSession: Run build steps inside an Arquillian Cube Kubernetes Session",
      "description": "",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of the namespace/project to use/create.",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "annotations",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scriptEnvironmentVariables",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentSetupScriptUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentTeardownScriptUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentConfigUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentDependencies",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitTimeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitForServiceList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceLazyCreateEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceCleanupEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespaceDestroyEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-arquillian-steps"
    },
    {
      "command": "in_toto_wrap",
      "title": "in_toto_wrap: in-toto record wrapper",
      "description": "",
      "parameters": [
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stepName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "transport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "in-toto"
    },
    {
      "command": "influxDbPublisher",
      "title": "influxDbPublisher: Publish build data to InfluxDB",
      "description": "",
      "parameters": [
        {
          "name": "selectedTarget",
          "type": "String",
          "values": [],
          "description": "InfluxDB target to send data to. Targets have to be configured in the global Jenkins settings.",
          "isOptional": false
        },
        {
          "name": "customData",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataMap",
          "type": "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataMapTags",
          "type": "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataTags",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customPrefix",
          "type": "String",
          "values": [],
          "description": "A custom prefix that gets prepended to the job name, for example to prevent several 'master' metrics for different jobs in multi branch pipeline jobs.",
          "isOptional": true
        },
        {
          "name": "customProjectName",
          "type": "String",
          "values": [],
          "description": "Sets a custom value for the InfluxDB 'project_name' tag key, that overrides the default, which is the job name.\n\nUseful to easily group metrics for different jobs in multi branch pipeline jobs.",
          "isOptional": true
        },
        {
          "name": "jenkinsEnvParameterField",
          "type": "String",
          "values": [],
          "description": "Custom field set that will be added to the default measurement 'jenkins_data', configured as key-value pairs (one per line, in Java Properties file format).\n\nCurrent build parameters and/or environment variables can be used in the form of ${PARAM}\n\n\n \n* KEY=${PARAM}\n\n \n* KEY=PREFIX_${PARAM}_SUFFIX\n\n \n* KEY=VALUE",
          "isOptional": true
        },
        {
          "name": "jenkinsEnvParameterTag",
          "type": "String",
          "values": [],
          "description": "Custom tag set that will be added to all measurements, configured as key-value pairs (one per line, in Java Properties file format).\n\nCurrent build parameters and/or environment variables can be used in the form of ${PARAM}\n\n\n \n* KEY=${PARAM}\n\n \n* KEY=PREFIX_${PARAM}_SUFFIX\n\n \n* KEY=VALUE",
          "isOptional": true
        },
        {
          "name": "measurementName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "replaceDashWithUnderscore",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "influxdb"
    },
    {
      "command": "influxDbQuery",
      "title": "influxDbQuery: Query InfluxDB",
      "description": "",
      "parameters": [
        {
          "name": "checkName",
          "type": "String",
          "values": [],
          "description": "Logical name for the check.",
          "isOptional": false
        },
        {
          "name": "influxQuery",
          "type": "String",
          "values": [],
          "description": "InfluxDB select query supposed to return 1 value. It can be a sum, count or function returning only one value. May use Jenkins tokens such as build number in the query. e.g.",
          "isOptional": false
        },
        {
          "name": "expectedThreshold",
          "type": "double",
          "values": [],
          "description": "Threshold for the value returned by query result. If exceeded and if Mark Build Unstable is selected, the build will be marked unstable.",
          "isOptional": false
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Check if we should mark the build unstable if the threshold is exceeded.",
          "isOptional": true
        },
        {
          "name": "retryCount",
          "type": "int",
          "values": [],
          "description": "Max number of times to execute the query as a single post-build step.",
          "isOptional": true
        },
        {
          "name": "retryInterval",
          "type": "int",
          "values": [],
          "description": "Time to wait in between each query in seconds, default to 30s.",
          "isOptional": true
        },
        {
          "name": "showResults",
          "type": "boolean",
          "values": [],
          "description": "Check if we should should display the query results in the Jenkins console.",
          "isOptional": true
        }
      ],
      "plugin": "influxdb-query"
    },
    {
      "command": "initConanClient",
      "title": "initConanClient: Create Conan Client",
      "description": "",
      "parameters": [
        {
          "name": "client",
          "type": "class org.jfrog.hudson.pipeline.common.types.ConanClient",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "input",
      "title": "input: Wait for interactive input",
      "description": "This step pauses Pipeline execution and allows the user to interact and control the flow of the build. Only a basic \"process\" or \"abort\" option is provided in the stage view. \n\n \n You can optionally request information back, hence the name of the step. The parameter entry screen can be accessed via a link at the bottom of the build console log or via link in the sidebar for a build.",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "This parameter gives a prompt which will be shown to a human: \n\n\n```groovy\n    Ready to go?\n    Proceed or Abort\n    \n```\n\n\n\n\n\n If you click \"Proceed\" the build will proceed to the next step, if you click \"Abort\" the build will be aborted.",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "Every `input` step has an unique ID. It is used in the generated URL to proceed or abort. \n\n\n A specific ID could be used, for example, to mechanically respond to the input from some external process/tool.",
          "isOptional": true
        },
        {
          "name": "ok",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "agentParameter",
            "$class: 'AppDetectorParamaterDefinition'",
            "$class: 'ArtifactRepoParamDefinition'",
            "$class: 'AutoCompleteStringParameterDefinition'",
            "base64File",
            "booleanParam",
            "buildMasterRelease",
            "checkboxParameter",
            "choice",
            "$class: 'ClearCaseUcmBaselineParameterDefinition'",
            "$class: 'CloudSelectorParameter'",
            "credentials",
            "$class: 'CvsTagsParamDefinition'",
            "$class: 'DateParameterDefinition'",
            "$class: 'DeployMetaDataParameterDefinition'",
            "$class: 'DropdownAutocompleteParameterDefinition'",
            "$class: 'ExtensibleChoiceParameterDefinition'",
            "file",
            "$class: 'FileSystemListParameterDefinition'",
            "$class: 'GeneratorChoiceParameterDefinition'",
            "$class: 'GeneratorKeyValueParameterDefinition'",
            "gitParameter",
            "$class: 'GithubBranchParameterDefinition'",
            "$class: 'GlobalVariableStringParameterDefinition'",
            "imageTag",
            "$class: 'InheritableStringParameterDefinition'",
            "$class: 'InheritableStringParameterReferenceDefinition'",
            "$class: 'JFrogPipelinesParameter'",
            "$class: 'JavaParameterDefinition'",
            "$class: 'JiraIssueParameterDefinition'",
            "$class: 'JiraVersionParameterDefinition'",
            "$class: 'LabelParameterDefinition'",
            "listGitBranches",
            "$class: 'ListSubversionTagsParameterDefinition'",
            "$class: 'MatrixCombinationsParameterDefinition'",
            "$class: 'MavenMetadataParameterDefinition'",
            "multiselect",
            "$class: 'NetstormTestParameterDefinition'",
            "$class: 'NodeParameterDefinition'",
            "$class: 'PackageChoiceParameterDefinition'",
            "$class: 'PackageParameterDefinition'",
            "separator",
            "$class: 'PatchParameterDefinition'",
            "$class: 'PersistentBooleanParameterDefinition'",
            "$class: 'PersistentChoiceParameterDefinition'",
            "$class: 'PersistentPackageParameterDefinition'",
            "$class: 'PersistentStringParameterDefinition'",
            "$class: 'PersistentTextParameterDefinition'",
            "$class: 'PersistentYumParameterDefinition'",
            "$class: 'PromotedBuildParameterDefinition'",
            "$class: 'PromotionLevelParameter'",
            "$class: 'RandomStringParameterDefinition'",
            "RESTList",
            "$class: 'ReviewboardParameterDefinition'",
            "$class: 'RunFilterParameter'",
            "run",
            "$class: 'RunSelectorParameter'",
            "$class: 'SauceParameterDefinition'",
            "$class: 'ScriptSelectionTaskDefinition'",
            "snParam",
            "$class: 'SpringBootLibrariesListParameterDefinition'",
            "$class: 'StashBranchParameterDefinition'",
            "stashedFile",
            "string",
            "$class: 'TestExecuter'",
            "text",
            "uploadPgyerTimeoutParameter",
            "$class: 'ToolVersionParameterDefinition'",
            "uploadPgyerUploadParameter",
            "$class: 'VBoxParameterDefinition'",
            "email",
            "validatingString",
            "$class: 'VersionParameterDefinition'",
            "$class: 'WHideParameterDefinition'",
            "$class: 'WReadonlyStringParameterDefinition'",
            "$class: 'WReadonlyTextParameterDefinition'",
            "extendedChoice",
            "$class: 'com.michelin.cio.hudson.plugins.passwordparam.PasswordParameterDefinition'",
            "$class: 'com.moded.extendedchoiceparameter.ExtendedChoiceParameterDefinition'",
            "$class: 'com.perfectomobile.jenkins.copyartifact.BuildSelectorParameter'",
            "password",
            "buildSelector"
          ],
          "description": "Request that the submitter specify one or more parameter values when approving. If just one parameter is listed, its value will become the value of the `input` step. If multiple parameters are listed, the return value will be a map keyed by the parameter names. If parameters are not requested, the step returns nothing if approved. \n\n\n On the parameter entry screen you are able to enter values for parameters that are defined in this field.",
          "isOptional": true
        },
        {
          "name": "submitter",
          "type": "String",
          "values": [],
          "description": "User IDs and/or <em>external</em> group names of person or people permitted to respond to the input, separated by ','. Spaces will be trimmed. This means that \"alice, bob, blah \" is the same as \"alice,bob,blah\".\n \n\n **Note: Jenkins administrators are able to respond to the input regardless of the value of this parameter.**",
          "isOptional": true
        },
        {
          "name": "submitterParameter",
          "type": "String",
          "values": [],
          "description": "If specified, this is the name of the return value that will contain the ID of the user that approves this input. The return value will be handled in a fashion similar to the `parameters` value.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-input-step"
    },
    {
      "command": "insightAppSec",
      "title": "insightAppSec: Scan using InsightAppSec",
      "description": "",
      "parameters": [
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "The data storage region of the target InsightAppSec instance.",
          "isOptional": false
        },
        {
          "name": "insightCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "The App containing the Scan Config you wish to scan.",
          "isOptional": false
        },
        {
          "name": "scanConfigId",
          "type": "String",
          "values": [],
          "description": "The Scan Config you wish to scan.",
          "isOptional": false
        },
        {
          "name": "buildAdvanceIndicator",
          "type": "String",
          "values": [],
          "description": "This configuration option can be used to augment how the build advances based on the status of the scan submitted\n \n\n \n  \n*  **Scan has been submitted** - Advance the build when the scan has been <i>submitted</i> successfully \n\n  \n\n\n  \n*  **Scan has been started** - Advance the build when the scan has been <i>started</i> successfully \n\n  \n\n\n  \n*  **Scan has been completed** - Advance the build when the scan has been <i>completed</i> successfully \n\n  \n\n\n  \n*  **Vulnerability results query has returned no vulnerabilities** - Advance the build when the scan has been <i>completed</i> and the vulnerability search query has returned no vulnerabilities",
          "isOptional": false
        },
        {
          "name": "vulnerabilityQuery",
          "type": "String",
          "values": [],
          "description": "* \n   \n\n    An InsightAppSec search query may be supplied to search vulnerabilities found by the scan.\n   \n \n\n  \n* \n   \n\n    For example, if you wish to fail the build when <i>high</i> severity vulnerabilities have been found, use:\n   \n \n```groovy\n                       `vulnerability.severity='HIGH'`\n            \n```\n \n\n  \n* \n   \n\n The query supplied will automatically be scoped to the scan\n   \n \n\n  \n* \n   \n\n For more information on vulnerability search queries, consult the InsightAppSec API search documentation here:\n   \n [https://help.rapid7.com/insightappsec/en-us/api/v1/docs.html#tag/Search](https://help.rapid7.com/insightappsec/en-us/api/v1/docs.html#tag/Search) \n\n  \n* \n   \n\n If left blank, the build will fail when **any** vulnerabilities have been found in the scan",
          "isOptional": false
        },
        {
          "name": "maxScanPendingDuration",
          "type": "String",
          "values": [],
          "description": "A max scan pending duration may be provided so that the length of time the CI process takes to provide feedback can be controlled.\n \n\n \n  \n* This option is ignored if 'Scan has been submitted' has been selected as the build advance indicator\n\n  \n* The duration will take affect when the scan has been submitted\n\n  \n* Upon reaching the duration, the scan will be cancelled and the build will fail\n\n \n\n\n\n\n\n\n\n \n\n   The following format must be used for defining a duration:\n  \n```groovy\n       `0d 5h 30m`\n    \n```\n\n \n\n \n\n  \n   \n* (d) - Days\n\n   \n* (h) - Hours\n\n   \n* (m) - Minutes\n\n  \n  \n\n A quantity must be supplied for each of the above. e.g.\n  \n\n  \n   \n* 1 day: 1d 0h 0m\n\n   \n* 5 hours: 0d 5h 0m\n\n   \n* 3 hours, 30 minutes: 0d 3h 30m",
          "isOptional": false
        },
        {
          "name": "maxScanExecutionDuration",
          "type": "String",
          "values": [],
          "description": "A max scan execution duration may be provided so that the length of time the CI process takes to provide feedback can be controlled.\n \n\n \n  \n* This option is ignored if 'Scan has been submitted' has been selected as the build advance indicator\n\n  \n* This option is ignored if 'Scan has been started' has been selected as the build advance indicator\n\n  \n* The duration will take affect when the scan moves into scanning state\n\n  \n* Upon reaching the duration, the in-progress scan will be stopped and the build will advance as normal\n\n \n\n\n\n\n\n\n\n \n\n   The following format must be used for defining a duration:\n  \n```groovy\n       `0d 5h 30m`\n    \n```\n\n \n\n \n\n  \n   \n* (d) - Days\n\n   \n* (h) - Hours\n\n   \n* (m) - Minutes\n\n  \n  \n\n A quantity must be supplied for each of the above. e.g.\n  \n\n  \n   \n* 1 day: 1d 0h 0m\n\n   \n* 5 hours: 0d 5h 0m\n\n   \n* 3 hours, 30 minutes: 0d 3h 30m",
          "isOptional": false
        },
        {
          "name": "enableScanResults",
          "type": "boolean",
          "values": [],
          "description": "Flag to indicate if scan results should be viewable when a build has finished.\n \n\n \n\n  When enabled, a new action will be provided to view scan results, labeled 'InsightAppSec Scan Results'.\n \n\n \n\n\n \n **Note: All users with access to view the build job history will be able to view InsightAppSec scan results**",
          "isOptional": false
        }
      ],
      "plugin": "insightappsec"
    },
    {
      "command": "invokeFunction",
      "title": "invokeFunction: Invoke a given function",
      "description": "",
      "parameters": [
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "payload",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "payloadAsString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "returnValueAsString",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-huaweicloud-plugin"
    },
    {
      "command": "invokeLambda",
      "title": "invokeLambda: AWS Lambda invocation",
      "description": "",
      "parameters": [
        {
          "name": "lambdaInvokeBuildStepVariables",
          "type": "Nested",
          "values": [
            "awsRegion",
            "functionName",
            "synchronous",
            "awsAccessKeyId",
            "awsSecretKey",
            "jsonParameters",
            "payload",
            "useInstanceCredentials"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-lambda"
    },
    {
      "command": "invokeLambda",
      "title": "invokeLambda: Invoke a given Lambda function",
      "description": "",
      "parameters": [
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "payload",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "payloadAsString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "returnValueAsString",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "ipythonBuilder",
      "title": "ipythonBuilder: IPython Builder",
      "description": "",
      "parameters": [
        {
          "name": "code",
          "type": "String",
          "values": [],
          "description": "Copy and paste your code to execute in selected server\n \n Eg: print(\" Hello Jenkins, from Machine Learning Plugin ...... ! \")",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "Path of file that contains python code to be executed in the server\n \n Eg: /home/alice/iris/ml.py",
          "isOptional": false
        },
        {
          "name": "parserType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "task",
          "type": "String",
          "values": [],
          "description": "Folder name that will be used for saving html/images/graphs generated by the script file or code\n \n Eg: Training",
          "isOptional": false
        },
        {
          "name": "kernelName",
          "type": "String",
          "values": [],
          "description": "Globally configured Jupyter kernels. If any kernels are not shown\n \n  \n*  Manage Jenkins --&gt; Configure System\n\n  \n*  Under Kernel Configuration\n\n  \n   \n* Add a name for kernel (Required)\n\n   \n* Language (Optional)\n\n   \n* Add timeout for launching\n\n   \n* Add max size of results that can be obtained form the kernel",
          "isOptional": false
        }
      ],
      "plugin": "machine-learning"
    },
    {
      "command": "ircNotify",
      "title": "ircNotify: IRC Notification",
      "description": "",
      "parameters": [
        {
          "name": "buildToChatNotifier",
          "type": "Nested",
          "values": [
            "$class: 'BuildParametersBuildToChatNotifier'",
            "$class: 'DefaultBuildToChatNotifier'",
            "$class: 'ExtraMessageOnlyBuildToChatNotifier'",
            "$class: 'PrintFailingTestsBuildToChatNotifier'",
            "$class: 'SummaryOnlyBuildToChatNotifier'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "matrixNotifier",
          "type": "Enum",
          "values": [
            "ONLY_PARENT",
            "ONLY_CONFIGURATIONS",
            "ALL"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationStrategy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyCulprits",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyFixers",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyOnStart",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifySuspects",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyUpstreamCommitters",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ircbot"
    },
    {
      "command": "isConfigStarted",
      "title": "isConfigStarted: Check ECU-TEST configuration status",
      "description": "Checks whether the currently selected ECU-TEST configurations are started.\n\n \n  Signatures:\n  \n   \n```groovy\nETInstance.isConfigStarted() : boolean\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\nboolean isConfigStarted = instance.isConfigStarted()\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "isUnix",
      "title": "isUnix: Checks if running on a Unix-like node",
      "description": "Returns true if enclosing `node` is running on a Unix-like system (such as Linux or Mac OS X), false if Windows.",
      "parameters": [],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "ispwOperation",
      "title": "ispwOperation: Perform a Compuware ISPW Rest API Request and return a JSON object",
      "description": "Performs an ISPW Rest API request, and returns a JSON object.",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "consoleLogResponseBody",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ispwAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ispwRequestBody",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipWaitingForSet",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "compuware-ispw-operations"
    },
    {
      "command": "ispwRegisterWebhook",
      "title": "ispwRegisterWebhook: Creates and returns a ISPW webhook that can be used by an external system to notify a pipeline",
      "description": "Returns a unique webhook that can be used with `waitForWebhook` to block pipeline execution until external notification. The returned webhook has `String getToken()` and `String getURL()` methods.",
      "parameters": [],
      "plugin": "compuware-ispw-operations"
    },
    {
      "command": "ispwWaitForWebhook",
      "title": "ispwWaitForWebhook: Wait for ISPW webhook to be posted to by external system",
      "description": "Blocks on a webhook created with `registerWebhook` until the registered webhook is posted to. In general, should not be used inside of a `node` block.",
      "parameters": [
        {
          "name": "webhookToken",
          "type": "class com.compuware.ispw.restapi.WebhookToken",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "compuware-ispw-operations"
    },
    {
      "command": "jabberNotify",
      "title": "jabberNotify: Jabber Notification",
      "description": "When used in Pipelines, this plugin will act somewhat differently than in AbstractBuild subclasses. Specifically, notification strategy relies on a build result being set, but in pipelines it is not (yet) set. Here are some ways to use it:\n \n  \n*  **Set result yourself** (and use a single jabberNotify step) \n```groovy\n                `\ntry {\n    //main build here.\n\n    currentBuild.result = Result.SUCCESS.toString() //otherwise message will say \"NOT_BUILT\"\n} catch(e) {\n    currentBuild.result = Result.FAILURE.toString()\n    throw e\n} finally {\n    jabberNotify notificationStrategy: 'failure and fixed', notifyCulprits: true, notifySuspects: true, targets: '...'\n}\n                `\n            \n```\n \n\n  \n*  **Decide when to notify** (and author your own messages) \n```groovy\n                `\njabberNotify buildToChatNotifier: [$class: 'ExtraMessageOnlyBuildToChatNotifier'], extraMessage: 'Build Started', targets: '...'\ntry {\n    //main build here\n\n    jabberNotify buildToChatNotifier: [$class: 'ExtraMessageOnlyBuildToChatNotifier'], extraMessage: 'Build Succeeded', targets: '...'\n} catch (e) {\n    jabberNotify buildToChatNotifier: [$class: 'ExtraMessageOnlyBuildToChatNotifier'], extraMessage: 'Build Failed', targets: '...'\n    throw e\n}\n\n                `\n            \n```",
      "parameters": [
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildToChatNotifier",
          "type": "Nested",
          "values": [
            "$class: 'BuildParametersBuildToChatNotifier'",
            "$class: 'DefaultBuildToChatNotifier'",
            "$class: 'ExtraMessageOnlyBuildToChatNotifier'",
            "$class: 'PrintFailingTestsBuildToChatNotifier'",
            "$class: 'SummaryOnlyBuildToChatNotifier'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "matrixNotifier",
          "type": "Enum",
          "values": [
            "ONLY_PARENT",
            "ONLY_CONFIGURATIONS",
            "ALL"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationStrategy",
          "type": "String",
          "values": [],
          "description": "This only makes sense if the build result has been set, either because this step is in a catch or finally block and the job already failed, or because it was manually set in the DSL (eg: **currentBuild.result = Result.FAILURE.toString()**) If it was not set, then only \"all\" will make sense.",
          "isOptional": true
        },
        {
          "name": "notifyCulprits",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyFixers",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifySuspects",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyUpstreamCommitters",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jabber"
    },
    {
      "command": "jacoco",
      "title": "jacoco: Record JaCoCo coverage report",
      "description": "Allows to configure various aspects of the JaCoCo code coverage report. The paths define where the various types of files can be found in the workspace, inclusions and exclusions allow to exclude certain class files. And the coverage thresholds allow to configure how much coverage is necessary to make the build green (if changing the build status is enabled).",
      "parameters": [
        {
          "name": "buildOverBuild",
          "type": "boolean",
          "values": [],
          "description": "Check this to set the build status to failure if the delta coverage thresholds are violated. Delta coverage is the difference between coverage of last successful and current build.",
          "isOptional": true
        },
        {
          "name": "changeBuildStatus",
          "type": "boolean",
          "values": [],
          "description": "Check this to set the build status to unstable if coverage thresholds are violated.",
          "isOptional": true
        },
        {
          "name": "classPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaBranchCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaClassCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaComplexityCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaInstructionCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaLineCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deltaMethodCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exclusionPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "execPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inclusionPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumBranchCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumClassCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumComplexityCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumInstructionCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumLineCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maximumMethodCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumBranchCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumClassCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumComplexityCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumInstructionCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumLineCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumMethodCoverage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runAlways",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipCopyOfSrcFiles",
          "type": "boolean",
          "values": [],
          "description": "Check this to disable display of source files for each line coverage",
          "isOptional": true
        },
        {
          "name": "sourceExclusionPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceInclusionPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jacoco"
    },
    {
      "command": "javadoc",
      "title": "javadoc: Publish Javadoc",
      "description": "",
      "parameters": [
        {
          "name": "javadocDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "If you check this option, Jenkins will retain Javadoc for each successful build. This allows you to browse Javadoc for older builds, at the expense of additional disk space requirement.\n \n If you leave this option unchecked, Jenkins will only keep the latest Javadoc, so older Javadoc will be overwritten as new builds succeed.",
          "isOptional": false
        }
      ],
      "plugin": "javadoc"
    },
    {
      "command": "jdbc",
      "title": "jdbc: JdbcStep",
      "description": "You can use the step execute sql scripts.",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sql",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "jfPipelines",
      "title": "jfPipelines: Set output resources and report results for JFrog Pipelines",
      "description": "",
      "parameters": [
        {
          "name": "outputResources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportStatus",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "jiraAddComment",
      "title": "jiraAddComment: JIRA Steps: Add Comment",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "input",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraAddWatcher",
      "title": "jiraAddWatcher: JIRA Steps: Add Watcher",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraAssignIssue",
      "title": "jiraAssignIssue: JIRA Steps: Assign Issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "accountId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraAssignableUserSearch",
      "title": "jiraAssignableUserSearch: JIRA Steps: Searches assignable JIRA Users by username, name or email address for the given project/issueKey",
      "description": "",
      "parameters": [
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "issueKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxResults",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryStr",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startAt",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraComment",
      "title": "jiraComment: Jira: Add a comment to issue(s)",
      "description": "",
      "parameters": [
        {
          "name": "issueKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "jiraDeleteAttachment",
      "title": "jiraDeleteAttachment: JIRA Steps: Delete Attachment",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraDeleteIssueLink",
      "title": "jiraDeleteIssueLink: JIRA Steps: Delete IssueLink",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraDeleteIssueRemoteLink",
      "title": "jiraDeleteIssueRemoteLink: JIRA Steps: Delete Issue’s Remote Link by linkId.",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "linkId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraDeleteIssueRemoteLinks",
      "title": "jiraDeleteIssueRemoteLinks: JIRA Steps: Delete Issue’s Remote Links by globalId.",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "globalId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraDownloadAttachment",
      "title": "jiraDownloadAttachment: JIRA Steps: Download a file to workspace (directory is optional)",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "override",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraEditComment",
      "title": "jiraEditComment: JIRA Steps: Edit Issue Comment",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "input",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraEditComponent",
      "title": "jiraEditComponent: JIRA Steps: Edit Component",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "component",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraEditIssue",
      "title": "jiraEditIssue: JIRA Steps: Edit Issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "issue",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraEditVersion",
      "title": "jiraEditVersion: JIRA Steps: Edit Version",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetAttachmentInfo",
      "title": "jiraGetAttachmentInfo: JIRA Steps: Get Attachment Info",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetComment",
      "title": "jiraGetComment: JIRA Steps: Get Issue Comment",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetComments",
      "title": "jiraGetComments: JIRA Steps: Get Issue Comments",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetComponent",
      "title": "jiraGetComponent: JIRA Steps: Get Component",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetComponentIssueCount",
      "title": "jiraGetComponentIssueCount: JIRA Steps: Get Component Issue Count",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetFields",
      "title": "jiraGetFields: JIRA Steps: Get Fields",
      "description": "",
      "parameters": [
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssue",
      "title": "jiraGetIssue: JIRA Steps: Get Issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueLink",
      "title": "jiraGetIssueLink: JIRA Steps: Get IssueLink",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueLinkTypes",
      "title": "jiraGetIssueLinkTypes: JIRA Steps: Get Issue Link Types",
      "description": "",
      "parameters": [
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueRemoteLink",
      "title": "jiraGetIssueRemoteLink: JIRA Steps: Get Issue’s Remote Link by linkId.",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "linkId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueRemoteLinks",
      "title": "jiraGetIssueRemoteLinks: JIRA Steps: Get Issue’s Remote Links by globalId.",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "globalId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueTransitions",
      "title": "jiraGetIssueTransitions: JIRA Steps: Get Issue Transitions",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetIssueWatches",
      "title": "jiraGetIssueWatches: JIRA Steps: Get Issue Watches",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetProject",
      "title": "jiraGetProject: JIRA Steps: Get Project",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetProjectComponents",
      "title": "jiraGetProjectComponents: JIRA Steps: Get Project Components",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetProjectStatuses",
      "title": "jiraGetProjectStatuses: JIRA Steps: Get Project Statuses",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetProjectVersions",
      "title": "jiraGetProjectVersions: JIRA Steps: Get Project Versions",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetProjects",
      "title": "jiraGetProjects: JIRA Steps: Get Projects",
      "description": "",
      "parameters": [
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetServerInfo",
      "title": "jiraGetServerInfo: JIRA Steps: Get Server Info",
      "description": "",
      "parameters": [
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraGetVersion",
      "title": "jiraGetVersion: JIRA Steps: Get Version",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraIssueSelector",
      "title": "jiraIssueSelector: Jira: Issue selector",
      "description": "",
      "parameters": [
        {
          "name": "issueSelector",
          "type": "Nested",
          "values": [
            "$class: 'DefaultIssueSelector'",
            "$class: 'ExplicitIssueSelector'",
            "$class: 'JqlIssueSelector'",
            "$class: 'P4JobIssueSelector'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "jiraJqlSearch",
      "title": "jiraJqlSearch: JIRA Steps: JQL Search",
      "description": "",
      "parameters": [
        {
          "name": "jql",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fields",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxResults",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startAt",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraLinkIssues",
      "title": "jiraLinkIssues: JIRA Steps: Link Issues",
      "description": "",
      "parameters": [
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inwardKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outwardKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNewComponent",
      "title": "jiraNewComponent: JIRA Steps: Create New Component",
      "description": "",
      "parameters": [
        {
          "name": "component",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNewIssue",
      "title": "jiraNewIssue: JIRA Steps: Create New Issue",
      "description": "",
      "parameters": [
        {
          "name": "issue",
          "type": "Nested",
          "values": [
            "update",
            "fields"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNewIssueRemoteLink",
      "title": "jiraNewIssueRemoteLink: JIRA Steps: Create new remote link for given issue.",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remoteLink",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNewIssues",
      "title": "jiraNewIssues: JIRA Steps: Create New Issues",
      "description": "",
      "parameters": [
        {
          "name": "issues",
          "type": "Nested",
          "values": [
            "issueUpdates",
            "issues"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNewVersion",
      "title": "jiraNewVersion: JIRA Steps: Create New Version",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraNotifyIssue",
      "title": "jiraNotifyIssue: JIRA Steps: Notify Issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notify",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraSearch",
      "title": "jiraSearch: Jira: Search issues",
      "description": "",
      "parameters": [
        {
          "name": "jql",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "jiraSendBuildInfo",
      "title": "jiraSendBuildInfo: Atlassian Jira Software Cloud Jenkins Integration (Build)",
      "description": "Once you install the Jenkins plugin and set up the configuration page, you need to add a ‘build step’ in your pipeline. This is what tells the Jenkins pipeline, when running, to send data to Jira or not. You can use the optional 'branch' parameter to override the branch name we use to determine the issue keys associated with the current build.\n \n\n You generate a Pipeline script, then use this in your Jenkinsfile.\n \n\n Please select the Jira Software Cloud site name you would like to create the pipeline script for. You can only select 1 site at this time. If you want to send information to multiple sites, please create multiple Pipeline Scripts.",
      "parameters": [
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "atlassian-jira-software-cloud"
    },
    {
      "command": "jiraSendDeploymentInfo",
      "title": "jiraSendDeploymentInfo: Atlassian Jira Software Cloud Jenkins Integration (Deployment)",
      "description": "Once you install the Jenkins plugin and set up the configuration page, you need to add a ‘deployment step’ in your pipeline. This is what tells the Jenkins pipeline, when running, to send data to Jira or not.\n \n\n You generate a Pipeline script, then use this in your Jenkinsfile.\n \n\n Please select the Jira Software Cloud site name you would like to create the pipeline script for. You can only select 1 site at this time. If you want to send information to multiple sites, please create multiple Pipeline Scripts. You also need to specify the environment ID, name and type. Valid environment types are 'unmapped', 'development', 'testing', 'staging' and 'production'.\n \n\n State, Service Ids and IssueKeys are optional parameters. Use state to explicitly describe your deployment state or it will determine from the Jenkins job for you. Valid state values: 'unknown', 'pending', 'in_progress', 'cancelled', 'failed', 'rolled_back', 'successful'  Service Ids uses to automatically create a change management request for your deployment Please see https://developer.atlassian.com/cloud/jira/software/rest/#api-group-Deployments for more information.",
      "parameters": [
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableGating",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "issueKeys",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "state",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "atlassian-jira-software-cloud"
    },
    {
      "command": "jiraTransitionIssue",
      "title": "jiraTransitionIssue: JIRA Steps: Transition Issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "input",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraUploadAttachment",
      "title": "jiraUploadAttachment: JIRA Steps: Attach a file from workspace to an issue",
      "description": "",
      "parameters": [
        {
          "name": "idOrKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jiraUserSearch",
      "title": "jiraUserSearch: JIRA Steps: Search Active JIRA Users by username, name or email address.",
      "description": "",
      "parameters": [
        {
          "name": "queryStr",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "auditLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxResults",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryParams",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "site",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startAt",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira-steps"
    },
    {
      "command": "jmhReport",
      "title": "jmhReport: JMH Report",
      "description": "",
      "parameters": [
        {
          "name": "resultPath",
          "type": "String",
          "values": [],
          "description": "The path were the build stores the JMH result. E.g. <i>build/reports/jmh/result.json</i>.",
          "isOptional": false
        }
      ],
      "plugin": "jmh-report"
    },
    {
      "command": "jobDsl",
      "title": "jobDsl: Process Job DSLs",
      "description": "",
      "parameters": [
        {
          "name": "additionalClasspath",
          "type": "String",
          "values": [],
          "description": "Newline separated list of additional classpath entries for the Job DSL scripts. All entries must be relative to the workspace root, e.g. <em>build/classes/main</em>. Supports Ant-style patterns like <em>lib/*.jar</em>.",
          "isOptional": true
        },
        {
          "name": "additionalParameters",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnMissingPlugin",
          "type": "boolean",
          "values": [],
          "description": "If checked, the build will be marked as failed if a plugin must be installed or updated to support all features used in the DSL scripts. If not checked, the build will be marked as unstable instead.",
          "isOptional": true
        },
        {
          "name": "failOnSeedCollision",
          "type": "boolean",
          "values": [],
          "description": "Fail build if generated item(s) have the same name as existing items already managed by another seed job. By default, this plugin will always regenerate all jobs and views, thus updating previously generated jobs and views even if managed by another seed job. Check this box if you wish to fail the job if a generated item name collision is detected.",
          "isOptional": true
        },
        {
          "name": "ignoreExisting",
          "type": "boolean",
          "values": [],
          "description": "Ignore previously generated jobs and views. By default, this plugin will always regenerate all jobs and views, thus updating previously generated jobs and views. Check this box if you wish to leave previous jobs and views as is.",
          "isOptional": true
        },
        {
          "name": "ignoreMissingFiles",
          "type": "boolean",
          "values": [],
          "description": "Ignore missing DSL scripts. If not checked, the build step will fail if a configured script is missing or if a wildcard does not match any files.",
          "isOptional": true
        },
        {
          "name": "lookupStrategy",
          "type": "Enum",
          "values": [
            "JENKINS_ROOT",
            "SEED_JOB"
          ],
          "description": "Determines how relative job names in DSL scripts are interpreted. You will only see a difference when the seed job is located in a [folder](https://wiki.jenkins-ci.org/display/JENKINS/CloudBees+Folders+Plugin).\n \n  \n*  **Jenkins Root** When this option is selected relative job names are always interpreted relative to the Jenkins root. \n\n  \n*  **Seed Job** If you choose this option relative job names in DSL scripts will be interpreted relative to the folder in which the seed job is located. Suppose you have a seed job which is located in a folder named <em>seedJobFolder</em> and a DSL script which creates a job named <em>subfolder2/job</em>. The job that is created by the seed job will be at the location <em>/seedJobFolder/subfolder2/job</em>.",
          "isOptional": true
        },
        {
          "name": "removedConfigFilesAction",
          "type": "Enum",
          "values": [
            "IGNORE",
            "DELETE"
          ],
          "description": "Specifies what to do when previously generated config files are not referenced anymore.\n \n **Note:** when using multiple Job DSL build steps in a single job, set this to \"Delete\" only for the last Job DSL build step. Otherwise config files may be deleted and re-created. See [JENKINS-44142](https://issues.jenkins-ci.org/browse/JENKINS-44142) for details.",
          "isOptional": true
        },
        {
          "name": "removedJobAction",
          "type": "Enum",
          "values": [
            "IGNORE",
            "DISABLE",
            "DELETE"
          ],
          "description": "Specifies what to do when a previously generated job is not referenced anymore.\n \n **Note:** when using multiple Job DSL build steps in a single job, set this to \"Delete\" or \"Disable\" only for the last Job DSL build step. Otherwise jobs will be deleted and re-created or disabled and re-enabled and you may loose the job history of generated jobs. See [JENKINS-44142](https://issues.jenkins-ci.org/browse/JENKINS-44142) for details.",
          "isOptional": true
        },
        {
          "name": "removedViewAction",
          "type": "Enum",
          "values": [
            "IGNORE",
            "DELETE"
          ],
          "description": "Specifies what to do when a previously generated view is not referenced anymore.\n \n **Note:** when using multiple Job DSL build steps in a single job, set this to \"Delete\" only for the last Job DSL build step. Otherwise views may be deleted and re-created. See [JENKINS-44142](https://issues.jenkins-ci.org/browse/JENKINS-44142) for details.",
          "isOptional": true
        },
        {
          "name": "sandbox",
          "type": "boolean",
          "values": [],
          "description": "If checked, runs the DSL scripts in a sandbox with limited abilities. You will also need to configure this job to run with the identity of a particular user. If unchecked, and you are not a Jenkins administrator, you will need to wait for an administrator to approve the scripts.",
          "isOptional": true
        },
        {
          "name": "scriptText",
          "type": "String",
          "values": [],
          "description": "DSL Script, which is groovy code. Look at [documentation](https://github.com/jenkinsci/job-dsl-plugin) for details on the syntax.",
          "isOptional": true
        },
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "Newline separated list of DSL scripts, located in <a rel=\"nofollow\">the Workspace</a>. Can use wildcards like 'jobs/**/*.groovy'. See [the @includes of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n Scripts are executed in the same order as specified. The execution order of expanded wildcards is unspecified.",
          "isOptional": true
        },
        {
          "name": "unstableOnDeprecation",
          "type": "boolean",
          "values": [],
          "description": "If checked, marks the build as unstable when using deprecated features. If not checked, a warning will be printed to the build log only.",
          "isOptional": true
        },
        {
          "name": "useScriptText",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "job-dsl"
    },
    {
      "command": "junit",
      "title": "junit: Archive JUnit-formatted test results",
      "description": "Jenkins understands the JUnit test report XML format (which is also used by TestNG). When this option is configured, Jenkins can provide useful information about test results, such as historical test result trends, a web UI for viewing test reports, tracking failures, and so on.\n \n To use this feature, first set up your build to run tests, then specify the path to JUnit XML files in the [Ant glob syntax](http://ant.apache.org/manual/Types/fileset.html), such as **/build/test-reports/*.xml. Be sure not to include any non-report files into this pattern. You can specify multiple patterns of files separated by commas.",
      "parameters": [
        {
          "name": "testResults",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowEmptyResults",
          "type": "boolean",
          "values": [],
          "description": "If checked, the default behavior of failing a build on missing test result files or empty test results is changed to not affect the status of the build. Please note that this setting make it harder to spot misconfigured jobs or build failures where the test tool does not exit with an error code when not producing test report files.",
          "isOptional": true
        },
        {
          "name": "checksName",
          "type": "String",
          "values": [],
          "description": "If provided, and publishing checks enabled, the plugin will use this name when publishing results to corresponding SCM hosting platforms. If not, a default including the current stage / branch names will be used.",
          "isOptional": true
        },
        {
          "name": "healthScaleFactor",
          "type": "double",
          "values": [],
          "description": "The amplification factor to apply to test failures when computing the test result contribution to the build health score.\n \n\n The default factor is `1.0`\n \n  \n* A factor of `0.0` will disable the test result contribution to build health score.\n\n  \n* A factor of `0.1` means that 10% of tests failing will score 99% health\n\n  \n* A factor of `0.5` means that 10% of tests failing will score 95% health\n\n  \n* A factor of `1.0` means that 10% of tests failing will score 90% health\n\n  \n* A factor of `2.0` means that 10% of tests failing will score 80% health\n\n  \n* A factor of `2.5` means that 10% of tests failing will score 75% health\n\n  \n* A factor of `5.0` means that 10% of tests failing will score 50% health\n\n  \n* A factor of `10.0` means that 10% of tests failing will score 0% health\n\n  The factor is persisted with the build results, so changes will only be reflected in new builds.",
          "isOptional": true
        },
        {
          "name": "keepLongStdio",
          "type": "boolean",
          "values": [],
          "description": "If checked, any standard output or error from a test suite will be retained in the test results after the build completes. (This refers only to additional messages printed to console, not to a failure stack trace.) Such output is always kept if the test failed, but by default lengthy output from passing tests is truncated to save space. Check this option if you need to see every log message from even passing tests, but beware that Jenkins's memory consumption can substantially increase as a result, even if you never look at the test results!",
          "isOptional": true
        },
        {
          "name": "skipPublishingChecks",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically publishes the test results to corresponding SCM hosting platforms. For example, if you are using this feature for a GitHub organization project, the warnings will be published to GitHub through the Checks API. If this operation slows down your build, or you don't want to publish the warnings to SCM platforms, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "junit"
    },
    {
      "command": "keepEnv",
      "title": "keepEnv: Keep only specified environment variables",
      "description": "Filters out for the scope of the block, the environment variables proposed by Jenkins except the ones listed. These are available to any external processes spawned within that scope. For example:\n \n\n\n \n```groovy\nnode {\n  env.CUSTOM=test\n  env.INFO=useful\n  keepEnv(['INFO']) {\n    // at this point the CUSTOM will not be available\n    bat 'echo %INFO%'\n  }\n}\n\n```\n\n \nSee the documentation for the `env` singleton for more information on environment variables.",
      "parameters": [
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "A list of environment variables to retain. Specify one variable name per line. All other environment variables added to the Pipeline by Jenkins will be removed from the block. System-contributed environment variables like `PATH` will be reset to their default value.",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-keepenv-step"
    },
    {
      "command": "keepRunning",
      "title": "keepRunning: Keep the process running even if the build has finished.",
      "description": "Keep the process running even if the build has finished. \n\n\n **Example:**\n\n ``\n\n\n```groovy\nkeepRunning {\n    sh '/usr/local/apache-tomact/bin/startup.sh\n}\n\t\n```",
      "parameters": [],
      "plugin": "pipeline-keep-running-step"
    },
    {
      "command": "kiuwan",
      "title": "kiuwan: Analyze your source code with Kiuwan!",
      "description": "",
      "parameters": [
        {
          "name": "abortedResultCodes_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "analysisScope_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationName_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "branch_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeRequestStatus_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeRequest_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commandArgs_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "connectionProfileUuid",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "encoding_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraParameters_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failureResultCodes_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failureThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includes_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "indicateLanguages",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "indicateLanguages_dm",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "label_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "languages",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "languages_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "markAsInOtherCases_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "markBuildWhenNoPass_dm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "measure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notBuiltResultCodes_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "outputFilename",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selectedMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "successResultCodes_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout_dm",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout_em",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableResultCodes_em",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForAuditResults_dm",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kiuwanjenkinsplugin"
    },
    {
      "command": "klocworkBuildSpecGeneration",
      "title": "klocworkBuildSpecGeneration: Klocwork - Step 1 (CI/Full) - Capture Build Information",
      "description": "",
      "parameters": [
        {
          "name": "buildSpecConfig",
          "type": "Nested",
          "values": [
            "buildCommand",
            "tool",
            "output",
            "additionalOpts",
            "ignoreErrors"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkFailureCondition",
      "title": "klocworkFailureCondition: Klocwork - Post Analysis (Full/CI) - Build Failure Conditions (Optional)",
      "description": "",
      "parameters": [
        {
          "name": "failureConditionConfig",
          "type": "Nested",
          "values": [
            "enableServerFailureCondition",
            "failureConditionServerConfigs",
            "enableCiFailureCondition",
            "enableDesktopFailureCondition",
            "failureConditionCiConfig",
            "failureConditionCiConfigs",
            "failureConditionDesktopConfig"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkIncremental",
      "title": "klocworkIncremental: Klocwork - Step 2 (CI) - Run Differential Analysis",
      "description": "",
      "parameters": [
        {
          "name": "ciConfig",
          "type": "Nested",
          "values": [
            "buildSpec",
            "projectDir",
            "cleanupProject",
            "reportFile",
            "additionalOpts",
            "incrementalAnalysis",
            "differentialAnalysisConfig"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkIntegrationStep1",
      "title": "klocworkIntegrationStep1: Klocwork - Step 2 (Full) - Run Analysis",
      "description": "",
      "parameters": [
        {
          "name": "serverConfig",
          "type": "Nested",
          "values": [
            "buildSpec",
            "tablesDir",
            "incrementalAnalysis",
            "ignoreCompileErrors",
            "importConfig",
            "additionalOpts",
            "disableKwdeploy",
            "duplicateFrom",
            "enabledCreateProject"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkIntegrationStep2",
      "title": "klocworkIntegrationStep2: Klocwork - Step 3 (Full) - Load Analysis Results",
      "description": "",
      "parameters": [
        {
          "name": "serverConfig",
          "type": "Nested",
          "values": [
            "tablesDir",
            "buildName",
            "additionalOpts"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportConfig",
          "type": "Nested",
          "values": [
            "displayChart",
            "chartHeight",
            "chartWidth",
            "query"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkIssueSync",
      "title": "klocworkIssueSync: Klocwork - Post Analysis (Full) - Cross-Project Issue Sync (Optional)",
      "description": "",
      "parameters": [
        {
          "name": "syncConfig",
          "type": "Nested",
          "values": [
            "dryRun",
            "lastSync",
            "projectRegexp",
            "statusAnalyze",
            "statusIgnore",
            "statusNotAProblem",
            "statusFix",
            "statusFixInNextRelease",
            "statusFixInLaterRelease",
            "statusDefer",
            "statusFilter",
            "additionalOpts"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "klocworkWrapper",
      "title": "klocworkWrapper: Klocwork - Build Environment Settings",
      "description": "",
      "parameters": [
        {
          "name": "serverConfig",
          "type": "String",
          "values": [],
          "description": "Create server configurations on the <a rel=\"nofollow\">Configure System</a> page.",
          "isOptional": false
        },
        {
          "name": "installConfig",
          "type": "String",
          "values": [],
          "description": "You can create install configurations on the <a rel=\"nofollow\">Configure System</a> page. When used, the system updates the build environment's PATH variable to include the Klocwork installation PATH provided by the selected configuration.",
          "isOptional": false
        },
        {
          "name": "serverProject",
          "type": "String",
          "values": [],
          "description": "The Klocwork Server project to run a server build against or to connect to for CI analysis.",
          "isOptional": false
        },
        {
          "name": "ltoken",
          "type": "String",
          "values": [],
          "description": "Optionally, specify a custom ltoken location. The Klocwork ltoken is used to authenticate with the Klocwork Server. The default ltoken location is in the .klocwork directory which is located in the home directory of the user running the process, for example: C:\\Users\\user_name\\.klocwork\\ltoken. See the Klocwork documentation for more information.",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "kubeconfig",
      "title": "kubeconfig: Setup Kubernetes CLI (kubectl)",
      "description": "Configure Kubernetes client (kubectl) so it can be used in the build to run Kubernetes commands",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "URL of the Kubernetes API endpoint. If not set the connection options will be autoconfigured from service account or kube config file.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caCertificate",
          "type": "String",
          "values": [],
          "description": "The base64 encoded certificate of the certificate authority (CA). It is used to verify the server certificate.\n \nLeaving this field empty will skip the certificate verification.",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes"
    },
    {
      "command": "kubernetesApply",
      "title": "kubernetesApply: Apply resources to Kubernetes, lazily creating environments and routes",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "registry",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "readinessTimeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "createNewResources",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "servicesOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreServices",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreRunningOAuthClients",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "processTemplatesLocally",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deletePodsOnReplicationControllerUpdate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rollingUpgrades",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rollingUpgradePreserveScale",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-devops-steps"
    },
    {
      "command": "kubernetesDeploy",
      "title": "kubernetesDeploy: Deploy to Kubernetes",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "String",
          "values": [],
          "description": "The path patterns for the Kubernetes configurations you want to deploy, in the form of [Ant glob syntax](https://ant.apache.org/manual/dirtasks.html#patterns).",
          "isOptional": true
        },
        {
          "name": "credentialsType",
          "type": "String",
          "values": [],
          "description": "Choose how to get the [ kubeconfig file](https://kubernetes.io/docs/concepts/cluster-administration/authenticate-across-clusters-kubeconfig/) to authenticate with the Kubernetes cluster management endpoint. \n\n \n 3 options are supported: \n\n \n  \n* **Authenticate with Kube config file** - Get the kubeconfig file from the workspace path.\n\n  \n* **Fetch cluster details through SSH connection to the master node** - Get the `~/.kube/config` file through an SSH connection to the master node.\n\n  \n* **Fill credentials details directly** - Fill the contents in kubeconfig file directly.\n\n \n \n See also: [Configure kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/#configure-kubectl)",
          "isOptional": true
        },
        {
          "name": "deleteResource",
          "type": "boolean",
          "values": [],
          "description": "Whether to delete the resource, if it is true, delete all resources in the config file.",
          "isOptional": true
        },
        {
          "name": "dockerCredentials",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableConfigSubstitution",
          "type": "boolean",
          "values": [],
          "description": "Substitute variables (in the form `$VARIABLE` or `${VARIABLE}`) in the configuration with values from Jenkins environment variables. \n\n \n This allows you to use dynamic values produced during the build in your Kubernetes configurations, e.g., a dynamically generated Docker image tag which will be used later in the deployment.",
          "isOptional": true
        },
        {
          "name": "kubeConfig",
          "type": "Nested",
          "values": [
            "path"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "kubeconfigId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "secretName",
          "type": "String",
          "values": [],
          "description": "The secret name that you can use in the Kubernetes Deployment configuration for the `imagePullSecrets` entry. Environment variable substitution are supported for the name input, so you can use available environment variables to construct the name dynamically, e.g., `some-secret-$BUILD_NUMBER`. The name should be in the pattern `[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*`, i.e., dot (.) concatenated sequences of hyphen (-) separated alphanumeric words. (See [ Kubernetes Names](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/))\n \n If left blank, the plugin will generate a name based on the build name. \n\n \n The secret name will be exposed with the environment variable `$KUBERNETES_SECRET_NAME`. You can use this in your Kubernetes configuration to reference the updated secret when the \"Enable Variable Substitution in Config\" option is enabled. \n\n \n```groovy\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: some.private.registry.domain/nginx\n        ports:\n        - containerPort: 80\n      imagePullSecrets:\n      - name: $KUBERNETES_SECRET_NAME\n\n```\n\n \n Note that once the secret is created, it will only be updated by the plugin. You have to manually delete it when it is not used anymore. If this is a problem, you may use fixed name so every time the job runs, the secret gets updated and no new secret is created.",
          "isOptional": true
        },
        {
          "name": "secretNamespace",
          "type": "String",
          "values": [],
          "description": "The Kubernetes namespace in which the secrets will be created with the credentials configured below.",
          "isOptional": true
        },
        {
          "name": "ssh",
          "type": "Nested",
          "values": [
            "sshCredentialsId",
            "sshServer"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "textCredentials",
          "type": "Nested",
          "values": [
            "certificateAuthorityData",
            "clientCertificateData",
            "clientKeyData",
            "serverUrl"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-cd"
    },
    {
      "command": "kubernetesEngineDeploy",
      "title": "kubernetesEngineDeploy: Deploy to Google Kubernetes Engine",
      "description": "",
      "parameters": [
        {
          "name": "cluster",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clusterName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "location",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "manifestPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyDeployments",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyServices",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyTimeoutInMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "zone",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "google-kubernetes-engine"
    },
    {
      "command": "kwSubmit",
      "title": "kwSubmit: Submit to Kryptowire",
      "description": "Step to send an application binary file to kryptowire.\n \n\n Usage Example:\n \n\n ` kwSubmit filePath: 'app-debug.apk', platform: 'android' `",
      "parameters": [
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kryptowire"
    },
    {
      "command": "labelledShell",
      "title": "labelledShell: Shell Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "labelled-steps"
    },
    {
      "command": "lambdaTestRunner",
      "title": "lambdaTestRunner: Trigger execution of AWS Lambda Test Runner",
      "description": "",
      "parameters": [
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "[AWS Lambda Test Runner](https://github.com/automatictester/lambda-test-runner) function to execute.",
          "isOptional": false
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "AWS region where your Lambda function is deployed. Example: **eu-west-1**",
          "isOptional": false
        },
        {
          "name": "s3Bucket",
          "type": "String",
          "values": [],
          "description": "AWS S3 bucket containing build outputs.",
          "isOptional": false
        },
        {
          "name": "repoUri",
          "type": "String",
          "values": [],
          "description": "HTTPS or SSH Git repository URL. Examples:\n\n \n **https://github.com/username/repo.git**\n\n **git@github.com:username/repo.git**",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "Command to run the tests. Examples:\n\n \n **./mvnw test -Dmaven.repo.local=${MAVEN_USER_HOME}**\n\n **./sbt -Dsbt.global.base=${SBT_GLOBAL_BASE} -Dsbt.ivy.home=${SBT_IVY_HOME} test**",
          "isOptional": false
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "Git branch to checkout. Example: **develop**\n\n \nIf not specified, **HEAD** will be used, which points to the default branch configured in your Git repo.",
          "isOptional": true
        },
        {
          "name": "storeToS3",
          "type": "String",
          "values": [],
          "description": "Comma-separated list of directories to store to S3. Examples:\n\n \n **target/surefire-reports**\n\n **target/surefire-reports,target/failsafe-reports**",
          "isOptional": true
        }
      ],
      "plugin": "lambda-test-runner"
    },
    {
      "command": "lambdaVersionCleanup",
      "title": "lambdaVersionCleanup: Cleanup old lambda versions",
      "description": "",
      "parameters": [
        {
          "name": "daysAgo",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stackName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "lastChanges",
      "title": "lastChanges: Publish Last Changes",
      "description": "Shows build last changes via rich VCS diff between revisions using [Diff2Html](https://github.com/rtfpessoa/diff2html#configuration). \n\n\nThis plugin expects a **.git or .svn folder** on your job workspace.\n\n\nAfter job execution the plugin will generate a **html diff** from `current` and a `previous` revision. \n\n\n\n \nNote that the `previous revision` can be:\n\n \n\n  \n   \n*  \nA `provided revision` id;\n \n\n   \n*  \nRevision of `Last successful build`;\n \n\n   \n*  \nRevision of an`specific build`;\n \n\n   \n*  \nRevision of `Last tag`;\n\n \n\n <table>\n <tbody>\n <tr>\n <td>\n \n\n <img alt=\":information_source:\" height=\"20\" width=\"20\" src=\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\">\n \n </td>\n <td> By default previous revision is **current revision -1**. </td>\n </tr>\n </tbody>\n </table>\n \n\n \n\n <table>\n <tbody>\n <tr>\n <td>\n \n\n <img alt=\":bulb:\" height=\"20\" width=\"20\" src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png\">\n \n </td>\n <td> You can use [parameters](https://wiki.jenkins.io/display/JENKINS/Parameterized+Build) in `SpecificRevision`. In case of git, expressions like `HEAD^^` can be used. </td>\n </tr>\n </tbody>\n </table>\n \n \n\n  \n \n\n\n\n\n To get most from this plugin use **periodically SCM pooling** to Trigger your Build, [ more details here.](http://www.nailedtothex.org/roller/kyle/entry/articles-jenkins-poll)",
      "parameters": [
        {
          "name": "since",
          "type": "Enum",
          "values": [
            "PREVIOUS_REVISION",
            "LAST_SUCCESSFUL_BUILD",
            "LAST_TAG"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "Enum",
          "values": [
            "LINE",
            "SIDE"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "matching",
          "type": "Enum",
          "values": [
            "NONE",
            "LINE",
            "WORD"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showFiles",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "synchronisedScroll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "matchWordsThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "matchingMaxComparisons",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specificRevision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vcsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specificBuild",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "last-changes"
    },
    {
      "command": "library",
      "title": "library: Load a shared library on the fly",
      "description": "Load a library dynamically rather than using `@Library` syntax. You may use global variables defined in the library thereafter: \n\n \n```groovy\n\nlibrary 'mylib@master'\nusefulFunction()\n\n```\n\n \n You may also load classes defined in the library by selecting their fully-qualified names like properties on the return value of this step, then call static methods or call constructors as if they were a method named `new`: \n\n \n```groovy\n\ndef utils = library('mylib').com.mycorp.jenkins.Utils.new(this)\nutils.handyStuff()\n\n```",
      "parameters": [
        {
          "name": "identifier",
          "type": "String",
          "values": [],
          "description": "A library name to load. Should normally match that of a predefined library. You can append a version after `@`. You may instead define a library inline here.",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "Whether to include any changes in the shared library in the recent changes of jobs using the library. Defaults to including the changes.",
          "isOptional": true
        },
        {
          "name": "retriever",
          "type": "Nested",
          "values": [
            "http",
            "nexus",
            "legacySCM",
            "modernSCM"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "workflow-cps-global-lib"
    },
    {
      "command": "libraryResource",
      "title": "libraryResource: Load a resource file from a shared library",
      "description": "Reads a resource from a shared library and returns its content as a plain string.",
      "parameters": [
        {
          "name": "resource",
          "type": "String",
          "values": [],
          "description": "Relative (`/`-separated) path to a resource in a shared library's `/resources` folder.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "The encoding to use when reading the resource. If left blank, the platform default encoding will be used. Binary files can be read into a Base64-encoded string by specifying \"Base64\" as the encoding.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-cps-global-lib"
    },
    {
      "command": "lighthouseReport",
      "title": "lighthouseReport: Lighthouse Report",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "JSON report file to load",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Report name (Optional)",
          "isOptional": true
        }
      ],
      "plugin": "lighthouse-report"
    },
    {
      "command": "listAWSAccounts",
      "title": "listAWSAccounts: List all AWS accounts of the organization",
      "description": "",
      "parameters": [
        {
          "name": "parent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "livingDocs",
      "title": "livingDocs: Living documentation",
      "description": "Generates BDD **living documentation** based on Cucumber tests results\n\n\nThis plugin expects **Cucumber json output** from your tests to generate the documentation of your project. The plugin uses the json report to produce html and pdf documentation that will be available after build execution. \n\n\nTo build the documentation from your tests results you need to use cucumber **json formatter**: \n\n\n```groovy\n    import cucumber.junit.Cucumber;\n\timport org.junit.runner.RunWith;\n\n\t@RunWith(Cucumber.class)\n\t@Cucumber.Options(format = \"json:target/cucumber.json\")\n\tpublic class CucumberTest {\n\t}\n\n```\n\n\nNote that **format** option was replaced by **plugin** in newer cucumber versions.\n\n\nIf you face **java.lang.ClassCircularityError: org/jruby/RubyClass** you probably hit issue [JENKINS-31019](https://issues.jenkins-ci.org/browse/JENKINS-31019), to solve that need to upgrade your installation to **v1.640** or newer.\n\n\nCucumber living documentation plugin is backed by [Cukedoctor](http://github.com/rmpestano/cukedoctor), a BDD living documentation tool which integrates [Cucumber.](https://cucumber.io/) and [Asciidoctor](http://asciidoctor.org)",
      "parameters": [
        {
          "name": "featuresDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "Enum",
          "values": [
            "HTML",
            "PDF",
            "ALL"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toc",
          "type": "Enum",
          "values": [
            "RIGHT",
            "LEFT",
            "CENTER"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numbered",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sectAnchors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideFeaturesSection",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideSummary",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideScenarioKeyword",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideStepTime",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hideTags",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cucumber-living-documentation"
    },
    {
      "command": "load",
      "title": "load: Evaluate a Groovy source file into the Pipeline script",
      "description": "Takes a filename in the workspace and runs it as Groovy source text.\n \n The loaded file can contain statements at top level or just load and run a closure. For example: \n\n \n```groovy\n    def pipeline\n    node('slave') {\n        pipeline = load 'pipeline.groovy'\n        pipeline.functionA()\n    }\n    pipeline.functionB()\n    \n```\n\n \n Where `pipeline.groovy` defines functionA and functionB functions (among others) before ending with `return this;`",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "Current directory (`pwd()`) relative path to the Groovy file to load.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-cps"
    },
    {
      "command": "loadRunnerTest",
      "title": "loadRunnerTest: Run LoadRunner performance scenario tests",
      "description": "",
      "parameters": [
        {
          "name": "testPaths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archiveTestResultsMode",
          "type": "String",
          "values": [],
          "description": "To view the run results, do one of the following:\n \n\n 1) In the left pane, click the **Report and Summary** link to display the report link and the link to the report folder. From this link, you can open the run results directly in your browser or open the artifacts\n \n\n 2) From the **Build Artifacts:**\n \n\n • Open the run_results.html to view the run results.\n \n\n • Download the zipped report to your desired location and unzip it. In the **Run Results Viewer**, select the Results.xml file found inside the unzipped folder.\n \n\n Note that this option is valid only when using the “Execute test from file system” build step.",
          "isOptional": false
        },
        {
          "name": "analysisTemplate",
          "type": "String",
          "values": [],
          "description": "Apply a template for the build (path to a .tem file). Leave blank in order to use the default template.",
          "isOptional": true
        },
        {
          "name": "controllerPollingInterval",
          "type": "String",
          "values": [],
          "description": "Polling interval for checking the scenario status, in seconds. The default is 30 seconds.",
          "isOptional": true
        },
        {
          "name": "displayController",
          "type": "String",
          "values": [],
          "description": "Display the controller while the scenario is running.",
          "isOptional": true
        },
        {
          "name": "fsTimeout",
          "type": "String",
          "values": [],
          "description": "Timeout value in seconds. If left empty, there is no timeout.",
          "isOptional": true
        },
        {
          "name": "ignoreErrorStrings",
          "type": "String",
          "values": [],
          "description": "Ignore errors during the scenario run containing any of the strings listed below. For example: \"Error: CPU usage for this load generator has exceeded 80%\"",
          "isOptional": true
        },
        {
          "name": "perScenarioTimeOut",
          "type": "String",
          "values": [],
          "description": "The maximum time allotted for scenario execution, in minutes.",
          "isOptional": true
        },
        {
          "name": "scriptRTSSetModel",
          "type": "Nested",
          "values": [
            "scripts"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "summaryDataLogModel",
          "type": "Nested",
          "values": [
            "logVusersStates",
            "logErrorCount",
            "logTransactionStatistics",
            "pollingInterval"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "loadcompletetest",
      "title": "loadcompletetest: LoadComplete Test",
      "description": "",
      "parameters": [
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "test",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "actionOnErrors",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "actionOnWarnings",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executorVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generateMHT",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generatePDF",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useTimeout",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "loadcomplete"
    },
    {
      "command": "lock",
      "title": "lock: Lock shared resource",
      "description": "",
      "parameters": [
        {
          "name": "resource",
          "type": "String",
          "values": [],
          "description": "The resource name to lock as defined in Global settings. If the resource does not exist in Global Settings it will be automatically created on build execution. Either a resource or a label need to be specified.",
          "isOptional": false
        },
        {
          "name": "extra",
          "type": "Nested",
          "values": [
            "resource",
            "label",
            "quantity"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inversePrecedence",
          "type": "boolean",
          "values": [],
          "description": "By default waiting builds get the lock in the same order they requested to acquire it. \n\n \n By checking this option the newest build in the waiting queue will get the lock first.",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "The label of the resources to be locked as defined in Global settings. Either a resource or a label need to be specified.",
          "isOptional": true
        },
        {
          "name": "quantity",
          "type": "int",
          "values": [],
          "description": "The quantity of resources with the specified label to be locked as defined in Global settings. Either a resource or a label need to be specified. Empty value or 0 means lock all matching resources.",
          "isOptional": true
        },
        {
          "name": "skipIfLocked",
          "type": "boolean",
          "values": [],
          "description": "By default waiting builds get the lock. \n\n \n By checking this option the body will not be executed if there is a queue. It will only take the lock if it can be taken immediately.",
          "isOptional": true
        },
        {
          "name": "variable",
          "type": "String",
          "values": [],
          "description": "Name of an environment variable that will receive the comma separated list of the names of the locked resources while the block executes. \n\n \n e.g.: \n\n \n```groovy\nlock(label: 'label', variable: 'var') {\n    echo \"Resource locked: ${env.var}\"\n}\n\t\t\n```",
          "isOptional": true
        }
      ],
      "plugin": "lockable-resources"
    },
    {
      "command": "logFileFilter",
      "title": "logFileFilter: LogFileFilterStep",
      "description": "",
      "parameters": [],
      "plugin": "log-file-filter"
    },
    {
      "command": "logParser",
      "title": "logParser: Console output (build log) parsing",
      "description": "",
      "parameters": [
        {
          "name": "useProjectRule",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectRulePath",
          "type": "String",
          "values": [],
          "description": "The path to the rule file relative to the project workspace root.",
          "isOptional": false
        },
        {
          "name": "parsingRulesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showGraphs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableOnWarning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "log-parser"
    },
    {
      "command": "logstash",
      "title": "logstash: Send individual log lines to Logstash",
      "description": "Send individual log lines to Logstash.",
      "parameters": [],
      "plugin": "logstash"
    },
    {
      "command": "logstashSend",
      "title": "logstashSend: Send console log to Logstash",
      "description": "Send the tail of the log to Logstash.\n\n\n\n **Hint:** In order to get the result in the data sent to Logstash it must be set before the logstashSend step.\n\n Due to the way log output was collected in older version of the pipeline plugin, the logstashSend step might not transfer the lines logged directly before the step is called. Adding a sleep of 1 second might help here.",
      "parameters": [
        {
          "name": "maxLines",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "logstash"
    },
    {
      "command": "mabl",
      "title": "mabl: Run mabl tests",
      "description": "",
      "parameters": [
        {
          "name": "restApiKeyId",
          "type": "String",
          "values": [],
          "description": "ID of the mabl API key credential for your workspace. The key is kept safely in Jenkins credentials using Secret text kind. Make sure that you set the ID of the credential as IDs are used to select the credential from the drop-down list. The scope of the credential must be Global and the credential may be kept in any domain (including the unrestricted Global credentials or any other domain). [More info](https://help.mabl.com/v1.0/docs/triggering-tests-via-the-api).",
          "isOptional": false
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "Input a valid API key to populate the environment selection drop-down.",
          "isOptional": false
        },
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "Input a valid API key to populate the application selection drop-down.",
          "isOptional": false
        },
        {
          "name": "apiBaseUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "appBaseUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "continueOnMablError",
          "type": "boolean",
          "values": [],
          "description": "continue build, if error occurred in mabl system (e.g. connection failure, system outage)",
          "isOptional": true
        },
        {
          "name": "continueOnPlanFailure",
          "type": "boolean",
          "values": [],
          "description": "continue build, even if triggered Plans do not complete successfully (e.g. bad assertion)",
          "isOptional": true
        },
        {
          "name": "disableSslVerification",
          "type": "boolean",
          "values": [],
          "description": "disable SSL verification (only required if Jenkins is behind a MITM proxy)",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Comma-separated list of labels.",
          "isOptional": true
        },
        {
          "name": "mablBranch",
          "type": "String",
          "values": [],
          "description": "mabl will run tests using this mabl branch name. Note that this branch is not the branch name in the source control repository. The branch in mabl must exist before triggering the tests.",
          "isOptional": true
        }
      ],
      "plugin": "mabl-integration"
    },
    {
      "command": "mail",
      "title": "mail: Mail",
      "description": "Simple step for sending email.",
      "parameters": [
        {
          "name": "subject",
          "type": "String",
          "values": [],
          "description": "Email subject line.",
          "isOptional": false
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "Email body.",
          "isOptional": false
        },
        {
          "name": "bcc",
          "type": "String",
          "values": [],
          "description": "BCC email address list. Comma separated list of email addresses.",
          "isOptional": true
        },
        {
          "name": "cc",
          "type": "String",
          "values": [],
          "description": "CC email address list. Comma separated list of email addresses.",
          "isOptional": true
        },
        {
          "name": "charset",
          "type": "String",
          "values": [],
          "description": "Email body character encoding. Defaults to `UTF-8`",
          "isOptional": true
        },
        {
          "name": "from",
          "type": "String",
          "values": [],
          "description": "From email address. Defaults to the admin address globally configured for the Jenkins instance.",
          "isOptional": true
        },
        {
          "name": "mimeType",
          "type": "String",
          "values": [],
          "description": "Email body MIME type. Defaults to `text/plain`.",
          "isOptional": true
        },
        {
          "name": "replyTo",
          "type": "String",
          "values": [],
          "description": "Reploy-To email address. Defaults to the admin address globally configured for the Jenkins instance.",
          "isOptional": true
        },
        {
          "name": "to",
          "type": "String",
          "values": [],
          "description": "To email address list. Comma separated list of email addresses.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "marathon",
      "title": "marathon: Marathon Deployment",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "**This parameter is required.** \n\n \n The URL for the target Marathon instance following the format: `http[s]://hostname:port`. The <i>port</i> section is optional. \n\n \n Example: `http://marathon.example.com`",
          "isOptional": false
        },
        {
          "name": "appid",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "There are two types of authentication supported:\n\n \n  \n* Basic Authentication (Username and Password)\n\n  \n* DC/OS Service Account (String)\n\n \n \n### Basic Authentication\n\n \nTo authenticate with HTTP basic authentication, select a credential of type username with password. **DC/OS does not support this authentication type.**\n\n \n### DC/OS Service Account\n\n \n[DC/OS Service Accounts](https://docs.mesosphere.com/latest/administration/id-and-access-mgt/service-auth/) use JSON Web Tokens (JWTs) to authenticate with DC/OS and retrieve an access token for use in subsequent requests. This plugin generates the JWT from the content of the selected credential and handles the creation and management of the necessary access token.\n\n \nThe content of the selected credential is a JSON object with the following fields (extra fields are ignored):\n\n \n  \n* **uid** \n\nDC/OS service account ID (example: `\"jenkins-sa\"`) \n\n  \n* **login_endpoint** \n\nURL for the login end point of the target DC/OS cluster (example: `\"https://leader.mesos/acs/api/v1/auth/login\"`) \n\n  \n* **scheme**\n\n**This must be `\"RS256\"`.** Algorithm to use with `private_key`. \n\n  \n* **private_key**\n\nPrivate key to use for signing JWTs, which is verified by the corresponding public key registered with DC/OS. Note the inclusion of \"\\n\" to make the content JSON friendly. \n\n (example: `\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAI...\"`) \n\n \n <h5>Example JSON Secret</h5>\n \n```groovy\n    {\"uid\":\"jenkins\",\"login_endpoint\":\"https://leader.mesos/acs/api/v1/auth/login\",\"scheme\":\"RS256\",\"private_key\":\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAI...\"}\n    \n```",
          "isOptional": true
        },
        {
          "name": "docker",
          "type": "String",
          "values": [],
          "description": "A Docker image name, including a URI if using a private registry. This will overwrite the <i>image</i> field in the Application Definition file.",
          "isOptional": true
        },
        {
          "name": "dockerForcePull",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "env",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "Env are used to set environment variables to Marathon apps.",
          "isOptional": true
        },
        {
          "name": "filename",
          "type": "String",
          "values": [],
          "description": "The path to the [Marathon application definition](https://mesosphere.github.io/marathon/docs/application-basics.html), a JSON file. A path (`builds/marathon.json`) is relative to the build's workspace (`$WORKSPACE`). If left blank, the default value (<i>marathon.json</i>) will be used.",
          "isOptional": true
        },
        {
          "name": "forceUpdate",
          "type": "boolean",
          "values": [],
          "description": "This parameter decides how to handle updating a Marathon application that has an active deployment. \n\n \n If this is set to `true` (checked), then a new deployment will be forced and the current deployment canceled. If this is set to `false` (unchecked), then this plugin will attempt to update the Marathon application every couple of seconds until a timeout is reached. If the plugin is unable to successfully update the application before the timeout is reached, then the job will be marked as failed. \n\n \n More information can be found on the [ Marathon REST API](https://mesosphere.github.io/marathon/docs/rest-api.html#put-v2-apps-appid) documentation page.",
          "isOptional": true
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "This parameter will overwrite the `id` field in the Application Definition file. Please read the [ Marathon REST API documentation](https://mesosphere.github.io/marathon/docs/rest-api.html#post-v2-apps) for this parameter's format.",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "Labels are used to attach metadata to Marathon applications. Labels are also used within the Marathon UI to sort and filter applications.",
          "isOptional": true
        },
        {
          "name": "uris",
          "type": "Nested",
          "values": [
            "uri"
          ],
          "description": "URIs to download into the container sandbox before the Marathon application starts.",
          "isOptional": true
        }
      ],
      "plugin": "marathon"
    },
    {
      "command": "maskPasswords",
      "title": "maskPasswords: Mask passwords and regexes (and enable global passwords)",
      "description": "When enabled, allows masking passwords that may appear in the console.\n\n \nPasswords or regexes to be masked can be defined at three levels.\n\n \nFirst, it is possible to select in Jenkins configuration screen the build parameters whose value must be masked. For example, selecting the **Password Parameter** type is a good idea.\n\n \nSecond, still in Jenkins' configuration screen, it is possible to define passwords to be masked as global **Name**/**Password** pairs, or regexes to be masked.\n\n \nThird, on a per job basis (that is, in the current configuration screen), passwords to be masked can be defined as local **Name**/**Password** pairs, or regexes can be masked:\n\n \n  \n* **Password** is aimed at containing a password to be masked from the console. Empty and blank values are not allowed (e.g. \"&nbsp;\", etc.). This field is ciphered. This field can not contain variables, they won't be expanded.\n\n  \n* If **Name** is set, then a build variable will be defined accordingly. This allows accessing the password by using the variable rather than hard-coding it in a field which is not ciphered (e.g. the ones of the **Invoke Ant** or **Execute shell** build steps).\n\n  \n* If **Regex** is set, then any text matching that regex will be masked in the console output. The regex should not contain start- or end-of-string markers and will be internally and-ed (piped) together with all other regexes and regexes matching the specified names and passwords.",
      "parameters": [
        {
          "name": "varPasswordPairs",
          "type": "Nested",
          "values": [
            "var",
            "password"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "varMaskRegexes",
          "type": "Nested",
          "values": [
            "regex"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "mask-passwords"
    },
    {
      "command": "mattermostSend",
      "title": "mattermostSend: Send Mattermost message",
      "description": "Simple step for sending a Mattermost message to specified channel.\n \n\n Use the advanced settings to override the Mattermost Plugin global configuration to include: `endpoint`, `channel` and `icon`.\n \n\n Please see the Mattermost Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` mattermostSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "This is the main text in a message attachment, and can contain standard message markup. The content will automatically collapse if it contains 700+ characters or 5+ linebreaks, and will display a \"Show more...\" link to expand the content. Message may include global variables, for example environment and currentBuild variables:\n \n\n ` mattermostSend \"started ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
          "isOptional": false
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Mattermost Plugin channel specified in the global configuration.\n \n\n `mattermostSend channel: \"#channel-name\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "An **optional** value that can either be one of **good**, **warning**, **danger**, or any **hex color code** (eg. #439FE0). This value is used to color the border along the left side of the message attachment.\n \n\n `mattermostSend color: \"#439FE0\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "endpoint",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Mattermost Plugin endpoint (url?token) specified in the global configuration.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If set to true, then the step will abort the Workflow run if there is an error sending message.\n \n\n `mattermostSend failOnError: true, message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "icon",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Mattermost Plugin Integration icon specified in the global configuration.",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "This text is the main message after the message attachment, and can contain standard message markup. The content may contain user \"mentions\" and highlights.\n \n\n ` mattermostSend prext: \"@foo @bar\" color: \"#439FE0\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\" `",
          "isOptional": true
        }
      ],
      "plugin": "mattermost"
    },
    {
      "command": "mavenSnapshotCheck",
      "title": "mavenSnapshotCheck: Maven SNAPSHOT Check",
      "description": "",
      "parameters": [
        {
          "name": "check",
          "type": "boolean",
          "values": [],
          "description": "This will check the SNAPSHOT of pom.xml if you check the checkbox.",
          "isOptional": true
        }
      ],
      "plugin": "maven-snapshot-check"
    },
    {
      "command": "maven_invoker",
      "title": "maven_invoker: Archive Maven Invoker test results",
      "description": "",
      "parameters": [
        {
          "name": "reportsFilenamePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "invokerBuildDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "maven-invoker-plugin"
    },
    {
      "command": "melioraTestlab",
      "title": "melioraTestlab: Publish test results to Testlab",
      "description": "",
      "parameters": [
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "The key of the Testlab project you want to publish the results to.",
          "isOptional": false
        },
        {
          "name": "ruleset",
          "type": "String",
          "values": [],
          "description": "A \"source\" is a set of settings and mapping rules defined in Testlab. Enter a name of the source you wish to use for processing the pushed results. If you wish to override a setting (or settings) in your job, choose the \"Override source settings\" option and set the preferred values. \n\n \n <i>If not set, the default source in your Testlab will be used.</i>",
          "isOptional": true
        },
        {
          "name": "rulesetSettings",
          "type": "Nested",
          "values": [
            "testRunTitle",
            "milestone",
            "testTargetTitle",
            "testEnvironmentTitle",
            "addIssueStrategy",
            "reopenExisting",
            "assignToUser",
            "importTestCases",
            "importTestCasesRootCategory",
            "robotCatenateParentKeywords",
            "testCaseMappingField",
            "tags"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "The description to be set for the Testlab test run to create or update. \n\n \n In this field the build time environmental variables of Jenkins are handy. In addition to the [by default set environment variables](https://wiki.jenkins-ci.org/display/JENKINS/Building+a+software+project#Buildingasoftwareproject-JenkinsSetEnvironmentVariables) this plugin registers the following variables that can be used for configuration values: \n\n <table width=\"100%\">\n  <tbody>\n   <tr>\n <td>**Variable**</td>\n <td>**Description**</td>\n   </tr>\n   <tr>\n <td>${BUILD_FULL_DISPLAY_NAME}</td>\n <td>Combined full display name of the build with job name and build number. For example 'my jenkins job #133'</td>\n   </tr>\n   <tr>\n <td>${BUILD_RESULT}</td>\n <td>Result of the build. For example 'SUCCESS' or 'UNSTABLE'.</td>\n   </tr>\n   <tr>\n <td>${BUILD_STATUS}</td>\n <td>Summary of the overall build. For example 'broken for a long time'.</td>\n   </tr>\n  </tbody>\n </table>\n \n To use variables in your configuration values make sure to enter tags as <i>${VARIABLE}</i>.",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "String",
          "values": [],
          "description": "Environment variables to sent to Testlab as test case parameters. \n\n \n Test cases in Testlab can include parameters in the content as ${PARAM1} formatted tags. Normally, these tags are set and replaced with values set during the test case execution or execution planning phase. By listing variables to this setting makes it possible to send values of environmental variables from Jenkins as test case parameters to Testlab. \n\n \n For example, test case(s) in your Testlab project might have a parameter titled ${BROWSER}. When running automated UI tests in your Jenkins, enter a value \"BROWSER\" to this setting and ensure that your job sets an environmental variable BROWSER to some sensible value. This way running the job sends and sets the ${BROWSER} test case parameter value to all run tests to a value matching to the environmental variable. \n\n \n Probably the easiest way to set environment variables is to use a [fitting plugin](https://wiki.jenkins-ci.org/display/JENKINS/EnvInject+Plugin).",
          "isOptional": true
        },
        {
          "name": "publishRobot",
          "type": "Nested",
          "values": [
            "robotCatenateParentKeywords",
            "robotOutput"
          ],
          "description": "The plugin supports publishing the results directly from <i>[Robot Framework](http://robotframework.org/)</i> output files found in the build. \n\n \n ** Note: This option publishes results directly from Robot's output.xml file. This produces a more detailed result in Testlab compared to the junit-format based output of Robot Framework. **",
          "isOptional": true
        },
        {
          "name": "publishTap",
          "type": "Nested",
          "values": [
            "tapFileNameInIdentifier",
            "tapTestNumberInIdentifier",
            "tapTestsAsSteps",
            "tapMappingPrefix"
          ],
          "description": "The plugin supports publishing the results from TAP (<i>[Test Anything Protocol](https://testanything.org/tap-specification.html)</i>) files found in the build. If not checked, the possible TAP results produced by the job are ignored. \n\n \n ** To publish TAP results the [TAP-Plugin](https://wiki.jenkins-ci.org/display/JENKINS/TAP+Plugin) must be installed to your Jenkins. In addition to this, the job must be configured with \"Publish TAP Results\" Post-build Action to make the results available for publishing. **",
          "isOptional": true
        },
        {
          "name": "advancedSettings",
          "type": "Nested",
          "values": [
            "testCaseMappingField",
            "companyId",
            "apiKey",
            "usingonpremise"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "automationSource",
          "type": "String",
          "values": [],
          "description": "Source is used to identify results, so that two test runs with the same source name should contain results for same, or similar tests. The default {JOB_NAME} - value uses the Jenkins job's name as automation source name.",
          "isOptional": true
        }
      ],
      "plugin": "meliora-testlab"
    },
    {
      "command": "memoryMap",
      "title": "memoryMap: Memory Map Publisher",
      "description": "",
      "parameters": [
        {
          "name": "chosenParsers",
          "type": "Nested",
          "values": [
            "gccParser",
            "tiParser"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scale",
          "type": "String",
          "values": [],
          "description": "Scale for y-axis",
          "isOptional": true
        },
        {
          "name": "showBytesOnGraph",
          "type": "boolean",
          "values": [],
          "description": "Show \"Bytes\" on y-axis rather than \"Words\"",
          "isOptional": true
        },
        {
          "name": "wordSize",
          "type": "int",
          "values": [],
          "description": "The word size of the processor\n\n\n<em>Default value is 8</em>",
          "isOptional": true
        }
      ],
      "plugin": "memory-map"
    },
    {
      "command": "mergebotCheckout",
      "title": "mergebotCheckout: Plastic SCM Mergebot Checkout",
      "description": "",
      "parameters": [
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "plasticscm-mergebot"
    },
    {
      "command": "metrics",
      "title": "metrics: Record Metrics",
      "description": "",
      "parameters": [
        {
          "name": "classPathFile",
          "type": "String",
          "values": [],
          "description": "In order to use Type resolution during the analysis, PMD has to have access to the classpath of the project.\n \n In case of a **maven** build, a file containing the classpath can be generated with: `mvn dependency:build-classpath -Dmdep.outputFile=cp.txt` Alternatively it is also possible include this in your pom.xml so it is generated as part of the build. See [ https://maven.apache.org/plugins/maven-dependency-plugin/usage.html](https://maven.apache.org/plugins/maven-dependency-plugin/usage.html) for more information. \n\n \n When using **gradle**, a file containing the classpath can be generated by adding ` task removecp(type: Delete) { delete \"cp.txt\" } subprojects { task printcp { new File(rootDir, \"cp.txt\").append(\":\" + sourceSets.main.runtimeClasspath.join(':')) } } ` to the end of your build.gradle and executing `gradlew removecp printcp`.",
          "isOptional": true
        },
        {
          "name": "filePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "metrics-aggregation"
    },
    {
      "command": "milestone",
      "title": "milestone: The milestone step forces all builds to go through in order",
      "description": "By default, Pipeline builds can run concurrently.\n\n \n The milestone step forces all builds to go through in order, so an older build will never be allowed pass a milestone (it is aborted) if a newer build already passed it. \n\n \n In general this step grants: \n\n \n  \n* Builds pass milestones in order (taking the build number as sorter field).\n\n  \n* Older builds will not proceed (they are aborted) if a newer one already passed the milestone.\n\n  \n* When a build passes a milestone, any older build that passed the previous milestone but not this one is aborted.\n\n  \n* Once a build passes the milestone, it will never be aborted by a newer build that didn't pass the milestone yet.",
      "parameters": [
        {
          "name": "ordinal",
          "type": "int",
          "values": [],
          "description": "An optional ordinal for the milestone. It is autogenerated if not explicitly set. \n\n\n Setting explicit milestone ordinals grants that each milestone can be univocally identified across builds even when script changes are made during a previous build. If you plan to add or remove milestone steps while there are running builds and trigger new builds before the previous ones finished, then you should set explicit milestone ordinals. Otherwise, let the step autogenerate them as it runs.",
          "isOptional": false
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "A label for the milestone. It's shown in the build log metadata.",
          "isOptional": true
        },
        {
          "name": "unsafe",
          "type": "boolean",
          "values": [],
          "description": "An optional flag to allow unsafe execution of the milestone step. **Do not set unless you understand the risks.** \n\n\n Currently this will allow the execution of a milestone step within a parallel step. It is assumed only 1 branch can contain a milestone step.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-milestone-step"
    },
    {
      "command": "mineRepository",
      "title": "mineRepository: Mine SCM repository",
      "description": "",
      "parameters": [
        {
          "name": "scm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "forensics-api"
    },
    {
      "command": "minio",
      "title": "minio: Upload build artifacts to Minio",
      "description": "",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "The bucket to upload the files to. This bucket will be created if it does not yet exist. Please note the [restrictions in bucket naming](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html)",
          "isOptional": false
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "File pattern to indicate which files will be uploaded. Multiple entries can be used when separated by a \",\"",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use when authenticating to Minio. If host is left blank the global configured credentials will be used",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "URL where Minio is reachable by Jenkins. Leave this blank to use global configuration",
          "isOptional": true
        },
        {
          "name": "targetFolder",
          "type": "String",
          "values": [],
          "description": "If you want to store the artifacts in a specific folder in Minio you can specify it with this parameter. Environment variables can be used with the ${...} syntax.",
          "isOptional": true
        }
      ],
      "plugin": "minio"
    },
    {
      "command": "minioDelete",
      "title": "minioDelete: Delete build artifacts from Minio",
      "description": "",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "The bucket to download the files from. An error will be thrown if this bucket does not exist.",
          "isOptional": false
        },
        {
          "name": "files",
          "type": "String",
          "values": [],
          "description": "Indicates what files should be deleted in Minio. Environment variables can be used with the ${...} syntax. Multiple files can be separated using \",\".",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use when authenticating to Minio. If host is left blank the global configured credentials will be used",
          "isOptional": true
        },
        {
          "name": "failOnNonExisting",
          "type": "boolean",
          "values": [],
          "description": "By default the plugin will not error out if it tries to delete a file that doesn't exist.",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "URL where Minio is reachable by Jenkins. Leave this blank to use global configuration",
          "isOptional": true
        }
      ],
      "plugin": "minio"
    },
    {
      "command": "minioDownload",
      "title": "minioDownload: Download files from Minio",
      "description": "",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "The bucket to download the files from. An error will be thrown if this bucket does not exist.",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Indicates what file should be downloaded. Environment variables can be used with the ${...} syntax.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use when authenticating to Minio. If host is left blank the global configured credentials will be used",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "URL where Minio is reachable by Jenkins. Leave this blank to use global configuration",
          "isOptional": true
        },
        {
          "name": "targetFolder",
          "type": "String",
          "values": [],
          "description": "Optionally indicate what directory in your workspace the objects should be downloaded to. Environment variables can be used with the ${...} syntax.",
          "isOptional": true
        }
      ],
      "plugin": "minio"
    },
    {
      "command": "misraReport",
      "title": "misraReport: Build MISRA Guideline Compliance Summary (GCS)",
      "description": "",
      "parameters": [
        {
          "name": "doFailOnError",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if the plugin could not create a valid MISRA Guideline Compliance Summary.",
          "isOptional": true
        },
        {
          "name": "doFailOnIncompliance",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if the result of the Guideline Compliance Report is that the code is not MISRA-compliant.",
          "isOptional": true
        },
        {
          "name": "grpFile",
          "type": "String",
          "values": [],
          "description": "A simple text file containing the guideline re-categorization plan (GRP) - see \"MISRA Compliance 2016\". Leave empty to not re-categorize any rules. Rules that are not recategorized do not need to appear in this listing. \n\n\n The format of the text file should be: \n\n [Guideline], [New compliance level] \n\n Example: \n\n Directive 1.1, Mandatory\n\n Rule 11.2, Mandatory\n\n Rule 12.1, Required\n\n Rule 12.2, Disapplied",
          "isOptional": true
        },
        {
          "name": "logFile",
          "type": "String",
          "values": [],
          "description": "The log file will list all the tags discovered in the code. The file can be parsed by a warning parser. A typical use would be to automatically add comments or review tasks to a pull request. The output format is the same as the clang compiler.",
          "isOptional": true
        },
        {
          "name": "nonMisraTagPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Project name to be shown in the report",
          "isOptional": true
        },
        {
          "name": "ruleSet",
          "type": "String",
          "values": [],
          "description": "Select the version of MISRA guidelines to be applied",
          "isOptional": true
        },
        {
          "name": "softwareVersion",
          "type": "String",
          "values": [],
          "description": "The software version to show in the report. Usually you would use an environment variable which has been set by one of the earlier build steps here, e. g. ${SOFTWARE_VERSION}",
          "isOptional": true
        },
        {
          "name": "sourceListFile",
          "type": "String",
          "values": [],
          "description": "A file containing a list of source code and header files separated by newlines. These files will be checked for suppressing comments and tags.",
          "isOptional": true
        },
        {
          "name": "warningParser",
          "type": "String",
          "values": [],
          "description": "Select the tool used to check for code compliance.",
          "isOptional": true
        },
        {
          "name": "warningsFile",
          "type": "String",
          "values": [],
          "description": "File that contains warnings produced by the warning parser.",
          "isOptional": true
        }
      ],
      "plugin": "misra-compliance-report-generator"
    },
    {
      "command": "mockLoad",
      "title": "mockLoad: Mock Load",
      "description": "Generates load on the Jenkins build node and over the remoting channel. There will be a random number of build artifacts created matching the file name pattern `mock-artifact-*.txt`. There will be a JUnit test report with the file name `mock-junit.xml`. Approximately 5% of the time, the build will \"fail\" its tests and thus no artifacts will be generated.",
      "parameters": [
        {
          "name": "averageDuration",
          "type": "long",
          "values": [],
          "description": "The average duration that the build should take. The actual duration of each step will be randomly selected where with an expected standard deviation equal to the square root of the expected average duration.",
          "isOptional": false
        }
      ],
      "plugin": "mock-load-builder"
    },
    {
      "command": "moveComponents",
      "title": "moveComponents: Move Components (Nexus Repository Manager 3.x)",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "destination",
          "type": "String",
          "values": [],
          "description": "The repository to which components will be moved",
          "isOptional": false
        },
        {
          "name": "search",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "Components associated with this tag will be moved to the selected destination repository",
          "isOptional": true
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "mqttNotification",
      "title": "mqttNotification: MQTT Notification",
      "description": "",
      "parameters": [
        {
          "name": "brokerUrl",
          "type": "String",
          "values": [],
          "description": "The URL for the MQTT broker. This should also include the protocol (e.g. \"tcp://192.168.0.1:1883\").",
          "isOptional": true
        },
        {
          "name": "topic",
          "type": "String",
          "values": [],
          "description": "The topic to which to publish the notification. If no value is specified then the default value (\"jenkins/$JOB_URL\" e.g. \"jenkins/job/my-build\") is used.\n\n\nIn addition to environment variables and build parameters, the following variables can also be used (all variables must be prefix with \"$\"): \n\n\n \n* BUILD_RESULT - The result of the build (e.g. SUCCESS, FAILURE, ABORTED, etc.)\n\n \n* PROJECT_URL - The job project's URL (e.g. \"job/my-build\")\n\n \n* CULPRITS - Comma-separated list of the culprits responsible for the current build result\n\n \n* BUILD_NUMBER - the build number",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "The \"payload\" for the MQTT message.\n\n\nIn addition to environment variables and build parameters, the following variables can also be used (all variables must be encapsulated within \"${}\"): \n\n\n \n* BUILD_RESULT - The result of the build (e.g. SUCCESS, FAILURE, ABORTED, etc.)\n\n \n* PROJECT_URL - The job project's URL (e.g. \"job/my-build\")\n\n \n* CULPRITS - Comma-separated list of the culprits responsible for the current build result\n\n \n* BUILD_NUMBER - the build number",
          "isOptional": true
        },
        {
          "name": "qos",
          "type": "String",
          "values": [],
          "description": "The three Qualities of Service, as defined by the MQTT specification, are:\n\n \n* \"At most once\", where messages are delivered according to the best efforts of the underlying TCP/IP network. Message loss or duplication can occur. This level could be used, for example, with ambient sensor data where it does not matter if an individual reading is lost as the next one will be published soon after.\n\n \n* \"At least once\", where messages are assured to arrive but duplicates may occur.\n\n \n* \"Exactly once\", where message are assured to arrive exactly once. This level could be used, for example, with billing systems where duplicate or lost messages could lead to incorrect charges being applied.",
          "isOptional": true
        },
        {
          "name": "retainMessage",
          "type": "boolean",
          "values": [],
          "description": "If the message is \"retained\" then the broker will keep a copy as the \"last known\" message and publish it to any new subscribers when they first connect.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "mqtt-notification-plugin"
    },
    {
      "command": "mstest",
      "title": "mstest: Publish MSTest test result report",
      "description": "",
      "parameters": [
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepLongStdio",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testResultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "mstest"
    },
    {
      "command": "neoloadRefreshTrends",
      "title": "neoloadRefreshTrends: Refresh NeoLoad Trends",
      "description": "",
      "parameters": [
        {
          "name": "graphOptionsInfo",
          "type": "Nested",
          "values": [
            "name",
            "curve",
            "statistic"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxTrends",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showTrendAverageResponse",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showTrendErrorRate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "neoload-jenkins-plugin"
    },
    {
      "command": "neoloadRun",
      "title": "neoloadRun: Run a NeoLoad scenario",
      "description": "This build step executes a NeoLoad scenario and adds trend result graphs to the job page.",
      "parameters": [
        {
          "name": "scenarioName",
          "type": "String",
          "values": [],
          "description": "The name of the Scenario to launch.",
          "isOptional": true
        },
        {
          "name": "autoArchive",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customCommandLineOptions",
          "type": "String",
          "values": [],
          "description": "Include any additional Command Line options here.",
          "isOptional": true
        },
        {
          "name": "displayGUI",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executable",
          "type": "String",
          "values": [],
          "description": "This is the absolute path to the NeoLoad executable file.\n \n\n For example,`/opt/NeoLoad 6.5/bin/NeoLoadCmd`, `C:\\Program Files\\NeoLoad 6.5\\bin\\NeoLoadCmd.exe` or `/Applications/NeoLoad 6.5/bin/NeoLoadCmd`.",
          "isOptional": true
        },
        {
          "name": "graphOptionsInfo",
          "type": "Nested",
          "values": [
            "name",
            "curve",
            "statistic"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "htmlReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the HTLM report file is created by NeoLoad.\n \n\n For example, `${WORKSPACE}/neoload-report/report.html`.",
          "isOptional": true
        },
        {
          "name": "junitReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the JUnit results file (based on an SLA in NeoLoad) is created.\n \n\n For example, `${WORKSPACE}/neoload-report/junit-sla-results.xml`.",
          "isOptional": true
        },
        {
          "name": "licenseDuration",
          "type": "String",
          "values": [],
          "description": "This is the number of hours to reserve the license. This must be at least as long as the test will last.",
          "isOptional": true
        },
        {
          "name": "licenseServer",
          "type": "Nested",
          "values": [
            "uniqueID",
            "url",
            "loginUser",
            "loginPassword",
            "label",
            "collabPath",
            "licenseID"
          ],
          "description": "Choose which server to use to lease the license. If no servers appear, please configure one in the System Configuration screen of Jenkins.",
          "isOptional": true
        },
        {
          "name": "licenseType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "licenseVUCount",
          "type": "String",
          "values": [],
          "description": "This is the number of Virtual Users (User Paths) to reserve with the license.",
          "isOptional": true
        },
        {
          "name": "licenseVUSAPCount",
          "type": "String",
          "values": [],
          "description": "This is the number of SAP Virtual Users (User Paths for SAP) to reserve with the license.",
          "isOptional": true
        },
        {
          "name": "localProjectFile",
          "type": "String",
          "values": [],
          "description": "This is the local project file path.\n \n\n For example,`/home/ajohnson/neoload_projects/JenkinsExample/JenkinsExample.nlp`, `C:\\neoload_projects\\JenkinsExample\\JenkinsExample.nlp` or `/Users/ajohnson/neoload_projects/JenkinsExample/JenkinsExample.nlp` or `/Users/ajohnson/neoload_projects/JenkinsExample/JenkinsExample.yaml`.",
          "isOptional": true
        },
        {
          "name": "maxTrends",
          "type": "int",
          "values": [],
          "description": "Limit the number of points in trend charts. You can use 0 value to have unlimited charts",
          "isOptional": true
        },
        {
          "name": "pdfReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the PDF report file is created.\n \n\n For example, `${WORKSPACE}/neoload-report/report.pdf`.",
          "isOptional": true
        },
        {
          "name": "projectType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishTestResults",
          "type": "boolean",
          "values": [],
          "description": "When selected, test results are published after the scenario is run.",
          "isOptional": true
        },
        {
          "name": "reportType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sharedProjectName",
          "type": "String",
          "values": [],
          "description": "This is the name of the shared project to checkout and load.\n \n\n For example, `MyProjectName`.",
          "isOptional": true
        },
        {
          "name": "sharedProjectServer",
          "type": "Nested",
          "values": [
            "uniqueID",
            "url",
            "loginUser",
            "loginPassword",
            "label"
          ],
          "description": "Choose which server to use. If no servers appear, please configure one in the System Configuration screen of Jenkins.",
          "isOptional": true
        },
        {
          "name": "showTrendAverageResponse",
          "type": "boolean",
          "values": [],
          "description": "When selected, a trend graph of the average response time for all pages is displayed. Note that the build artifacts must include XML results from NeoLoad for the graph to be displayed.",
          "isOptional": true
        },
        {
          "name": "showTrendErrorRate",
          "type": "boolean",
          "values": [],
          "description": "When selected, a trend graph of the error rate of the most recent runs is included on the job page. Note that the build artifacts must include XML results from NeoLoad for the graph to be displayed.",
          "isOptional": true
        },
        {
          "name": "testDescription",
          "type": "String",
          "values": [],
          "description": "The test description entered here appears in the report file.",
          "isOptional": true
        },
        {
          "name": "testResultName",
          "type": "String",
          "values": [],
          "description": "This is the name of the test results. The value `$Date{hh:mm - dd MMM yyyy}` is replaced by the current date by NeoLoad and the value `${BUILD_NUMBER}` is replaced by the current build number by Jenkins.\n \n\n For example, `$Date{hh:mm - dd MMM yyyy} (build $${BUILD_NUMBER})`.",
          "isOptional": true
        },
        {
          "name": "xmlReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the XML report file is created.\n \n\n For example, `${WORKSPACE}/neoload-report/report.xml`.",
          "isOptional": true
        }
      ],
      "plugin": "neoload-jenkins-plugin"
    },
    {
      "command": "neuvector",
      "title": "neuvector: NeuVector Vulnerability Scanner",
      "description": "",
      "parameters": [
        {
          "name": "repository",
          "type": "String",
          "values": [],
          "description": "Enter the name of the repository to scan.",
          "isOptional": false
        },
        {
          "name": "registrySelection",
          "type": "String",
          "values": [],
          "description": "Select a registry by its nickname from the drop down menu, or select Local. Registries can be added in the global settings.",
          "isOptional": false
        },
        {
          "name": "nameOfVulnerabilityToExemptFour",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToExemptOne",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToExemptThree",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToExemptTwo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToFailFour",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToFailOne",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToFailThree",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nameOfVulnerabilityToFailTwo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numberOfHighSeverityToFail",
          "type": "String",
          "values": [],
          "description": "Minimum number of high vulnerabilities to fail the build. Leave blank or zero if not applicable.",
          "isOptional": true
        },
        {
          "name": "numberOfMediumSeverityToFail",
          "type": "String",
          "values": [],
          "description": "Minimum number of medium vulnerabilities to fail the build. Leave blank or zero if not applicable.",
          "isOptional": true
        },
        {
          "name": "scanLayers",
          "type": "boolean",
          "values": [],
          "description": "Check to scan the image layers, and get the number of vulnerabilities for each layer.",
          "isOptional": true
        },
        {
          "name": "standaloneScanner",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "Enter the image tag. The default tag is ‘latest’.",
          "isOptional": true
        }
      ],
      "plugin": "neuvector-vulnerability-scanner"
    },
    {
      "command": "newATXServer",
      "title": "newATXServer: Return new TEST-GUIDE server",
      "description": "Creates a new dynamic TEST-GUIDE server instance which is only accessible during pipeline execution. TEST-GUIDE name (<i>atxName</i>) and used ECU-TEST installation (<i>toolName</i>) are required whereas missing optional settings will be initialized to their default values.\n\n \nFor providing secrets like upload authentication key or proxy settings utilize [credentials binding](https://plugins.jenkins.io/credentials-binding/) and pass as masked environment variables.\n\n \n  Signatures:\n  \n   \n```groovy\nATX.newServer(String atxName, String toolName) : ATXServer\n            \n```\n\n   \n```groovy\nATX.newServer(String atxName, String toolName, ATXConfig config) : ATXServer\n            \n```\n\n   \n```groovy\nATX.newServer(String atxName, String toolName, String fullServerURL, boolean uploadToServer, String authKey, String projectId) : ATXServer\n            \n```\n\n   \n```groovy\nATXServer.newServer(Map&lt;String, Object&gt; serverArgs) : ATXServer\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nATX.newServer('TEST-GUIDE', 'ECU-TEST')\n            \n```\n\n   \n```groovy\nATX.newServer('TEST-GUIDE', 'ECU-TEST', 'http://localhost:8085', false, '', '1')\n            \n```\n\n   \n```groovy\nATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST', fullServerURL: 'https://127.0.0.1:8086/context', uploadToServer: true\n            \n```\n\n   \nis equivalent to:\n\n   \n```groovy\ndef server =  ATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST'\nserver.overrideSetting('serverURL', '127.0.0.1')\nserver.overrideSetting('serverPort', '8086')\nserver.overrideSetting('serverContextPath', 'context')\nserver.overrideSetting('useHttpsConnection', true)\nserver.overrideSetting('uploadToServer', true)\n            \n```\n\n   \n```groovy\nATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST', enableArchive: false\n            \n```\n\n   \nis equivalent to:\n\n   \n```groovy\ndef server =  ATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST'\nserver.overrideSetting('enableArchive', false)\n            \n```\n\n   \n```groovy\nATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST',\n    config: atxConfig(\n        settings: [\n            atxTextSetting(group: 'CONNECTION', name: 'serverURL', value: '127.0.0.1'),\n            atxTextSetting(group: 'CONNECTION', name: 'serverLabel', value: ''),\n            atxBooleanSetting(group: 'CONNECTION', name: 'useHttpsConnection', value: false),\n            atxBooleanSetting(group: 'CONNECTION', name: 'ignoreSSL', value: false),\n            atxTextSetting(group: 'CONNECTION', name: 'serverPort', value: '8085'),\n            atxTextSetting(group: 'CONNECTION', name: 'serverContextPath', value: ''),\n            atxSecretSetting(group: 'CONNECTION', name: 'httpProxy', value: ''),\n            atxSecretSetting(group: 'CONNECTION', name: 'httpsProxy', value: ''),\n            atxTextSetting(group: 'CONNECTION', name: 'projectId', value: '1'),\n            atxSecretSetting(group: 'CONNECTION', name: 'uploadAuthenticationKey', value: ''),\n            atxBooleanSetting(group: 'CONNECTION', name: 'useSettingsFromServer', value: false),\n            atxBooleanSetting(group: 'UPLOAD', name: 'uploadAsync', value: true),\n            atxBooleanSetting(group: 'UPLOAD', name: 'uploadToServer', value: false),\n            atxBooleanSetting(group: 'UPLOAD', name: 'compressUpload', value: false),\n            atxBooleanSetting(group: 'UPLOAD', name: 'cleanAfterSuccessUpload', value: true),\n            atxBooleanSetting(group: 'UPLOAD', name: 'uploadOnlyProjectReport', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'enableArchive', value: true),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveTrf', value: true),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archivePkg', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveTcf', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveTbc', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveMapping', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveRecordings', value: false),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archivePlots', value: true),\n            atxTextSetting(group: 'ARCHIVE', name: 'archiveMiscFiles', value: ''),\n            atxTextSetting(group: 'ARCHIVE', name: 'archiveMiscFilePrefix', value: ''),\n            atxBooleanSetting(group: 'ARCHIVE', name: 'archiveMiscFilesOnlyInTestReportDir', value: true),\n            atxTextSetting(group: 'ARCHIVE', name: 'archiveBy', value: 'NONE;SUCCESS;INCONCLUSIVE;FAILED;ERROR'),\n            atxTextSetting(group: 'ATTRIBUTE', name: 'coveredAttributes', value: 'Testlevel;Designer;Execution Priority;Estimated Duration [min];'),\n            atxTextSetting(group: 'ATTRIBUTE', name: 'attributeDelimiter', value: ''),\n            atxBooleanSetting(group: 'ATTRIBUTE', name: 'mapIsTestCaseAsAttribute', value: true),\n            atxBooleanSetting(group: 'ATTRIBUTE', name: 'mapTestCaseVersionAsAttribute', value: true),\n            atxBooleanSetting(group: 'ATTRIBUTE', name: 'mapRootPrjAttrToPkgAttr', value: true),\n            atxBooleanSetting(group: 'ATTRIBUTE', name: 'includePkgSVNRevision', value: true),\n            atxBooleanSetting(group: 'ATTRIBUTE', name: 'mapSwkIdsAsAttribute', value: true),\n            atxBooleanSetting(group: 'TBC_CONSTANTS', name: 'mapTbcToolAsConstant', value: true),\n            atxBooleanSetting(group: 'TCF_CONSTANTS', name: 'mapTcfTesterAsConstant', value: false),\n            atxBooleanSetting(group: 'TCF_CONSTANTS', name: 'mapTCFPropertyAsConstant', value: true),\n            atxBooleanSetting(group: 'TCF_CONSTANTS', name: 'mapUserDefinedReportDataAsConstant', value: true),\n            atxTextSetting(group: 'TCF_CONSTANTS', name: 'setConstants', value: ''),\n            atxTextSetting(group: 'TCF_CONSTANTS', name: 'setAttributes', value: ''),\n            atxBooleanSetting(group: 'SPECIAL', name: 'autoATXGeneratorUpdate', value: true),\n            atxBooleanSetting(group: 'SPECIAL', name: 'includeToolIdentifier', value: false),\n            atxBooleanSetting(group: 'SPECIAL', name: 'onlyIncludePkgTestCases', value: false),\n            atxBooleanSetting(group: 'SPECIAL', name: 'overrideParamSetNameMapping', value: false),\n            atxBooleanSetting(group: 'SPECIAL', name: 'mapProjectElementNameAsTestCaseName', value: false),\n            atxTextSetting(group: 'SPECIAL', name: 'mapSubPackageAsTestCaseLevel', value: '0'),\n            atxTextSetting(group: 'SPECIAL', name: 'captureSubPackageOnVerdict', value: ''),\n            atxBooleanSetting(group: 'SPECIAL', name: 'mapSeparateProjectExecutionAsSingleTestplan', value: false),\n            atxTextSetting(group: 'SPECIAL', name: 'mapAttributeAsConstant', value: ''),\n            atxBooleanSetting(group: 'SPECIAL', name: 'mapTestReportPathAsConstant', value: false),\n            atxBooleanSetting(group: 'SPECIAL', name: 'includeResourceAdapterInfo', value: true)],\n        customSettings: [\n            atxCustomBooleanSetting(name: 'customOption', checked: true),\n            atxCustomTextSetting(name: 'customLabel', value: 'test')])\n            \n```",
      "parameters": [
        {
          "name": "atxName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "settings",
            "customSettings"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "newArtifactoryServer",
      "title": "newArtifactoryServer: Returns new Artifactory server",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "newBuildInfo",
      "title": "newBuildInfo: New buildInfo",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newETInstallation",
      "title": "newETInstallation: Return new ECU-TEST installation",
      "description": "Creates a new dynamic ECU-TEST installation instance which is only accessible during pipeline execution.\n\n \n  Signatures:\n  \n   \n```groovy\nET.newInstallation(String toolName, String installPath) : ETInstance\n            \n```\n\n   \n```groovy\nET.newInstallation(String toolName, String installPath, String progId, int timeout) : ETInstance\n            \n```\n\n   \n```groovy\nET.newInstallation(Map&lt;String, Object&gt; installArgs) : ETInstance\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\n            \n```\n\n   \n```groovy\nET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0', 'ECU-TEST.Application', 120)\n            \n```\n\n   \n```groovy\nET.newInstallation toolName: 'ECU-TEST', installPath: 'C:\\\\Program Files\\\\ECU-TEST 8.0', progId: 'ECU-TEST.Application', timeout: 120\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "installPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "property",
          "type": "Nested",
          "values": [
            "progId",
            "timeout",
            "registerComServer"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "newGoBuild",
      "title": "newGoBuild: New Artifactory Go",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newGradleBuild",
      "title": "newGradleBuild: New Artifactory gradle executor",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newMavenBuild",
      "title": "newMavenBuild: New Artifactory maven",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newNpmBuild",
      "title": "newNpmBuild: New Artifactory npm executor",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newNugetBuild",
      "title": "newNugetBuild: New Artifactory NuGet executor",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "newPipBuild",
      "title": "newPipBuild: New Artifactory pip executor",
      "description": "",
      "parameters": [],
      "plugin": "artifactory"
    },
    {
      "command": "nexusArtifactUploader",
      "title": "nexusArtifactUploader: Nexus Artifact Uploader",
      "description": "",
      "parameters": [
        {
          "name": "nexusVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "protocol",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nexusUrl",
          "type": "String",
          "values": [],
          "description": "If Nexus Url is <em>http://mynexusrepo:8081/nexus</em> the value for this field is <em>mynexusrepo:8081/nexus</em>",
          "isOptional": false
        },
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repository",
          "type": "String",
          "values": [],
          "description": "RepositoryId of the Repository in Nexus to which this artifact to be uploaded.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifacts",
          "type": "Nested",
          "values": [
            "artifactId",
            "type",
            "classifier",
            "file"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "nexus-artifact-uploader"
    },
    {
      "command": "nexusPolicyEvaluation",
      "title": "nexusPolicyEvaluation: Invoke Nexus Policy Evaluation",
      "description": "",
      "parameters": [
        {
          "name": "iqStage",
          "type": "String",
          "values": [],
          "description": "Controls the stage the policy evaluation will be run against on the Nexus IQ Server.",
          "isOptional": false
        },
        {
          "name": "advancedProperties",
          "type": "String",
          "values": [],
          "description": "Provide advanced properties to the IQ Server in &lt;key&gt;=&lt;value&gt; pairs, with each additional property appearing on a new line. eg:\n \n\n ` key1=value1\n\n key2=value2 `",
          "isOptional": true
        },
        {
          "name": "enableDebugLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildOnNetworkError",
          "type": "boolean",
          "values": [],
          "description": "Controls the build outcome if there is a failure in communicating with the Nexus IQ Server (e.g. network outage). If checked, the build will be marked as failed. Otherwise, the build is only marked as unstable.",
          "isOptional": true
        },
        {
          "name": "iqApplication",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "iqModuleExcludes",
          "type": "Nested",
          "values": [
            "moduleExclude"
          ],
          "description": "A comma-separated list of [Ant-style patterns](http://ant.apache.org/manual/dirtasks.html#patterns) relative to the workspace root that denote the module information files (`**/nexus-iq/module.xml`) to be ignored, e.g. `**/my-module/target/**, **/another-module/target/**`. If unspecified all modules will contribute dependency information (if any) to the scan.",
          "isOptional": true
        },
        {
          "name": "iqScanPatterns",
          "type": "Nested",
          "values": [
            "scanPattern"
          ],
          "description": "A list of [Ant-style patterns](http://ant.apache.org/manual/dirtasks.html#patterns) relative to the workspace root that denote the files/archives to be scanned, e.g. `**/target/*.war` or `**/target/*.ear`. If unspecified, the scan will default to the patterns `**/*.jar, **/*.war, **/*.ear, **/*.zip, **/*.tar.gz`.",
          "isOptional": true
        },
        {
          "name": "jobCredentialsId",
          "type": "String",
          "values": [],
          "description": "To use the IQ server credentials configured in Nexus global configuration for this job select `- none -`, otherwise select different credentials.",
          "isOptional": true
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "nexusPublisher",
      "title": "nexusPublisher: Nexus Repository Manager Publisher",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nexusRepositoryId",
          "type": "String",
          "values": [],
          "description": "The publisher currently supports hosted release Maven 2 repositories. This list is limited to repositories which meet this requirement.",
          "isOptional": false
        },
        {
          "name": "packages",
          "type": "Nested",
          "values": [
            "$class: 'MavenPackage'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "Tag is only available for Nexus Repository Manager 3+",
          "isOptional": true
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "nirmata",
      "title": "nirmata: Invoke Nirmata Service",
      "description": "For projects that use Nirmata as part of the build system. This causes Jenkins to invoke Nirmata Service with the given actions, following fields and options. Jenkins will mark the build as a failure if any issue is encountered.",
      "parameters": [
        {
          "name": "builder",
          "type": "Nested",
          "values": [
            "deleteAppInEnvironment",
            "deployAppInEnvironment",
            "updateAppInCatalog",
            "updateAppInEnvironment"
          ],
          "description": "Select the required action from the drop-down\n \n\n\n \n **Delete App in Environment**\n\n Deletes the specified application from the specified environment. \n\n \n **Deploy App in Environment** \n\n Deploys the specified application from catalog to specified application. \n\n \n **Update App in Catalog** \n\n Updates the specified application in specified catalog. \n\n \n **Update App in Environment** \n\n Updates the specified application in specified environment.",
          "isOptional": false
        }
      ],
      "plugin": "nirmata"
    },
    {
      "command": "node",
      "title": "node: Allocate node",
      "description": "Allocates an executor on a node (typically a build agent) and runs further code in the context of a workspace on that agent.",
      "parameters": [
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Computer name, label name, or any other label expression like `linux && 64bit` to restrict where this step builds. May be left blank, in which case any available executor is taken.\n \n### Supported operators\n The following operators are supported, in descending order of precedence:\n \n  \n* **(expression)**\n\n  \n parentheses — used to explicitly define the associativity of an expression\n  \n  \n* **!expression**\n\n  \n NOT — negation; the result of expression must **not** be true\n  \n  \n* **a && b**\n\n  \n AND — **both** of the expressions a and b must be true\n  \n  \n* **a || b**\n\n  \n OR — **either** of the expressions a or b may be true\n  \n  \n* **a -&gt; b**\n\n  \n \"implies\" operator — equivalent to !a || b.\n   \n\n For example, windows -&gt; x64 could be thought of as \"if a Windows agent is used, then that agent <i>must</i> be 64-bit\", while still allowing this block to be executed on any agents that <i>do not</i> have the windows label, regardless of whether they have also have an x64 label\n  \n  \n* **a &lt;-&gt; b**\n\n  \n \"if and only if\" operator — equivalent to a && b || !a && !b\n   \n\n For example, windows &lt;-&gt; dc2 could be thought of as \"if a Windows agent is used, then that agent <i>must</i> be in datacenter 2, but if a non-Windows agent is used, then it <i>must not</i> be in datacenter 2\"\n  \n \n \n### Notes\n\n \n  \n*  All operators are left-associative, i.e. a -&gt; b -&gt; c is equivalent to (a -&gt; b) -&gt; c. \n\n  \n*  Labels or agent names can be surrounded with quotation marks if they contain characters that would conflict with the operator syntax.\n\n For example, \"osx (10.11)\" || \"Windows Server\". \n\n  \n*  Expressions can be written without whitespace, but including it is recommended for readability; Jenkins will ignore whitespace when evaluating expressions. \n\n  \n*  Matching labels or agent names with wildcards or regular expressions is not supported. \n\n  \n*  An empty expression will always evaluate to <i>true</i>, matching all agents. \n\n \n \n### Examples\n\n \n  \n* **master**\n\n  \n   This block may be executed only on the Jenkins master\n  \n  \n  \n  \n* **linux-machine-42**\n\n  \n This block may be executed only on the agent with the name linux-machine-42 (or on any machine that happens to have a label called linux-machine-42)\n  \n  \n* **windows && jdk9**\n\n  \n This block may be executed only on any Windows agent that has version 9 of the Java Development Kit installed (assuming that agents with JDK 9 installed have been given a jdk9 label)\n  \n  \n* **postgres && !vm && (linux || freebsd)**\n\n  \n This block may be executed only any on Linux or FreeBSD agent, so long as they are <i>not</i> a virtual machine, and they have PostgreSQL installed (assuming that each agent has the appropriate labels — in particular, each agent running in a virtual machine must have the vm label in order for this example to work as expected)",
          "isOptional": false
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "nodejs",
      "title": "nodejs: Provide Node & npm bin/ folder to PATH",
      "description": "",
      "parameters": [
        {
          "name": "nodeJSInstallationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cacheLocationStrategy",
          "type": "Nested",
          "values": [
            "default",
            "executor",
            "workspace"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "nodejs"
    },
    {
      "command": "nodesByLabel",
      "title": "nodesByLabel: List of nodes by Label, by default excludes offline nodes.",
      "description": "Returns an array of `node` names with the given label.",
      "parameters": [
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "offline",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "notifyBitbucket",
      "title": "notifyBitbucket: Notify Bitbucket Instance",
      "description": "",
      "parameters": [
        {
          "name": "stashServerBaseUrl",
          "type": "String",
          "values": [],
          "description": "The base URL of the Bitbucket server to notify. Examples are:\n \n  \n* http://localhost:7990, or\n\n  \n* http://my.company.intranet/bitbucket.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreUnverifiedSSLPeer",
          "type": "boolean",
          "values": [],
          "description": "Check this if you need to connect by HTTPS to a Bitbucket server that uses an invalid or self-signed SSL certificate",
          "isOptional": false
        },
        {
          "name": "commitSha1",
          "type": "String",
          "values": [],
          "description": "Enter a 40-digit SHA1 commit id or a Jenkins variable prefixed with '$' (e. g. <em>$GIT_COMMIT</em>) when you want the notification to be attached to a specific commit in Bitbucket. If left empty, Jenkins will use the commit that was built by the Git plugin.",
          "isOptional": false
        },
        {
          "name": "buildStatus",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "includeBuildNumberInKey",
          "type": "boolean",
          "values": [],
          "description": "Check this if you want results of repeated builds of the same commit to show up in Bitbucket as a list of builds. If unchecked, Bitbucket will only display the latest build result.",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "If not empty, this key will be used instead of automatically configured project key",
          "isOptional": false
        },
        {
          "name": "prependParentProjectKey",
          "type": "boolean",
          "values": [],
          "description": "Whether to prepend parent project while forming notify key",
          "isOptional": false
        },
        {
          "name": "disableInprogressNotification",
          "type": "boolean",
          "values": [],
          "description": "Disable sending pre-build notification to Bitbucket",
          "isOptional": false
        },
        {
          "name": "considerUnstableAsSuccess",
          "type": "boolean",
          "values": [],
          "description": "Consider unstable builds as success, besides the test errors.",
          "isOptional": false
        }
      ],
      "plugin": "stashnotifier"
    },
    {
      "command": "notifyDeploymon",
      "title": "notifyDeploymon: Notify deploymon.io about a new deployment",
      "description": "Notify deploymon.io of the deployment of a new service version.",
      "parameters": [
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "Use standard Jenkins String credentials (Secret Text)",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "This is the id of the project in deploymon.io",
          "isOptional": false
        },
        {
          "name": "service",
          "type": "String",
          "values": [],
          "description": "This is the name of the service",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "This is the name of the stage",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "This is the deployed version",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "This is the URL of the CI job. Leave empty to use build URL",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-deploymon"
    },
    {
      "command": "notifyEvents",
      "title": "notifyEvents: Notify.Events",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "notify-events"
    },
    {
      "command": "notifyOTC",
      "title": "notifyOTC: Send notification to OTC",
      "description": "",
      "parameters": [
        {
          "name": "stageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "nunit",
      "title": "nunit: Publish NUnit test result report",
      "description": "",
      "parameters": [
        {
          "name": "testResultsPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failIfNoResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTestsFailBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthScaleFactor",
          "type": "double",
          "values": [],
          "description": "The amplification factor to apply to test failures when computing the test result contribution to the build health score.\n \n\n The default factor is `1.0`\n \n  \n* A factor of `0.0` will disable the test result contribution to build health score.\n\n  \n* A factor of `0.1` means that 10% of tests failing will score 99% health\n\n  \n* A factor of `0.5` means that 10% of tests failing will score 95% health\n\n  \n* A factor of `1.0` means that 10% of tests failing will score 90% health\n\n  \n* A factor of `2.0` means that 10% of tests failing will score 80% health\n\n  \n* A factor of `2.5` means that 10% of tests failing will score 75% health\n\n  \n* A factor of `5.0` means that 10% of tests failing will score 50% health\n\n  \n* A factor of `10.0` means that 10% of tests failing will score 0% health\n\n  The factor is persisted with the build results, so changes will only be reflected in new builds.",
          "isOptional": true
        },
        {
          "name": "keepJUnitReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipJUnitArchiver",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "nunit"
    },
    {
      "command": "nvm",
      "title": "nvm: Setup the environment for an NVM installation.",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "For example 'v0.10.25'.",
          "isOptional": false
        },
        {
          "name": "nvmInstallDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nvmInstallURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nvmIoJsOrgMirror",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nvmNodeJsOrgMirror",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "nvm-wrapper"
    },
    {
      "command": "obsUpload",
      "title": "obsUpload: Copy file to obs",
      "description": "Upload a file/folder from the workspace to an S3 bucket. If the file parameter denotes a directory, then the complete directory (including all subfolders) will be uploaded. If text is provided, upload the text as the provided filename in the remote S3 bucket.",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "excludePathPattern",
          "type": "String",
          "values": [],
          "description": "This is the pattern to use to exclude files <i>Sample : \"*.svg\"</i>",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "This is the local file to upload from the workspace.",
          "isOptional": true
        },
        {
          "name": "includePathPattern",
          "type": "String",
          "values": [],
          "description": "This is the pattern to use to find files to push to S3 <i>Sample : \"dist/**\"</i>",
          "isOptional": true
        },
        {
          "name": "metadatas",
          "type": "String",
          "values": [],
          "description": "Metadatas to add to push file. Multiple metadatas must be separated with a ';' and name and value separated by a ':'. <i>Sample : \"Content-Type:image/svg+xml;Another:AnotherValue\"</i>",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to use. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "This is the text to be copied up to S3.",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "Working directories for obsUpload plugin <i>Sample : \"dist\"</i>",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-huaweicloud-plugin"
    },
    {
      "command": "octoPerfTest",
      "title": "octoPerfTest: Runs test in OctoPerf Cloud",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the Octoperf credentials to use.",
          "isOptional": true
        },
        {
          "name": "scenarioId",
          "type": "String",
          "values": [],
          "description": "OctoPerf's plugin for Jenkins allows users to automate load tests from the Cloud.\n \n\n Just choose the scenario you want to run. Let Jenkins start and stop the test and document the results.\n \n\n After the run, a test report will be generated directly into Jenkins and [your OctoPerf account.](https://api.octoperf.com)\n \n\n If the test list is empty, you must insert your unique OctoPerf Username and password into the <a rel=\"nofollow\">Jenkins settings</a>, or create a test in [your OctoPerf account.](https://api.octoperf.com)",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stopConditions",
          "type": "? extends org.jenkinsci.plugins.octoperf.conditions.TestStopCondition",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "octoperf"
    },
    {
      "command": "octopusCreateRelease",
      "title": "octopusCreateRelease: Octopus Deploy: Create Release",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "The identifier of the Octopus Server instance which you want to use for creating this release.\n \n\n Server Id is set in the global OctopusDeploy Plugin configuration.",
          "isOptional": false
        },
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "The Octopus Deploy Command Line executable which you want to use for creating this release.\n \n\n Octopus Deploy Command Line executable is set in the Octopus CLI configuration on the Global Tool Configuration page.",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The name of the project as defined in OctopusDeploy.\n \n\n <em>This field is case sensitive.</em>",
          "isOptional": false
        },
        {
          "name": "releaseVersion",
          "type": "String",
          "values": [],
          "description": "The version of the release to create.",
          "isOptional": false
        },
        {
          "name": "spaceId",
          "type": "String",
          "values": [],
          "description": "If left empty the Default space for the Octopus Server instance will be used.\n \n\n Otherwise, specify a space by name. The space specified must exist in the Octopus Server instance.",
          "isOptional": true
        },
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to be passed to the Octo executable.",
          "isOptional": true
        },
        {
          "name": "cancelOnTimeout",
          "type": "boolean",
          "values": [],
          "description": "If checked then the deployment will be explicitly canceled if the time to wait has expired and the task has not completed.",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "If left empty the Default channel for the project will be used.\n \n\n Otherwise, specify a channel by name. The channel specified must exist for the current project.",
          "isOptional": true
        },
        {
          "name": "defaultPackageVersion",
          "type": "String",
          "values": [],
          "description": "The default version to use for all required packages that are not specified in Package Configurations. No default packages are used if a default version is not specified",
          "isOptional": true
        },
        {
          "name": "deployThisRelease",
          "type": "boolean",
          "values": [],
          "description": "Select this when this release should be deployed immediately after it is created.",
          "isOptional": true
        },
        {
          "name": "deploymentTimeout",
          "type": "String",
          "values": [],
          "description": "The amount of time, specified in timespan format, to wait for the deployment to complete. Default is 00:10:00 if left blank. The deployment task itself does not timeout, this timeout is purely how long the client will keep polling to see if it has completed.",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "The environment to deploy this release into.",
          "isOptional": true
        },
        {
          "name": "jenkinsUrlLinkback",
          "type": "boolean",
          "values": [],
          "description": "Adds a linkback to the Jenkins build that created the release in the Octopus Deploy release notes",
          "isOptional": true
        },
        {
          "name": "packageConfigs",
          "type": "Nested",
          "values": [
            "packageName",
            "packageReferenceName",
            "packageVersion"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseNotes",
          "type": "boolean",
          "values": [],
          "description": "Select this option when you want to include release notes in this release.",
          "isOptional": true
        },
        {
          "name": "releaseNotesFile",
          "type": "String",
          "values": [],
          "description": "Path to file, relative from workspace root, to read for release notes.",
          "isOptional": true
        },
        {
          "name": "releaseNotesSource",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "The tenant to deploy to.\n \n\n <em>This field is case-sensitive.</em>",
          "isOptional": true
        },
        {
          "name": "tenantTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "List of variable to pass to the Deployment process\n \n\n <em>Use Java properties notation</em>, e.g. propertyName=propertyValue each on a new line. For pipeline syntax separate each entry with a new-line character `\\n`",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForDeployment",
          "type": "boolean",
          "values": [],
          "description": "If selected, this build will wait until the deployment is complete.\n \n\n <em>When this is selected, the deployment state will fail the build if the state ends as \"Failed\"</em>",
          "isOptional": true
        }
      ],
      "plugin": "octopusdeploy"
    },
    {
      "command": "octopusDeployRelease",
      "title": "octopusDeployRelease: Octopus Deploy: Deploy Release",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "The identifier of the Octopus Server instance which you want to use for deploying this release.\n \n\n Server Id is set in the global OctopusDeploy Plugin configuration.",
          "isOptional": false
        },
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "The Octopus Deploy Command Line executable which you want to use for creating this release.\n \n\n Octopus Deploy Command Line executable is set in the Octopus CLI configuration on the Global Tool Configuration page.",
          "isOptional": false
        },
        {
          "name": "spaceId",
          "type": "String",
          "values": [],
          "description": "If left empty the Default space for the Octopus Server instance will be used.\n \n\n Otherwise, specify a space by name. The space specified must exist in the Octopus Server instance.",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The project name in OctopusDeploy.\n \n\n <em>This field is case-sensitive.</em>",
          "isOptional": false
        },
        {
          "name": "releaseVersion",
          "type": "String",
          "values": [],
          "description": "The version of the release to move.\n \n\n <em>This field is case-sensitive.</em>",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "The environment to deploy to.\n \n\n <em>This field is case-sensitive.</em>",
          "isOptional": true
        },
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to be passed to the Octo executable.",
          "isOptional": true
        },
        {
          "name": "cancelOnTimeout",
          "type": "boolean",
          "values": [],
          "description": "If checked then the deployment will be explicitly canceled if the time to wait has expired and the task has not completed.",
          "isOptional": true
        },
        {
          "name": "deploymentTimeout",
          "type": "String",
          "values": [],
          "description": "The amount of time, specified in timespan format, to wait for the deployment to complete. Default is 00:10:00 if left blank. The deployment task itself does not timeout, this timeout is purely how long the client will keep polling to see if it has completed.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "The tenant to deploy to.\n \n\n <em>This field is case-sensitive.</em>",
          "isOptional": true
        },
        {
          "name": "tenantTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "List of variable to pass to the Deployment process\n \n\n <em>Use Java properties notation</em>, e.g. propertyName=propertyValue each on a new line For pipeline syntax separate each entry with a new-line character `\\n`",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForDeployment",
          "type": "boolean",
          "values": [],
          "description": "If selected, this build will wait until the deployment is complete.\n \n\n <em>When this is selected, the deployment state will fail the build if the state ends as \"Failed\"</em>",
          "isOptional": true
        }
      ],
      "plugin": "octopusdeploy"
    },
    {
      "command": "octopusPack",
      "title": "octopusPack: Octopus Deploy: Package application",
      "description": "",
      "parameters": [
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "The Octopus Deploy Command Line executable",
          "isOptional": false
        },
        {
          "name": "packageId",
          "type": "String",
          "values": [],
          "description": "The ID of the package; e.g. MyCompany.MyApp",
          "isOptional": false
        },
        {
          "name": "packageFormat",
          "type": "String",
          "values": [],
          "description": "ZIP is the recommended format.",
          "isOptional": false
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "The root folder containing files and folders to pack. Defaults to the working directory.",
          "isOptional": false
        },
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to be passed to the Octo executable.",
          "isOptional": true
        },
        {
          "name": "includePaths",
          "type": "String",
          "values": [],
          "description": "Newline-separated files to include in the package. Defaults to **",
          "isOptional": true
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "The folder into which the generated package file will be written. Defaults to the working directory.",
          "isOptional": true
        },
        {
          "name": "overwriteExisting",
          "type": "boolean",
          "values": [],
          "description": "Overwrite any existing package",
          "isOptional": true
        },
        {
          "name": "packageVersion",
          "type": "String",
          "values": [],
          "description": "The version number of the package. Defaults to a timestamp-based version.",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "Enable debug logging",
          "isOptional": true
        }
      ],
      "plugin": "octopusdeploy"
    },
    {
      "command": "octopusPushBuildInformation",
      "title": "octopusPushBuildInformation: Octopus Deploy: Push build information",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "The identifier of the Octopus Server instance which you want to use for deploying this release.\n \n\n Server Id is set in the global OctopusDeploy Plugin configuration.",
          "isOptional": false
        },
        {
          "name": "spaceId",
          "type": "String",
          "values": [],
          "description": "If left empty the Default space for the Octopus Server instance will be used.\n \n\n Otherwise, specify a space by name. The space specified must exist in the Octopus Server instance.",
          "isOptional": false
        },
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "The Octopus Deploy Command Line executable",
          "isOptional": false
        },
        {
          "name": "packageId",
          "type": "String",
          "values": [],
          "description": "Newline-separated package IDs; e.g.\n \n\nMyCompany.MyApp\n \n\nMyCompany.MyApp2",
          "isOptional": false
        },
        {
          "name": "packageVersion",
          "type": "String",
          "values": [],
          "description": "The version number of the package. Defaults to a timestamp-based version.",
          "isOptional": false
        },
        {
          "name": "commentParser",
          "type": "String",
          "values": [],
          "description": "Octopus can associate the work items or issues addressed by the changes in the package to the package. Select the issue tracking system that you use, or leave this option blank if you do not use a supported issue tracker.",
          "isOptional": false
        },
        {
          "name": "overwriteMode",
          "type": "Enum",
          "values": [
            "FailIfExists",
            "OverwriteExisting",
            "IgnoreIfExists"
          ],
          "description": "Normally, if the same build information already exists on the server, the server will reject the build information push. This practice ensures build information isn't accidentally overwritten or ignored. Enable this setting to override allow build information to be overwritten.",
          "isOptional": false
        },
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to be passed to the Octo executable.",
          "isOptional": true
        },
        {
          "name": "gitBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitCommit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "gitUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "octopusdeploy"
    },
    {
      "command": "octopusPushPackage",
      "title": "octopusPushPackage: Octopus Deploy: Push packages",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "The identifier of the Octopus Server instance which you want to use for deploying this release.\n \n\n Server Id is set in the global OctopusDeploy Plugin configuration.",
          "isOptional": false
        },
        {
          "name": "toolId",
          "type": "String",
          "values": [],
          "description": "The Octopus Deploy Command Line executable",
          "isOptional": false
        },
        {
          "name": "packagePaths",
          "type": "String",
          "values": [],
          "description": "Newline-separated paths of package files that will be pushed. Ant-style wildcards like dir/**/*.zip are supported.",
          "isOptional": false
        },
        {
          "name": "overwriteMode",
          "type": "Enum",
          "values": [
            "FailIfExists",
            "OverwriteExisting",
            "IgnoreIfExists"
          ],
          "description": "Normally, if the same package already exists on the server, the server will reject the package push. This practice ensures a package isn't accidentally overwritten or ignored. Use this setting to override this behavior.",
          "isOptional": false
        },
        {
          "name": "additionalArgs",
          "type": "String",
          "values": [],
          "description": "Additional arguments to be passed to the Octo executable.",
          "isOptional": true
        },
        {
          "name": "spaceId",
          "type": "String",
          "values": [],
          "description": "If left empty the Default space for the Octopus Server instance will be used.\n \n\n Otherwise, specify a space by name. The space specified must exist in the Octopus Server instance.",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "Enable debug logging",
          "isOptional": true
        }
      ],
      "plugin": "octopusdeploy"
    },
    {
      "command": "office365ConnectorSend",
      "title": "office365ConnectorSend: Send job status notifications to Office 365 (e.g. Microsoft Teams or Outlook)",
      "description": "Step for sending build notifications to Microsoft Teams or Outlook.",
      "parameters": [
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "HTML color eg. hex value (with or without # character) of the notification card used to display when the 'message' attribute is set.",
          "isOptional": true
        },
        {
          "name": "factDefinitions",
          "type": "Nested",
          "values": [
            "name",
            "template"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "This is the main text in a message attachment, and can contain standard message markup. The content will automatically collapse if it contains 700+ characters or 5+ linebreaks, and will display a \"Show more...\" link to expand the content. Notification may include global variables, for example environment and currentBuild variables:\n \n\n ` office365ConnectorSend message:\"started ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "office-365-connector"
    },
    {
      "command": "openTasks",
      "title": "openTasks: [Deprecated] Scan workspace for open tasks",
      "description": "",
      "parameters": [
        {
          "name": "asRegexp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePattern",
          "type": "String",
          "values": [],
          "description": "Patterns look very much like the patterns used in DOS and UNIX:\n\n \n'*' matches zero or more characters, '?' matches one character.\n\n \n In general, patterns are considered relative paths, relative to the Jenkins workspace. Only files found below that base directory are considered. So while a pattern like `../foo.java` is possible, it will not match anything when applied since the base directory's parent is never scanned for files. \n\n \n **Examples:** \n\n \n `*.java` &nbsp;&nbsp;matches&nbsp;&nbsp; `.java` , `x.java` and `FooBar.java` , but not `FooBar.xml` (does not end with `.java` ). \n\n \n `?.java` &nbsp;&nbsp;matches&nbsp;&nbsp; `x.java` , `A.java` , but not `.java` or `xyz.java` (both don't have one character before `.java` ). \n\n \n Combinations of `*` 's and `?` 's are allowed. \n\n \n Matching is done per-directory. This means that first the first directory in the pattern is matched against the first directory in the path to match. Then the second directory is matched, and so on. For example, when we have the pattern `/?abc/*/*.java` and the path `/xabc/foobar/test.java` , the first `?abc` is matched with `xabc` , then `*` is matched with `foobar` , and finally `*.java` is matched with `test.java` . They all match, so the path matches the pattern. \n\n \n To make things a bit more flexible, we add one extra feature, which makes it possible to match multiple directory levels. This can be used to match a complete directory tree, or a file anywhere in the directory tree. To do this, `**` must be used as the name of a directory. When `**` is used as the name of a directory in the pattern, it matches zero or more directories. For example: `/test/**` matches all files/directories under `/test/` , such as `/test/x.java` , or `/test/foo/bar/xyz.html` , but not `/xyz.xml` . \n\n \n There is one \"shorthand\": if a pattern ends with `/` or `\\` , then `**` is appended. For example, `mypackage/test/` is interpreted as if it were `mypackage/test/**` . \n\n \n **Example patterns:** \n\n <table>\n  <tbody>\n   <tr>\n    <td>`**/CVS/*`</td>\n    <td>Matches all files in `CVS` directories that can be located anywhere in the directory tree.\n\n Matches: \n```groovy\n      CVS/Repository\n      org/apache/CVS/Entries\n      org/apache/jakarta/tools/ant/CVS/Entries\n      \n```\n But not: \n```groovy\n      org/apache/CVS/foo/bar/Entries (`foo/bar/`\n      part does not match)\n      \n```\n </td>\n   </tr>\n   <tr>\n    <td>`org/apache/jakarta/**`</td>\n    <td>Matches all files in the `org/apache/jakarta` directory tree.\n\n Matches: \n```groovy\n      org/apache/jakarta/tools/ant/docs/index.html\n      org/apache/jakarta/test.xml\n      \n```\n But not: \n```groovy\n      org/apache/xyz.java\n      \n```\n (`jakarta/` part is missing). </td>\n   </tr>\n   <tr>\n    <td>`org/apache/**/CVS/*`</td>\n    <td>Matches all files in `CVS` directories that are located anywhere in the directory tree under `org/apache`.\n\n Matches: \n```groovy\n      org/apache/CVS/Entries\n      org/apache/jakarta/tools/ant/CVS/Entries\n      \n```\n But not: \n```groovy\n      org/apache/CVS/foo/bar/Entries\n      \n```\n (`foo/bar/` part does not match) </td>\n   </tr>\n   <tr>\n <td>`**/test/**`</td>\n <td>Matches all files that have a `test` element in their path, including `test` as a filename. </td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "high",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreCase",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "low",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "normal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "Patterns look very much like the patterns used in DOS and UNIX:\n\n \n'*' matches zero or more characters, '?' matches one character.\n\n \n In general, patterns are considered relative paths, relative to the Jenkins workspace. Only files found below that base directory are considered. So while a pattern like `../foo.java` is possible, it will not match anything when applied since the base directory's parent is never scanned for files. \n\n \n **Examples:** \n\n \n `*.java` &nbsp;&nbsp;matches&nbsp;&nbsp; `.java` , `x.java` and `FooBar.java` , but not `FooBar.xml` (does not end with `.java` ). \n\n \n `?.java` &nbsp;&nbsp;matches&nbsp;&nbsp; `x.java` , `A.java` , but not `.java` or `xyz.java` (both don't have one character before `.java` ). \n\n \n Combinations of `*` 's and `?` 's are allowed. \n\n \n Matching is done per-directory. This means that first the first directory in the pattern is matched against the first directory in the path to match. Then the second directory is matched, and so on. For example, when we have the pattern `/?abc/*/*.java` and the path `/xabc/foobar/test.java` , the first `?abc` is matched with `xabc` , then `*` is matched with `foobar` , and finally `*.java` is matched with `test.java` . They all match, so the path matches the pattern. \n\n \n To make things a bit more flexible, we add one extra feature, which makes it possible to match multiple directory levels. This can be used to match a complete directory tree, or a file anywhere in the directory tree. To do this, `**` must be used as the name of a directory. When `**` is used as the name of a directory in the pattern, it matches zero or more directories. For example: `/test/**` matches all files/directories under `/test/` , such as `/test/x.java` , or `/test/foo/bar/xyz.html` , but not `/xyz.xml` . \n\n \n There is one \"shorthand\": if a pattern ends with `/` or `\\` , then `**` is appended. For example, `mypackage/test/` is interpreted as if it were `mypackage/test/**` . \n\n \n **Example patterns:** \n\n <table>\n  <tbody>\n   <tr>\n    <td>`**/CVS/*`</td>\n    <td>Matches all files in `CVS` directories that can be located anywhere in the directory tree.\n\n Matches: \n```groovy\n      CVS/Repository\n      org/apache/CVS/Entries\n      org/apache/jakarta/tools/ant/CVS/Entries\n      \n```\n But not: \n```groovy\n      org/apache/CVS/foo/bar/Entries (`foo/bar/`\n      part does not match)\n      \n```\n </td>\n   </tr>\n   <tr>\n    <td>`org/apache/jakarta/**`</td>\n    <td>Matches all files in the `org/apache/jakarta` directory tree.\n\n Matches: \n```groovy\n      org/apache/jakarta/tools/ant/docs/index.html\n      org/apache/jakarta/test.xml\n      \n```\n But not: \n```groovy\n      org/apache/xyz.java\n      \n```\n (`jakarta/` part is missing). </td>\n   </tr>\n   <tr>\n    <td>`org/apache/**/CVS/*`</td>\n    <td>Matches all files in `CVS` directories that are located anywhere in the directory tree under `org/apache`.\n\n Matches: \n```groovy\n      org/apache/CVS/Entries\n      org/apache/jakarta/tools/ant/CVS/Entries\n      \n```\n But not: \n```groovy\n      org/apache/CVS/foo/bar/Entries\n      \n```\n (`foo/bar/` part does not match) </td>\n   </tr>\n   <tr>\n <td>`**/test/**`</td>\n <td>Matches all files that have a `test` element in their path, including `test` as a filename. </td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "tasks"
    },
    {
      "command": "openshiftBuild",
      "title": "openshiftBuild: Trigger OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --from-build option when invoking the OpenShift oc start-build command. It allows you to point to OpenShift build to a previously run build, and run another build with exactly the same source and destination metadata. If you do not supply a value, the plugin will generate a new OpenShift build based on the Build Configuration referenced.",
          "isOptional": true
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": true
        },
        {
          "name": "commitID",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --commit option when invoking the OpenShift oc start-build command. It allows you to point the OpenShift build to a specific commit hash from the git-log of the source repository. If you do not supply a value, the plugin assumes the latest version from the source repository should be used.",
          "isOptional": true
        },
        {
          "name": "env",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "Specify a list of environment variables to include in the build (see oc start-build -e ...).",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showBuildLogs",
          "type": "String",
          "values": [],
          "description": "Indicates whether the build logs get dumped to the console of the Jenkins build.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftBuild",
      "title": "openshiftBuild: Trigger OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --from-build option when invoking the OpenShift oc start-build command. It allows you to point to OpenShift build to a previously run build, and run another build with exactly the same source and destination metadata. If you do not supply a value, the plugin will generate a new OpenShift build based on the Build Configuration referenced.",
          "isOptional": true
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": true
        },
        {
          "name": "commitID",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --commit option when invoking the OpenShift oc start-build command. It allows you to point the OpenShift build to a specific commit hash from the git-log of the source repository. If you do not supply a value, the plugin assumes the latest version from the source repository should be used.",
          "isOptional": true
        },
        {
          "name": "env",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "Specify a list of environment variables to include in the build (see oc start-build -e ...).",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showBuildLogs",
          "type": "String",
          "values": [],
          "description": "Indicates whether the build logs get dumped to the console of the Jenkins build.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftCreateResource",
      "title": "openshiftCreateResource: Create OpenShift Resource(s)",
      "description": "",
      "parameters": [
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftCreateResource",
      "title": "openshiftCreateResource: Create OpenShift Resource(s)",
      "description": "",
      "parameters": [
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByJsonYaml",
      "title": "openshiftDeleteResourceByJsonYaml: Delete OpenShift Resource(s) from JSON or YAML",
      "description": "",
      "parameters": [
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByJsonYaml",
      "title": "openshiftDeleteResourceByJsonYaml: Delete OpenShift Resource(s) from JSON or YAML",
      "description": "",
      "parameters": [
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByKey",
      "title": "openshiftDeleteResourceByKey: Delete OpenShift Resource(s) by Key",
      "description": "",
      "parameters": [
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByKey",
      "title": "openshiftDeleteResourceByKey: Delete OpenShift Resource(s) by Key",
      "description": "",
      "parameters": [
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByLabels",
      "title": "openshiftDeleteResourceByLabels: Delete OpenShift Resource(s) using Labels",
      "description": "",
      "parameters": [
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete, where those objects have labels corresponding to the specified key/value pairs. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the labels in the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "values",
          "type": "String",
          "values": [],
          "description": "The comma separated list of values of the labels in the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeleteResourceByLabels",
      "title": "openshiftDeleteResourceByLabels: Delete OpenShift Resource(s) using Labels",
      "description": "",
      "parameters": [
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete, where those objects have labels corresponding to the specified key/value pairs. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the labels in the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "values",
          "type": "String",
          "values": [],
          "description": "The comma separated list of values of the labels in the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeploy",
      "title": "openshiftDeploy: Trigger OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftDeploy",
      "title": "openshiftDeploy: Trigger OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftExec",
      "title": "openshiftExec: OpenShift Exec",
      "description": "",
      "parameters": [
        {
          "name": "pod",
          "type": "String",
          "values": [],
          "description": "The pod in which to execute a command.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "arguments",
          "type": "Nested",
          "values": [
            "value"
          ],
          "description": "Specify a list of arguments to pass to the command.",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "The name of the command to execute.",
          "isOptional": true
        },
        {
          "name": "container",
          "type": "String",
          "values": [],
          "description": "The container in which to execute a command. If not specified, the first container in the pod will be used.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftExec",
      "title": "openshiftExec: OpenShift Exec",
      "description": "",
      "parameters": [
        {
          "name": "pod",
          "type": "String",
          "values": [],
          "description": "The pod in which to execute a command.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "arguments",
          "type": "Nested",
          "values": [
            "value"
          ],
          "description": "Specify a list of arguments to pass to the command.",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "The name of the command to execute.",
          "isOptional": true
        },
        {
          "name": "container",
          "type": "String",
          "values": [],
          "description": "The container in which to execute a command. If not specified, the first container in the pod will be used.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftImageStream",
      "title": "openshiftImageStream: OpenShift ImageStreams",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of the ImageStream is what shows up in the NAME column if you dump all the ImageStream's with the oc get is command invocation.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "The specific image tag within the ImageStream to monitor.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftScale",
      "title": "openshiftScale: Scale OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "The value here should be the number of started pods desired for the deployment specified. It is the equivalent of the value supplied to --replicas with an oc scale command invocation. This is a required parameter. If an integer is not specified here, this build step can not be added to the job. Note: specifying a 0 is allowed, and means you do not want any pods for the specified deployment config running.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftScale",
      "title": "openshiftScale: Scale OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "The value here should be the number of started pods desired for the deployment specified. It is the equivalent of the value supplied to --replicas with an oc scale command invocation. This is a required parameter. If an integer is not specified here, this build step can not be added to the job. Note: specifying a 0 is allowed, and means you do not want any pods for the specified deployment config running.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftTag",
      "title": "openshiftTag: Tag OpenShift Image",
      "description": "",
      "parameters": [
        {
          "name": "srcStream",
          "type": "String",
          "values": [],
          "description": "The name of the ImageStream for the existing tag.",
          "isOptional": false
        },
        {
          "name": "srcTag",
          "type": "String",
          "values": [],
          "description": "The name of the existing tag, or an actual, existing image ID. The image referenced will have the new tag applied to it.",
          "isOptional": false
        },
        {
          "name": "destStream",
          "type": "String",
          "values": [],
          "description": "One or more ImageStream names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "destTag",
          "type": "String",
          "values": [],
          "description": "One or more tag names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "alias",
          "type": "String",
          "values": [],
          "description": "This flag is the equivalent of the --alias option for the oc tag command. When false, the destination tag type is \"ImageStreamImage\", and when true, the destination tag type is \"ImageStreamTag\".",
          "isOptional": true
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "destinationAuthToken",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --token option when invoking the OpenShift oc command. If you do not supply a value, the plugin will assume it is running in the OpenShift Jenkins image and attempt to load the kubernetes service account token stored in that image.",
          "isOptional": true
        },
        {
          "name": "destinationNamespace",
          "type": "String",
          "values": [],
          "description": "The value here should match the value from the output from oc project if you created the resources related to this task from the command line. If nothing is specified, the plugin will inspect the PROJECT_NAME environment variable.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftTag",
      "title": "openshiftTag: Tag OpenShift Image",
      "description": "",
      "parameters": [
        {
          "name": "srcStream",
          "type": "String",
          "values": [],
          "description": "The name of the ImageStream for the existing tag.",
          "isOptional": false
        },
        {
          "name": "srcTag",
          "type": "String",
          "values": [],
          "description": "The name of the existing tag, or an actual, existing image ID. The image referenced will have the new tag applied to it.",
          "isOptional": false
        },
        {
          "name": "destStream",
          "type": "String",
          "values": [],
          "description": "One or more ImageStream names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "destTag",
          "type": "String",
          "values": [],
          "description": "One or more tag names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "alias",
          "type": "String",
          "values": [],
          "description": "This flag is the equivalent of the --alias option for the oc tag command. When false, the destination tag type is \"ImageStreamImage\", and when true, the destination tag type is \"ImageStreamTag\".",
          "isOptional": true
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "destinationAuthToken",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --token option when invoking the OpenShift oc command. If you do not supply a value, the plugin will assume it is running in the OpenShift Jenkins image and attempt to load the kubernetes service account token stored in that image.",
          "isOptional": true
        },
        {
          "name": "destinationNamespace",
          "type": "String",
          "values": [],
          "description": "The value here should match the value from the output from oc project if you created the resources related to this task from the command line. If nothing is specified, the plugin will inspect the PROJECT_NAME environment variable.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyBuild",
      "title": "openshiftVerifyBuild: Verify OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyBuild",
      "title": "openshiftVerifyBuild: Verify OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyDeployment",
      "title": "openshiftVerifyDeployment: Verify OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "This optional field's value represents the number expected running pods for the deployment for the DeploymentConfig specified. If no value is specified it will work the number of running pods against the desired replica count in the DeploymentConfig.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyDeployment",
      "title": "openshiftVerifyDeployment: Verify OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "This optional field's value represents the number expected running pods for the deployment for the DeploymentConfig specified. If no value is specified it will work the number of running pods against the desired replica count in the DeploymentConfig.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": true
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyService",
      "title": "openshiftVerifyService: Verify OpenShift Service",
      "description": "",
      "parameters": [
        {
          "name": "svcName",
          "type": "String",
          "values": [],
          "description": "The equivalent to the name supplied to a oc get service command line invocation.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "retryCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openshiftVerifyService",
      "title": "openshiftVerifyService: Verify OpenShift Service",
      "description": "",
      "parameters": [
        {
          "name": "svcName",
          "type": "String",
          "values": [],
          "description": "The equivalent to the name supplied to a oc get service command line invocation.",
          "isOptional": false
        },
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "retryCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "openstackMachine",
      "title": "openstackMachine: Cloud instances provisioning",
      "description": "Creates an Openstack `machine`, from an already globally defined cloud name and template without registering it as a Jenkins agent.\n \n\n This step has a third optional String parameter named scope specifying how long is the server expected to live:\n \n\n\n \n  \n* **`run`**\n\n  \n   The booted machine will be kept alive whilst the current run is kicking. This is the default mode if no scope is defined.\n  \n  \n* **`unlimited`**\n\n  \n   The booted machine will be kept alive forever. Mind the possible resources extarvation at the Openstack provider!",
      "parameters": [
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scope",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "openstack-cloud"
    },
    {
      "command": "opsgenie",
      "title": "opsgenie: OpsGenie step",
      "description": "",
      "parameters": [
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildStartPriority",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyBuildStart",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "priority",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "teams",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "opsgenie"
    },
    {
      "command": "osfBuilderSuiteForSFCCDataImport",
      "title": "osfBuilderSuiteForSFCCDataImport: OSF Builder Suite For Salesforce Commerce Cloud :: Data Import",
      "description": "",
      "parameters": [
        {
          "name": "hostname",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tfCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiveName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePatterns",
          "type": "Nested",
          "values": [
            "includePattern"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePatterns",
          "type": "Nested",
          "values": [
            "excludePattern"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "importStrategy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tempDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "osf-builder-suite-for-sfcc-data-import"
    },
    {
      "command": "osfBuilderSuiteForSFCCDeploy",
      "title": "osfBuilderSuiteForSFCCDeploy: OSF Builder Suite For Salesforce Commerce Cloud :: Deploy",
      "description": "",
      "parameters": [
        {
          "name": "hostname",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tfCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createBuildInfoCartridge",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "activateBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourcePaths",
          "type": "Nested",
          "values": [
            "sourcePath",
            "excludePatterns"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tempDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "osf-builder-suite-for-sfcc-deploy"
    },
    {
      "command": "osfBuilderSuiteForSFCCRunJob",
      "title": "osfBuilderSuiteForSFCCRunJob: OSF Builder Suite For Salesforce Commerce Cloud :: Run Job",
      "description": "",
      "parameters": [
        {
          "name": "hostname",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ocVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobArguments",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "osf-builder-suite-for-sfcc-run-job"
    },
    {
      "command": "osfBuilderSuiteStandaloneSonarLinter",
      "title": "osfBuilderSuiteStandaloneSonarLinter: OSF Builder Suite :: Standalone Sonar Linter",
      "description": "",
      "parameters": [
        {
          "name": "sourcePatterns",
          "type": "Nested",
          "values": [
            "sourcePattern",
            "excludePatterns"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "osf-builder-suite-standalone-sonar-linter"
    },
    {
      "command": "osfBuilderSuiteXMLLint",
      "title": "osfBuilderSuiteXMLLint: OSF Builder Suite :: XML Linter",
      "description": "",
      "parameters": [
        {
          "name": "xsdsPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xmlsPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "osf-builder-suite-xml-linter"
    },
    {
      "command": "ostorlabScan",
      "title": "ostorlabScan: Run Ostorlab Security Scanner",
      "description": "",
      "parameters": [
        {
          "name": "waitForResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "riskThreshold",
          "type": "Enum",
          "values": [
            "HIGH",
            "MEDIUM",
            "LOW",
            "POTENTIALLY",
            "HARDENING"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "plan",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "breakBuildOnScore",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scoreThreshold",
          "type": "Enum",
          "values": [
            "HIGH",
            "MEDIUM",
            "LOW",
            "POTENTIALLY",
            "HARDENING"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitingForResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ostorlab"
    },
    {
      "command": "oversecuredUpload",
      "title": "oversecuredUpload: Oversecured Scanner",
      "description": "",
      "parameters": [
        {
          "name": "apkPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "integrationId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "oversecured"
    },
    {
      "command": "p4",
      "title": "p4: P4 Groovy",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspace",
          "type": "Nested",
          "values": [
            "manualSpec",
            "specFileSpec",
            "staticSpec",
            "streamSpec",
            "templateSpec"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "p4approve",
      "title": "p4approve: P4 ApproveImpl Review",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "review",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "p4publish",
      "title": "p4publish: P4 Publish",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspace",
          "type": "Nested",
          "values": [
            "manualSpec",
            "specFileSpec",
            "staticSpec",
            "streamSpec",
            "templateSpec"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publish",
          "type": "Nested",
          "values": [
            "shelve",
            "submit"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "p4sync",
      "title": "p4sync: P4 Sync",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "charset",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "depotPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "populate",
          "type": "Nested",
          "values": [
            "autoClean",
            "previewOnly",
            "flushOnly",
            "forceClean",
            "graphClean",
            "syncOnly"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "Nested",
          "values": [
            "depotSource",
            "graphSource",
            "streamSource",
            "templateSource"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stream",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspace",
          "type": "Nested",
          "values": [
            "manualSpec",
            "specFileSpec",
            "staticSpec",
            "streamSpec",
            "templateSpec"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "p4tag",
      "title": "p4tag: P4 Tag",
      "description": "",
      "parameters": [
        {
          "name": "rawLabelName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "rawLabelDesc",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "p4unshelve",
      "title": "p4unshelve: P4 Unshelve",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspace",
          "type": "Nested",
          "values": [
            "manualSpec",
            "specFileSpec",
            "staticSpec",
            "streamSpec",
            "templateSpec"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "shelf",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resolve",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tidy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreEmpty",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "p4"
    },
    {
      "command": "pagerduty",
      "title": "pagerduty: PagerDuty trigger/resolve step",
      "description": "",
      "parameters": [
        {
          "name": "routingKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dedupKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentClass",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentComponent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentSource",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "incidentSummary",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolve",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pagerduty"
    },
    {
      "command": "pagerdutyChangeEvent",
      "title": "pagerdutyChangeEvent: PagerDuty Change Event step",
      "description": "",
      "parameters": [
        {
          "name": "integrationKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pagerduty"
    },
    {
      "command": "pangolinRunReport",
      "title": "pangolinRunReport: Pangolin: Run TestRail report",
      "description": "",
      "parameters": [
        {
          "name": "reportTemplateIds",
          "type": "String",
          "values": [],
          "description": "A list of report template names or IDs to run. Each template name or ID should start with new line.",
          "isOptional": true
        },
        {
          "name": "testRailPassword",
          "type": "String",
          "values": [],
          "description": "Password for TestRail User. If set, this value overrides value from Pangolin Global Configuration.\n \n\nIf empty, value from Pangolin Global Configuration will be used",
          "isOptional": true
        },
        {
          "name": "testRailProject",
          "type": "String",
          "values": [],
          "description": "The name of a TestRail project containing report configuration",
          "isOptional": true
        },
        {
          "name": "testRailUserName",
          "type": "String",
          "values": [],
          "description": "TestRail User name. If set, this value overrides value from Pangolin Global Configuration.\n \n\nIf empty, value from Pangolin Global Configuration will be used",
          "isOptional": true
        }
      ],
      "plugin": "pangolin-testrail-connector"
    },
    {
      "command": "pangolinTestRail",
      "title": "pangolinTestRail: Pangolin: Upload test results into TestRail",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "Nested",
          "values": [
            "testPath",
            "format",
            "resultPattern",
            "failIfUploadFailed",
            "customProperties",
            "testRun",
            "testPlan",
            "milestonePath",
            "closeRun",
            "customResultFields",
            "caseNameToIdMap",
            "configurationNames",
            "disableGrouping"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testRailProject",
          "type": "String",
          "values": [],
          "description": "Common TestRail project name for all configurations",
          "isOptional": false
        },
        {
          "name": "testRailUserName",
          "type": "String",
          "values": [],
          "description": "TestRail User name. If set, this value overrides value from Pangolin Global Configuration.\n \n\nIf empty, value from Pangolin Global Configuration will be used",
          "isOptional": true
        },
        {
          "name": "testRailPassword",
          "type": "String",
          "values": [],
          "description": "Password for TestRail User. If set, this value overrides value from Pangolin Global Configuration.\n \n\nIf empty, value from Pangolin Global Configuration will be used",
          "isOptional": true
        }
      ],
      "plugin": "pangolin-testrail-connector"
    },
    {
      "command": "parallel",
      "title": "parallel: Execute in parallel",
      "description": "Takes a map from branch names to closures and an optional argument `failFast`\n        which will terminate all branches upon a failure in any other branch:\n    \n\n    \n```groovy\n    parallel firstBranch: {\n        // do something\n    }, secondBranch: {\n        // do something else\n    },\n    failFast: true|false\n    \n```",
      "parameters": [],
      "plugin": "workflow-cps"
    },
    {
      "command": "pcBuild",
      "title": "pcBuild: Execute performance test using LoadRunner Enterprise",
      "description": "",
      "parameters": [
        {
          "name": "serverAndPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pcServerName",
          "type": "String",
          "values": [],
          "description": "Hostname or IP address The LoadRunner Enterprise Hostname or IP address. If the port of the LRE server is different than the default one, mention it by adding a collon (:) and then the port number\n \n\n **Example**: mypcserver.mycompany.net or 182.138.255.1 or mypcserver.mycompany.net:81\n \n\n\n \n\n If the LRE server requires to be accessed via a tenant, you can specify it by adding the tenant details to the LRE Server field.\n \n\n **Example**: mypcserver.mycompany.net/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or 182.138.255.1/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or mypcserver.mycompany.net:81/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3\n \n\n\n \n\n **Important**: Do not use the full URL of LoadRunner Enterprise server.\n \n\n For example, using https://mypcserver/LoadTest will fail. Instead, just specify 'mypcserver' value in 'LRE Server' field and switch on the 'Use HTTPS Protocol' if secured protocol is required.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testInstanceId",
          "type": "String",
          "values": [],
          "description": "Represents an instance of a performance test within an ALM Test Set. In order to find the test instance id go to: **LRE Web UI &gt; Testing &gt; Select the relevant test &gt; Test Details tab &gt; Assigned Test Set drop down list &gt; Edit the Test Set ** and look for the Test Instance ID column",
          "isOptional": false
        },
        {
          "name": "autoTestInstanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDurationHours",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDurationMinutes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "postRunAction",
          "type": "Enum",
          "values": [
            "COLLATE",
            "COLLATE_AND_ANALYZE",
            "DO_NOTHING"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vudsMode",
          "type": "boolean",
          "values": [],
          "description": "A **Virtual User Day (VUD)** license provides you with a specified number of Vusers (VUDs) that you can run an unlimited number of times within a 24 hour period. Before using this option, make sure that VUDs licenses are applied in your Micro Focus LoadRunner Enterprise environment.",
          "isOptional": false
        },
        {
          "name": "statusBySLA",
          "type": "boolean",
          "values": [],
          "description": "Check this option in order to set the build-step status according to a pre-defined **SLA (Service Level Agreement)** configured within your performance test. Unless checked, the build-step will be labeled as <i>Passed</i> as long as no failures occurred.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addRunToTrendReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "trendReportId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "HTTPSProtocol",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyOutURL",
          "type": "String",
          "values": [],
          "description": "Add your local proxy as following: **http(s)://host:port**\n \n\n or Leave empty if not using a local proxy. The following proxy configurations are not supported:\n \n  \n* PAC (proxy auto-config). \n\n  \n* Automatic configuration script.",
          "isOptional": false
        },
        {
          "name": "credentialsProxyId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retry",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retryDelay",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retryOccurrences",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "pcGitBuild",
      "title": "pcGitBuild: Synchronize LoadRunner Enterprise With Git",
      "description": "The plugin allows to synchronize scripts from Git repository to Micro Focus LoadRunner Enterprise project.\n \n\n The plugin respects the subfolders structure defined in Git when synchronizing LoadRunner scripts to Performance Center 12.60 and above. For previous versions, all scripts will be uploaded to the same root folder in the Test Plan tree of the LoadRunner Enterprise project (scripts with duplicated named will be overwritten).",
      "parameters": [
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pcServerName",
          "type": "String",
          "values": [],
          "description": "Hostname or IP address The LoadRunner Enterprise Hostname or IP address. If the port of the LRE server is different than the default one, mention it by adding a collon (:) and then the port number\n \n\n **Example**: mypcserver.mycompany.net or 182.138.255.1 or mypcserver.mycompany.net:81\n \n\n\n \n\n If the LRE server requires to be accessed via a tenant, you can specify it by adding the tenant details to the LRE Server field.\n \n\n **Example**: mypcserver.mycompany.net/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or 182.138.255.1/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or mypcserver.mycompany.net:81/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3\n \n\n\n \n\n **Important**: Do not use the full URL of LoadRunner Enterprise server.\n \n\n For example, using https://mypcserver/LoadTest will fail. Instead, just specify 'mypcserver' value in 'LRE Server' field and switch on the 'Use HTTPS Protocol' if secured protocol is required.",
          "isOptional": false
        },
        {
          "name": "httpsProtocol",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "LoadRunner Enterprise User's Credentials or parameter pointing to such credentials.",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverAndPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyOutURL",
          "type": "String",
          "values": [],
          "description": "Add your local proxy as following:\n \n\n**http(s)://host:port**\n \n\n or Leave empty if not using a local proxy.\n \n\n The following proxy configurations are not supported:\n \n  \n* PAC (proxy auto-config). \n\n  \n* Automatic configuration script.",
          "isOptional": false
        },
        {
          "name": "credentialsProxyId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "subjectTestPlan",
          "type": "String",
          "values": [],
          "description": "The Test Plan folder path in LoadRunner Enterprise where the scripts will be loaded.\n \n\n Available paths can be found in the LoadRunner Enterprise interface: **Test Management** -&gt; **Test Plan**\n \n\n The path must begin with \"**Subject**\" and be separated with backslashes (**\\**).\n \n\n The path is case-sensitive!\n \n\n **Important**: For Performance Center Server below version 12.60:\n \n  \n* the specified folder must exist at the time of the build (the plugin can not create folders independently).\n\n  \n* Scripts saved in Git subfolders will be synchronized to the specified subject and in case of duplicated script names in Git, the last uploaded script to LRE will overwrite the previously uploaded script(s) with the same name.",
          "isOptional": false
        },
        {
          "name": "uploadScriptMode",
          "type": "Enum",
          "values": [
            "RUNTIME_FILES",
            "ALL_FILES"
          ],
          "description": "This corresponds to the similar option existing in LoadRunner Enterprise / VuGen:\n \n  \n* **All Files**: All script files are uploaded (this takes longer to load).\n\n  \n* **Runtime Files**: Only the required files are uploaded (script files, Runtime Settings, parameter files, etc.)\n\n  **Recommended value**: \"**Runtime Files**\".",
          "isOptional": false
        },
        {
          "name": "removeScriptFromPC",
          "type": "Enum",
          "values": [
            "YES",
            "NO"
          ],
          "description": "This option will allow you to synchronize scripts deletion from Git to LoadRunner Enterprise.\n \n\n\n \n\n The recommended value is \"** Yes**\".",
          "isOptional": false
        },
        {
          "name": "importTests",
          "type": "Enum",
          "values": [
            "YES",
            "NO"
          ],
          "description": "<h1>How to import tests from YAML files saved in the Git repository</h1>\n\n\n Copy your YAML files to a folder in your Git repository (YAML files under the root of the Git repository will be ignored). The plugin will create the test in the LoadRunner Enterprise project according to:\n \n  \n* The file name (without extension) which will be used as test name.\n\n  \n* The location of the file in the Git repository which will be the location of the test under the root folder ('Subject') in the **Test Management** tree.\n\n  \n* The content of the YAML file which must be composed according to the parameters described in the tables below.\n\n \n\n\n\n\n\n\n**Note:** \n\n\n \n* All parameters must be in lowercase.\n\n \n* When a backslash (\\) occurs in a value provided to a parameter (for example, a folder separator in a file path), a double backslash (\\\\) must be used instead. \n\n \n* This feature is supported with Performance Center 12.61 and later versions.\n\n\n\n\n\n\n \n\n\n\n Root parameters of the YAML file:\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>controller</td>\n    <td>\n     \n\n      Defines the Controller to be used during the test run (it must be an available host in the LoadRunner Enterprise project). If not specified, a Controller will be chosen from the different controllers available in the LoadRunner Enterprise project.\n     \n\n     \n\n      From Performance Center 12.62 and plugin version 1.1.1, the option to provision a Controller as a Docker image is available by specifying the value \"Elastic\" and providing a value for the 'controller_elastic_configuration' parameter (see 'controller_elastic_configuration' table below).\n     \n </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>lg_amount</td>\n    <td>Number of load generators to allocate to the test (every group in the test will be run by the same load generators).</td>\n    <td>Not required if each group defined in the 'group' parameter defines the load generators it will be using via the 'lg_name' parameter (see 'group' table below).</td>\n   </tr>\n   <tr>\n    <td>group</td>\n    <td>Lists all groups or scripts defined in the test. The parameter to be used in each group are specified in the 'group' table below.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>scheduler</td>\n    <td>Defines the duration of a test, and determines whether virtual users are started simultaneously or gradually. See the 'scheduler' table below.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>lg_elastic_configuration</td>\n    <td>Defines the image to be used in order to provision load generators. See the 'lg_elastic_configuration' table below. Available from Performance Center 12.62 and plugin version 1.1.1.</td>\n    <td>Yes, if a load generator is defined to be provisioned from a Docker image.</td>\n   </tr>\n   <tr>\n    <td>controller_elastic_configuration</td>\n    <td>Defines the image to be used in order to provision the Controller. See the 'controller_elastic_configuration' table below. Available from Performance Center 12.62 and plugin version 1.1.1.</td>\n    <td>Yes, if the Controller is defined to be provisioned from a Docker image.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **group:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>group_name</td>\n    <td>Name of the group (it must be a unique name if several groups are defined).</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>vusers</td>\n    <td>Number of virtual users to allocate to the group for running the script.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>script_id</td>\n    <td>ID of the script in the LoadRunner Enterprise project.</td>\n    <td>Not required if the 'script_path' parameter is specified.</td>\n   </tr>\n   <tr>\n    <td>script_path</td>\n    <td>Path and name of the script to be added to the group, separated by double backslashes (\\\\). For example \"MyMainFolder\\\\MySubFolder\\\\MyScriptName'. Do not include the LoadRunner Enterprise root folder (named \"Subject\").</td>\n    <td>Not required if 'script_id' parameter is specified</td>\n   </tr>\n   <tr>\n    <td>lg_name</td>\n    <td>List of load generators to allocate to the group for running the script. The supported values are:\n     \n      \n* The hostname, as defined in LoadRunner Enterprise, of an existing load generator in LoadRunner Enterprise allocated as a host.\n\n      \n* **\"LG\"** followed by a number, to use an automatically matched load generator (recommended).\n\n      \n* **\"DOCKER\"** followed by a number, to use a dynamic load generator (available from Performance Center 12.62, if your project is set to work with Docker). This option requires the 'lg_elastic_configuration' parameter to be defined (see the 'lg_elastic_configuration' table below).\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>command_line</td>\n    <td>The command line applied to the group.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>rts</td>\n    <td>Object defining the runtime settings of the script. See the 'rts' table below.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **rts:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>pacing</td>\n    <td>Can be used to define the number of iterations the script will run and the required delay between iterations (see the 'pacing' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>thinktime</td>\n    <td>Can be used to define think time (see the 'thinktime' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_vm</td>\n    <td>Can be used when defining Java environment runtime settings (see the 'java_vm' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter</td>\n    <td>Can be used to define JMeter environment runtime settings (see the 'jmeter' table below).</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **pacing:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>number_of_iterations</td>\n    <td>Specifies the number of iterations to run; this must be a positive number.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>type</td>\n    <td>Possible values for type attribute are:\n     \n      \n* **\"immediately\"**: ignores 'delay' and 'delay_random_range' parameters. This is the default value when no type is specified.\n\n      \n* **\"fixed delay\"**: 'delay' parameter is mandatory.\n\n      \n* **\"random delay\"**: 'delay' and 'delay_random_range' parameters are mandatory.\n\n      \n* **\"fixed interval\"**: 'delay' parameter is mandatory.\n\n      \n* **\"random interval\"**: 'delay' and 'delay_random_range' parameters are mandatory.\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>delay</td>\n    <td>Non-negative number (less than 'delay_at_range_to_seconds' when specified).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>delay_random_range</td>\n    <td>Non-negative number. It will be added to the value given to the 'delay' parameter (the value will be randomly chosen between the value given to 'delay' parameter and the same value to which is added the value of this parameter).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **thinktime:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>type</td>\n    <td>The ThinkTime Type attribute is one of:\n     \n      \n* **\"ignore\"**: This is the default value when no type is specified.\n\n      \n* **\"replay\"**: Provide 'limit_seconds' parameter with value.\n\n      \n* **\"modify\"**: Provide 'limit_seconds' and 'multiply_factor' parameters with values.\n\n      \n* **\"random\"**: Provide 'limit_seconds', 'min_percentage' and 'max_percentage' parameters with values.\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>min_percentage</td>\n    <td>This must be a positive number.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>max_percentage</td>\n    <td>This must be a positive number (it must be larger than the value provided for the 'min_percentage' parameter).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>limit_seconds</td>\n    <td>This must be a positive number.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>multiply_factor</td>\n    <td>The recorded think time is multiplied by this factor at runtime.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **java_vm:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>jdk_home</td>\n    <td>The JDK installation path.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_vm_parameters</td>\n    <td>List the Java command line parameters. These parameters can be any JVM argument. The common arguments are the debug flag (-verbose) or memory settings (-ms, -mx). In additional, you can also pass properties to Java applications in the form of a -D flag.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>use_xboot</td>\n    <td>Boolean: Instructs VuGen to add the Classpath before the Xbootclasspath (prepend the string).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>enable_classloader_per_vuser</td>\n    <td>Boolean: Loads each Virtual User using a dedicated class loader (runs Vusers as threads).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_env_class_paths</td>\n    <td>A list of classpath entries. Use a double backslash (\\\\) for folder separators.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **jmeter:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>start_measurements</td>\n    <td>Boolean value to enable JMX measurements during performance test execution.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_home_path</td>\n    <td>Path to JMeter home. If not defined, the path from the %JMETER_HOME% environment variable is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_min_port</td>\n    <td>This number must be lower than the value provided in the 'jmeter_max_port' parameter. Both 'jmeter_min_port' and 'jmeter_max_port' parameters must be specified otherwise the default port values is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_max_port</td>\n    <td>This number must be higher than the value provided in the 'jmeter_min_port' parameter. Both 'jmeter_min_port' and 'jmeter_max_port' parameters must be specified otherwise the default port values is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_additional_properties</td>\n    <td>JMeter additional properties file. Use double slash (\\\\) for folder separator.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **scheduler:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>rampup</td>\n    <td>Time, in seconds, to gradually start all virtual users. Additional virtual users are added every 15 seconds until the time specified in the parameter ends. If no value is specified, all virtual users are started simultaneously at the beginning of the test.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>duration</td>\n    <td>Time, in seconds, that it will take to run the test after all virtual users are started. After this time, the test run ends. If not specified, the test will run until completion.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **lg_elastic_configuration:** (available from Performance Center 12.62 and plugin version 1.1.1)\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>image_id</td>\n    <td>This number can be retrieved from:\n     \n      \n* The Administration page of LoadRunner Enterprise (you might need to turn to your LoadRunner Enterprise administrator as accessing this page requires admin privileges): select the **Orchestration** section -&gt; switch to **Docker Images** tab -&gt; you will have the list of all available Docker images for Load Generator purposes with their ID. You can make sure the images are available to your project from the **Orchestrators** tab.\n\n      \n* A LoadRunner Enterprise Rest API command applied on the project (replace the bracketed values): GET - <a rel=\"nofollow\">http(s)://(PCServer):(PortNumber)/LoadTest/rest/domains/(DomainName)/projects/(ProjectName)/dockerimages/</a> and select any valid image not having the value 'controller' for purpose.\n\n      </td>\n    <td>Yes if one of the load generator is defined to be provisioned from Docker image.</td>\n   </tr>\n   <tr>\n    <td>memory_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; Press **Assign LG** button -&gt; in the **Elastic** section, select **DOCKER1** -&gt; select the relevant image (based on the image name) -&gt; use the values provided in the 'Memory(GB)' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n   <tr>\n    <td>cpu_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; Press **Assign LG** button -&gt; in the **Elastic** section, select **DOCKER1** -&gt; select the relevant image (based on the image name) -&gt; use the values provided in the 'CUPs' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **controller_elastic_configuration:** (available from Performance Center 12.62 and plugin version 1.1.1)\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>image_id</td>\n    <td>This number can be retrieved from:\n     \n      \n* The Administration page of LoadRunner Enterprise (you might need to turn to your LoadRunner Enterprise administrator as accessing this page requires admin privileges): select the **Orchestration** section -&gt; switch to **Docker Images** tab -&gt; you will have the list of all available Docker images for Controller purposes with their ID. You can make sure the images are available to your project from the **Orchestrators** tab.\n\n      \n* A LoadRunner Enterprise Rest API command applied on the project (replace the bracketed values): GET - <a rel=\"nofollow\">http(s)://(PCServer):(PortNumber)/LoadTest/rest/domains/(DomainName)/projects/(ProjectName)/dockerimages/</a> and select any valid image having the value 'controller' for purpose.\n\n      </td>\n    <td>Yes if the Controller is defined to be provisioned from Docker image.</td>\n   </tr>\n   <tr>\n    <td>memory_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; select the Controller -&gt; choose **Elastic** option -&gt; select the relevant image -&gt; Under the **Resource Limits** label, find and use the values provided in the 'Memory(GB)' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n   <tr>\n    <td>cpu_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; select the Controller -&gt; choose **Elastic** option -&gt; select the relevant image -&gt; Under the **Resource Limits** label, find and use the values provided in the 'CUPs' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n In the example below:\n \n  \n* The plugin automatically assigns the file name as the test name, and the folder path of the file in the Git repository is used to create the location of the test under the root folder ('Subject') in the LoadRunner Enterprise project.\n\n  \n* In the content:\n   \n    \n* Since no Controller and no load generator amount were specified, a random available Controller will be allocated to the test just before it is run and the 'lg_name' parameter specified in each group will be used.\n\n    \n* In the 'group' parameter:\n     \n      \n* We added two scripts. For each, we provided a unique value in the 'group_name' parameter, and the number of virtual users to run the group.\n\n      \n* Since we did not know the ID of the scripts, we used the 'script_path' parameter in which we entered the script path (without \"Subject\") followed by the script name, and used double backslashes for separators.\n\n      \n* We specified the load generators that will be used by each group (in this case, load generators will automatically be matched as we use the 'LG' prefix).\n\n      \n\n    \n\n  \n* In the scheduler:\n   \n    \n* We want all Virtual Users to be initialized gradually (45 seconds).\n\n    \n* We want the test to stop after 5 minutes (300 seconds).\n\n    \n\n \n\n\n\n```groovy\n\n##################################################\ngroup:\n- group_name: \"TEstInt\"\n  vusers: '20'\n  script_path: \"plugin\\\\TEstInt\"\n  lg_name:\n  - \"LG1\"\n  - \"LG2\"\n- group_name: \"Mtours\"\n  vusers: '20'\n  script_path: \"plugin\\\\mtours\"\n  lg_name:\n  - \"LG3\"\n  - \"LG4\"\nscheduler:\n  rampup: '45'\n  Duration: '300'\n##################################################\n`\n\n```\n\n\n\n\n\n \n\n\n\n In the example below:\n \n  \n* The plugin automatically assigns the file name as the test name, and the folder path of the file in the Git repository is used to create the location of the test under the root folder ('Subject') in the LoadRunner Enterprise project.\n\n  \n* Since the 'controller' and the 'lg_amount' parameters are specified, the specified Controller will be used to run the test and three automatch load generators will be used and shared by all groups.\n\n  \n* The content of the file is defined with seven groups, all being set with the “rts” parameter:\n   \n    \n* The “pacing” parameter is used with different options for all groups.\n\n    \n* The “java_vm” parameter is used for five scripts with JavaVM for protocol.\n\n    \n* The “thinktime” parameter is used with different options for four groups.\n\n    \n* The “jmeter” parameter is used for two scripts with JMeter for protocol.\n\n    \n\n  \n* In the scheduler:\n   \n    \n* We want all Virtual Users to be initialized gradually (120 seconds).\n\n    \n* We want the test to stop after 10 minutes (600 seconds).\n\n    \n\n \n\n\n\n```groovy\n\n##################################################\ncontroller: \"mycontroller\"\nlg_amount: 3\ngroup:\n  - group_name: \"JavaVuser_LR_Information_pacing_immediately_thinktime_ignore\"\n    vusers: 50\n    script_id: 394\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"immediately\"\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        use_xboot: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"ignore\"\n\n  - group_name: \"JavaHTTP_BigXML_pacing_fixed_delay_thinktime_replay\"\n    vusers: 50\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"fixed delay\"\n        delay: 10\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n      thinktime:\n        type: \"replay\"\n        limit_seconds: 30\n\n  - group_name: \"JavaVuser_LR_Information_immediately_pacing_random_delay_thinktime_modify\"\n    vusers: 50\n    script_id: 394\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random delay\"\n        delay: 10\n        delay_random_range: 20\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"modify\"\n        limit_seconds: 30\n        multiply_factor: 2\n\n  - group_name: \"JavaHTTP_BigXML_pacing_fixed_interval_thinktime_random\"\n    vusers: 50\n    #script_id: 392\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"fixed interval\"\n        delay: 10\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"random\"\n        limit_seconds: 30\n        min_percentage: 2\n        max_percentage: 3\n\n  - group_name: \"JavaHTTP_BigXML_pacing_random_interval\"\n    vusers: 50\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n\n  - group_name: \"Mtours_pacing_random_interval\"\n    vusers: 50\n    script_path: \"scripts\\\\Mtours\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      jmeter:\n        start_measurements: true\n        jmeter_home_path: \"c:\\\\jmeter\"\n        jmeter_min_port: 2001\n        jmeter_max_port: 3001\n        jmeter_additional_properties: \"jmeter_additional_properties\"\n  - group_name: \"Mtours_pacing_random_interval_Jmeter_default_port\"\n    vusers: 50\n    script_path: \"scripts\\\\Mtours\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      jmeter:\n        start_measurements: true\n\nscheduler:\n  rampup: 120\n  duration: 600\n##################################################\n`\n\n```",
          "isOptional": false
        }
      ],
      "plugin": "micro-focus-performance-center-integration"
    },
    {
      "command": "pcRunBuild",
      "title": "pcRunBuild: Run Performance Test Using LoadRunner Enterprise",
      "description": "",
      "parameters": [
        {
          "name": "serverAndPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pcServerName",
          "type": "String",
          "values": [],
          "description": "Hostname or IP address The LoadRunner Enterprise Hostname or IP address. If the port of the LRE server is different than the default one, mention it by adding a collon (:) and then the port number\n \n\n **Example**: mypcserver.mycompany.net or 182.138.255.1 or mypcserver.mycompany.net:81\n \n\n\n \n\n If the LRE server requires to be accessed via a tenant, you can specify it by adding the tenant details to the LRE Server field.\n \n\n **Example**: mypcserver.mycompany.net/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or 182.138.255.1/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3 or mypcserver.mycompany.net:81/?tenant=fa128c06-5436-413d-9cfa-9f04bb738df3\n \n\n\n \n\n **Important**: Do not use the full URL of LoadRunner Enterprise server.\n \n\n For example, using https://mypcserver/LoadTest will fail. Instead, just specify 'mypcserver' value in 'LRE Server' field and switch on the 'Use HTTPS Protocol' if secured protocol is required.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testContentToCreate",
          "type": "String",
          "values": [],
          "description": "<h1>How to create a test from YAML input</h1>\n\nThe content of the field must either be: \n\n\n \n* Text in YAML syntax composed according to the parameters described in the tables below. You must set values to the 'test_name' and 'test_folder_path' parameters and continue with the'test_content' parameter and its sub-parameters.\n\n \n* As opposed to the previous option, you can also specify as value a relative path to a YAML file within the workspace (or within your Git repository cloned within the workspace). In the YAML file, only specify the parameters defined in the 'test_content' table. The following logic will be used to create the LoadRunner Enterprise test:\n  \n   \n* The file name (without extension) will be used as the test name.\n\n   \n* The location of the file in the Git repository will be the location of the test under the root folder ('Subject') in the **Test Management** tree.\n\n   \n* The content of the YAML file must consist of the parameters, and their sub-parameters, listed in the 'test_content' table below.\n\n   \n\n\n\n\n\n\n**Note:** \n\n\n \n* All parameters must be in lowercase.\n\n \n* When a backslash (\\) occurs in a value provided to a parameter (for example, a folder separator in a file path), a double backslash (\\\\) must be used instead. \n\n \n* This feature is supported with Performance Center 12.61 and later versions.\n\n\n\n\n\n\n \n\n\n\n Root parameters of the field\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>test_name</td>\n    <td>The test name.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>test_folder_path</td>\n    <td>The location of the test in the **Test Management** folder tree of the LoadRunner Enterprise project. The folders should be separated by double backslashes (\\\\). For example, \"MyMainFolder\\\\MySubfolder\\\\MySubSubFolder\". Do not include the LoadRunner Enterprise root folder (named \"Subject\")</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>test_content</td>\n    <td>The content of the test that requires additional parameters specified in the 'test_content' table below.</td>\n    <td>Yes</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **test_content (if a YAML file is specified in the field, those are the root parameter to be used in the file content):**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>controller</td>\n    <td>\n     \n\n      Defines the Controller to be used during the test run (it must be an available host in the LoadRunner Enterprise project). If not specified, a Controller will be chosen from the different controllers available in the LoadRunner Enterprise project.\n     \n\n     \n\n      From Performance Center 12.62 and plugin version 1.1.1, the option to provision a Controller as a Docker image is available by specifying the value \"Elastic\" and providing a value for the 'controller_elastic_configuration' parameter (see 'controller_elastic_configuration' table below).\n     \n </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>lg_amount</td>\n    <td>Number of load generators to allocate to the test (every group in the test will be run by the same load generators).</td>\n    <td>Not required if each group defined in the 'group' parameter defines the load generators it will be using via the 'lg_name' parameter (see 'group' table below).</td>\n   </tr>\n   <tr>\n    <td>group</td>\n    <td>Lists all groups or scripts defined in the test. The parameter to be used in each group are specified in the 'group' table below.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>scheduler</td>\n    <td>Defines the duration of a test, and determines whether virtual users are started simultaneously or gradually. See the 'scheduler' table below.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>lg_elastic_configuration</td>\n    <td>Defines the image to be used in order to provision load generators. See the 'lg_elastic_configuration' table below. Available from Performance Center 12.62 and plugin version 1.1.1.</td>\n    <td>Yes, if a load generator is defined to be provisioned from a Docker image.</td>\n   </tr>\n   <tr>\n    <td>controller_elastic_configuration</td>\n    <td>Defines the image to be used in order to provision the Controller. See the 'controller_elastic_configuration' table below. Available from Performance Center 12.62 and plugin version 1.1.1.</td>\n    <td>Yes, if the Controller is defined to be provisioned from a Docker image.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **group:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>group_name</td>\n    <td>Name of the group (it must be a unique name if several groups are defined).</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>vusers</td>\n    <td>Number of virtual users to allocate to the group for running the script.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>script_id</td>\n    <td>ID of the script in the LoadRunner Enterprise project.</td>\n    <td>Not required if the 'script_path' parameter is specified.</td>\n   </tr>\n   <tr>\n    <td>script_path</td>\n    <td>Path and name of the script to be added to the group, separated by double backslashes (\\\\). For example \"MyMainFolder\\\\MySubFolder\\\\MyScriptName'. Do not include the LoadRunner Enterprise root folder (named \"Subject\").</td>\n    <td>Not required if 'script_id' parameter is specified</td>\n   </tr>\n   <tr>\n    <td>lg_name</td>\n    <td>List of load generators to allocate to the group for running the script. The supported values are:\n     \n      \n* The hostname, as defined in LoadRunner Enterprise, of an existing load generator in LoadRunner Enterprise allocated as a host.\n\n      \n* **\"LG\"** followed by a number, to use an automatically matched load generator (recommended).\n\n      \n* **\"DOCKER\"** followed by a number, to use a dynamic load generator. Available from Performance Center 12.62, if your project is set to work with Docker. This option requires the 'lg_elastic_configuration' parameter to be defined (see the 'lg_elastic_configuration' table below).\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>command_line</td>\n    <td>The command line applied to the group.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>rts</td>\n    <td>Object defining the runtime settings of the script. See the 'rts' table below.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **rts:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>pacing</td>\n    <td>Can be used to define the number of iterations the script will run and the required delay between iterations (see the 'pacing' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>thinktime</td>\n    <td>Can be used to define think time (see the 'thinktime' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_vm</td>\n    <td>Can be used when defining Java environment runtime settings (see the 'java_vm' table below).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter</td>\n    <td>Can be used to define JMeter environment runtime settings (see the 'jmeter' table below).</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **pacing:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>number_of_iterations</td>\n    <td>Specifies the number of iterations to run; this must be a positive number.</td>\n    <td>Yes</td>\n   </tr>\n   <tr>\n    <td>type</td>\n    <td>Possible values for type attribute are:\n     \n      \n* **\"immediately\"**: ignores 'delay' and 'delay_random_range' parameters. This is the default value when no type is specified.\n\n      \n* **\"fixed delay\"**: 'delay' parameter is mandatory.\n\n      \n* **\"random delay\"**: 'delay' and 'delay_random_range' parameters are mandatory.\n\n      \n* **\"fixed interval\"**: 'delay' parameter is mandatory.\n\n      \n* **\"random interval\"**: 'delay' and 'delay_random_range' parameters are mandatory.\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>delay</td>\n    <td>Non-negative number (less than 'delay_at_range_to_seconds' when specified).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>delay_random_range</td>\n    <td>Non-negative number. It will be added to the value given to the 'delay' parameter (the value will be randomly chosen between the value given to 'delay' parameter and the same value to which is added the value of this parameter).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **thinktime:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>type</td>\n    <td>The ThinkTime Type attribute is one of:\n     \n      \n* **\"ignore\"**: This is the default value when no type is specified.\n\n      \n* **\"replay\"**: Provide 'limit_seconds' parameter with value.\n\n      \n* **\"modify\"**: Provide 'limit_seconds' and 'multiply_factor' parameters with values.\n\n      \n* **\"random\"**: Provide 'limit_seconds', 'min_percentage' and 'max_percentage' parameters with values.\n\n      </td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>min_percentage</td>\n    <td>This must be a positive number.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>max_percentage</td>\n    <td>This must be a positive number (it must be larger than the value provided for the 'min_percentage' parameter).</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>limit_seconds</td>\n    <td>This must be a positive number.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n   <tr>\n    <td>multiply_factor</td>\n    <td>The recorded think time is multiplied by this factor at runtime.</td>\n    <td>Depends on the value provided for the 'type' parameter.</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **java_vm:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>jdk_home</td>\n    <td>The JDK installation path.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_vm_parameters</td>\n    <td>List the Java command line parameters. These parameters can be any JVM argument. The common arguments are the debug flag (-verbose) or memory settings (-ms, -mx). In additional, you can also pass properties to Java applications in the form of a -D flag.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>use_xboot</td>\n    <td>Boolean: Instructs VuGen to add the Classpath before the Xbootclasspath (prepend the string).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>enable_classloader_per_vuser</td>\n    <td>Boolean: Loads each Virtual User using a dedicated class loader (runs Vusers as threads).</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>java_env_class_paths</td>\n    <td>A list of classpath entries. Use a double backslash (\\\\) for folder separators.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **jmeter:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>start_measurements</td>\n    <td>Boolean value to enable JMX measurements during performance test execution.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_home_path</td>\n    <td>Path to JMeter home. If not defined, the path from the %JMETER_HOME% environment variable is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_min_port</td>\n    <td>This number must be lower than the value provided in the 'jmeter_max_port' parameter. Both 'jmeter_min_port' and 'jmeter_max_port' parameters must be specified otherwise the default port values is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_max_port</td>\n    <td>This number must be higher than the value provided in the 'jmeter_min_port' parameter. Both 'jmeter_min_port' and 'jmeter_max_port' parameters must be specified otherwise the default port values is used.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>jmeter_additional_properties</td>\n    <td>JMeter additional properties file. Use double slash (\\\\) for folder separator.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **scheduler:**\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>rampup</td>\n    <td>Time, in seconds, to gradually start all virtual users. Additional virtual users are added every 15 seconds until the time specified in the parameter ends. If no value is specified, all virtual users are started simultaneously at the beginning of the test.</td>\n    <td>No</td>\n   </tr>\n   <tr>\n    <td>duration</td>\n    <td>Time, in seconds, that it will take to run the test after all virtual users are started. After this time, the test run ends. If not specified, the test will run until completion.</td>\n    <td>No</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **lg_elastic_configuration:** (available from Performance Center 12.62 and plugin version 1.1.1)\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>image_id</td>\n    <td>This number can be retrieved from:\n     \n      \n* The Administration page of LoadRunner Enterprise (you might need to turn to your LoadRunner Enterprise administrator as accessing this page requires admin privileges): select the **Orchestration** section -&gt; switch to **Docker Images** tab -&gt; you will have the list of all available Docker images for Load Generator purposes with their ID. You can make sure the images are available to your project from the **Orchestrators** tab.\n\n      \n* A LoadRunner Enterprise Rest API command applied on the project (replace the bracketed values): GET - <a rel=\"nofollow\">http(s)://(PCServer):(PortNumber)/LoadTest/rest/domains/(DomainName)/projects/(ProjectName)/dockerimages/</a> and select any valid image not having the value 'controller' for purpose.\n\n      </td>\n    <td>Yes if one of the load generator is defined to be provisioned from Docker image.</td>\n   </tr>\n   <tr>\n    <td>memory_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; Press **Assign LG** button -&gt; in the **Elastic** section, select **DOCKER1** -&gt; select the relevant image (based on the image name) -&gt; use the values provided in the 'Memory(GB)' dropdown list (if not specified, this parameter should be ignored).****</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n   <tr>\n    <td>cpu_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; Press **Assign LG** button -&gt; in the **Elastic** section, select **DOCKER1** -&gt; select the relevant image (based on the image name) -&gt; use the values provided in the 'CUPs' dropdown list (if not specified, this parameter should be ignored).****</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n **controller_elastic_configuration:** (available from Performance Center 12.62 and plugin version 1.1.1)\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n    <th>Parameter</th>\n    <th>Description</th>\n    <th>Required</th>\n   </tr>\n   <tr>\n    <td>image_id</td>\n    <td>This number can be retrieved from:\n     \n      \n* The Administration page of LoadRunner Enterprise (you might need to turn to your LoadRunner Enterprise administrator as accessing this page requires admin privileges): select the **Orchestration** section -&gt; switch to **Docker Images** tab -&gt; you will have the list of all available Docker images for Controller purposes with their ID. You can make sure the images are available to your project from the **Orchestrators** tab.\n\n      \n* A LoadRunner Enterprise Rest API command applied on the project (replace the bracketed values): GET - <a rel=\"nofollow\">http(s)://(PCServer):(PortNumber)/LoadTest/rest/domains/(DomainName)/projects/(ProjectName)/dockerimages/</a> and select any valid image having the value 'controller' for purpose.\n\n      </td>\n    <td>Yes if the Controller is defined to be provisioned from Docker image.</td>\n   </tr>\n   <tr>\n    <td>memory_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; select the Controller -&gt; choose **Elastic** option -&gt; select the relevant image -&gt; Under the **Resource Limits** label, find and use the values provided in the 'Memory(GB)' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n   <tr>\n    <td>cpu_limit</td>\n    <td>This parameter can be retrieved from **LoadRunner Enterprise Application** -&gt; **Test Management** -&gt; edit a test -&gt; select the Controller -&gt; choose **Elastic** option -&gt; select the relevant image -&gt; Under the **Resource Limits** label, find and use the values provided in the 'CUPs' dropdown list (if not specified, this parameter should be ignored).</td>\n    <td>Yes, if the image is defined with resource limits</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n \n\n\n\n In the next example, the value of the field is set with the code below:\n \n  \n* The test name is \"mytestname\" and it will be placed in the LoadRunner Enterprise project under the folder path \"Subject\\\\Tests\\\\mytests\" (the root folder of the folders, which is \"Subject\", should not be specified in the parameter). The folder separator is a double backslash (\\\\).\n\n  \n* In the content:\n   \n    \n* Since no Controller or load generator amount were specified, a random available Controller will be used to run the test, and the 'lg_name' parameter specified in each group will be used.\n\n    \n* In the 'group' parameter:\n     \n      \n* We added two scripts. For each, we provided a unique value in the 'group_name' parameter, and the number of virtual users to run the group.\n\n      \n* Since we did not know the ID of the scripts, we used the 'script_path' parameter in which we entered the script path (without \"Subject\") followed by the script name, and used double backslashes for separators.\n\n      \n* We specified the load generators that will be used by each group (in this case, load generators will automatically be matched as we use the 'LG' prefix).\n\n      \n\n    \n\n  \n* In the scheduler:\n   \n    \n* We want all Virtual Users to be initialized gradually (45 seconds).\n\n    \n* We want the test to stop after 5 minutes (300 seconds).\n\n    \n\n \n\n\n\n```groovy\n\n##################################################\ntest_name: mytestname\ntest_folder_path: \"Tests\\\\mytests\"\ntest_content:\n  group:\n    - group_name: \"TEstInt\"\n      vusers: '20'\n      script_path: \"plugin\\\\TEstInt\"\n      lg_name:\n        - \"LG1\"\n        - \"LG2\"\n    - group_name: \"Mtours\"\n      vusers: '20'\n      script_path: \"plugin\\\\mtours\"\n      lg_name:\n        - \"LG3\"\n        - \"LG4\"\n  scheduler:\n    rampup: '45'\n    duration: '300'\n##################################################\n`\n\n```\n\n\n\n\n\n \n\n\n\n In the next example, a YAML file location is specified as value and the content of the file contains the code below:\n \n  \n* The plugin automatically assigns the file name as the test name, and the folder path of the file in the Git repository is used to create the location of the test under the root folder ('Subject') in the LoadRunner Enterprise project.\n\n  \n* In the content:\n   \n    \n* Since no Controller or load generator amount were specified, a random available Controller will be used to run the test, and the 'lg_name' parameter specified in each group will be used.\n\n    \n* In the 'group' parameter:\n     \n      \n* We added two scripts. For each, we provided a unique value in the 'group_name' parameter, and the number of virtual users to run the group.\n\n      \n* Since we did not know the ID of the scripts, we used the 'script_path' parameter in which we entered the script path (without \"Subject\") followed by the script name, and used double backslashes for separators.\n\n      \n* We specified the load generators that will be used by each group (in this case, load generators will automatically be matched as we use the 'LG' prefix).\n\n      \n\n    \n\n  \n* In the scheduler:\n   \n    \n* We want all Virtual Users to be initialized gradually (45 seconds).\n\n    \n* We want the test to stop after 5 minutes (300 seconds).\n\n    \n\n \n\n\n\n```groovy\n\n##################################################\ngroup:\n  - group_name: \"TEstInt\"\n    vusers: '20'\n    script_path: \"plugin\\\\TEstInt\"\n    lg_name:\n      - \"LG1\"\n      - \"LG2\"\n  - group_name: \"Mtours\"\n    vusers: '20'\n    script_path: \"plugin\\\\mtours\"\n    lg_name:\n      - \"LG3\"\n      - \"LG4\"\nscheduler:\n  rampup: '45'\n  duration: '300'\n##################################################\n`\n\n```\n\n\n\n\n\n \n\n\n\n In the next example, a YAML file location is specified as value and the content of the file contains the code below:\n \n  \n* The plugin automatically assigns the file name as the test name, and the folder path of the file in the Git repository is used to create the location of the test under the root folder ('Subject') in the LoadRunner Enterprise project.\n\n  \n* Since the 'controller' parameter and the 'lg_amount' parameter are specified, the specified controller will be used to run the test and three automatch load generators will be used and shared by all groups.\n\n  \n* The content of the file is defined with seven groups, all being set with the “rts” parameter:\n   \n    \n* The “pacing” parameter is used with different options for all groups.\n\n    \n* The “java_vm” parameter is used for five scripts with JavaVM for protocol.\n\n    \n* The “thinktime” parameter is used with different options for four groups.\n\n    \n* The “jmeter” parameter is used for two scripts with JMeter for protocol.\n\n    \n\n  \n* In the scheduler:\n   \n    \n* We want all Virtual Users to be initialized gradually (120 seconds).\n\n    \n* We want the test to stop after 10 minutes (600 seconds).\n\n    \n\n \n\n\n\n```groovy\n\n##################################################\ncontroller: \"mycontroller\"\nlg_amount: 3\ngroup:\n  - group_name: \"JavaVuser_LR_Information_pacing_immediately_thinktime_ignore\"\n    vusers: 50\n    script_id: 394\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"immediately\"\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        use_xboot: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"ignore\"\n\n  - group_name: \"JavaHTTP_BigXML_pacing_fixed_delay_thinktime_replay\"\n    vusers: 50\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"fixed delay\"\n        delay: 10\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n      thinktime:\n        type: \"replay\"\n        limit_seconds: 30\n\n  - group_name: \"JavaVuser_LR_Information_immediately_pacing_random_delay_thinktime_modify\"\n    vusers: 50\n    script_id: 394\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random delay\"\n        delay: 10\n        delay_random_range: 20\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"modify\"\n        limit_seconds: 30\n        multiply_factor: 2\n\n  - group_name: \"JavaHTTP_BigXML_pacing_fixed_interval_thinktime_random\"\n    vusers: 50\n    #script_id: 392\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"fixed interval\"\n        delay: 10\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n      thinktime:\n        type: \"random\"\n        limit_seconds: 30\n        min_percentage: 2\n        max_percentage: 3\n\n  - group_name: \"JavaHTTP_BigXML_pacing_random_interval\"\n    vusers: 50\n    script_path: \"scripts\\\\java_protocols\\\\JavaHTTP_BigXML\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      java_vm:\n        jdk_home: \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_191\"\n        java_vm_parameters: \"java_vm_parameters\"\n        enable_classloader_per_vuser: true\n        java_env_class_paths:\n          - \"java_env_class_path1\"\n          - \"java_env_class_path2\"\n\n  - group_name: \"Mtours_pacing_random_interval\"\n    vusers: 50\n    script_path: \"scripts\\\\Mtours\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      jmeter:\n        start_measurements: true\n        jmeter_home_path: \"c:\\\\jmeter\"\n        jmeter_min_port: 2001\n        jmeter_max_port: 3001\n        jmeter_additional_properties: \"jmeter_additional_properties\"\n  - group_name: \"Mtours_pacing_random_interval_Jmeter_default_port\"\n    vusers: 50\n    script_path: \"scripts\\\\Mtours\"\n    rts:\n      pacing:\n        number_of_iterations: 2\n        type: \"random interval\"\n        delay: 10\n        delay_random_range: 20\n      jmeter:\n        start_measurements: true\n\nscheduler:\n  rampup: 120\n  duration: 600\n##################################################\n`\n\n```",
          "isOptional": false
        },
        {
          "name": "testInstanceId",
          "type": "String",
          "values": [],
          "description": "Represents an instance of a performance test within an ALM Test Set. In order to find the test instance id go to: **LoadRunner Enterprise Application &gt; Test Lab perspective &gt; Performance Test Set table** and look for the ID column",
          "isOptional": false
        },
        {
          "name": "autoTestInstanceID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDurationHours",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDurationMinutes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "postRunAction",
          "type": "Enum",
          "values": [
            "COLLATE",
            "COLLATE_AND_ANALYZE",
            "DO_NOTHING"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vudsMode",
          "type": "boolean",
          "values": [],
          "description": "A **Virtual User Day (VUD)** license provides you with a specified number of Vusers (VUDs) that you can run an unlimited number of times within a 24 hour period. Before using this option, make sure that VUDs licenses are applied in your Micro Focus LoadRunner Enterprise environment.",
          "isOptional": false
        },
        {
          "name": "statusBySLA",
          "type": "boolean",
          "values": [],
          "description": "Check this option in order to set the build-step status according to a pre-defined **SLA (Service Level Agreement)** configured within your performance test. Unless checked, the build-step will be labeled as <i>Passed</i> as long as no failures occurred.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addRunToTrendReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "trendReportId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "HTTPSProtocol",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyOutURL",
          "type": "String",
          "values": [],
          "description": "Add your local proxy as following: **http(s)://host:port**\n \n\n or Leave empty if not using a local proxy. The following proxy configurations are not supported:\n \n  \n* PAC (proxy auto-config). \n\n  \n* Automatic configuration script.",
          "isOptional": false
        },
        {
          "name": "credentialsProxyId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retry",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retryDelay",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "retryOccurrences",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "micro-focus-performance-center-integration"
    },
    {
      "command": "pdrone",
      "title": "pdrone: Package Drone Deployer",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "The main URL of the server. Not to any channel or artifact but to the server only.",
          "isOptional": false
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "A [secrect text](https://wiki.jenkins.io/display/JENKINS/Plain+Credentials+Plugin) credential stored in Jenkins to be used as deploy key.",
          "isOptional": false
        },
        {
          "name": "artifacts",
          "type": "String",
          "values": [],
          "description": "You can use wildcards like 'module/dist/**/*.zip'. See [ the includes attribute of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format. The base directory is <a rel=\"nofollow\">the workspace</a>. You can only archive files that are located in your workspace.",
          "isOptional": false
        },
        {
          "name": "allowEmptyArchive",
          "type": "boolean",
          "values": [],
          "description": "Normally, a build fails if archiving returns zero artifacts. This option allows the archiving process to return nothing without failing the build. Instead, the build will simply throw a warning.",
          "isOptional": true
        },
        {
          "name": "defaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "Package Drone uses the Ant glob pattern which excludes by default some patterns. Refer [here](http://ant.apache.org/manual/dirtasks.html#defaultexcludes) for the complete list of patterns.\n \nThis option allows to enable or disable the default Ant exclusions.",
          "isOptional": true
        },
        {
          "name": "deployKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optionally specify [the 'excludes' pattern](http://ant.apache.org/manual/Types/fileset.html), such as \"foo/bar/**/*\". A file that matches this mask will not be archived even if it matches the mask specified in 'files to archive' section.",
          "isOptional": true
        },
        {
          "name": "failsAsUpload",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stripPath",
          "type": "boolean",
          "values": [],
          "description": "This will strip the leading directories from the uploaded file name. For example the file `foo/bar/file` will get uploaded as `file` instead.",
          "isOptional": true
        },
        {
          "name": "uploadV3",
          "type": "boolean",
          "values": [],
          "description": "This will upload all artifacts in a single transfer archive, which is faster but requires the Upload API V3, which is only present in Eclipse Package Drone™ since version 0.14.0.",
          "isOptional": true
        }
      ],
      "plugin": "package-drone"
    },
    {
      "command": "perfReport",
      "title": "perfReport: Publish Performance test result report",
      "description": "",
      "parameters": [
        {
          "name": "sourceDataFiles",
          "type": "String",
          "values": [],
          "description": "Specify the path to the Performance report files, relative to the <a rel=\"nofollow\">workspace root</a>. Plugin will be automatically detect parser for each report file. \n\n \n  \n* You can specify multiple files and directories separated by semicolon. \n\n  \n* You use an Ant 'fileset' pattern. \n\n \n \n Default Values are: \n\n \n  \n* JMeter reports: \"**/*.jtl\"\n\n  \n* JMeter csv reports: \"**/*.csv\"\n\n  \n* JMeter Summariser reports: \"**/*.log\"\n\n  \n* Taurus reports: \"**/*.xml\"\n\n  \n* JUnit report: \"**/TEST-*.xml\"\n\n  \n* wrk report: \"**/*.wrk\"\n\n \n \n * By default jmeter writes summariser statistics to jmeter.log. To enable logging summariser statistics to separate log file add the property to jmeter.properties file to #Logging Configuration block : \"log_file.jmeter.reporters.Summariser=filename.log\" \n\n \n ** Default time format, that JMeter used for logging is \"yyyy/mm/dd HH:mm:ss\". See \"log_format\" property in jmeter.properties file in #Logging Configuration block. \n\n \n *** By default wrk does not write output files. You'll need to redirect the STDOUT output for a file as in \n\n \n```groovy\nwrk [options] [url] &gt; results.wrk\n```",
          "isOptional": false
        },
        {
          "name": "baselineBuild",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "compareBuildPrevious",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "constraints",
          "type": "? extends hudson.plugins.performance.constraints.AbstractConstraint",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "errorFailedThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "errorUnstableResponseTimeThreshold",
          "type": "String",
          "values": [],
          "description": "The thresholds settings should be delimited by a new line character \"\\n\".\n\n\n\n\n  The actual threshold number should be seperated from the test file name by a colon \":\"\n\n\n\n```groovy\nExample:\n-------------------------------------\nJMeterResultsOrders.jtl:2000\nJMeterResultsGetCustomer.jtl:500\nJMeterResultsCreateCustomer.jtl:700\n-------------------------------------\n\n```",
          "isOptional": true
        },
        {
          "name": "errorUnstableThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeResponseTime",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildIfNoResultFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterRegex",
          "type": "String",
          "values": [],
          "description": "If this field is not empty, its content will be considered as a regular expression to only take into account URI matching it. \n\n \n Example : ^(HP|Scenario|Search)(-success|-failure)?$",
          "isOptional": true
        },
        {
          "name": "graphType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreUnstableBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "junitOutput",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modeEvaluation",
          "type": "boolean",
          "values": [],
          "description": "Standard Mode activates upper box and ignores lower box. \n\n \n Expert Mode activates lower box and ignores upper box.",
          "isOptional": true
        },
        {
          "name": "modeOfThreshold",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modePerformancePerTestCase",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modeThroughput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nthBuildNumber",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parsers",
          "type": "Nested",
          "values": [
            "$class: 'IagoParser'",
            "$class: 'JMeterCsvParser'",
            "$class: 'JMeterParser'",
            "$class: 'JUnitParser'",
            "$class: 'JmeterSummarizerParser'",
            "$class: 'LoadRunnerParser'",
            "$class: 'TaurusParser'",
            "$class: 'WrkSummarizerParser'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "percentiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "persistConstraintLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "relativeFailedThresholdNegative",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "relativeFailedThresholdPositive",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "relativeUnstableThresholdNegative",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "relativeUnstableThresholdPositive",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance"
    },
    {
      "command": "perfSigDynatraceReports",
      "title": "perfSigDynatraceReports: Performance Signature Dynatrace reports",
      "description": "",
      "parameters": [
        {
          "name": "envId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metrics",
          "type": "Nested",
          "values": [
            "metricId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nonFunctionalFailure",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatracesaas"
    },
    {
      "command": "perfSigReports",
      "title": "perfSigReports: Publish Performance Signature reports",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "configurationTestCases",
          "type": "Nested",
          "values": [
            "$class: 'GenericTestCase'",
            "$class: 'UnitTestCase'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deleteSessions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportSessions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nonFunctionalFailure",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "removeConfidentialStrings",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "perfpublisher",
      "title": "perfpublisher: Activate PerfPublisher for this project",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "threshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unhealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metrics",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "parseAllMetrics",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "perfpublisher"
    },
    {
      "command": "pingcodeBuildRecord",
      "title": "pingcodeBuildRecord: Send build result to pingcode",
      "description": "",
      "parameters": [
        {
          "name": "defaultSummary",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overviewPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "pingcodeDeployRecord",
      "title": "pingcodeDeployRecord: Send deploy result to pingcode",
      "description": "",
      "parameters": [
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isTagged",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "pitmutation",
      "title": "pitmutation: Record Pit mutation testing report",
      "description": "",
      "parameters": [
        {
          "name": "killRatioMustImprove",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "minimumKillRatio",
          "type": "float",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mutationStatsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pitmutation"
    },
    {
      "command": "plot",
      "title": "plot: Plot build data",
      "description": "",
      "parameters": [
        {
          "name": "group",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "style",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "csvFileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "csvSeries",
          "type": "Nested",
          "values": [
            "file",
            "url",
            "inclusionFlag",
            "exclusionValues",
            "displayTableFlag"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exclZero",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepRecords",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "logarithmic",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numBuilds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "propertiesSeries",
          "type": "Nested",
          "values": [
            "file",
            "label"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDescr",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xmlSeries",
          "type": "Nested",
          "values": [
            "file",
            "xpath",
            "nodeType",
            "url"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "yaxis",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "yaxisMaximum",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "yaxisMinimum",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "plot"
    },
    {
      "command": "pmd",
      "title": "pmd: [Deprecated] Publish PMD analysis results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pmd"
    },
    {
      "command": "podTemplate",
      "title": "podTemplate: Define a podTemplate to use in the kubernetes plugin",
      "description": "Defines a Kubernetes pod template that can be used to create nodes. \n\n\n \n\n\n Example: \n\n\n```groovy\npodTemplate(...) {\n    node(POD_LABEL) {\n        // some steps\n    }\n}\n\n```",
      "parameters": [
        {
          "name": "activeDeadlineSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "annotations",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "The Kubernetes cloud to use to schedule the pod.\n\n\n If unset, the first available Kubernetes cloud will be used.",
          "isOptional": true
        },
        {
          "name": "containers",
          "type": "Nested",
          "values": [
            "name",
            "image",
            "alwaysPullImage",
            "args",
            "command",
            "envVars",
            "livenessProbe",
            "ports",
            "privileged",
            "resourceLimitCpu",
            "resourceLimitEphemeralStorage",
            "resourceLimitMemory",
            "resourceRequestCpu",
            "resourceRequestEphemeralStorage",
            "resourceRequestMemory",
            "runAsGroup",
            "runAsUser",
            "shell",
            "ttyEnabled",
            "workingDir"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envVars",
          "type": "Nested",
          "values": [
            "containerEnvVar",
            "envVar",
            "podEnvVar",
            "secretEnvVar"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hostNetwork",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "idleMinutes",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imagePullSecrets",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inheritFrom",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instanceCap",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Jenkins node label to bind. If left blank, one will be generated for you, and inside the step it will be bound to the variable `POD_LABEL` so you can use this as the argument to the `node` step.\n \n\n Example:\n \n```groovy\n        podTemplate(...) {\n            node(POD_LABEL) {\n                // some steps\n            }\n        }\n    \n```",
          "isOptional": true
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nodeSelector",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nodeUsageMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "podRetention",
          "type": "Nested",
          "values": [
            "always",
            "default",
            "never",
            "onFailure"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runAsGroup",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runAsUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serviceAccount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "showRawYaml",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "slaveConnectTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "supplementalGroups",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "volumes",
          "type": "Nested",
          "values": [
            "configMapVolume",
            "emptyDirVolume",
            "hostPathVolume",
            "nfsVolume",
            "persistentVolumeClaim",
            "secretVolume"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspaceVolume",
          "type": "Nested",
          "values": [
            "dynamicPVC",
            "emptyDirWorkspaceVolume",
            "hostPathWorkspaceVolume",
            "nfsWorkspaceVolume",
            "persistentVolumeClaimWorkspaceVolume"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "yaml",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "yamlMergeStrategy",
          "type": "Nested",
          "values": [
            "merge",
            "override"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes"
    },
    {
      "command": "polaris",
      "title": "polaris: Execute Polaris Software Integrity Platform CLI",
      "description": "",
      "parameters": [
        {
          "name": "arguments",
          "type": "String",
          "values": [],
          "description": "The command line arguments to pass to the Polaris CLI",
          "isOptional": false
        },
        {
          "name": "createChangeSetFile",
          "type": "Nested",
          "values": [
            "excluding",
            "including",
            "returnSkipCode"
          ],
          "description": "Creates a file at $CHANGE_SET_FILE_PATH (by default, the workspace directory) containing a list of files generated from the Jenkins-provided SCM changeset.\n\n Used for Incremental analysis (--incremental) as the file containing the list of changed files for analysis.",
          "isOptional": true
        },
        {
          "name": "polarisCli",
          "type": "String",
          "values": [],
          "description": "The Polaris CLI installation to execute",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "If true (checked), returns the status code of the Polaris CLI run instead of throwing an exception",
          "isOptional": true
        }
      ],
      "plugin": "synopsys-polaris"
    },
    {
      "command": "polarisIssueCheck",
      "title": "polarisIssueCheck: Check for issues in the Polaris Software Integrity Platform found by a previous execution of the CLI",
      "description": "",
      "parameters": [
        {
          "name": "jobTimeoutInMinutes",
          "type": "int",
          "values": [],
          "description": "The maximum number of minutes to wait for jobs started by the Polaris CLI to complete when executed without -w (nonblocking mode). Must be a positive integer, defaults to 30 minutes.",
          "isOptional": true
        },
        {
          "name": "returnIssueCount",
          "type": "boolean",
          "values": [],
          "description": "Check this box to return the issue count as an integer instead of throwing an exception",
          "isOptional": true
        }
      ],
      "plugin": "synopsys-polaris"
    },
    {
      "command": "portshift_vulnerability_scanner",
      "title": "portshift_vulnerability_scanner: Portshift Vulnerability Scanner",
      "description": "",
      "parameters": [
        {
          "name": "accessKey",
          "type": "String",
          "values": [],
          "description": "The access key of the service account used to communicate with the Portshift management server.",
          "isOptional": false
        },
        {
          "name": "secretKey",
          "type": "String",
          "values": [],
          "description": "The secret key of the service account used to communicate with the Portshift management server.",
          "isOptional": false
        },
        {
          "name": "imageName",
          "type": "String",
          "values": [],
          "description": "The name of the image to scan.",
          "isOptional": false
        },
        {
          "name": "imageTag",
          "type": "String",
          "values": [],
          "description": "The tag of the image to scan. If empty default to 'latest'",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "The URL of the Portshift management server. e.g: console.portshift.io",
          "isOptional": false
        },
        {
          "name": "scannerIp",
          "type": "String",
          "values": [],
          "description": "The scanner IP (for clair)",
          "isOptional": false
        }
      ],
      "plugin": "portshift-scanner"
    },
    {
      "command": "powershell",
      "title": "powershell: PowerShell Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "Executes a PowerShell script. Multiple lines allowed. This plugin supports Microsoft PowerShell 3+.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "pragprog",
      "title": "pragprog: Activate tips from The Pragmatic Programmer",
      "description": "",
      "parameters": [
        {
          "name": "displayLanguageCode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "indicateBuildResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pragprog"
    },
    {
      "command": "pretestedIntegrationPublisher",
      "title": "pretestedIntegrationPublisher: Pretested Integration publisher to push to integration branch",
      "description": "",
      "parameters": [],
      "plugin": "pretested-integration"
    },
    {
      "command": "prismaIaC",
      "title": "prismaIaC: Prisma Cloud IaC Scan",
      "description": "",
      "parameters": [
        {
          "name": "assetName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "templateType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "templateVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteriaHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteriaLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteriaMedium",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureCriteriaOperator",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "prisma-cloud-iac-scan"
    },
    {
      "command": "probelyScan",
      "title": "probelyScan: Probely Security Scanner",
      "description": "",
      "parameters": [
        {
          "name": "targetId",
          "type": "String",
          "values": [],
          "description": "ID of the target you want Probely to scan.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credential identifier for the Probely API key.",
          "isOptional": false
        },
        {
          "name": "failThreshold",
          "type": "String",
          "values": [],
          "description": "Fail the build as soon as a vulnerability with the following severity level is found.",
          "isOptional": true
        },
        {
          "name": "stopIfFailed",
          "type": "boolean",
          "values": [],
          "description": "If the build fails because the target is vulnerable, stop scanning for more vulnerabilities.",
          "isOptional": true
        },
        {
          "name": "waitForScan",
          "type": "boolean",
          "values": [],
          "description": "Wait for the scan to complete before proceeding to the next step in the pipeline. \n\n \n Since a scan can take a long time, the plugin will return as soon as the scan starts. This is enabled by default to make the build faster.\n\n Please note that disabling this option implies that the build step always finishes successfully, even if vulnerabilities are found later on. \n\n \n Enabling this option allows the build to fail if vulnerabilities are found.",
          "isOptional": true
        }
      ],
      "plugin": "probely-security"
    },
    {
      "command": "properties",
      "title": "properties: Set job properties",
      "description": "Updates the properties of the job which runs this step. Mainly useful from multibranch Pipelines, so that `Jenkinsfile` itself can encode what would otherwise be static job configuration. Existing properties set through the Jenkins UI for non-multibranch Pipelines will be preserved.",
      "parameters": [
        {
          "name": "properties",
          "type": "Nested",
          "values": [
            "allowBrokenBuildClaiming",
            "$class: 'AssemblaProjectProperty'",
            "authorizationMatrix",
            "$class: 'AuthorizeProjectProperty'",
            "$class: 'BacklogProjectProperty'",
            "$class: 'BalanceProjectProperty'",
            "$class: 'BeforeJobSnapshotJobProperty'",
            "$class: 'BlockBuildJobProperty'",
            "$class: 'BlockItemJobProperty'",
            "$class: 'BuildBlockerProperty'",
            "$class: 'BuildConfigProjectProperty'",
            "buildDiscarder",
            "compressBuildLog",
            "$class: 'BuildNowTextProperty'",
            "$class: 'BuildPreferenceJobProperty'",
            "$class: 'CNAuthProjectProperty'",
            "$class: 'CachetJobProperty'",
            "$class: 'ChaosButlerOptOutJobProperty'",
            "$class: 'CheckBuildJobProperty'",
            "$class: 'ConfigurationPermissionEnforcer'",
            "$class: 'ConjurJITJobProperty'",
            "$class: 'ContrastPluginConfig'",
            "$class: 'CustomIconProperty'",
            "$class: 'CustomMsgJobProperty'",
            "$class: 'DatadogJobProperty'",
            "$class: 'DeployNowJobProperty'",
            "$class: 'DingTalkJobProperty'",
            "disableConcurrentBuilds",
            "disableResume",
            "$class: 'DockerJobProperty'",
            "$class: 'DockerJobTemplateProperty'",
            "$class: 'DryRunJobProperty'",
            "durabilityHint",
            "$class: 'EasyQAPluginProperties'",
            "enforceBuildSchedule",
            "$class: 'EnvInjectJobProperty'",
            "$class: 'FailedJobDeactivator'",
            "$class: 'FeatureBranchProperty'",
            "$class: 'GitBucketProjectProperty'",
            "gitLabConnection",
            "giteeConnection",
            "$class: 'GithubProjectProperty'",
            "$class: 'GitlabLogoProperty'",
            "$class: 'GogsProjectProperty'",
            "$class: 'GraphsByBuildDates'",
            "$class: 'GroovyLabelAssignmentProperty'",
            "$class: 'HeavyJobProperty'",
            "$class: 'HipChatJobProperty'",
            "$class: 'HubotJobProperty'",
            "$class: 'IceScrumProjectProperty'",
            "$class: 'JiraProjectProperty'",
            "$class: 'JobBuildsContainersDefinition'",
            "$class: 'JobInclusionJobProperty'",
            "$class: 'JobOwnerJobProperty'",
            "$class: 'JobPrerequisites'",
            "$class: 'JobRestrictionProperty'",
            "branchTearDownExecutor",
            "$class: 'LeastLoadDisabledProperty'",
            "$class: 'LoggingJobProperty'",
            "$class: 'LogstashJobProperty'",
            "$class: 'MantisProjectProperty'",
            "$class: 'MavenInfoJobConfig'",
            "$class: 'MavenRepoCleanerProperty'",
            "$class: 'MetadataJobProperty'",
            "$class: 'NaginatorOptOutProperty'",
            "overrideIndexTriggers",
            "parameters",
            "realTimeJUnitReports",
            "$class: 'PermalinkStorage'",
            "$class: 'PipelineConfigProjectProperty'",
            "$class: 'PipelineProperty'",
            "pipelineTriggers",
            "preserveStashes",
            "$class: 'PriorityJobProperty'",
            "$class: 'ProjectIdentity'",
            "sidebarLinks",
            "$class: 'RebuildSettings'",
            "$class: 'RedmineProjectProperty'",
            "$class: 'RequeueJobProperty'",
            "$class: 'RequiredResourcesProperty'",
            "requireResources",
            "$class: 'ScannerJobProperty'",
            "$class: 'SharedWorkspace'",
            "$class: 'SquashTAWrapperProperty'",
            "$class: 'Tagger'",
            "$class: 'TemplateImplementationProperty'",
            "$class: 'TemplateProperty'",
            "$class: 'TemplateWorkflowInstances'",
            "$class: 'TemplateWorkflowProperty'",
            "throttleJobProperty",
            "$class: 'TracProjectProperty'",
            "$class: 'TrackingGitProperty'",
            "$class: 'TrackingSVNProperty'",
            "$class: 'TransifexProjectProperty'",
            "$class: 'UpdateTransientProperty'",
            "$class: 'UrlProperty'",
            "$class: 'WallDisplayJobProperty'",
            "$class: 'WatcherJobProperty'",
            "$class: 'WavefrontJobProperty'",
            "$class: 'WorkflowJobProperty'",
            "$class: 'ZanataWebhookProjectProperty'",
            "$class: 'ZenTimestampJobProperty'",
            "$class: 'com.perfectomobile.jenkins.copyartifact.CopyArtifactPermissionProperty'",
            "$class: 'com.tikal.hudson.plugins.notification.HudsonNotificationProperty'",
            "copyArtifactPermission",
            "$class: 'hudson.plugins.jobConfigHistory.JobLocalConfiguration'",
            "$class: 'hudson.plugins.svn_partial_release_mgr.ui.JobPropertyImpl'",
            "$class: 'it.dockins.dockerslaves.spec.ContainerSetDefinition'",
            "$class: 'jenkins.branch.RateLimitBranchProperty$JobPropertyImpl'",
            "$class: 'jenkins.plugins.elanceodesk.workplace.notifier.WebhookJobProperty'",
            "$class: 'jenkins.plugins.mdtdeploy.JobPropertyImpl'",
            "office365ConnectorWebhooks",
            "$class: 'org.jenkins.ci.plugins.html5_notifier.JobPropertyImpl'",
            "$class: 'org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty'",
            "$class: 'org.jenkinsci.plugins.periodicreincarnation.JobLocalConfiguration'",
            "$class: 'sh.hyper.hyperslaves.spec.ContainerSetDefinition'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-multibranch"
    },
    {
      "command": "protecodesc",
      "title": "protecodesc: Black Duck Binary Analysis",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "BDBA supports both username/password and an API token.",
          "isOptional": true
        },
        {
          "name": "protecodeScGroup",
          "type": "String",
          "values": [],
          "description": "Specify the BDBA Group ID where the artifacts should be uploaded to.\n \n Group ID can be found from the BDBA service by looking at the URL when browsing an individual group: `https://protecode-sc.mydomain.com/group/**1234**/` or with Groups API `https://protecode-sc.mydomain.com/api/groups/`. \n\n \n\n <i> Please notice that this value should be a number, not the name or the path to the group.</i>",
          "isOptional": true
        },
        {
          "name": "convertToSummary",
          "type": "boolean",
          "values": [],
          "description": "The summary can be shown using [Summary Display Jenkins Plugin.](https://wiki.jenkins-ci.org/display/JENKINS/Summary+Display+Plugin)\n \n\n The report file name to publish is **`protecodesc.xml`**.\n \n\n\n \n\n If you wish to see only the latest results in the summary, you can run a \"shell command\" build step before the BDBA build step: \"rm -rf reports\". You can find the mentioned build step in the list of possible build steps on the build configuration page. Please notice that this action is irreversible.",
          "isOptional": true
        },
        {
          "name": "customHeader",
          "type": "String",
          "values": [],
          "description": "Please specify the custom header in JSON format for fetching a file by URL\n \n\n\n \n\n This is for the cases where the server from which BDBA must fetch the file requires authentication or similar header values.\n \n\n\n \n\n <i> For example {\"Customheader\": \"Foobar\", \"token\": \"oooooooo1!\"} </i>",
          "isOptional": true
        },
        {
          "name": "directoryToScan",
          "type": "String",
          "values": [],
          "description": "Please specify the directory in the workspace you wish to scan.\n \n\n\n \n\n Alternatively you can specify the URL of the file you wish to scan, BDBA will fetch the file from the given URL\n \n\n\n \n\n For files in the workarea, if you wish to use an absolute path put '/' at the beginning of the path, this will cause the plugin to not try to find the folder from the build workspace. <i>Please notice that it is possible to upload massive amounts of files if this option is set to absolute path and the 'Include subdirectories' is enabled.</i>\n \n\n\n \n\n If there are 10 or more files to scan, the plugin will zip them before sending them. You can specify the name for the BDBA scan job in the field \"Scan job name (used only for zip)\".",
          "isOptional": true
        },
        {
          "name": "dontZipFiles",
          "type": "boolean",
          "values": [],
          "description": "Do not zip files in any situation. Usually the BDBA plugin zips files if there are more than 50, to avoid transfer overhead. <i> This configuration item is ignored if the BDBA instance is Synopsys hosted. </i>",
          "isOptional": true
        },
        {
          "name": "endAfterSendingFiles",
          "type": "boolean",
          "values": [],
          "description": "Whether to end the build phase when the files are sent to BDBA. You can see the links to the results in the console.",
          "isOptional": true
        },
        {
          "name": "failIfVulns",
          "type": "boolean",
          "values": [],
          "description": "Trigger build failure if BDBA finds vulnerabilities from the scanned files. The build will always fail if the connection or api calls to BDBA returned any errors.",
          "isOptional": true
        },
        {
          "name": "includeSubdirectories",
          "type": "boolean",
          "values": [],
          "description": "Also include subdirectories of the directory from which the build attempts to find files to scan.\n \n\n\n \n\n <i>Please notice that if this is selected, it is possible to accidentally upload massive amounts of files. </i>",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "Here you can provide a regular expression to include only certain files. The option is the default java Pattern format: https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html\n \n\n\n \n\n <i>Leave blank to include all found files.</i>",
          "isOptional": true
        },
        {
          "name": "protecodeScanName",
          "type": "String",
          "values": [],
          "description": "BDBA jenkins plugin will zip given files if there are 10 or more. This is done to avoid file transfer overhead produced by moving many files. The plugin will still show the results per file.",
          "isOptional": true
        },
        {
          "name": "scanOnlyArtifacts",
          "type": "boolean",
          "values": [],
          "description": "Scan only Jenkins Artifacts produced by earlier steps of the build.",
          "isOptional": true
        },
        {
          "name": "scanTimeout",
          "type": "int",
          "values": [],
          "description": "Timeout for the scan. If this timeout is exceeded the plugin will not try to get further results from BDBA. If a comprehensive timeout for the build is needed, it is suggested to use the [Build Timeout Plugin](https://plugins.jenkins.io/build-timeout).",
          "isOptional": true
        }
      ],
      "plugin": "protecode-sc"
    },
    {
      "command": "publishATX",
      "title": "publishATX: [TT] Publish ATX Reports",
      "description": "Publishes the ATX reports of all configured ECU-TEST packages or projects in this job.\n\n These ATX reports are generated automatically in this post-build step and uploaded to TEST-GUIDE.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\npublishATX(String atxName, boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\npublishATX(ATXInstallation installation, boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nATXServer.publish(boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nATXServer.publish(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\npublishATX('TEST-GUIDE', false, false, true, true)\n            \n```\n\n   \n```groovy\ndef server = ATX.server('TEST-GUIDE')\npublishATX atxInstallation: server.installation\n            \n```\n\n   \n```groovy\ndef server = ATX.newServer('TEST-GUIDE', 'ECU-TEST')\nserver.publish()\n            \n```\n\n   \n```groovy\ndef server = ATX.newServer atxName: 'TEST-GUIDE', toolName: 'ECU-TEST'\nserver.publish allowMissing: true, runOnFailed: true, archiving: true, keepAll: true\n            \n```",
      "parameters": [
        {
          "name": "atxName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "atxInstallation",
          "type": "Nested",
          "values": [
            "name",
            "toolName",
            "config"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnOffline",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "injectBuildVars",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePersistedSettings",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishBrakeman",
      "title": "publishBrakeman: Publish Brakeman reports",
      "description": "Publishes the output of a Brakeman scan.",
      "parameters": [
        {
          "name": "outputFile",
          "type": "String",
          "values": [],
          "description": "Path to the Brakeman results (using -f tabs)",
          "isOptional": false
        }
      ],
      "plugin": "brakeman"
    },
    {
      "command": "publishBuildInfo",
      "title": "publishBuildInfo: Publish build Info to Artifactory",
      "description": "",
      "parameters": [
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "publishBuildRecord",
      "title": "publishBuildRecord: Publish build record to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "result",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitCommit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolchainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "publishChecks",
      "title": "publishChecks: Publish customized checks to SCM platforms",
      "description": "",
      "parameters": [
        {
          "name": "conclusion",
          "type": "Enum",
          "values": [
            "NONE",
            "ACTION_REQUIRED",
            "SKIPPED",
            "CANCELED",
            "TIME_OUT",
            "FAILURE",
            "NEUTRAL",
            "SUCCESS"
          ],
          "description": "The conclusion of the check, can be \"ACTION_REQUIRED\", \"SKIPPED\", \"CANCELED\", \"TIME_OUT\", \"FAILURE\", \"NEUTRAL\", \"SUCCESS\" or \"NONE\". By default, \"SUCCESS\" will be used. When providing the conclusion other than \"NONE\", please make sure the status is \"COMPLETED\".",
          "isOptional": true
        },
        {
          "name": "detailsURL",
          "type": "String",
          "values": [],
          "description": "The URL of the site where full details can be found. When providing this parameter, make sure it is http or https scheme.",
          "isOptional": true
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name or identifier of the check.",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "Enum",
          "values": [
            "NONE",
            "QUEUED",
            "IN_PROGRESS",
            "COMPLETED"
          ],
          "description": "The status of the check, can be \"QUEUED\", \"IN_PROGRESS\", or \"COMPLETED\". By default, \"COMPLETED\" will be used.",
          "isOptional": true
        },
        {
          "name": "summary",
          "type": "String",
          "values": [],
          "description": "The summary of the check run. This field supports Markdown.",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "The details of the check. This parameter supports Markdown.",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "The title of the check run.",
          "isOptional": true
        }
      ],
      "plugin": "checks-api"
    },
    {
      "command": "publishCodeCoverage",
      "title": "publishCodeCoverage: ALM Octane code coverage publisher",
      "description": "See help information in [ALM Octane Help Center](https://admhelp.microfocus.com/octane/en/latest/Online/Content/UserGuide/pipelines-code-coverage.htm)",
      "parameters": [
        {
          "name": "jacocoPathPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lcovPathPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "publishConfluence",
      "title": "publishConfluence: Publish to Confluence",
      "description": "",
      "parameters": [
        {
          "name": "siteName",
          "type": "String",
          "values": [],
          "description": "Choose the Confluence site to connect to. These sites are configured in the <a rel=\"nofollow\">Global Configuration</a>.",
          "isOptional": false
        },
        {
          "name": "spaceName",
          "type": "String",
          "values": [],
          "description": "Enter the Space name of the wiki page. E.g., the string after \"display\" in the page's URL: http://confluence.example.com/display/<u>Space</u>/Page\n \n\n If the Space name contains a build-time variable, the validity of the name cannot be verified until build-time.",
          "isOptional": false
        },
        {
          "name": "pageName",
          "type": "String",
          "values": [],
          "description": "Enter the Space name of the wiki page. E.g., the string after the Space name in the page's URL: http://confluence.example.com/display/Space/<u>Page</u>\n \n\n If the Space name or Page name contains a build-time variable, the validity of the page cannot be verified until build-time.",
          "isOptional": false
        },
        {
          "name": "attachArchivedArtifacts",
          "type": "boolean",
          "values": [],
          "description": "If checked, the plugin will automatically upload all of the archived artifacts (from the Artifact Archiver plugin). In that case, you don't need to reiterate the fileset pattern that is configured for the archiver.",
          "isOptional": true
        },
        {
          "name": "buildIfUnstable",
          "type": "boolean",
          "values": [],
          "description": "If checked, the plugin will continue publishing, even if the build was not successful. In that case, you can use the ${BUILD_RESULT} build variable to indicate the current build result.\n \n\n If this box is **not** checked, then ${BUILD_RESULT} can always only be \"SUCCESS\".",
          "isOptional": true
        },
        {
          "name": "editorList",
          "type": "Nested",
          "values": [
            "confluenceAfterToken",
            "confluenceAppendPage",
            "confluenceBeforeToken",
            "confluenceBetweenTokens",
            "confluenceWritePage",
            "confluencePrependPage"
          ],
          "description": "Configure wiki markup generation and replacement/insertion settings.\n \n\n Available markup generators:\n \n  \nYou can get links of uploaded attachments. Variable like $LINK[n] will be replaced with link which match link of uploaded attachment on Confluence.Where **n** is position number of attached file(links in array LINK[] will be provided in uploading order on Confluence). Example of usage: \n\n  \n &lt;a href=\"$LINK[0]\"&gt;$JOB_NAME build artifact&lt;/a&gt;\n\n  \n\n\n  \n* **Plain text**\n\n Enter custom text for the replacement. Build variables in the replacement text will be expanded.\n\n  Available editors:\n \n  \n* **Prepend**\n\n Content is added to the very beginning of the page\n\n  \n* **Append**\n\n Content is added to the very end of the page.\n\n  \n* **Before Token**\n\n Content is inserted before a configurable marker token.\n\n  \n* **After Token**\n\n Content is inserted after a configurable marker token.\n\n  \n* **Between Tokens**\n\n Content is inserted between two configurable start/end marker tokens. Existing content between the tokens is replaced.",
          "isOptional": true
        },
        {
          "name": "fileSet",
          "type": "String",
          "values": [],
          "description": "Can use wildcards like 'module/dist/**/*.zip'. See [ the @includes of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format. The base directory is <a rel=\"nofollow\">the workspace</a>.",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Comma, or space, separated list of labels to apply to the Confluence page.",
          "isOptional": true
        },
        {
          "name": "parentId",
          "type": "long",
          "values": [],
          "description": "(Optional) Enter the page ID of the parent wiki page. You can find this identifier by accessing the parent page in question, and then selecting \"Page Information\" or \"Page History\" from the Confluence <em>Tools</em> menu. The pageId will appear as a query parameter in the address bar. e.g. (`pageId=1234567`)\n \n\n If a parent is not specified, the space home will be used as the parent.\n \n\n This field is used for creating new pages only. If the page already exists, then parentId is discarded.",
          "isOptional": true
        },
        {
          "name": "replaceAttachments",
          "type": "boolean",
          "values": [],
          "description": "If checked, the plugin will automatically replace the existing file with the new file with the same name. For correct work jenkins user should have permission to delete files from selected page. **BE CAREFUL WITH THIS OPTION**",
          "isOptional": true
        }
      ],
      "plugin": "confluence-publisher"
    },
    {
      "command": "publishCoverage",
      "title": "publishCoverage: Publish Coverage Report",
      "description": "",
      "parameters": [
        {
          "name": "adapters",
          "type": "Nested",
          "values": [
            "antPath",
            "coberturaAdapter",
            "dListingAdapter",
            "istanbulCoberturaAdapter",
            "jacocoAdapter",
            "llvmAdapter",
            "opencoverAdapter",
            "sonarGenericCoverageAdapter"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applyThresholdRecursively",
          "type": "boolean",
          "values": [],
          "description": "By default, this plugins will only apply threshold at report level. If this option is set to true, it will apply threshold to all levels. For example, if this option is true, and if you have specified a Line threshold, this plugin will check all modules, directories, files...",
          "isOptional": true
        },
        {
          "name": "calculateDiffForChangeRequests",
          "type": "boolean",
          "values": [],
          "description": "If it is a change request build, calculate code coverage diff with a target branch build",
          "isOptional": true
        },
        {
          "name": "failBuildIfCoverageDecreasedInChangeRequest",
          "type": "boolean",
          "values": [],
          "description": "Fail the build in case if code coverage decreased in comparison with the target branch",
          "isOptional": true
        },
        {
          "name": "failNoReports",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if no coverage reports found.",
          "isOptional": true
        },
        {
          "name": "failUnhealthy",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if coverage is lower than healthy threshold.",
          "isOptional": true
        },
        {
          "name": "failUnstable",
          "type": "boolean",
          "values": [],
          "description": "Fail the build if coverage is lower than stable threshold.",
          "isOptional": true
        },
        {
          "name": "globalThresholds",
          "type": "Nested",
          "values": [
            "thresholdTarget",
            "failUnhealthy",
            "unhealthyThreshold",
            "unstableThreshold"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipPublishingChecks",
          "type": "boolean",
          "values": [],
          "description": "If unchecked, the plugin will automatically publish the coverage to corresponding SCM platforms. For example, if you are using this feature for a GitHub organization project, the coverage will be published to GitHub through the Checks API.",
          "isOptional": true
        },
        {
          "name": "sourceFileResolver",
          "type": "Nested",
          "values": [
            "level"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "code-coverage-api"
    },
    {
      "command": "publishCoverageGithub",
      "title": "publishCoverageGithub: Publish Coverage reports to Github",
      "description": "",
      "parameters": [
        {
          "name": "filepath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "coverageXmlType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "coverageRateType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "comparisonOption",
          "type": "Nested",
          "values": [
            "value",
            "sonarProject",
            "fixedCoverage"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "github-coverage-reporter"
    },
    {
      "command": "publishCppcheck",
      "title": "publishCppcheck: Publish Cppcheck results",
      "description": "",
      "parameters": [
        {
          "name": "XSize",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "YSize",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "allowNoReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayAllErrors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayErrorSeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayNoCategorySeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayPerformanceSeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayPortabilitySeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayStyleSeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayWarningSeverity",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failureThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreBlankFiles",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newFailureThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numBuildsInGraph",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "Cppcheck must be executed to generate XML reports for this plugin to function. [Fileset 'includes'](http://ant.apache.org/manual/Types/fileset.html) setting specifies the generated Cppcheck XML report files, such as '**/cppcheck-result-*.xml'. Base directory of the fileset is relative to the workspace root directory.\n\n\nIf no value is set, then the default '**/cppcheck-result.xml' will be used. Be sure to never include any non-report files into this pattern.\n\n\nThe plugin is able to work with both XML formats produced by Cppcheck, but always prefer to use the newer version 2. Cppcheck doesn't report some issues with the legacy format.",
          "isOptional": true
        },
        {
          "name": "severityError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityInformation",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityNoCategory",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityPerformance",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityPortability",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityStyle",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severityWarning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "threshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cppcheck"
    },
    {
      "command": "publishDeployRecord",
      "title": "publishDeployRecord: Publish deploy record to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "result",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolchainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "publishETLogs",
      "title": "publishETLogs: [TT] Publish ECU-TEST Logs",
      "description": "Publishes the ECU-TEST log files (ECU_TEST_OUT.log and ECU_TEST_ERR.log) and parses them for warning and errors.",
      "parameters": [
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testSpecific",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableOnWarning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishEventQ",
      "title": "publishEventQ: Notify TeamForge EventQ",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "This is the URL to your TeamForge EventQ message-queue server. It should not have any path information in it. For example: <em>amqp://mq.example.com:5672</em>",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "If none is given, global TeamForge credentials will be used for this job.",
          "isOptional": true
        },
        {
          "name": "excludeCommitInfo",
          "type": "boolean",
          "values": [],
          "description": "Whether to exclude associated commit information in EventQ notification.",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Mark current job as **unstable** if this step fails to notify EventQ.",
          "isOptional": true
        },
        {
          "name": "sourceKey",
          "type": "String",
          "values": [],
          "description": "This is the key to the build source on your TeamForge EventQ server. You can find it by visiting the configuration page for the source to which builds should be reported.",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "(Optional) Specify EventQ status explicitly. If not provided, it will be determined based on the current run result.",
          "isOptional": true
        }
      ],
      "plugin": "collabnet"
    },
    {
      "command": "publishGenerators",
      "title": "publishGenerators: [TT] Publish Generator Reports",
      "description": "Publishes and generates reports by configuration of predefined and/or custom report generators.\n\n These reports will be generated for all configured ECU-TEST packages or projects in this job.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\npublishGenerators(String toolName, List&lt;ReportGeneratorConfig&gt; generators, List&lt;ReportGeneratorConfig&gt; customGenerators) : void\n            \n```\n\n   \n```groovy\npublishGenerators(ETInstallation installation, List&lt;ReportGeneratorConfig&gt; generators, List&lt;ReportGeneratorConfig&gt; customGenerators,\n                  boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nETInstance.publishGenerators(List&lt;ReportGeneratorConfig&gt; generators, List&lt;ReportGeneratorConfig&gt; customGenerators,\n                             boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nETInstance.publishGenerators(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\npublishGenerators toolName: 'ECU-TEST', generators: [[name: 'JSON']]\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\npublishGenerators installation: instance.installation, generators: [[name: 'JSON']]\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.publishGenerators([[name: 'JSON']], [[name: 'Custom-JSON']])\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.publishGenerators generators: [[name: 'JSON']], customGenerators: [[name: 'Custom-JSON']], allowMissing: true, runOnFailed: true, archiving: true, keepAll: true\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customGenerators",
          "type": "Nested",
          "values": [
            "name",
            "settings",
            "usePersistedSettings"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generators",
          "type": "Nested",
          "values": [
            "name",
            "settings",
            "usePersistedSettings"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishGherkinResults",
      "title": "publishGherkinResults: ALM Octane Cucumber test reporter",
      "description": "When using this action, Jenkins understands and reads the Cucumber test report XML structure. After reading the structure, Jenkins can provide useful information about Cucumber tests results to ALM Octane.\n \n To use the feature, ensure that you have added a Publish JUnit test results post-build action to your build. Then, specify the path to the Cucumber report XML files in the [Ant glob syntax](http://ant.apache.org/manual/Types/fileset.html). \n\nYou can specify multiple patterns by separating them with commas. \n\nThis path should only contain Cucumber report files. Note that no other test types will be reported from this job.",
      "parameters": [
        {
          "name": "cucumberResultsGlob",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "publishHTML",
      "title": "publishHTML: Publish HTML reports",
      "description": "",
      "parameters": [
        {
          "name": "target",
          "type": "Nested",
          "values": [
            "reportName",
            "reportDir",
            "reportFiles",
            "keepAll",
            "alwaysLinkToLastBuild",
            "allowMissing",
            "escapeUnderscores",
            "includes",
            "reportTitles"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "htmlpublisher"
    },
    {
      "command": "publishIssues",
      "title": "publishIssues: Publish issues created by a static analysis scan",
      "description": "",
      "parameters": [
        {
          "name": "issues",
          "type": "class io.jenkins.plugins.analysis.core.steps.AnnotatedReport",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If there are errors while scanning the console log or files for issues (e.g., file pattern matches no files, source files could not be copied, etc.) then the warning plugin will show these errors in a separate view but does not alter the build state. If you would rather like to fail the build on such errors, please tick this checkbox.",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "int",
          "values": [],
          "description": "The healthy threshold defines the limit of warnings for a healthy result: A build is considered as 100% healthy when the number of issues is less than the specified threshold. Values less or equal zero are ignored. So if you want to have a healthy build (i.e. 100%) only for zero warnings, then set this field to 1.",
          "isOptional": true
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "The results of the selected tool are published using a unique ID (i.e. URL) which must not be already used by another tool in this job. This ID is used as link to the results, so choose a short and meaningful name. Allowed elements are characters, digits, dashes and underscores (more precisely, the ID must match the regular expression `\\p{Alnum}[\\p{Alnum}-_]*`). If you leave the ID field empty, then the built-in default ID of the registered tool will be used.",
          "isOptional": true
        },
        {
          "name": "ignoreFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "This option determines if failed builds should be selected as baseline or not. It is enabled by default, since analysis results might be inaccurate if the build failed. If unchecked, every build that contains a static analysis result is considered, even if the build failed.",
          "isOptional": true
        },
        {
          "name": "ignoreQualityGate",
          "type": "boolean",
          "values": [],
          "description": "If this option is set, only those issues are marked as new, that have been introduced in the current build. Previously new issues in older builds will be converted to outstanding issues. I.e. if someone starts a new build manually (without source code changes), then no new issues will be in the job anymore. \n\n \n By default, this option is disabled: then a build is selected as reference that passed all quality gates. As soon as a build fails a quality gate, the reference will be frozen until all new issues will be resolved again. That means, that new issues will be aggregated from build to build until the original reason for the failure and all those additional new issues have been resolved. This helps much more to keep your project clean: as soon as there are issues, Jenkins will mark all builds as unstable until the issues have been resolved.",
          "isOptional": true
        },
        {
          "name": "minimumSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "You can override the display name of the tool. This name is used in details views, trend captions, and hyper links. If you leave the name field empty, then the built-in default name of the registered tool will be used.",
          "isOptional": true
        },
        {
          "name": "publishAllIssues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityGates",
          "type": "Nested",
          "values": [
            "threshold",
            "type",
            "unstable"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "referenceBuildId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "referenceJobName",
          "type": "String",
          "values": [],
          "description": "The reference job provides the builds that can be selected as baseline. If this field is left empty then the same job will be used to select the baseline from. This is helpful if you want to inspect the evolution of issues in the current job (or branch). \n\n \n If you are building pull requests or topic branches in separate jobs, it makes more sense that the plugin shows the new issues, that have been introduced by a pull request (or branch). In order to show these issues, the reference needs to be set to the Jenkins job that builds the master branch (actually the job that contains a build of the branch point).",
          "isOptional": true
        },
        {
          "name": "skipPublishingChecks",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically publishes the issues to corresponding SCM hosting platforms. For example, if you are using this feature for a GitHub organization project, the warnings will be published to GitHub through the Checks API. If this operation slows down your build or you don't want to publish the warnings to SCM platforms, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "sourceCodeEncoding",
          "type": "String",
          "values": [],
          "description": "In order to correctly show all your affected source code files in the detail views, the plugin must open these files with the correct character encoding (UTF-8, ISO-8859-1, etc.). If you leave this field empty then the default encoding of the platform will be used. This might work but is not recommended.",
          "isOptional": true
        },
        {
          "name": "trendChartType",
          "type": "Enum",
          "values": [
            "AGGREGATION_TOOLS",
            "TOOLS_AGGREGATION",
            "TOOLS_ONLY",
            "AGGREGATION_ONLY",
            "NONE"
          ],
          "description": "If there is more than one static analysis result available then an aggregation trend chart will be shown on the project page that shows the analysis results in a single trend chart. You can choose the position of this aggregation trend:\n \n  \n* **AGGREGATION_TOOLS**\n\n  \n   The aggregation trend is shown **before** all other analysis tool trend charts.\n  \n  \n* **TOOLS_AGGREGATION**\n\n  \n   The aggregation trend is shown **after** all other analysis tool trend charts.\n  \n  \n* **TOOLS_ONLY**\n\n  \n   The aggregation trend is not shown, only the analysis tool trend charts are shown.\n  \n  \n* **AGGREGATION_ONLY**\n\n  \n   The aggregation trend is only shown, no other analysis tool trend charts are shown.\n  \n  \n* **NONE**\n\n  \n   Neither the aggregation trend nor analysis tool trend charts are shown.",
          "isOptional": true
        },
        {
          "name": "unhealthy",
          "type": "int",
          "values": [],
          "description": "The unhealthy threshold defines the limit of warnings for an unhealthy result: A build is considered as unhealthy (i.e. 0% health) when the number of issues is greater than the specified threshold. Values less or equal zero are ignored. So if you want to have a build health of 0% starting with 10 issues, then set this field to 9.",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "warnings-ng"
    },
    {
      "command": "publishLambda",
      "title": "publishLambda: AWS Lambda publish new version and update alias",
      "description": "",
      "parameters": [
        {
          "name": "lambdaPublishBuildStepVariables",
          "type": "Nested",
          "values": [
            "awsRegion",
            "functionARN",
            "functionAlias",
            "versionDescription",
            "awsAccessKeyId",
            "awsSecretKey",
            "useInstanceCredentials"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-lambda"
    },
    {
      "command": "publishLastChanges",
      "title": "publishLastChanges: publish the changes",
      "description": "",
      "parameters": [
        {
          "name": "publisher",
          "type": "class com.github.jenkins.lastchanges.pipeline.LastChangesPublisherScript",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "last-changes"
    },
    {
      "command": "publishMQMessage",
      "title": "publishMQMessage: Publish MQ Message",
      "description": "",
      "parameters": [
        {
          "name": "json",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "mq-notifier"
    },
    {
      "command": "publishPureLoad",
      "title": "publishPureLoad: Publish PureLoad Results",
      "description": "This build step parse and publish PureLoad result files to the job page.\n \n The plug-in does not execute PureLoad; it only parse JUnit report XML file generated by PureLoad to define if test is success or failure, and to shows a summary page. \n\n \n To use this plugin you must first execute PureLoad, typically using the PureLoad Runner and save all results as artifacts.",
      "parameters": [],
      "plugin": "pureload"
    },
    {
      "command": "publishReview",
      "title": "publishReview: Apply patch from Review Board",
      "description": "",
      "parameters": [],
      "plugin": "rb"
    },
    {
      "command": "publishSQResults",
      "title": "publishSQResults: Publish SonarQube test results to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "SQHostURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "SQAuthToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "SQProjectKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolchainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "publishStoplight",
      "title": "publishStoplight: Publish Stoplight Report",
      "description": "",
      "parameters": [
        {
          "name": "consoleOrFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resultFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "stoplightio-report"
    },
    {
      "command": "publishTMS",
      "title": "publishTMS: [TT] Publish to Test Management System",
      "description": "Publishes the test results of all configured ECU-TEST projects in this job to a preconfigured test management system like RQM or ALM.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\npublishTMS(String toolName, String credentialsId, int timeout) : void\n            \n```\n\n   \n```groovy\npublishTMS(ETInstallation installation, String credentialsId, int timeout,\n           boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nETInstance.publishTMS(String credentialsId, int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.publishTMS(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\npublishTMS('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\npublishTMS installation: instance.installation, credentialsId: 'id', timeout: 120\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.publishTMS('id')\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.publishTMS credentialsId: 'id', timeout: 120, allowMissing: true, runOnFailed: true, archiving: true, keepAll: true\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishTRF",
      "title": "publishTRF: [TT] Publish TRF Reports",
      "description": "Publishes the TRF reports of all configured ECU-TEST packages or projects in this job.",
      "parameters": [
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishTeamForge",
      "title": "publishTeamForge: Notify TeamForge",
      "description": "",
      "parameters": [
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "TeamForge webhook url to post the build information. Ex. https://teamforge/inbox/{eventName}/{publisherId} Use either TeamForge or EventQ based integrations.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials for Webhook authorization.",
          "isOptional": true
        },
        {
          "name": "excludeCommitInfo",
          "type": "boolean",
          "values": [],
          "description": "Whether to exclude associated commit information in TeamForge notification.",
          "isOptional": true
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "Mark current job as **unstable** if this step fails to notify TeamForge.",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "(Optional) Specify TeamForge status explicitly. If not provided, it will be determined based on the current run result.",
          "isOptional": true
        }
      ],
      "plugin": "collabnet"
    },
    {
      "command": "publishTestResult",
      "title": "publishTestResult: Publish test result to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolchainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "publishTestResults",
      "title": "publishTestResults: Zephyr Scale: Publish Test Results",
      "description": "Automatically publishes automated test results to Zephyr Scale.",
      "parameters": [
        {
          "name": "serverAddress",
          "type": "String",
          "values": [],
          "description": "One of the preconfigured Jira instances. If you do not have any, please go to General Configuration and set up a new Jira instance.",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "Jira project key to publish the test results to.",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "The path where the build places generated test result files. You can also use Ant style patterns such as **/test-reports/*.json.",
          "isOptional": false
        },
        {
          "name": "autoCreateTestCases",
          "type": "boolean",
          "values": [],
          "description": "When this option is checked, test cases with no KEY annotation will be automatically created, if there are no test cases matching their names.",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "Choose the test framework where the test results will be generated from.",
          "isOptional": false
        }
      ],
      "plugin": "tm4j-automation"
    },
    {
      "command": "publishTicsResults",
      "title": "publishTicsResults:",
      "description": "",
      "parameters": [
        {
          "name": "viewerUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "branchName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "checkQualityGate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failIfQualityGateFails",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ticsProjectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "tics"
    },
    {
      "command": "publishTraceAnalysis",
      "title": "publishTraceAnalysis: [TT] Publish Trace Analysis",
      "description": "Publishes the results of the trace analysis of all configured ECU-TEST packages or projects in this job.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\npublishTraceAnalysis(String toolName, boolean mergeReports, boolean createReportDir, int timeout) : void\n            \n```\n\n   \n```groovy\npublishTraceAnalysis(ETInstallation installation, boolean mergeReports, boolean createReportDir, int timeout,\n                     boolean allowMissing, boolean runOnFailed, boolean archiving, boolean keepAll) : void\n            \n```\n\n   \n```groovy\nETInstance.publishTraceAnalysis(boolean mergeReports, boolean createReportDir, int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.publishTraceAnalysis(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\npublishTraceAnalysis('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\npublishTraceAnalysis installation: instance.installation, mergeReports: true, createReportDir: false\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.publishTraceAnalysis()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.publishTraceAnalysis mergeReports: true, createReportDir: false, timeout: 120, allowMissing: true, runOnFailed: true, archiving: true, keepAll: true\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createReportDir",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mergeReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishUNIT",
      "title": "publishUNIT: [TT] Publish UNIT Reports",
      "description": "Publishes the UNIT reports of all configured ECU-TEST packages or projects in this job.\n\n These UNIT reports are generated automatically in this post-build step.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\npublishUNIT(String toolName, double unstableThreshold, double failedThreshold) : void\n            \n```\n\n   \n```groovy\npublishUNIT(ETInstallation installation, double unstableThreshold, double failedThreshold, boolean allowMissing, boolean runOnFailed) : void\n            \n```\n\n   \n```groovy\nETInstance.publishUNIT(double unstableThreshold, double failedThreshold, boolean allowMissing, boolean runOnFailed) : void\n            \n```\n\n   \n```groovy\nETInstance.publishUNIT(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\npublishUNIT('ECU-TEST', 10, 20)\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\npublishUNIT installation: instance.installation, unstableThreshold: 10, failedThreshold: 20\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.publishUNIT()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.publishUNIT unstableThreshold: 10, failedThreshold: 20, allowMissing: true, runOnFailed: true\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiving",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepAll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "publishValgrind",
      "title": "publishValgrind: Publish valgrind reports",
      "description": "",
      "parameters": [
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdInvalidReadWrite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdDefinitelyLost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdTotal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdInvalidReadWrite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdDefinitelyLost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdTotal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceSubstitutionPaths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishResultsForAbortedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishResultsForFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnMissingReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnInvalidReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "valgrind"
    },
    {
      "command": "pullPerfSigReports",
      "title": "pullPerfSigReports: Pull Performance Signature reports",
      "description": "",
      "parameters": [
        {
          "name": "handle",
          "type": "class org.jenkinsci.plugins.ParameterizedRemoteTrigger.pipeline.Handle",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignorePerfSigData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nonFunctionalFailure",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-viewer"
    },
    {
      "command": "puppetCode",
      "title": "puppetCode: Deploy Puppet Environment Code",
      "description": "Puppet Enterprise code deployment step. This instructs Puppet Enterprise's code management to pull and deploy new Puppet environment code.",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environments",
          "type": "class java.util.ArrayList",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "puppet-enterprise-pipeline"
    },
    {
      "command": "puppetHiera",
      "title": "puppetHiera: Set Hiera data.",
      "description": "",
      "parameters": [
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scope",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "source",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "value",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "puppet-enterprise-pipeline"
    },
    {
      "command": "puppetJob",
      "title": "puppetJob: Create Puppet Orchestrator Job",
      "description": "",
      "parameters": [
        {
          "name": "application",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "concurrency",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "nodes",
          "type": "class java.util.ArrayList",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noop",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "query",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "puppet-enterprise-pipeline"
    },
    {
      "command": "puppetQuery",
      "title": "puppetQuery: Query PuppetDB with the Puppet Query Language (PQL)",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "query",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "puppet-enterprise-pipeline"
    },
    {
      "command": "pushImage",
      "title": "pushImage: Pushes a Docker Image",
      "description": "Pushes a docker image to a docker registry.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The  The name of the docker image.",
          "isOptional": false
        },
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "This email will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "The  This password will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "registry",
          "type": "String",
          "values": [],
          "description": "The  Explicitly specify a remote registry if not present in the image repository.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "The  The amount of time to wait for the push to complete.",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "The  This username will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-pipeline-steps"
    },
    {
      "command": "pushToCloudFoundry",
      "title": "pushToCloudFoundry: Push to Cloud Foundry",
      "description": "",
      "parameters": [
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "organization",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloudSpace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "manifestChoice",
          "type": "Nested",
          "values": [
            "appName",
            "appPath",
            "buildpack",
            "command",
            "domain",
            "envVars",
            "hostname",
            "instances",
            "manifestFile",
            "memory",
            "noRoute",
            "servicesNames",
            "stack",
            "timeout",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pluginTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selfSigned",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "servicesToCreate",
          "type": "Nested",
          "values": [
            "name",
            "type",
            "plan",
            "resetService"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cloudfoundry"
    },
    {
      "command": "pwd",
      "title": "pwd: Determine current directory",
      "description": "Returns the current directory path as a string.",
      "parameters": [
        {
          "name": "tmp",
          "type": "boolean",
          "values": [],
          "description": "If selected, return a temporary directory associated with the workspace rather than the workspace itself. This is an appropriate place to put temporary files which should not clutter a source checkout; local repositories or caches; etc.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "pwsh",
      "title": "pwsh: PowerShell Core Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "Executes a PowerShell script. Multiple lines allowed. This plugin supports PowerShell Core 6+.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "pybat",
      "title": "pybat: PyEnvVar Batch Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "pyenv-pipeline"
    },
    {
      "command": "pysh",
      "title": "pysh: PyEnvVar Shell Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "pyenv-pipeline"
    },
    {
      "command": "qacReport",
      "title": "qacReport: Helix QAC Report",
      "description": "",
      "parameters": [
        {
          "name": "runWhenSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceQAFramework",
          "type": "Nested",
          "values": [
            "qaInstallation",
            "qaProject",
            "useCustomLicenseServer",
            "customLicenseServerAddress",
            "downloadUnifiedProjectDefinition",
            "unifiedProjectName",
            "performCrossModuleAnalysis",
            "cmaProjectName",
            "reuseCmaDb",
            "useDiskStorage",
            "enableDependencyMode",
            "generateReport",
            "publishToQAV",
            "loginToQAV",
            "chosenServers",
            "uploadWhenStable",
            "qaVerifyProjectName",
            "uploadSnapshotName",
            "buildNumber",
            "uploadSourceCode",
            "generateCrr",
            "generateMdr",
            "generateHis",
            "generateSup",
            "analysisSettings",
            "stopWhenFail",
            "customCpuThreads",
            "maxNumThreads",
            "generatePreprocess",
            "assembleSupportAnalytics",
            "generateReportOnAnalysisError",
            "addBuildNumber",
            "projectConfiguration"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "thresholdsDesc",
          "type": "Nested",
          "values": [
            "$class: 'FileComplianceThreshold'",
            "$class: 'MessageComplianceThreshold'",
            "$class: 'ProjectComplianceThreshold'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "prqa-plugin"
    },
    {
      "command": "qc",
      "title": "qc: HP Quality Center Integration",
      "description": "",
      "parameters": [
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "planFolder",
          "type": "String",
          "values": [],
          "description": "A forward slash separated path to the location of the plan folder that new tests will be created in (e.g Subject/Software/Cat 0/Unit Tests).",
          "isOptional": false
        },
        {
          "name": "labFolder",
          "type": "String",
          "values": [],
          "description": "A forward slash separated path to the location of the lab folder that unit test sets will be created in (e.g. Software/Cat 0/Unit Tests).",
          "isOptional": false
        },
        {
          "name": "failOnNoTestResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userDefinedFields",
          "type": "String",
          "values": [],
          "description": "A comma separated list of user defined fields and their values (e.g. user-01=value01,user-02=$BUILD_NUMBER).",
          "isOptional": true
        }
      ],
      "plugin": "hp-quality-center"
    },
    {
      "command": "qrebel",
      "title": "qrebel: Monitor performance regressions with QRebel",
      "description": "",
      "parameters": [
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "Please specify name of your application. The name must be same as in QRebel (case sensitive).",
          "isOptional": false
        },
        {
          "name": "targetBuild",
          "type": "String",
          "values": [],
          "description": "Please specify the target build for which you want to validate performance. Please note that you must specify a user-defined build name. Unnamed builds are not supported.",
          "isOptional": false
        },
        {
          "name": "targetVersion",
          "type": "String",
          "values": [],
          "description": "Please specify the target build version for which you want to validate performance. This field is optional and only relevant when you have setup named version names.",
          "isOptional": false
        },
        {
          "name": "baselineBuild",
          "type": "String",
          "values": [],
          "description": "Please specify a baseline build for which you want to use as the performance comparison point. Please note that you must specify a user-defined build name. Unnamed builds are not supported.",
          "isOptional": false
        },
        {
          "name": "baselineVersion",
          "type": "String",
          "values": [],
          "description": "Please specify a baseline build version for which you want to use as the performance comparison. This field is optional and only relevant when you have setup named version names.",
          "isOptional": false
        },
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "Every project has a unique API token for authentification. This token is required in order to make issue queries to the QRebel API. Please navigate to your QRebel dashboard, pick the project from the left-hand side top menu as an administrator. Then go to settings and enable API functionality for the chosen project. Simple copy the generated token here.",
          "isOptional": false
        },
        {
          "name": "apiUrl",
          "type": "String",
          "values": [],
          "description": "QRebel server detects performance issues. This field specifies its API URL. Default URL is https://hub.qrebel.com/api/",
          "isOptional": false
        },
        {
          "name": "comparisonStrategy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "slowRequestsAllowed",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excessiveIoAllowed",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "exceptionsAllowed",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "slaGlobalLimit",
          "type": "long",
          "values": [],
          "description": "This is a SLA global limit (ms). If at least one endpoint exeeds the limit, the build will be marked as a failure\n \n0 means no limit",
          "isOptional": false
        },
        {
          "name": "DURATION",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "IO",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "EXCEPTIONS",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qrebel"
    },
    {
      "command": "qualityCloudsScan",
      "title": "qualityCloudsScan: Quality Clouds Instance Scan",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "instanceUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "issuesCountThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "techDebtThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "qcThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "highSeverityThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qualityclouds"
    },
    {
      "command": "qualysAPIStaticAssessment",
      "title": "qualysAPIStaticAssessment: Perform API Security Assessment with Qualys",
      "description": "",
      "parameters": [
        {
          "name": "freeUserType",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "swaggerPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apiId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnGrade",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "grade",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnSecurityGroup",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "securityGroupCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "securityCriticality",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnDataGroup",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dataGroupCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dataCriticality",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnViolationGroup",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "violationGroupCount",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "violationCriticality",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-api-security"
    },
    {
      "command": "qualysPolicyComplianceScanner",
      "title": "qualysPolicyComplianceScanner: Scan host/instances with Qualys PC",
      "description": "",
      "parameters": [
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createAuthRecord",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unixAndWindowsCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useHost",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hostIp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useEc2",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2Id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnDetails",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runConnector",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scannerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selectedPolicies",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stateFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stateError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stateExceptions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "criticalitySerious",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "criticalityUrgent",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "criticalityCritical",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "criticalityMedium",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "criticalityMinimal",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByAuth",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludedCids",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unixAndWindowsCredentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByStateAndCriticality",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludedCriteria",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnAccountId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-pc"
    },
    {
      "command": "qualysVulnerabilityAnalyzer",
      "title": "qualysVulnerabilityAnalyzer: Scan host/instances with Qualys VM",
      "description": "",
      "parameters": [
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hostIp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnDetails",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2Id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scannerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "network",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useHost",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useEc2",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bySev",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBySev",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByQids",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByCves",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qidList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cveList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByCvss",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "byCvss",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cvssBase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "doExclude",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeBy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "evaluatePotentialVulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failByPci",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runConnector",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnAccountId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ec2ConnName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-vm"
    },
    {
      "command": "qualysWASScan",
      "title": "qualysWASScan: Scan web applications with Qualys WAS",
      "description": "",
      "parameters": [
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webAppId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authRecord",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cancelOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cancelHours",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authRecordId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity1Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity2Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity3Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity4Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity5Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev1Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev2Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev3Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev4Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev5Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnQidFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qidList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnScanError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-was"
    },
    {
      "command": "queryModuleBuildRequest",
      "title": "queryModuleBuildRequest: Query Module Build Request",
      "description": "",
      "parameters": [
        {
          "name": "mbsUrl",
          "type": "String",
          "values": [],
          "description": "Base URL of MBS system. This should usually be https://mbs.fedoraproject.org/",
          "isOptional": true
        },
        {
          "name": "moduleRequestId",
          "type": "String",
          "values": [],
          "description": "ID of the module build request.",
          "isOptional": true
        }
      ],
      "plugin": "fedora-module-build-system"
    },
    {
      "command": "questavrm",
      "title": "questavrm: Publish Questa VRM Regression Results",
      "description": "",
      "parameters": [
        {
          "name": "vrmdata",
          "type": "String",
          "values": [],
          "description": "**VRMDATA Directory**\n \nSpecify the location of where the regression results will be stored. By default, VRM creates a directory called <em>VRMDATA</em> which will be located in the CWD where the regression is invoked. Alternatively this can be overridden by specifying a directory upon invocation as follows:\n\n \n&nbsp;&nbsp;<em>vrun -vrmdata &lt;my_directory&gt; ...</em>",
          "isOptional": false
        },
        {
          "name": "collectCoverage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableVcoverExec",
          "type": "Nested",
          "values": [
            "vcoverExec"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraArgs",
          "type": "String",
          "values": [],
          "description": "**Extra VRM status report options **\n \nExtra options to be passed to <em>vrun -status</em>.",
          "isOptional": true
        },
        {
          "name": "healthScaleFactor",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "htmlReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "? extends hudson.tasks.junit.TestDataPublisher",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vrmhtmldir",
          "type": "String",
          "values": [],
          "description": "**VRM HTML Directory**\n \nSpecify the directory where the html report will be stored.",
          "isOptional": true
        },
        {
          "name": "vrunExec",
          "type": "String",
          "values": [],
          "description": "**Questa VRM Executables Directory**\n \nSet path to Questa VRM executable. This can be just <em>\"vrun\"</em> or a complete path.",
          "isOptional": true
        }
      ],
      "plugin": "mentor-questa-vrm"
    },
    {
      "command": "qyWechatNotification",
      "title": "qyWechatNotification: 企业微信通知",
      "description": "",
      "parameters": [
        {
          "name": "aboutSend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failNotify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failSend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mentionedId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mentionedMobile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "successSend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableSend",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qy-wechat-notification"
    },
    {
      "command": "r",
      "title": "r: Execute R script",
      "description": "",
      "parameters": [
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "r"
    },
    {
      "command": "rabbitMQPublisher",
      "title": "rabbitMQPublisher: Publish to Rabbit-MQ",
      "description": "This build step can be used to publish message to Rabbit-MQ.",
      "parameters": [
        {
          "name": "rabbitName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "exchange",
          "type": "String",
          "values": [],
          "description": "The name of the exchange.",
          "isOptional": false
        },
        {
          "name": "data",
          "type": "String",
          "values": [],
          "description": "Data to send, in raw format, json format or list of key/value.\n \n\n Can contains environment variables (preferred) and build parameters (eg: ${FOO} or $FOO) which will be resolve before sending the message. Can also use ${BUILD_USER_ID} and ${BUILD_USER_NAME} to retrieve the information's user who launch the job.",
          "isOptional": false
        },
        {
          "name": "conversion",
          "type": "boolean",
          "values": [],
          "description": "if checked, there will be Spring escaping . It is especially important with Json formatting .\n \n  \n* if Checked, the message is \"{\\\"step\\\":\\\"end\\\"}\"\n\n  \n* if unchecked, the message is {\"step\":\"end\"}",
          "isOptional": true
        },
        {
          "name": "routingKey",
          "type": "String",
          "values": [],
          "description": "An explicit routing key binding the queue to this exchange.",
          "isOptional": true
        },
        {
          "name": "toJson",
          "type": "boolean",
          "values": [],
          "description": "* If check : convert the data to a JSON object, following java nomenclature for field name.\n\n **The data must be a list in the format <i>key=value</i> and the <i>key</i> must start with a letter character** \n\n  \n*  If uncheck : the raw message without transformation",
          "isOptional": true
        }
      ],
      "plugin": "rabbitmq-publisher"
    },
    {
      "command": "radargunreporting",
      "title": "radargunreporting: Report RadarGun Performance Test",
      "description": "",
      "parameters": [],
      "plugin": "radargun-reporting"
    },
    {
      "command": "rancher",
      "title": "rancher: Deploy/Upgrade Rancher Service",
      "description": "",
      "parameters": [
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "endpoint",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "service",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "confirm",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "startFirst",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ports",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "rancher"
    },
    {
      "command": "rancherRedeploy",
      "title": "rancherRedeploy: Redeploy Rancher2.x Workload",
      "description": "",
      "parameters": [
        {
          "name": "credential",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workload",
          "type": "String",
          "values": [],
          "description": "you can find your workload API path in Rancher2.x web UI--&gt;Cluster-&gt;Project-&gt;Resources-&gt;Workloads,\n \n\n copy the workload link address, eg: http://localhost/p/c-h4hxd:p-dwqfr/workload/deployment:jenkins:jenkins\n \n\n or click the menu icon and select \"View in API\", will open in new browser tab. copy that url to here.\n \n\n\n \n since endpoint part has bean set in Credential, you only need specify path from \"/p/\" or \"/project\", eg: \n\n **/project/c-h4hxd:p-c9j8z/workloads/deployment:default:busybox **\n\n or **/p/c-h4hxd:p-dwqfr/workload/deployment:jenkins:jenkins **",
          "isOptional": false
        },
        {
          "name": "images",
          "type": "String",
          "values": [],
          "description": "update image version to your excepted. optional if you use latest as image version or imagePullPolicy=\"Always\"\n \n\n you can use semicolon(;) to split multiple images, eg:\n \n nginx;nginx:1.0;myteam/myproject:v2.0;docker.io/team/image:v1.0.${BUILD_NUMBER} \n this plugin will update all images in this workload by **match the name part exactly**, and simply set version part as you specified. so you may need Jenkins variables to dynamic generate new version number.",
          "isOptional": false
        },
        {
          "name": "alwaysPull",
          "type": "boolean",
          "values": [],
          "description": "set imagePullPolicy to \"Always\"",
          "isOptional": false
        }
      ],
      "plugin": "redeploy-rancher2-workload"
    },
    {
      "command": "ranorex",
      "title": "ranorex: Run a Ranorex test suite",
      "description": "",
      "parameters": [
        {
          "name": "cmdLineArgs",
          "type": "String",
          "values": [],
          "description": "Allows you to add Ranorex command line arguments. Some of the most important ones include:\n \n\n\n <table>\n  <tbody>\n   <tr>\n <th>Flag</th>\n <th>Function</th>\n   </tr>\n   <tr>\n <td>config | cfg:&lt;config parameter name&gt;=&lt;value&gt;</td>\n <td>&nbsp;Set values for configuration parameters.</td>\n   </tr>\n   <tr>\n <td>reportlevel | rl: Debug|Info|Warn|Error|Success|Failure|&lt;any integer&gt;</td>\n <td>&nbsp;Sets the minimum report level that log messages need to have in order to be included in the log file. Specify 'None' to completely disable reporting. These levels correspond to the following integer values: Debug=10,Info=20,Warn=30,Error=40,Success=110,Failure=120 </td>\n   </tr>\n   <tr>\n <td>testcase | tc:&lt;name or guid of test case&gt;</td>\n <td>Runs this test case only.</td>\n   </tr>\n   <tr>\n <td>testsuite | ts:&lt;path to test suite file&gt;</td>\n <td>Runs the test cases defined by the test suite (rxtst) file. By default the rxtst file with the same name as the &lt;TestSuiteExe&gt; is used or the first rxtst file in the same folder as &lt;TestSuiteExe&gt;. </td>\n   </tr>\n   <tr>\n <td>module | mo:&lt;module name or guid&gt;</td>\n <td>Runs the module with the specified name or guid. Assemblies loaded by &lt;TestSuiteExe&gt; and assemblies referenced in the rxtst file are searched. </td>\n   </tr>\n   <tr>\n <td>testcaseparam | tcpa:&lt;name or guid of test case&gt;:&lt;parameter name&gt;=&lt;value&gt;</td>\n <td>Creates or overrides values for testcase parameters specified in the test suite.</td>\n   </tr>\n   <tr>\n <td>runlabel | rul:&lt;custom value&gt;</td>\n <td>Sets a custom runlabel for the test run.</td>\n   </tr>\n   <tr>\n <td>testcasedatarange | tcdr:&lt;name or guid of test case&gt;=&lt;data range&gt;</td>\n <td>Sets the data range for a testcase.</td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "rxGlobalParameter",
          "type": "String",
          "values": [],
          "description": "Allows you to create or override values for global parameters set in the test suite. Enter parameters according to the following pattern: \"ParameterName=Value\" Separate parameters with semicolons or add one parameter per line.",
          "isOptional": true
        },
        {
          "name": "rxJUnitReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rxReportDirectory",
          "type": "String",
          "values": [],
          "description": "Allows you to specify the directory that your report will be saved to. If no path is specified, the location of your Ranorex Test Suite file will be used.",
          "isOptional": true
        },
        {
          "name": "rxReportExtension",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rxReportFile",
          "type": "String",
          "values": [],
          "description": "Allows you to specify the file name of the report with the standard placeholders available in the [test suite settings](https://www.ranorex.com/support/user-guide-20/lesson-4-ranorex-test-suite.html#c16095). By default, the following pattern is used (%S_%Y%M%D_%T).",
          "isOptional": true
        },
        {
          "name": "rxRunConfiguration",
          "type": "String",
          "values": [],
          "description": "Runs the test suite using one of the run configurations available in the test suite. Enter the exact name of the run configuration you want to use. By default, the run configuration currently selected in the test suite is used. If you want to create or edit run configurations, please use Ranorex Studio or the Ranorex Test Suite Runner.",
          "isOptional": true
        },
        {
          "name": "rxTestRail",
          "type": "boolean",
          "values": [],
          "description": "Reports the test run results to TestRail via API. Requires 'Test Rail User' and 'Test Rail Password'.",
          "isOptional": true
        },
        {
          "name": "rxTestRailPassword",
          "type": "String",
          "values": [],
          "description": "Password or API key for the user specified in 'Test Rail User'.",
          "isOptional": true
        },
        {
          "name": "rxTestRailRID",
          "type": "String",
          "values": [],
          "description": "(Optional) The identifier of an existing test run in TestRail to report test results to. Without this argument a new test run is created.",
          "isOptional": true
        },
        {
          "name": "rxTestRailRunName",
          "type": "String",
          "values": [],
          "description": "(Optional) Creates a new test run in TestRail with the specified name to report test results to. Without this argument the default name is used.",
          "isOptional": true
        },
        {
          "name": "rxTestRailUser",
          "type": "String",
          "values": [],
          "description": "Email used to sign in to TestRail.",
          "isOptional": true
        },
        {
          "name": "rxTestSuiteFilePath",
          "type": "String",
          "values": [],
          "description": "Enter the path to the test suite file (*.rxtst) located in the output folder of your solution.",
          "isOptional": true
        },
        {
          "name": "rxZippedReport",
          "type": "boolean",
          "values": [],
          "description": "Compresses the report and the associated files into a single archive with the .rxzlog extension. The following additional input fields will appear when this option is enabled:\n \n  \n* Compressed report directory\n\n  \n* Compressed report file name",
          "isOptional": true
        },
        {
          "name": "rxZippedReportDirectory",
          "type": "String",
          "values": [],
          "description": "Allows you to specify the directory that your compressed report will be saved to. If no path is specified, the location of your Ranorex Test Suite file will be used.",
          "isOptional": true
        },
        {
          "name": "rxZippedReportFile",
          "type": "String",
          "values": [],
          "description": "Allows you to specify the file name of the compressed report with the standard placeholders available in the [test suite settings](https://www.ranorex.com/support/user-guide-20/lesson-4-ranorex-test-suite.html#c16095). If no filename is specified, the same name as the \"Ranorex Report File Name\" is used.",
          "isOptional": true
        }
      ],
      "plugin": "ranorex-integration"
    },
    {
      "command": "readCSV",
      "title": "readCSV: Read content from a CSV file in the workspace.",
      "description": "Reads a file in the current working directory or a String as a plain text. A List of [CSVRecord](https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVRecord.html) instances is returned \n\n\n **Example:**\n\n ``\n\n\n```groovy\ndef records = readCSV file: 'dir/input.csv'\nassert records[0][0] == 'key'\nassert records[1][1] == 'b'\n\ndef content = readCSV text: 'key,value\\na,b'\nassert records[0][0] == 'key'\nassert records[1][1] == 'b'\n\t\n```\n\n\n\n\n\n **Advanced Example:**\n\n ``\n\n\n```groovy\ndef excelFormat = CSVFormat.EXCEL\ndef records = readCSV file: 'dir/input.csv', format: excelFormat\nassert records[0][0] == 'key'\nassert records[1][1] == 'b'\n\ndef content = readCSV text: 'key,value\\na,b', format: CSVFormat.DEFAULT.withHeader()\nassert records[1].get('key') == 'a'\nassert records[1].get('value') == 'b'\n\t\n```",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Path to a file in the workspace from which to read the CSV data. <em>Data is accessed as a List of String Arrays.</em> \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        },
        {
          "name": "format",
          "type": "class org.apache.commons.csv.CSVFormat",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "A string containing the CSV formatted data. <em>Data is accessed as a List of String Arrays.</em> \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "readFile",
      "title": "readFile: Read file from workspace",
      "description": "Reads a file from a relative path (with root in current directory, usually workspace) and returns its content as a plain string.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Relative (`/`-separated) path to file within a workspace to read.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "The encoding to use when reading the file. If left blank, the platform default encoding will be used. Binary files can be read into a Base64-encoded string by specifying \"Base64\" as the encoding.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "readJSON",
      "title": "readJSON: Read JSON from files in the workspace.",
      "description": "Reads a file in the current working directory or a String as a plain text [JSON](http://www.json.org/json-it.html) file. The returned object is a normal Map with String keys or a List of primitives or Map. \n\n\n **Example:**\n\n ``\n\n\n```groovy\ndef props = readJSON file: 'dir/input.json'\nassert props['attr1'] == 'One'\nassert props.attr1 == 'One'\n\ndef props = readJSON text: '{ \"key\": \"value\" }'\nassert props['key'] == 'value'\nassert props.key == 'value'\n\ndef props = readJSON text: '[ \"a\", \"b\"]'\nassert props[0] == 'a'\nassert props[1] == 'b'\n\ndef props = readJSON text: '{ \"key\": null, \"a\": \"b\" }', returnPojo: true\nassert props['key'] == null\nprops.each { key, value -&gt;\n    echo \"Walked through key $key and value $value\"\n}\n\t\n```",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Path to a file in the workspace from which to read the JSON data. <em>Data could be access as an array or a map.</em> \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        },
        {
          "name": "returnPojo",
          "type": "boolean",
          "values": [],
          "description": "Transforms the output into a POJO type (`LinkedHashMap` or `ArrayList`) before returning it. \n\n\n By default deactivated (`false`), and a JSON object (`JSONObject` or `JSONArray` from json-lib) is returned.",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "A string containing the JSON formatted data. <em>Data could be access as an array or a map.</em> \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "readManifest",
      "title": "readManifest: Read a Jar Manifest",
      "description": "Reads a [Jar Manifest](https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html#JAR_Manifest) file or text and parses it into a set of Maps. The returned data structure has two properties: `main` for the main attributes, and `entries` containing each individual section (except for main). \n\n\n **Example:**\n\n ` `\n\n\n```groovy\n            def man = readManifest file: 'target/my.jar'\n            assert man.main['Version'] == '6.15.8'\n            assert man.main['Application-Name'] == 'My App'\n            assert man.entries['Section1']['Key1'] == 'value1-1'\n            assert man.entries['Section2']['Key2'] == 'value2-2'\n        \n```\n` `",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Optional path to a file to read. It could be a plain text, `.jar`, `.war` or `.ear`. In the latter cases the manifest will be extracted from the archive and then read. \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "Optional text containing the manifest data. \n\n\n You can only specify `file` **or** `text`, not both in the same invocation.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "readMavenPom",
      "title": "readMavenPom: Read a maven project file.",
      "description": "Reads a [Maven project](https://maven.apache.org/pom.html) file. The returned object is a [Model](http://maven.apache.org/components/ref/3.3.9/maven-model/apidocs/org/apache/maven/model/Model.html) . \n\n\n Avoid using this step and `writeMavenPom`. It is better to use the `sh` step to run `mvn` goals. For example: \n\n\n```groovy\n\ndef version = sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true\n\n```",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "Optional path to the file to read. <em>If left empty the step will try to read `pom.xml` in the current working directory</em>.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "readProperties",
      "title": "readProperties: Read properties from files in the workspace or text.",
      "description": "Reads a file in the current working directory or a String as a plain text [Java Properties](https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html) file. The returned object is a normal Map with String keys. The map can also be pre loaded with default values before reading/parsing the data. \n **Fields:**\n\n \n*  `file`: Optional path to a file in the workspace to read the properties from. <em>These are added to the resulting map after the defaults and so will overwrite any key/value pairs already present.</em> \n\n \n*  `text`: An Optional String containing properties formatted data. <em>These are added to the resulting map after `file` and so will overwrite any key/value pairs already present.</em> \n\n \n*  `defaults`: An Optional Map containing default key/values. <em>These are added to the resulting map first.</em> \n\n \n*  `interpolate`: Flag to indicate if the properties should be interpolated or not. In case of error or cycling dependencies, the original properties will be returned. \n\n\n\n **Example:**\n\n ` `\n\n\n```groovy\n        def d = [test: 'Default', something: 'Default', other: 'Default']\n        def props = readProperties defaults: d, file: 'dir/my.properties', text: 'other=Override'\n        assert props['test'] == 'One'\n        assert props['something'] == 'Default'\n        assert props.something == 'Default'\n        assert props.other == 'Override'\n        \n```\n` ` **Example with interpolation:** ` \n```groovy\n        def props = readProperties interpolate: true, file: 'test.properties'\n        assert props.url = 'http://localhost'\n        assert props.resource = 'README.txt'\n        // if fullUrl is defined to ${url}/${resource} then it should evaluate to http://localhost/README.txt\n        assert props.fullUrl = 'http://localhost/README.txt'\n        \n```\n `",
      "parameters": [
        {
          "name": "defaults",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "interpolate",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "readTrusted",
      "title": "readTrusted: Read trusted file from SCM",
      "description": "From a multibranch Pipeline project, reads a file from the associated SCM and returns its contents. Unlike the `readFile` step, no workspace is required. If the associated branch is not trusted, yet the file has been modified from its trusted version, an error is thrown. Thus this step is useful for loading scripts or other files which might otherwise be used to run malicious commands. Like `checkout scm`, as a convenience it may also be used from a standalone project configured with <i>Pipeline from SCM</i>, in which case there is no security aspect.",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "Relative (slash-separated) path to the file from the SCM root. Thus `readTrusted 'subdir/file'` is similar to `node {checkout scm; readFile 'subdir/file'}`.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-multibranch"
    },
    {
      "command": "readXml",
      "title": "readXml: ReadXmlStep",
      "description": "",
      "parameters": [
        {
          "name": "xmlFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nodeMap",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "readYaml",
      "title": "readYaml: Read yaml from files in the workspace or text.",
      "description": "Reads a file in the current working directory or a String as a plain text [YAML](http://yaml.org) file. It uses [SnakeYAML](https://bitbucket.org/asomov/snakeyaml) as YAML processor. The returned objects are standard Java objects like List, Long, String, ...: bool: [true, false, on, off] int: 42 float: 3.14159 list: ['LITE', 'RES_ACID', 'SUS_DEXT'] map: {hp: 13, sp: 5} \n **Fields:**\n\n \n*  `file`: Optional path to a file in the workspace to read the YAML datas from. \n\n \n*  `text`: An Optional String containing YAML formatted datas. <em>These are added to the resulting object after `file` and so will overwrite any value already present if not a new YAML document</em> \n\n\n\n **Examples:**\n\n With only one YAML document : ` `\n\n\n```groovy\n        def datas = readYaml text: \"\"\"\nsomething: 'my datas'\nsize: 3\nisEmpty: false\n\"\"\"\n        assert datas.something == 'my datas'\n        assert datas.size == 3\n        assert datas.isEmpty == false\n        \n```\n` ` With several YAML documents : ` \n```groovy\n        def datas = readYaml text: \"\"\"\n---\nsomething: 'my first document'\n---\nsomething: 'my second document'\n\"\"\"\n        assert datas.size() == 2\n        assert datas[0].something == 'my first document'\n        assert datas[1].something == 'my second document'\n        \n```\n ` With file dir/my.yml containing `something: 'my datas'` : ` \n```groovy\n        def datas = readYaml file: 'dir/my.yml', text: \"something: 'Override'\"\n        assert datas.something == 'Override'\n        \n```\n `",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "realtimeJUnit",
      "title": "realtimeJUnit: Display JUnit test results as they appear",
      "description": "Runs a block and archives JUnit results at the end, exactly like the `junit` step would. The difference is that test results are displayed as they appear.",
      "parameters": [
        {
          "name": "testResults",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowEmptyResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthScaleFactor",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepLongStdio",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "junit-realtime-test-reporter"
    },
    {
      "command": "recordDynatraceCustomSession",
      "title": "recordDynatraceCustomSession: record Dynatrace Saas/Managed custom session",
      "description": "",
      "parameters": [
        {
          "name": "envId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entityIds",
          "type": "Nested",
          "values": [
            "$class: 'Application'",
            "$class: 'Host'",
            "$class: 'Process'",
            "$class: 'ProcessGroup'",
            "$class: 'Service'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagMatchRules",
          "type": "Nested",
          "values": [
            "meTypes",
            "tags"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeframeStart",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeframeStop",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatracesaas"
    },
    {
      "command": "recordDynatraceSession",
      "title": "recordDynatraceSession: record Dynatrace Saas/Managed session",
      "description": "",
      "parameters": [
        {
          "name": "envId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entityIds",
          "type": "Nested",
          "values": [
            "$class: 'Application'",
            "$class: 'Host'",
            "$class: 'Process'",
            "$class: 'ProcessGroup'",
            "$class: 'Service'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tagMatchRules",
          "type": "Nested",
          "values": [
            "meTypes",
            "tags"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatracesaas"
    },
    {
      "command": "recordIssues",
      "title": "recordIssues: Record compiler warnings and static analysis results",
      "description": "",
      "parameters": [
        {
          "name": "aggregatingResults",
          "type": "boolean",
          "values": [],
          "description": "By default, each static analysis result will be recorded as a separate result that is presented as an individual Jenkins Action with separate UI and dashboard. If you rather prefer aggregation of the results into a single result (i.e., single Jenkins Action), then activate this check box. You still can see the distribution of issues grouped by static analysis tool in the UI.",
          "isOptional": true
        },
        {
          "name": "blameDisabled",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically shows what revision and author (name and email) last modified the lines of the affected files that contain issues. If this operation slows down your build or you don't want to publish sensitive user data, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "enabledForFailure",
          "type": "boolean",
          "values": [],
          "description": "By default, static analysis results are only recorded for stable or unstable builds, but not for failed builds: analysis results might be inaccurate if the build failed. If recording should be enabled for failed builds as well then activate this check box.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If there are errors while scanning the console log or files for issues (e.g., file pattern matches no files, source files could not be copied, etc.) then the warning plugin will show these errors in a separate view but does not alter the build state. If you would rather like to fail the build on such errors, please tick this checkbox.",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filters",
          "type": "Nested",
          "values": [
            "excludeCategory",
            "excludeFile",
            "excludeMessage",
            "excludeModule",
            "excludePackage",
            "excludeType",
            "includeCategory",
            "includeFile",
            "includeMessage",
            "includeModule",
            "includePackage",
            "includeType"
          ],
          "description": "The created report of issues can be filtered afterwards. You can specify an arbitrary number of include or exclude filters. Currently, there is support for filtering issues by module name, package or namespace name, file name, category or type. Include filters will be combined with `or`, exclude filters with `and`. If no filter is defined, then all issues will be published. Filters with empty regular expression will be ignored.",
          "isOptional": true
        },
        {
          "name": "forensicsDisabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "int",
          "values": [],
          "description": "The healthy threshold defines the limit of warnings for a healthy result: A build is considered as 100% healthy when the number of issues is less than the specified threshold. Values less or equal zero are ignored. So if you want to have a healthy build (i.e. 100%) only for zero warnings, then set this field to 1.",
          "isOptional": true
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "The results of the selected tool are published using a unique ID (i.e. URL) which must not be already used by another tool in this job. This ID is used as link to the results, so choose a short and meaningful name. Allowed elements are characters, digits, dashes and underscores (more precisely, the ID must match the regular expression `\\p{Alnum}[\\p{Alnum}-_]*`). If you leave the ID field empty, then the built-in default ID of the registered tool will be used.",
          "isOptional": true
        },
        {
          "name": "ignoreFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "This option determines if failed builds should be selected as baseline or not. It is enabled by default, since analysis results might be inaccurate if the build failed. If unchecked, every build that contains a static analysis result is considered, even if the build failed.",
          "isOptional": true
        },
        {
          "name": "ignoreQualityGate",
          "type": "boolean",
          "values": [],
          "description": "If this option is set, only those issues are marked as new, that have been introduced in the current build. Previously new issues in older builds will be converted to outstanding issues. I.e. if someone starts a new build manually (without source code changes), then no new issues will be in the job anymore. \n\n \n By default, this option is disabled: then a build is selected as reference that passed all quality gates. As soon as a build fails a quality gate, the reference will be frozen until all new issues will be resolved again. That means, that new issues will be aggregated from build to build until the original reason for the failure and all those additional new issues have been resolved. This helps much more to keep your project clean: as soon as there are issues, Jenkins will mark all builds as unstable until the issues have been resolved.",
          "isOptional": true
        },
        {
          "name": "minimumSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "You can override the display name of the tool. This name is used in details views, trend captions, and hyper links. If you leave the name field empty, then the built-in default name of the registered tool will be used.",
          "isOptional": true
        },
        {
          "name": "publishAllIssues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qualityGates",
          "type": "Nested",
          "values": [
            "threshold",
            "type",
            "unstable"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "referenceBuildId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "referenceJobName",
          "type": "String",
          "values": [],
          "description": "The reference job provides the builds that can be selected as baseline. If this field is left empty then the same job will be used to select the baseline from. This is helpful if you want to inspect the evolution of issues in the current job (or branch). \n\n \n If you are building pull requests or topic branches in separate jobs, it makes more sense that the plugin shows the new issues, that have been introduced by a pull request (or branch). In order to show these issues, the reference needs to be set to the Jenkins job that builds the master branch (actually the job that contains a build of the branch point).",
          "isOptional": true
        },
        {
          "name": "scm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipBlames",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipPublishingChecks",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically publishes the issues to corresponding SCM hosting platforms. For example, if you are using this feature for a GitHub organization project, the warnings will be published to GitHub through the Checks API. If this operation slows down your build or you don't want to publish the warnings to SCM platforms, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "sourceCodeEncoding",
          "type": "String",
          "values": [],
          "description": "In order to correctly show all your affected source code files in the detail views, the plugin must open these files with the correct character encoding (UTF-8, ISO-8859-1, etc.). If you leave this field empty then the default encoding of the platform will be used. This might work but is not recommended.",
          "isOptional": true
        },
        {
          "name": "sourceDirectory",
          "type": "String",
          "values": [],
          "description": "Since the plugin also reads the affected source code files (source code view, fingerprinting, blaming, etc.) it needs to copy these files from the agent to the master. If these files are not part of the workspace (or checked out into a sub folder of the workspace) they are not automatically found. So you can add an additional source code directory where the plugin tries to find these files. Note, that due to security restrictions additional paths outside of the workspace need to be registered in Jenkins system configuration before they can be used here.",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "Nested",
          "values": [
            "acuCobol",
            "ajc",
            "androidLintParser",
            "ansibleLint",
            "armCc",
            "axivionSuite",
            "brakeman",
            "buckminster",
            "cadence",
            "cargo",
            "ccm",
            "checkStyle",
            "clair",
            "clang",
            "clangAnalyzer",
            "clangTidy",
            "cmake",
            "codeAnalysis",
            "codeNarc",
            "coolflux",
            "cpd",
            "cppCheck",
            "cppLint",
            "cssLint",
            "dscanner",
            "detekt",
            "diabC",
            "docFx",
            "dockerLint",
            "doxygen",
            "drMemory",
            "dupFinder",
            "eclipse",
            "erlc",
            "errorProne",
            "esLint",
            "findBugs",
            "flake8",
            "flawfinder",
            "flexSdk",
            "fxcop",
            "gcc3",
            "gcc",
            "gendarme",
            "ghsMulti",
            "gnat",
            "gnuFortran",
            "goLint",
            "goVet",
            "groovyScript",
            "hadoLint",
            "iar",
            "iarCstat",
            "ibLinter",
            "ideaInspection",
            "infer",
            "intel",
            "invalids",
            "junitParser",
            "java",
            "javaDoc",
            "jcReport",
            "jsHint",
            "jsLint",
            "klocWork",
            "kotlin",
            "ktLint",
            "mavenConsole",
            "modelsim",
            "metrowerksCodeWarrior",
            "msBuild",
            "myPy",
            "nagFortran",
            "otDockerLint",
            "taskScanner",
            "PVSStudio",
            "parasoftFindings",
            "pcLint",
            "pep8",
            "perforce",
            "perlCritic",
            "php",
            "phpCodeSniffer",
            "phpStan",
            "pit",
            "pmdParser",
            "prefast",
            "protoLint",
            "puppetLint",
            "pyDocStyle",
            "pyLint",
            "qacSourceCodeAnalyser",
            "qtTranslation",
            "resharperInspectCode",
            "rfLint",
            "robocopy",
            "ruboCop",
            "scala",
            "simian",
            "sonarQube",
            "sphinxBuild",
            "spotBugs",
            "styleCop",
            "sunC",
            "swiftLint",
            "tagList",
            "taskingVx",
            "tiCss",
            "tnsdl",
            "trivy",
            "tsLint",
            "issues",
            "xlc",
            "xmlLint",
            "yamlLint",
            "yuiCompressor",
            "zptLint"
          ],
          "description": "For each static analysis tool a dedicated parser or scanner will be used to read report files or produce issues in any other way. If your tool is not yet supported you can define a new Groovy based parser in Jenkins system configuration. You can reference this new parser afterwards when you select the tool 'Groovy Parser'. Additionally, you provide a new parser within a new small plug-in. If the parser is useful for other teams as well please share it and provide pull requests for the [Warnings Next Generation Plug-in](https://github.com/jenkinsci/warnings-ng-plugin/pulls) and the [Analysis Parsers Library](https://github.com/jenkinsci/analysis-model/pulls).",
          "isOptional": true
        },
        {
          "name": "toolProxies",
          "type": "Nested",
          "values": [
            "tool"
          ],
          "description": "For each static analysis tool a dedicated parser or scanner will be used to read report files or produce issues in any other way. If your tool is not yet supported you can define a new Groovy based parser in Jenkins system configuration. You can reference this new parser afterwards when you select the tool 'Groovy Parser'. Additionally, you provide a new parser within a new small plug-in. If the parser is useful for other teams as well please share it and provide pull requests for the [Warnings Next Generation Plug-in](https://github.com/jenkinsci/warnings-ng-plugin/pulls) and the [Analysis Parsers Library](https://github.com/jenkinsci/analysis-model/pulls).",
          "isOptional": true
        },
        {
          "name": "tools",
          "type": "Nested",
          "values": [
            "acuCobol",
            "ajc",
            "androidLintParser",
            "ansibleLint",
            "armCc",
            "axivionSuite",
            "brakeman",
            "buckminster",
            "cadence",
            "cargo",
            "ccm",
            "checkStyle",
            "clair",
            "clang",
            "clangAnalyzer",
            "clangTidy",
            "cmake",
            "codeAnalysis",
            "codeNarc",
            "coolflux",
            "cpd",
            "cppCheck",
            "cppLint",
            "cssLint",
            "dscanner",
            "detekt",
            "diabC",
            "docFx",
            "dockerLint",
            "doxygen",
            "drMemory",
            "dupFinder",
            "eclipse",
            "erlc",
            "errorProne",
            "esLint",
            "findBugs",
            "flake8",
            "flawfinder",
            "flexSdk",
            "fxcop",
            "gcc3",
            "gcc",
            "gendarme",
            "ghsMulti",
            "gnat",
            "gnuFortran",
            "goLint",
            "goVet",
            "groovyScript",
            "hadoLint",
            "iar",
            "iarCstat",
            "ibLinter",
            "ideaInspection",
            "infer",
            "intel",
            "invalids",
            "junitParser",
            "java",
            "javaDoc",
            "jcReport",
            "jsHint",
            "jsLint",
            "klocWork",
            "kotlin",
            "ktLint",
            "mavenConsole",
            "modelsim",
            "metrowerksCodeWarrior",
            "msBuild",
            "myPy",
            "nagFortran",
            "otDockerLint",
            "taskScanner",
            "PVSStudio",
            "parasoftFindings",
            "pcLint",
            "pep8",
            "perforce",
            "perlCritic",
            "php",
            "phpCodeSniffer",
            "phpStan",
            "pit",
            "pmdParser",
            "prefast",
            "protoLint",
            "puppetLint",
            "pyDocStyle",
            "pyLint",
            "qacSourceCodeAnalyser",
            "qtTranslation",
            "resharperInspectCode",
            "rfLint",
            "robocopy",
            "ruboCop",
            "scala",
            "simian",
            "sonarQube",
            "sphinxBuild",
            "spotBugs",
            "styleCop",
            "sunC",
            "swiftLint",
            "tagList",
            "taskingVx",
            "tiCss",
            "tnsdl",
            "trivy",
            "tsLint",
            "issues",
            "xlc",
            "xmlLint",
            "yamlLint",
            "yuiCompressor",
            "zptLint"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trendChartType",
          "type": "Enum",
          "values": [
            "AGGREGATION_TOOLS",
            "TOOLS_AGGREGATION",
            "TOOLS_ONLY",
            "AGGREGATION_ONLY",
            "NONE"
          ],
          "description": "If there is more than one static analysis result available then an aggregation trend chart will be shown on the project page that shows the analysis results in a single trend chart. You can choose the position of this aggregation trend:\n \n  \n* **AGGREGATION_TOOLS**\n\n  \n   The aggregation trend is shown **before** all other analysis tool trend charts.\n  \n  \n* **TOOLS_AGGREGATION**\n\n  \n   The aggregation trend is shown **after** all other analysis tool trend charts.\n  \n  \n* **TOOLS_ONLY**\n\n  \n   The aggregation trend is not shown, only the analysis tool trend charts are shown.\n  \n  \n* **AGGREGATION_ONLY**\n\n  \n   The aggregation trend is only shown, no other analysis tool trend charts are shown.\n  \n  \n* **NONE**\n\n  \n   Neither the aggregation trend nor analysis tool trend charts are shown.",
          "isOptional": true
        },
        {
          "name": "unhealthy",
          "type": "int",
          "values": [],
          "description": "The unhealthy threshold defines the limit of warnings for an unhealthy result: A build is considered as unhealthy (i.e. 0% health) when the number of issues is greater than the specified threshold. Values less or equal zero are ignored. So if you want to have a build health of 0% starting with 10 issues, then set this field to 9.",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "warnings-ng"
    },
    {
      "command": "redmineMetricsReport",
      "title": "redmineMetricsReport: Generate Redmine Metrics Report",
      "description": "",
      "parameters": [
        {
          "name": "settings",
          "type": "Nested",
          "values": [
            "url",
            "apiKey",
            "projectName",
            "customQueryId",
            "sprintSize"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "redmine-metrics-report"
    },
    {
      "command": "registerWebhook",
      "title": "registerWebhook: Creates and returns a webhook that can be used by an external system to notify a pipeline",
      "description": "Returns a unique webhook that can be used with `waitForWebhook` to block pipeline execution until external notification. The returned webhook has `String getToken()` and `String getURL()` methods.",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "webhook-step"
    },
    {
      "command": "release",
      "title": "release: Trigger release for the job",
      "description": "",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Full name of the job to be released. This job must be visible to the current user. It should contain the Release configuration defined by the plugin.",
          "isOptional": false
        },
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "agentParameter",
            "base64File",
            "booleanParam",
            "buildMasterRelease",
            "checkboxParameter",
            "$class: 'ClearCaseUcmBaselineParameterValue'",
            "credentials",
            "$class: 'CvsTagsParamValue'",
            "$class: 'DateParameterValue'",
            "$class: 'DeployMetaDataParameterValue'",
            "file",
            "$class: 'FileSystemListParameterValue'",
            "$class: 'GeneratorKeyValueParameterValue'",
            "gitParameter",
            "imageTag",
            "$class: 'InheritableStringParameterValue'",
            "$class: 'JavaParameterValue'",
            "$class: 'JiraIssueParameterValue'",
            "$class: 'JiraVersionParameterValue'",
            "$class: 'LabelParameterValue'",
            "listGitBranches",
            "$class: 'ListSubversionTagsParameterValue'",
            "$class: 'MatrixCombinationsParameterValue'",
            "$class: 'MavenMetadataParameterValue'",
            "multiselect",
            "$class: 'NodeParameterValue'",
            "$class: 'PackageChoiceParameterValue'",
            "separator",
            "$class: 'PatchParameterValue'",
            "$class: 'PromotedBuildParameterValue'",
            "$class: 'RandomStringParameterValue'",
            "RESTList",
            "$class: 'ReviewboardParameterValue'",
            "run",
            "$class: 'SauceParameterValue'",
            "stashedFile",
            "string",
            "text",
            "$class: 'VBoxParameterValue'",
            "email",
            "validatingString",
            "$class: 'WHideParameterValue'",
            "$class: 'WReadonlyStringParameterValue'",
            "$class: 'WReadonlyTextParameterValue'",
            "extendedChoice",
            "$class: 'com.michelin.cio.hudson.plugins.passwordparam.PasswordParameterValue'",
            "$class: 'com.moded.extendedchoiceparameter.ExtendedChoiceParameterValue'",
            "password"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "release"
    },
    {
      "command": "releaseMarker",
      "title": "releaseMarker: Perform an HTTP Request and return a response object",
      "description": "",
      "parameters": [
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applications",
          "type": "Nested",
          "values": [
            "name"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseEndTimestamp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseStartTimestamp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "services",
          "type": "Nested",
          "values": [
            "name",
            "scopedTo"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "instana"
    },
    {
      "command": "releaseSemaphore",
      "title": "releaseSemaphore: Release the semaphore.",
      "description": "",
      "parameters": [
        {
          "name": "semaphore",
          "type": "class com.github.topikachu.jenkins.concurrent.semaphore.SemaphoreRef",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "removeBadges",
      "title": "removeBadges: Remove Badges",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "removeHtmlBadges",
      "title": "removeHtmlBadges: Remove Html Badges",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "removeSummaries",
      "title": "removeSummaries: Remove Summaries",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "badge"
    },
    {
      "command": "reqtifyFunction",
      "title": "reqtifyFunction: Reqtify: Call Function",
      "description": "Call a function You can choose:\n \n  \n* Function name\n\n  \n* Function Arguments",
      "parameters": [
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "argumentList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "argument",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reqtify"
    },
    {
      "command": "reqtifyReport",
      "title": "reqtifyReport: Reqtify: Generate Report",
      "description": "Creation of a report. The plugin will find a .rqtf file in the workspace and make a report. You can choose:\n \n  \n* The name of report\n\n  \n* The model of report\n\n  \n* The template of report",
      "parameters": [
        {
          "name": "reportArgumentList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nameReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modelReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reqtify"
    },
    {
      "command": "requireResources",
      "title": "requireResources: GatingStep",
      "description": "",
      "parameters": [
        {
          "name": "resources",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "gating-core"
    },
    {
      "command": "resolveScm",
      "title": "resolveScm: Resolves an SCM from an SCM Source and a list of candidate target branch names",
      "description": "When you have a multi-branch pipeline that checks out other sibling repositories, you may want to check out the matching branch from that sibling repository (assuming it exists) but fall back to the main branch if there is no matching branch.\n \n This step lets you create a branch in the primary repository and then when you need downstream / upstream changes in the sibling repository you can just create a matching branch and it will be resolved automatically. For example: \n\n \n```groovy\n// checkout the main source\ndir('main'){\n    // this will checkout the source repository that is driving the multi-branch pipeline\n    checkout scm\n}\n// now checkout the tests\ndir('tests'){\n    // this will check if there is a branch with the same name as the current branch in\n    // https://example.com/example.git and use that for the checkout, but if there is no\n    // branch with the same name it will fall back to the master branch\n    checkout resolveScm(source: git('https://example.com/example.git'), targets: [BRANCH_NAME,'master']\n}\n// rest of pipeline\n\n```\n\n \n The return value is the resolved SCM instance (or `null` if ignoring errors). Where the SCM implementation supports it, the SCM instance will be pinned to the current head revision of the resolved branch. This can be useful if, for example, you want to check out the resolved branch on multiple nodes because all the nodes will get the same revision.",
      "parameters": [
        {
          "name": "source",
          "type": "Nested",
          "values": [
            "$class: 'BacklogPullRequestSCMSource'",
            "multiBranch",
            "gerrit",
            "gitblit",
            "gitlab",
            "git",
            "$class: 'GiteaSCMSource'",
            "globalLib",
            "multiGraph",
            "$class: 'MercurialSCMSource'",
            "scmManager",
            "scmManagerSvn",
            "fromScm",
            "multiStreams",
            "$class: 'SubversionSCMSource'",
            "multiSwarm",
            "Tuleap",
            "BbS",
            "bitbucket",
            "gitHub",
            "github"
          ],
          "description": "The source repository from which to resolve the target branches.",
          "isOptional": false
        },
        {
          "name": "targets",
          "type": "String",
          "values": [],
          "description": "The branch names to try and resolve from the source, in order of preference.",
          "isOptional": false
        },
        {
          "name": "ignoreErrors",
          "type": "boolean",
          "values": [],
          "description": "When selected, the step will return `null` in the event that no matching branch can be resolved.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-multibranch"
    },
    {
      "command": "retry",
      "title": "retry: Retry the body up to N times",
      "description": "Retry the block (up to N times) if any exception happens during its body execution. If an exception happens on the final attempt then it will lead to aborting the build (unless it is caught and processed somehow). User aborts of the build are <em>not</em> caught.",
      "parameters": [
        {
          "name": "count",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "robot",
      "title": "robot: Configure robot framework report collection",
      "description": "Publishes [Robot Framework](http://code.google.com/p/robotframework/) test reports into Hudson user interface.\n\n \nNote that you must configure your build to produce these reports before you can publish them with this plugin.\n\n \nAll text fields support the use of environment variables available during build (e.g. ${BUILD_NUMBER}).",
      "parameters": [
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archiveDirName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disableArchiveOutput",
          "type": "boolean",
          "values": [],
          "description": "output xml files are not needed by Jenkins once the publishing step of the build is finished.\n\n \nThey are archived for traceability or reuse in some other context.\n\n \nYou might want to disable archiving of those output xml files to save disk space on the Jenkins server.",
          "isOptional": true
        },
        {
          "name": "enableCache",
          "type": "boolean",
          "values": [],
          "description": "Enable cache for test results (produces memory pressure)",
          "isOptional": true
        },
        {
          "name": "logFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/log*.html).\n\n \nSplitted files will be copied automatically. If file name is specified log.html then all log-xxx.html will be saved.",
          "isOptional": true
        },
        {
          "name": "onlyCritical",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "otherFiles",
          "type": "String",
          "values": [],
          "description": "Comma separated list of file names relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/screenshot*.jpg).\n\n \nYou can save any artifacts related to tests (e.g. Selenium screenshots) in the robot directory by configuring the filenames here. Items that are linked to the robot log files - like screenshots - have to be explicitly saved here in order to view them in the stored logs.",
          "isOptional": true
        },
        {
          "name": "outputFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/output*.xml).\n\n \nSplitted files will be copied automatically. If file name is specified output.xml then all output-xxx.xml will be saved.",
          "isOptional": true
        },
        {
          "name": "overwriteXAxisLabel",
          "type": "String",
          "values": [],
          "description": "Pattern to format x axis label in trend graphs. You can use $build for build number beside all letters from java class DateTimeFormatter (e.g. MM-dd HH:mm). Already created and cached images are not affected",
          "isOptional": true
        },
        {
          "name": "passThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/report*.html).\n\n \nSplitted files will be copied automatically. If file name is specified report.html then all report-xxx.html will be saved.",
          "isOptional": true
        },
        {
          "name": "unstableThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "robot"
    },
    {
      "command": "rocketSend",
      "title": "rocketSend: Send RocketChat Message",
      "description": "Simple step for sending a RocketChat message to specified channel.\n \n\n Use the advanced settings to override the RocketChat Plugin global configuration to include: `channel`.\n \n\n Please see the RocketChat Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` rocketSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attachments",
          "type": "Nested",
          "values": [
            "title",
            "audioUrl",
            "authorIcon",
            "authorName",
            "collapsed",
            "color",
            "imageUrl",
            "messageLink",
            "text",
            "thumbUrl",
            "titleLink",
            "titleLinkDownload",
            "ts",
            "videoUrl"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "avatar",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "emoji",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rawMessage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookTokenCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "rocketchatnotifier"
    },
    {
      "command": "rtAddInteractivePromotion",
      "title": "rtAddInteractivePromotion: Add interactive promotion",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "copy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failFast",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeDependencies",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtBuildAppend",
      "title": "rtBuildAppend: Build append",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appendBuildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appendBuildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtBuildInfo",
      "title": "rtBuildInfo: Create build info",
      "description": "",
      "parameters": [
        {
          "name": "asyncBuildRetention",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "captureEnv",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deleteBuildArtifacts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "doNotDiscardBuilds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeEnvPatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeEnvPatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxBuilds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxDays",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "startDate",
          "type": "class java.util.Date",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtBuildTrigger",
      "title": "rtBuildTrigger: Trigger Artifactory build",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtCollectIssues",
      "title": "rtCollectIssues: Collect issues",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "config",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtConanClient",
      "title": "rtConanClient: Creates new Conan client",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtConanRemote",
      "title": "rtConanRemote: Add new repo to Conan config",
      "description": "",
      "parameters": [
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verifySSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtConanRun",
      "title": "rtConanRun: Run a Conan command",
      "description": "",
      "parameters": [
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDeleteProps",
      "title": "rtDeleteProps: Delete properties",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "props",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDockerPull",
      "title": "rtDockerPull: run Artifactory docker pull",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDockerPush",
      "title": "rtDockerPush: run Artifactory docker push",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDotnetResolver",
      "title": "rtDotnetResolver: set .NET resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDotnetRun",
      "title": "rtDotnetRun: run Artifactory .NET",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtDownload",
      "title": "rtDownload: Download artifacts",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGoDeployer",
      "title": "rtGoDeployer: set go deployer",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customBuildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGoPublish",
      "title": "rtGoPublish: run Artifactory Go publish",
      "description": "",
      "parameters": [
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGoResolver",
      "title": "rtGoResolver: set Go resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGoRun",
      "title": "rtGoRun: run Artifactory Go publish",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGradleDeployer",
      "title": "rtGradleDeployer: set gradle deployer",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customBuildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployIvyDescriptors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployMavenDescriptors",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeEnvVars",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ivyPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mavenCompatible",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publications",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "snapshotRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "threads",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGradleResolver",
      "title": "rtGradleResolver: set gradle resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtGradleRun",
      "title": "rtGradleRun: run Artifactory gradle",
      "description": "",
      "parameters": [
        {
          "name": "buildFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "switches",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tasks",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useWrapper",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usesPlugin",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtMavenDeployer",
      "title": "rtMavenDeployer: set maven deployer",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "snapshotRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customBuildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployArtifacts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployEvenIfUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeEnvVars",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePatterns",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "threads",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtMavenResolver",
      "title": "rtMavenResolver: set maven resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "snapshotRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtMavenRun",
      "title": "rtMavenRun: run Artifactory maven",
      "description": "",
      "parameters": [
        {
          "name": "pom",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "goals",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "opts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNpmCi",
      "title": "rtNpmCi: run Artifactory npm ci",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNpmDeployer",
      "title": "rtNpmDeployer: set npm deployer",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customBuildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "properties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNpmInstall",
      "title": "rtNpmInstall: run Artifactory npm install",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNpmPublish",
      "title": "rtNpmPublish: run Artifactory npm publish",
      "description": "",
      "parameters": [
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deployerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNpmResolver",
      "title": "rtNpmResolver: set npm resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNugetResolver",
      "title": "rtNugetResolver: set NuGet resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtNugetRun",
      "title": "rtNugetRun: run Artifactory NuGet",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtPipInstall",
      "title": "rtPipInstall: run Artifactory pip install",
      "description": "",
      "parameters": [
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envActivation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtPipResolver",
      "title": "rtPipResolver: set pip resolver",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtPromote",
      "title": "rtPromote: Promote build",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "copy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failFast",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeDependencies",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtPublishBuildInfo",
      "title": "rtPublishBuildInfo: Publish build info",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtServer",
      "title": "rtServer: Creates new Artifactory server",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bypassProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentThreads",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "retry",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtSetProps",
      "title": "rtSetProps: Set properties",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "props",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtUpload",
      "title": "rtUpload: Upload artifacts",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failNoOp",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "spec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "rtp",
      "title": "rtp: Publish rich text message",
      "description": "",
      "parameters": [
        {
          "name": "abortedAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and aborted builds.",
          "isOptional": true
        },
        {
          "name": "abortedText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for aborted builds. This text will be used only if \"The same text for aborted builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": true
        },
        {
          "name": "failedAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and failed builds.",
          "isOptional": true
        },
        {
          "name": "failedText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for failed builds. This text will be used only if \"The same text for failed builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": true
        },
        {
          "name": "nullAction",
          "type": "String",
          "values": [],
          "description": "Select what happens in the case that the buildstate is null or unknown",
          "isOptional": true
        },
        {
          "name": "parserName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stableText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for stable and (if corresponding checkboxes are selected) for unstable and failed builds. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": true
        },
        {
          "name": "unstableAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and unstable builds.",
          "isOptional": true
        },
        {
          "name": "unstableText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build anyd job summary pages for unstable builds. This text will be used only if \"The same text for unstable builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": true
        }
      ],
      "plugin": "rich-text-publisher-plugin"
    },
    {
      "command": "runConanCommand",
      "title": "runConanCommand: Run a Conan command",
      "description": "",
      "parameters": [
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "conanHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildInfo",
          "type": "class org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "runFromAlmBuilder",
      "title": "runFromAlmBuilder: Execute Micro Focus functional tests from Micro Focus ALM",
      "description": "",
      "parameters": [
        {
          "name": "almServerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almUserName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almTestSets",
          "type": "String",
          "values": [],
          "description": "List of test sets to run. Each line contains a path to a test set or a test set folder.\n \n\n For example: Root\\subFolder1\\subFolder2\\testSetToRun .\n \n\n In case you want to parameterize the tests plase specify the parameters and their values like:\n \n\n Root\\subFolder1\\subFolder2\\testSetToRun \"Parameter1\":\"Value1\",..., \"ParameterN\":\"ValueN\"",
          "isOptional": false
        },
        {
          "name": "almRunResultsMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almTimeout",
          "type": "String",
          "values": [],
          "description": "Number of seconds before timeout. If left empty timeout is unlimited.",
          "isOptional": false
        },
        {
          "name": "almRunMode",
          "type": "String",
          "values": [],
          "description": "Defines how the test set is executed:\n \n  \n* **Run locally**: The test set is run on the machine that performs the build.\n\n  \n* **Run remotely**: The test set is run on the host defined in the **Testing Tool host** field.\n\n  \n* **Run on planned host**: The test set is run on the host defined in ALM.",
          "isOptional": false
        },
        {
          "name": "almRunHost",
          "type": "String",
          "values": [],
          "description": "If the **Run mode** field is set to **Run remotely**, use this field to specify the name of the host that runs the test set.",
          "isOptional": false
        },
        {
          "name": "almClientID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almApiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "isSSOEnabled",
          "type": "boolean",
          "values": [],
          "description": "Obtain the Client ID and API key secret from your ALM site administrator.",
          "isOptional": false
        },
        {
          "name": "isFilterTestsEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterTestsModel",
          "type": "Nested",
          "values": [
            "blockedCheckbox",
            "failedCheckbox",
            "notCompletedCheckbox",
            "noRunCheckbox",
            "passedCheckbox",
            "testName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "almServerSettingsModel",
          "type": "Nested",
          "values": [
            "almServerName",
            "almServerUrl",
            "almCredentials",
            "almSSOCredentials"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runFromAlmModel",
          "type": "Nested",
          "values": [
            "almServerName",
            "almUserName",
            "almPassword",
            "almDomain",
            "almProject",
            "almTestSets",
            "almRunResultsMode",
            "almTimeout",
            "almRunMode",
            "almRunHost",
            "isSSOEnabled",
            "almClientID",
            "almApiKey"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "runInCloud",
      "title": "runInCloud: Start a run in Bitbar Cloud",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deviceGroupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloudUIUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cloudUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dataPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuildIfThisStepFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "frameworkId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyValuePairs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "language",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "osType",
          "type": "Enum",
          "values": [
            "IOS",
            "ANDROID",
            "DESKTOP",
            "UNDEFINED"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scheduler",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "screenshotsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCasesSelect",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCasesValue",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testRunName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testRunner",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "virusScanTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForResultsBlock",
          "type": "Nested",
          "values": [
            "testRunStateCheckMethod",
            "downloadScreenshots",
            "forceFinishAfterBreak",
            "hookURL",
            "resultsPath",
            "waitForResultsTimeout"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "withAnnotation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "withoutAnnotation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testdroid-run-in-cloud"
    },
    {
      "command": "runLoadRunnerScript",
      "title": "runLoadRunnerScript: Run LoadRunner script",
      "description": "",
      "parameters": [
        {
          "name": "scriptPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "runMATLABCommand",
      "title": "runMATLABCommand: Run MATLAB commands, scripts, or functions",
      "description": "",
      "parameters": [
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "Insert the MATLAB commands you want to execute in the **Command** box. If you need to specify more than one command, use a comma or semicolon to separate the commands.\n \n\n **Example: **results = runtests, assertSuccess(results);\n \n\n\n \n\n If you need to specify several MATLAB commands, consider writing a MATLAB script or function and executing this script or function instead. (To run a script or function, do not specify the file extension.)\n \n\n **Example: **myscript\n \n\n\n \n\n&nbsp;\n \n\n **Note:**\n \n  \n* The build fails if the execution of any command results in an error.\n\n  \n* If the build uses a MATLAB version prior to R2020a, MATLAB might display non-ASCII characters, specified in the **Command** box, as garbled text. If you specify non-ASCII characters in your commands, consider running your commands as a .m or .mlx file created in the same locale that MATLAB uses on the build agent",
          "isOptional": false
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "runMATLABTests",
      "title": "runMATLABTests: Run MATLAB tests and generate artifacts",
      "description": "",
      "parameters": [
        {
          "name": "codeCoverageCobertura",
          "type": "String",
          "values": [],
          "description": "Generate a code coverage report in Cobertura XML format. By default, MATLAB names the artifact **cobertura.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        },
        {
          "name": "modelCoverageCobertura",
          "type": "String",
          "values": [],
          "description": "Generate a model coverage report in Cobertura XML format. This artifact includes coverage results for Simulink® models that are tested using Simulink Test™. By default, MATLAB names the artifact **coberturamodelcoverage.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace.\n \n\n\n \n\n**Note:** This feature requires a **Simulink Coverage™** license and is supported only in MATLAB R2018b or a newer release.",
          "isOptional": true
        },
        {
          "name": "selectByFolder",
          "type": "String",
          "values": [],
          "description": "Specify the locations of folders containing tests, relative to the project root folder, as a list of strings. To generate a test suite, MATLAB uses only the tests in the specified folders and their subfolders.\n\n \n**Example:** [\"test/folderA\", \"test/folderB\"]",
          "isOptional": true
        },
        {
          "name": "selectByTag",
          "type": "String",
          "values": [],
          "description": "Specify the test tag used to select test suite elements. To generate a test suite, MATLAB uses only the test elements with the specified tag.\n\n \n**Example:** 'FeatureA'",
          "isOptional": true
        },
        {
          "name": "sourceFolder",
          "type": "String",
          "values": [],
          "description": "Specify the location of folders containing source code, relative to the project root folder, as a string array. The specified folders and their subfolders are added to the top of the MATLAB search path. To generate a coverage report, MATLAB uses only the source code in the specified folders and their subfolders.\n\n \n**Example:** [\"src/folderA\", \"src/folderB\"]",
          "isOptional": true
        },
        {
          "name": "testResultsJUnit",
          "type": "String",
          "values": [],
          "description": "Generate a test report in JUnit XML format. By default, MATLAB names the artifact **junittestresults.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        },
        {
          "name": "testResultsPDF",
          "type": "String",
          "values": [],
          "description": "Generate a test report in PDF format. By default, MATLAB names the artifact **testreport.pdf** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.\n \n\n\n \n\n Due to Jenkins Content Security Policy rules, the generated report might not open properly from within the Jenkins workspace. Consider copying the report to a location outside the workspace and opening it from there. For more information, see [Configuring Jenkins Content Security Policy](http://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy).\n \n\n\n \n\n **Note:** This feature is not currently supported on Mac platforms.",
          "isOptional": true
        },
        {
          "name": "testResultsSimulinkTest",
          "type": "String",
          "values": [],
          "description": "Export Simulink Test™ Manager results in MLDATX format. By default, MATLAB names the artifact **simulinktestresults.mldatx** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.\n \n\n\n \n\n **Note:** This feature requires a **Simulink Test** license and is supported only in MATLAB R2019a or a newer release.",
          "isOptional": true
        },
        {
          "name": "testResultsTAP",
          "type": "String",
          "values": [],
          "description": "Generate a test report in TAP format. By default, MATLAB names the artifact **taptestresults.tap** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "runTics",
      "title": "runTics:",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "branchName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "branchDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "calc",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentVariables",
          "type": "java.util.LinkedHashMap<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "extraArguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recalc",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ticsBin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ticsConfiguration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tmpdir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "tics"
    },
    {
      "command": "runValgrind",
      "title": "runValgrind: Run valgrind",
      "description": "",
      "parameters": [
        {
          "name": "valgrindExecutable",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workingDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "includePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputFileEnding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "programOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tool",
          "type": "Nested",
          "values": [
            "$class: 'ValgrindToolHelgrind'",
            "$class: 'ValgrindToolMemcheck'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "valgrindOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreExitCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "traceChildren",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "childSilentAfterFork",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "generateSuppressions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "suppressionFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "removeOldReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "valgrind"
    },
    {
      "command": "runZapAttack",
      "title": "runZapAttack: Run ZAP attack by changing to attack mode and starting the attack",
      "description": "",
      "parameters": [
        {
          "name": "scanPolicyName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "runZapCrawler",
      "title": "runZapCrawler: Run ZAP crawler on a specified host",
      "description": "",
      "parameters": [
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "s3Copy",
      "title": "s3Copy: Copy file between S3 buckets",
      "description": "Copy file between S3 buckets.",
      "parameters": [
        {
          "name": "fromBucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket of the existing file.",
          "isOptional": false
        },
        {
          "name": "fromPath",
          "type": "String",
          "values": [],
          "description": "This is the file path in the source bucket. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": false
        },
        {
          "name": "toBucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket of the new file.",
          "isOptional": false
        },
        {
          "name": "toPath",
          "type": "String",
          "values": [],
          "description": "This is the file path in the destination bucket. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        },
        {
          "name": "acl",
          "type": "Enum",
          "values": [
            "Private",
            "PublicRead",
            "PublicReadWrite",
            "AuthenticatedRead",
            "LogDeliveryWrite",
            "BucketOwnerRead",
            "BucketOwnerFullControl",
            "AwsExecRead"
          ],
          "description": "Canned ACL to add to the new file. \n\n \n  \n* Private : Specifies the owner is granted Full Control. No one else has access rights. This is the default access control policy for any new buckets or objects.\n\n  \n* PublicRead : Specifies the owner is granted Full Control and to the All Users group grantee is granted Read access.\n\n  \n* PublicReadWrite: Specifies the owner is granted Full Control and to the All Users group grantee is granted Read and Write access.\n\n  \n* AuthenticatedRead: Specifies the owner is granted Full Control and to the Authenticated Users group grantee is granted Read access.\n\n  \n* LogDeliveryWrite: Specifies the owner is granted Full Control and to the Log Delivery group grantee is granted Write access.\n\n  \n* BucketOwnerRead: Specifies the owner of the bucket, but not necessarily the same as the owner of the object, is granted Read access.\n\n  \n* BucketOwnerFullControl: Specifies the owner of the bucket, but not necessarily the same as the owner of the object, is granted Full Control.\n\n  \n* AwsExecRead: Specifies the owner is granted Full Control and Amazon EC2 is granted {@link Permission#Read} access to GET an Amazon Machine Image (AMI) bundle from Amazon S3.",
          "isOptional": true
        },
        {
          "name": "cacheControl",
          "type": "String",
          "values": [],
          "description": "Cache control to add to the HTTP request. <i>Sample : \"public,max-age=31536000\"</i>",
          "isOptional": true
        },
        {
          "name": "contentDisposition",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "kmsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "metadatas",
          "type": "String",
          "values": [],
          "description": "Metadatas to add to the new file. Multiple metadatas must be separated with a ';' and name and value separated by a ':'. <i>Sample : \"Content-Type:image/svg+xml;Another:AnotherValue\"</i>",
          "isOptional": true
        },
        {
          "name": "sseAlgorithm",
          "type": "String",
          "values": [],
          "description": "Server Side Encryption Algorithm to add to the new file. <i>Sample : \"AES256\"</i>",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3CopyArtifact",
      "title": "s3CopyArtifact: S3 Copy Artifact",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildSelector",
          "type": "Nested",
          "values": [
            "downstream",
            "lastWithArtifacts",
            "lastCompleted",
            "$class: 'MultiJobBuildSelector'",
            "buildParameter",
            "permalink",
            "$class: 'PromotedBuildSelector'",
            "latestSavedBuild",
            "specific",
            "lastSuccessful",
            "upstream",
            "workspace"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludeFilter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "flatten",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optional",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "s3"
    },
    {
      "command": "s3Delete",
      "title": "s3Delete: Delete file from S3",
      "description": "Delete a file/folder from S3. If the path ends in a \"/\", then the path will be interpreted to be a folder, and all of its contents will be removed.",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to delete. If this ends in a \"/\", then the path will be interpreted to be a folder, and all of its contents will be removed. \n\n \n <i>Do not begin with a leading \"/\".</i>",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3DoesObjectExist",
      "title": "s3DoesObjectExist: Check if object exists in S3",
      "description": "Check if object exists in S3 bucket.",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to use. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3Download",
      "title": "s3Download: Copy file from S3",
      "description": "Download a file/folder from S3 to the local workspace. Set optional parameter force to true to overwrite any existing files in workspace. If the path ends with a /, then the complete virtual directory will be downloaded.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "This is the local target file to download into.",
          "isOptional": false
        },
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "Set this to true to overwrite local workspace files.",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to use. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3FindFiles",
      "title": "s3FindFiles: Find files in S3",
      "description": "Return a list of all of the files/folders in the bucket. If path is given, then it will be used as the root of the search. Results are returned <i>relative</i> to path; if path is not given, then the results will contain the full S3 path. \n\n \n The following all ultimately return one item referring to \"path/to/my/file.ext\"; however, by limiting the scope via path, the results are different. \n\n \n  \n*  files = s3FindFiles bucket: \"my-bucket\", glob: \"path/to/my/file.ext\"\n\n // files[0].name = \"file.ext\"\n\n // files[0].path = \"path/to/my/file.ext\" \n\n  \n*  files = s3FindFiles bucket: \"my-bucket\", path: \"path/to/\", glob: \"my/file.ext\"\n\n // files[0].name = \"file.ext\"\n\n // files[0].path = \"my/file.ext\" \n\n  \n*  files = s3FindFiles bucket: \"my-bucket\", path: \"path/to/my/\", glob: \"file.ext\"\n\n // files[0].name = \"file.ext\"\n\n // files[0].path = \"file.ext\" \n\n \n \n\n\n \n List every file in the bucket: \n\n \n  \n* s3FindFiles bucket: \"my-bucket\", glob: \"**\", onlyFiles: true\n\n \n \n\n\n \n The return format is identical to that of the findFiles step. This will return an array of FileWrapper instances with the following properties: \n\n \n  \n* name: the filename portion of the path (for \"path/to/my/file.ext\", this would be \"file.ext\")\n\n  \n* path: the full path of the file, <i>relative</i> to the path specified (for path=\"path/to/\", this property of the file \"path/to/my/file.ext\" would be \"my/file.ext\")\n\n  \n* directory: true if this is a directory; false otherwise\n\n  \n* length: the length of the file (this is always \"0\" for directories)\n\n  \n* lastModified: the last modification timestamp, in milliseconds since the Unix epoch (this is always \"0\" for directories)\n\n  When used in a string context, a FileWrapper object returns the value of its path.",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "This is the glob to use to match files/folders. You may use a full file name/path (for example \"path/to/file.ext\"), but you may also use a glob (for example, \"path/t*/file.*\"). \n\n \n If left blank, this will perform the equivalent function of \"*\". \n\n \n To list absolutely everything, use \"**\".",
          "isOptional": true
        },
        {
          "name": "onlyFiles",
          "type": "boolean",
          "values": [],
          "description": "Set this to true to only return actual files. Otherwise, by default, this will return both files and folders.",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to use as the root of the search. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3PresignURL",
      "title": "s3PresignURL: Presign file in S3",
      "description": "",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "httpMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "durationInSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3Upload",
      "title": "s3Upload: Copy file to S3",
      "description": "Upload a file/folder from the workspace to an S3 bucket. If the file parameter denotes a directory, then the complete directory (including all subfolders) will be uploaded. If text is provided, upload the text as the provided filename in the remote S3 bucket.",
      "parameters": [
        {
          "name": "bucket",
          "type": "String",
          "values": [],
          "description": "This is the bucket to use.",
          "isOptional": false
        },
        {
          "name": "pathStyleAccessEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Path-style Access for AWS S3.",
          "isOptional": true
        },
        {
          "name": "payloadSigningEnabled",
          "type": "boolean",
          "values": [],
          "description": "Enabled/Disable Payload Signing for AWS S3.",
          "isOptional": true
        },
        {
          "name": "acl",
          "type": "Enum",
          "values": [
            "Private",
            "PublicRead",
            "PublicReadWrite",
            "AuthenticatedRead",
            "LogDeliveryWrite",
            "BucketOwnerRead",
            "BucketOwnerFullControl",
            "AwsExecRead"
          ],
          "description": "Canned ACL to add to the upload request. \n\n \n  \n* Private : Specifies the owner is granted Full Control. No one else has access rights. This is the default access control policy for any new buckets or objects.\n\n  \n* PublicRead : Specifies the owner is granted Full Control and to the All Users group grantee is granted Read access.\n\n  \n* PublicReadWrite: Specifies the owner is granted Full Control and to the All Users group grantee is granted Read and Write access.\n\n  \n* AuthenticatedRead: Specifies the owner is granted Full Control and to the Authenticated Users group grantee is granted Read access.\n\n  \n* LogDeliveryWrite: Specifies the owner is granted Full Control and to the Log Delivery group grantee is granted Write access.\n\n  \n* BucketOwnerRead: Specifies the owner of the bucket, but not necessarily the same as the owner of the object, is granted Read access.\n\n  \n* BucketOwnerFullControl: Specifies the owner of the bucket, but not necessarily the same as the owner of the object, is granted Full Control.\n\n  \n* AwsExecRead: Specifies the owner is granted Full Control and Amazon EC2 is granted {@link Permission#Read} access to GET an Amazon Machine Image (AMI) bundle from Amazon S3.",
          "isOptional": true
        },
        {
          "name": "cacheControl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contentDisposition",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contentEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contentType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePathPattern",
          "type": "String",
          "values": [],
          "description": "This is the pattern to use to exclude files <i>Sample : \"*.svg\"</i>",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "This is the local file to upload from the workspace.",
          "isOptional": true
        },
        {
          "name": "includePathPattern",
          "type": "String",
          "values": [],
          "description": "This is the pattern to use to find files to push to S3 <i>Sample : \"dist/**\"</i>",
          "isOptional": true
        },
        {
          "name": "kmsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "metadatas",
          "type": "String",
          "values": [],
          "description": "Metadatas to add to push file. Multiple metadatas must be separated with a ';' and name and value separated by a ':'. <i>Sample : \"Content-Type:image/svg+xml;Another:AnotherValue\"</i>",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "This is the path inside the bucket to use. <i>Do not begin with a leading \"/\".</i>",
          "isOptional": true
        },
        {
          "name": "redirectLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sseAlgorithm",
          "type": "String",
          "values": [],
          "description": "Server Side Encryption Algorithm to add to push file. <i>Sample : \"AES256\"</i>",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "Tags to add to push file. Multiple tags must be separated with a ', ' and name and value separated by a ':'. <i>Sample : \"[tag1:value1, tag2:value2]\"</i>",
          "isOptional": true
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "This is the text to be copied up to S3.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "Working directories for s3Upload plugin <i>Sample : \"dist\"</i>",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "s3Upload",
      "title": "s3Upload: Publish artifacts to S3 Bucket",
      "description": "",
      "parameters": [
        {
          "name": "profileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entries",
          "type": "Nested",
          "values": [
            "bucket",
            "sourceFile",
            "excludedFile",
            "storageClass",
            "selectedRegion",
            "noUploadOnFailure",
            "uploadFromSlave",
            "managedArtifacts",
            "useServerSideEncryption",
            "flatten",
            "gzipFiles",
            "keepForever",
            "showDirectlyInBrowser",
            "userMetadata"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "userMetadata",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dontWaitForConcurrentBuildCompletion",
          "type": "boolean",
          "values": [],
          "description": "When disabled, only publish to S3 after completion of concurrent builds to prevent overriding published artifact. You can enable this to publish to S3 at the end of each concurrent build. Published artifact should then have a different name for each build to prevent unnecessary uploads.",
          "isOptional": false
        },
        {
          "name": "consoleLogLevel",
          "type": "String",
          "values": [],
          "description": "Allows filtering log messages by level of severity: INFO, WARNING and SEVERE.",
          "isOptional": false
        },
        {
          "name": "pluginFailureResultConstraint",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dontSetBuildResultOnFailure",
          "type": "boolean",
          "values": [],
          "description": "When checked or selected, the build status will not get updated when a failure occurs. This is primarily useful when using this step in a pipeline. A failure would manifest itself as an exception thrown as opposed to a change in build status. Therefore, the pipeline author can choose to decide to handle the exception with a retry(), etc.",
          "isOptional": false
        }
      ],
      "plugin": "s3"
    },
    {
      "command": "salt",
      "title": "salt: Send a message to Salt API",
      "description": "",
      "parameters": [
        {
          "name": "servername",
          "type": "String",
          "values": [],
          "description": "Salt servername. In the form: https://host.domain:8000\n \n\n The Test Connection process is run from the Jenkins master. If the build is localized to an agent, and the servername is specific to that agent, then Test Connection will likely fail, while the actual build may succeed.",
          "isOptional": false
        },
        {
          "name": "authtype",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientInterface",
          "type": "Nested",
          "values": [
            "hook",
            "batch",
            "local",
            "subset",
            "runner"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "saveEnvVar",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipValidation",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "saltstack"
    },
    {
      "command": "samDeploy",
      "title": "samDeploy: AWS SAM deploy application",
      "description": "",
      "parameters": [
        {
          "name": "settings",
          "type": "Nested",
          "values": [
            "credentialsId",
            "region",
            "s3Bucket",
            "stackName",
            "templateFile",
            "kmsKeyId",
            "outputTemplateFile",
            "parameters",
            "roleArn",
            "s3Prefix",
            "tags"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-sam"
    },
    {
      "command": "sauce",
      "title": "sauce: Sauce",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sauce-ondemand"
    },
    {
      "command": "saucePublisher",
      "title": "saucePublisher: Run Sauce Labs Test Publisher",
      "description": "This step will trigger jenkins to parse the output of your build for `SauceOnDemandSessionID` lines and will attempt to update the job on sauce labs with the proper status. See [the Sauce Labs wiki](https://wiki.saucelabs.com/display/DOCS/Setting+Up+Reporting+between+Sauce+Labs+and+Jenkins) for more information",
      "parameters": [
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sauce-ondemand"
    },
    {
      "command": "sauceconnect",
      "title": "sauceconnect: Sauce Connect",
      "description": "",
      "parameters": [
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sauceConnectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useGeneratedTunnelIdentifier",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useLatestSauceConnect",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sauce-ondemand"
    },
    {
      "command": "scanForIssues",
      "title": "scanForIssues: Scan files or the console log for warnings or issues",
      "description": "",
      "parameters": [
        {
          "name": "blameDisabled",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically shows what revision and author (name and email) last modified the lines of the affected files that contain issues. If this operation slows down your build or you don't want to publish sensitive user data, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "filters",
          "type": "Nested",
          "values": [
            "excludeCategory",
            "excludeFile",
            "excludeMessage",
            "excludeModule",
            "excludePackage",
            "excludeType",
            "includeCategory",
            "includeFile",
            "includeMessage",
            "includeModule",
            "includePackage",
            "includeType"
          ],
          "description": "The created report of issues can be filtered afterwards. You can specify an arbitrary number of include or exclude filters. Currently, there is support for filtering issues by module name, package or namespace name, file name, category or type. Include filters will be combined with `or`, exclude filters with `and`. If no filter is defined, then all issues will be published. Filters with empty regular expression will be ignored.",
          "isOptional": true
        },
        {
          "name": "forensicsDisabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceCodeEncoding",
          "type": "String",
          "values": [],
          "description": "In order to correctly show all your affected source code files in the detail views, the plugin must open these files with the correct character encoding (UTF-8, ISO-8859-1, etc.). If you leave this field empty then the default encoding of the platform will be used. This might work but is not recommended.",
          "isOptional": true
        },
        {
          "name": "sourceDirectory",
          "type": "String",
          "values": [],
          "description": "Since the plugin also reads the affected source code files (source code view, fingerprinting, blaming, etc.) it needs to copy these files from the agent to the master. If these files are not part of the workspace (or checked out into a sub folder of the workspace) they are not automatically found. So you can add an additional source code directory where the plugin tries to find these files. Note, that due to security restrictions additional paths outside of the workspace need to be registered in Jenkins system configuration before they can be used here.",
          "isOptional": true
        },
        {
          "name": "tool",
          "type": "Nested",
          "values": [
            "acuCobol",
            "ajc",
            "androidLintParser",
            "ansibleLint",
            "armCc",
            "axivionSuite",
            "brakeman",
            "buckminster",
            "cadence",
            "cargo",
            "ccm",
            "checkStyle",
            "clair",
            "clang",
            "clangAnalyzer",
            "clangTidy",
            "cmake",
            "codeAnalysis",
            "codeNarc",
            "coolflux",
            "cpd",
            "cppCheck",
            "cppLint",
            "cssLint",
            "dscanner",
            "detekt",
            "diabC",
            "docFx",
            "dockerLint",
            "doxygen",
            "drMemory",
            "dupFinder",
            "eclipse",
            "erlc",
            "errorProne",
            "esLint",
            "findBugs",
            "flake8",
            "flawfinder",
            "flexSdk",
            "fxcop",
            "gcc3",
            "gcc",
            "gendarme",
            "ghsMulti",
            "gnat",
            "gnuFortran",
            "goLint",
            "goVet",
            "groovyScript",
            "hadoLint",
            "iar",
            "iarCstat",
            "ibLinter",
            "ideaInspection",
            "infer",
            "intel",
            "invalids",
            "junitParser",
            "java",
            "javaDoc",
            "jcReport",
            "jsHint",
            "jsLint",
            "klocWork",
            "kotlin",
            "ktLint",
            "mavenConsole",
            "modelsim",
            "metrowerksCodeWarrior",
            "msBuild",
            "myPy",
            "nagFortran",
            "otDockerLint",
            "taskScanner",
            "PVSStudio",
            "parasoftFindings",
            "pcLint",
            "pep8",
            "perforce",
            "perlCritic",
            "php",
            "phpCodeSniffer",
            "phpStan",
            "pit",
            "pmdParser",
            "prefast",
            "protoLint",
            "puppetLint",
            "pyDocStyle",
            "pyLint",
            "qacSourceCodeAnalyser",
            "qtTranslation",
            "resharperInspectCode",
            "rfLint",
            "robocopy",
            "ruboCop",
            "scala",
            "simian",
            "sonarQube",
            "sphinxBuild",
            "spotBugs",
            "styleCop",
            "sunC",
            "swiftLint",
            "tagList",
            "taskingVx",
            "tiCss",
            "tnsdl",
            "trivy",
            "tsLint",
            "issues",
            "xlc",
            "xmlLint",
            "yamlLint",
            "yuiCompressor",
            "zptLint"
          ],
          "description": "For each static analysis tool a dedicated parser or scanner will be used to read report files or produce issues in any other way. If your tool is not yet supported you can define a new Groovy based parser in Jenkins system configuration. You can reference this new parser afterwards when you select the tool 'Groovy Parser'. Additionally, you provide a new parser within a new small plug-in. If the parser is useful for other teams as well please share it and provide pull requests for the [Warnings Next Generation Plug-in](https://github.com/jenkinsci/warnings-ng-plugin/pulls) and the [Analysis Parsers Library](https://github.com/jenkinsci/analysis-model/pulls).",
          "isOptional": true
        }
      ],
      "plugin": "warnings-ng"
    },
    {
      "command": "scmHttpClient",
      "title": "scmHttpClient: SCM HttpClient",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "addScmPath",
          "type": "String",
          "values": [],
          "description": "added custom paths to each affected scm path.\n\n\ne.g., Add scmPath: testOne\n\n\nassuming you get the current scm affected path list: [[\"src/main/java/Test.java\"],[\"app/src/main/java/HelloWorld.java\"]]\n\n\nWith the handle, the result: you will get a new affected path list: [[\"testOne\",\"src/main/java/Test.java\"],[\"testOne\",\"src/main/java/HelloWorld.java\"]]\n\n\nif you need to add more, Add scmPath can be use like: testOne,testTwo,testThird",
          "isOptional": true
        },
        {
          "name": "contentType",
          "type": "Enum",
          "values": [
            "NOT_SET",
            "TEXT_HTML",
            "TEXT_PLAIN",
            "APPLICATION_FORM",
            "APPLICATION_JSON",
            "APPLICATION_JSON_UTF8",
            "APPLICATION_TAR",
            "APPLICATION_ZIP",
            "APPLICATION_OCTETSTREAM"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpMode",
          "type": "Enum",
          "values": [
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "DELETE",
            "OPTIONS",
            "PATCH"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "regexString",
          "type": "String",
          "values": [],
          "description": "using regular expression to handle each affected scm path.\n\n\neg: Regex string: src.*java\n\n\nassuming you get the current scm affected path list: [[\"src/main/java/Test.java\"],[\"app/src/main/java/HelloWorld.java\"]]\n\n\nWith the handle, the result: you will get a new affected path list: [[\"src/main/java/Test.java\"],[\"src/main/java/HelloWorld.java\"]]",
          "isOptional": true
        },
        {
          "name": "requestBody",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveAffectedPath",
          "type": "boolean",
          "values": [],
          "description": "it will be use like $(AFFECTED_PATH) on request body.",
          "isOptional": true
        },
        {
          "name": "saveJobBuildMessage",
          "type": "boolean",
          "values": [],
          "description": "it will be use like $(JOB_BUILD_MESSAGE) on request body.",
          "isOptional": true
        },
        {
          "name": "sendHttpRequest",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validResponseCodes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "validResponseContent",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "scm-httpclient"
    },
    {
      "command": "scmSkip",
      "title": "scmSkip: SCM Skip Step",
      "description": "",
      "parameters": [
        {
          "name": "deleteBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "scmskip"
    },
    {
      "command": "script",
      "title": "script: Run arbitrary Pipeline script",
      "description": "",
      "parameters": [],
      "plugin": "pipeline-model-definition"
    },
    {
      "command": "sdelements",
      "title": "sdelements: SD Elements",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "int",
          "values": [],
          "description": "The id of the project to use.",
          "isOptional": false
        },
        {
          "name": "connectionName",
          "type": "String",
          "values": [],
          "description": "The name of the connection",
          "isOptional": false
        },
        {
          "name": "markUnstable",
          "type": "boolean",
          "values": [],
          "description": "When this checkbox is checked, non compliant results from an SD Elements project will mark the build unstable instead of failing it",
          "isOptional": true
        }
      ],
      "plugin": "sdelements"
    },
    {
      "command": "selectRun",
      "title": "selectRun: Select Run",
      "description": "This step selects a specific run from the job identified by the <i>Project name</i> parameter. The run is selected based on the provided <i>Run Selector</i> parameter. Additional conditions for selecting the build may be specified by using the <i>Run Filter</i>.",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "The name of the source project from which to select a specific run.",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "Nested",
          "values": [
            "and",
            "displayName",
            "$class: 'DownstreamRunFilter'",
            "not",
            "or",
            "parameterized",
            "parameters",
            "saved"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selector",
          "type": "Nested",
          "values": [
            "buildNumber",
            "fallback",
            "parameterized",
            "permalink",
            "status",
            "triggering"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "run-selector"
    },
    {
      "command": "sendBuildToDataTheorem",
      "title": "sendBuildToDataTheorem: Upload build to Data Theorem",
      "description": "",
      "parameters": [
        {
          "name": "buildToUpload",
          "type": "String",
          "values": [],
          "description": "The build file name that you want to send to Data Theorem. The build has to be generated either in the workspace or in the archive directory \n\n \n If the name of the target is variable, you can use a glob pattern to specify the file for example **/release/app-*.apk",
          "isOptional": true
        },
        {
          "name": "applicationCredentialComments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationCredentialPassword",
          "type": "String",
          "values": [],
          "description": "In order to run a full dynamic scan with an application with a login page, Data Theorem needs a test account. Please Provide us the password for this account here",
          "isOptional": true
        },
        {
          "name": "applicationCredentialUsername",
          "type": "String",
          "values": [],
          "description": "In order to run a full dynamic scan with an application with a login pagen Data Theorem needs a test account. Please Provide us the username for this account here",
          "isOptional": true
        },
        {
          "name": "dataTheoremUploadApiKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dontUpload",
          "type": "boolean",
          "values": [],
          "description": "Check this option to print the path of the build output without uploading anything \n\n \n You can use this option to simulate the plugin features without sending anything to Data Theorem",
          "isOptional": true
        },
        {
          "name": "mappingFileToUpload",
          "type": "String",
          "values": [],
          "description": "If your Android application is obfuscated using Proguard, you can upload a mapping file to have scan results deobfuscated. This is not required for scans to be completed. However, once a mapping file has been uploaded once, all subsequent uploads will require the corresponding mapping file unless the requirement is disabled via the Results API v2.",
          "isOptional": true
        },
        {
          "name": "proxyHostname",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyUnsecuredConnection",
          "type": "boolean",
          "values": [],
          "description": "This option will disable SSL Certificate Validation for each data theorem endpoint request.",
          "isOptional": true
        },
        {
          "name": "proxyUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sendBuildDirectlyFromRemote",
          "type": "boolean",
          "values": [],
          "description": "By default the build is stream to the main node before being sent to Data Theorem. Checking this option will allow the building node to directly send the build to Data Theorem.",
          "isOptional": true
        }
      ],
      "plugin": "datatheorem-mobile-app-security"
    },
    {
      "command": "sendCIMessage",
      "title": "sendCIMessage: CI Notifier",
      "description": "",
      "parameters": [
        {
          "name": "providerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrides",
          "type": "Nested",
          "values": [
            "topic",
            "queue"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "messageType",
          "type": "Enum",
          "values": [
            "CodeQualityChecksDone",
            "ComponentBuildDone",
            "Custom",
            "EarlyPerformanceTestingDone",
            "EarlySecurityTestingDone",
            "ImageUploaded",
            "FunctionalTestCoverageDone",
            "FunctionalTestingDone",
            "NonfunctionalTestingDone",
            "OotbTestingDone",
            "PeerReviewDone",
            "ProductAcceptedForReleaseTesting",
            "ProductBuildDone",
            "ProductBuildInStaging",
            "ProductTestCoverageDone",
            "PullRequest",
            "SecurityChecksDone",
            "TestingStarted",
            "TestingCompleted",
            "Tier0TestingDone",
            "Tier1TestingDone",
            "Tier2IntegrationTestingDone",
            "Tier2ValidationTestingDone",
            "Tier3TestingDone",
            "UnitTestCoverageDone",
            "UpdateDefectStatus"
          ],
          "description": "Type of CI message to be sent.",
          "isOptional": false
        },
        {
          "name": "messageProperties",
          "type": "String",
          "values": [],
          "description": "KEY=value pairs, one per line (Java properties file format) to be used as message properties. Backslashes are used for escaping, so use \"\\\\\" for a single backslash. Current build parameters and/or environment variables can be used in form: ${PARAM}.",
          "isOptional": false
        },
        {
          "name": "messageContent",
          "type": "String",
          "values": [],
          "description": "Content of CI message to be sent. Environment variable values may be used in the content to allow customization of the message. Environment variables should use the familiar bash shell format, e.g. ${VARIABLE}.",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "Whether you want to fail the build if there is an error sending a message. By default, it is false.",
          "isOptional": false
        }
      ],
      "plugin": "jms-messaging"
    },
    {
      "command": "sendDeployableMessage",
      "title": "sendDeployableMessage: Send deployable mapping message to OTC",
      "description": "",
      "parameters": [
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "sensediaApiDeploy",
      "title": "sensediaApiDeploy: Sensedia API Platformdeploy",
      "description": "",
      "parameters": [
        {
          "name": "enviromentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sensedia-api-platform"
    },
    {
      "command": "sensediaApiJson",
      "title": "sensediaApiJson: Sensedia API Platform get json",
      "description": "",
      "parameters": [
        {
          "name": "apiId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sensedia-api-platform"
    },
    {
      "command": "sensediaApiQA",
      "title": "sensediaApiQA: Sensedia API Platform QA",
      "description": "",
      "parameters": [
        {
          "name": "revisionNumber",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "destination",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "logInterceptor",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceOutOfSize",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceSize",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sensedia-api-platform"
    },
    {
      "command": "serviceNow_attachFile",
      "title": "serviceNow_attachFile: AttachFileStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_attachZip",
      "title": "serviceNow_attachZip: AttachZipStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_createChange",
      "title": "serviceNow_createChange: CreateChangeStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_getCTask",
      "title": "serviceNow_getCTask: GetCTaskStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_getChangeState",
      "title": "serviceNow_getChangeState: GetChangeStateStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_updateChangeItem",
      "title": "serviceNow_updateChangeItem: UpdateChangeItemStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "serviceNow_updateTask",
      "title": "serviceNow_updateTask: UpdateChangeTaskStep",
      "description": "",
      "parameters": [
        {
          "name": "serviceNowConfiguration",
          "type": "Nested",
          "values": [
            "instance",
            "credentialId",
            "producerId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceNowItem",
          "type": "Nested",
          "values": [
            "table",
            "sysId",
            "body",
            "cTask",
            "filename",
            "query"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vaultConfiguration",
          "type": "Nested",
          "values": [
            "url",
            "path"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "service-now"
    },
    {
      "command": "setAccountAlias",
      "title": "setAccountAlias: Set the AWS account alias",
      "description": "The `setAccountAlias` step set the given name as AWS account alias.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name to use as account alias.",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "setCustomBuildProperty",
      "title": "setCustomBuildProperty: Set custom build property",
      "description": "Set a custom build property:\n \n  \n* `setCustomBuildProperty(key: 'keyString', value: 'string')`\n\n  \n* `setCustomBuildProperty(key: 'keyString', value: 42)`\n\n  \n* `setCustomBuildProperty(key: 'keyString', value: LocalDateTime.now())`\n\n  \n* ... or any other Object as value",
      "parameters": [
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "value",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onlySetIfAbsent",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "custom-build-properties"
    },
    {
      "command": "setGerritReview",
      "title": "setGerritReview: Set Gerrit review",
      "description": "Allows influencing how the build results are reported back to Gerrit when the build finishes. All input values are optional. If the step occurs multiple times in a workflow, the last value set for each parameter is used. \n\n \n If the build is not triggered by Gerrit Trigger, or if the trigger is configured to not report back to Gerrit when the build finishes, this step does nothing.",
      "parameters": [
        {
          "name": "customUrl",
          "type": "String",
          "values": [],
          "description": "Custom URL for a message to send back to Gerrit. If empty, URL to post from Gerrit Trigger configuration will be used. Same expansion is done as for the URL to post configuration option.",
          "isOptional": true
        },
        {
          "name": "unsuccessfulMessage",
          "type": "String",
          "values": [],
          "description": "Additional details to post back to Gerrit if the build is not successful.",
          "isOptional": true
        }
      ],
      "plugin": "gerrit-trigger"
    },
    {
      "command": "setGitHubPullRequestStatus",
      "title": "setGitHubPullRequestStatus: Set GitHub PullRequest Commit Status",
      "description": "Sets the commit status of the commit that triggered a pull request build. Note that this step can only be used by builds that were triggered by a pull request.",
      "parameters": [
        {
          "name": "context",
          "type": "String",
          "values": [],
          "description": "A string label to differentiate this status from the status of other systems.",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "A short detail message to add to the status",
          "isOptional": true
        },
        {
          "name": "state",
          "type": "Enum",
          "values": [
            "PENDING",
            "SUCCESS",
            "ERROR",
            "FAILURE"
          ],
          "description": "State of the status indicating the progress or completion of the check.",
          "isOptional": true
        }
      ],
      "plugin": "github-pullrequest"
    },
    {
      "command": "setJUnitCounts",
      "title": "setJUnitCounts: Set junit test result counts as custom build properties",
      "description": "Set junit test result counts as custom build properties. The results are filtered by test classname using include and exclude regular expressions ([see JavaDoc](http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html)).\n \nThe following custom build properties will be set (prefixed with key prefix): \n\n \n  \n* PassedCount\n\n  \n* FailedCount\n\n  \n* FailedAge",
      "parameters": [
        {
          "name": "keyPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "include",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "exclude",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onlySetIfAbsent",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "custom-build-properties"
    },
    {
      "command": "sh",
      "title": "sh: Shell Script",
      "description": "",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "Runs a Bourne shell script, typically on a Unix node. Multiple lines are accepted. \n\n \n An interpreter selector may be used, for example: `#!/usr/bin/perl` \n\n \n Otherwise the system default shell will be run, using the `-xe` flags (you can specify `set +e` and/or `set +x` to disable those).",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "Encoding of process output. In the case of `returnStdout`, applies to the return value of this step; otherwise, or always for standard error, controls how text is copied to the build log. If unspecified, uses the system default encoding of the node on which the step is run. If there is any expectation that process output might include non-ASCII characters, it is best to specify the encoding explicitly. For example, if you have specific knowledge that a given process is going to be producing UTF-8 yet will be running on a node with a different system encoding (typically Windows, since every Linux distribution has defaulted to UTF-8 for a long time), you can ensure correct output by specifying: `encoding: 'UTF-8'`",
          "isOptional": true
        },
        {
          "name": "label",
          "type": "String",
          "values": [],
          "description": "Label to be displayed in the pipeline step view and blue ocean details for the step instead of the step type. So the view is more meaningful and domain specific instead of technical.",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, a script which exits with a nonzero status code will cause the step to fail with an exception. If this option is checked, the return value of the step will instead be the status code. You may then compare it to zero, for example.",
          "isOptional": true
        },
        {
          "name": "returnStdout",
          "type": "boolean",
          "values": [],
          "description": "If checked, standard output from the task is returned as the step value as a `String`, rather than being printed to the build log. (Standard error, if any, will still be printed to the log.) You will often want to call `.trim()` on the result to strip off a trailing newline.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "sha1",
      "title": "sha1: Compute the SHA1 of a given file",
      "description": "Computes the SHA1 of a given file.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "The path to the file to hash.",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "signAndroidApks",
      "title": "signAndroidApks: Sign Android APKs",
      "description": "",
      "parameters": [
        {
          "name": "androidHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "apksToSign",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiveSignedApks",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "archiveUnsignedApks",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyAlias",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyStoreId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "signedApkMapping",
          "type": "Nested",
          "values": [
            "unsignedApkNameDir",
            "unsignedApkSibling"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipZipalign",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "zipalignPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "android-signing"
    },
    {
      "command": "signAndroidApks",
      "title": "signAndroidApks: Sign Android APKs",
      "description": "",
      "parameters": [
        {
          "name": "androidHome",
          "type": "String",
          "values": [],
          "description": "Override the path of the Android SDK installation this build step should [use to find](https://github.com/jenkinsci/android-signing-plugin#usage) the `[zipalign](https://developer.android.com/studio/command-line/zipalign.html)` tool. You can also set the `ANDROID_HOME` environment variable in your Jenkins system or node configuration. E.g., `/usr/local/android-sdk`.",
          "isOptional": true
        },
        {
          "name": "apksToSign",
          "type": "String",
          "values": [],
          "description": "An [Ant-style glob](https://ant.apache.org/manual/dirtasks.html), or multiple comma-separated globs, selecting the APK files relative to the workspace. For example, `myApp/build/outputs/apk/myApp-unsigned.apk` or `**/*-unsigned.apk` or `app1/**/*-unsigned.apk, app2/**/*-unsigned.apk`.",
          "isOptional": true
        },
        {
          "name": "archiveSignedApks",
          "type": "boolean",
          "values": [],
          "description": "Check this option to add all signed APKs this build step [generates](https://github.com/jenkinsci/android-signing-plugin#usage) to the build's archived artifacts. If you don't want this step to archive the signed APK artifacts, downstream build steps can access signed APKs in the workspace at paths like `SignApksBuilder-out/myApp-unsigned.apk/myApp-signed.apk`, where `myApp-unsigned.apk` is a directory named for the input unsigned APK.",
          "isOptional": true
        },
        {
          "name": "archiveUnsignedApks",
          "type": "boolean",
          "values": [],
          "description": "Check this option to add all input unsigned APKs to the build's archived artifacts. These will be the APK files selected with glob pattern(s) of the <i>APKs to Sign</i> setting.",
          "isOptional": true
        },
        {
          "name": "keyAlias",
          "type": "String",
          "values": [],
          "description": "The entry name of the private key/certificate chain you want to use to sign your APK(s). This entry must exist in the key store credentials the `Key Store ID` references. If your key store contains only one key entry, which is the most common case, you can leave this field blank.",
          "isOptional": true
        },
        {
          "name": "keyStoreId",
          "type": "String",
          "values": [],
          "description": "The ID of a [certificate credential](https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Plugin). This build step expects the referenced certificate credential to be a password-protected PKCS12 file containing a key protected by the same password. See [this plugin's script](https://github.com/jenkinsci/android-signing-plugin/blob/master/src/test/resources/create_key_store.sh) if you need help creating such a key store to add to Jenkins, or [Google](https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=convert+android+release+keystore+to+pkcs12&*) how to convert your Android release key to a PKCS12 file.",
          "isOptional": true
        },
        {
          "name": "signedApkMapping",
          "type": "Nested",
          "values": [
            "unsignedApkNameDir",
            "unsignedApkSibling"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipZipalign",
          "type": "boolean",
          "values": [],
          "description": "Skip the [Zipalign](https://developer.android.com/studio/command-line/zipalign.html) step of signing the APK(s). This is primarily for the case of signing debug APKs, for which the zipalign command fails.",
          "isOptional": true
        },
        {
          "name": "zipalignPath",
          "type": "String",
          "values": [],
          "description": "Override the full path of the Android `[zipalign](https://developer.android.com/studio/command-line/zipalign.html)` executable this build step should [use to align](https://github.com/jenkinsci/android-signing-plugin#usage) the target APKs. You can also set the `ANDROID_ZIPALIGN` environment variable in your Jenkins system or node configuration. E.g., `/opt/android-tools/bin/zipalign`",
          "isOptional": true
        }
      ],
      "plugin": "android-signing"
    },
    {
      "command": "signalAll",
      "title": "signalAll: Notify all wa.",
      "description": "",
      "parameters": [
        {
          "name": "condition",
          "type": "class com.github.topikachu.jenkins.concurrent.condition.LockAndCondition",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "concurrent-step"
    },
    {
      "command": "silkcentral",
      "title": "silkcentral: Silk Central Execution",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "execDefIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildNumberUsageOption",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contOnErr",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "delay",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreSetupCleanup",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specificPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specificServiceURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "specificUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useSpecificInstance",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sctmexecutor"
    },
    {
      "command": "silkcentralCollectResults",
      "title": "silkcentralCollectResults: Collect Silk Central Test Results",
      "description": "",
      "parameters": [],
      "plugin": "sctmexecutor"
    },
    {
      "command": "skenai",
      "title": "skenai: Sken.ai",
      "description": "",
      "parameters": [
        {
          "name": "orgId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "skenai"
    },
    {
      "command": "slackSend",
      "title": "slackSend: Send Slack Message",
      "description": "Simple step for sending a Slack message to specified channel.\n \n\n Use the advanced settings to override the Slack Plugin global configuration to include: `token` and `channel`.\n \n\n Please see the Slack Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` slackSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "attachments",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "baseUrl",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Slack compatible app URL specified in the global configuration.",
          "isOptional": true
        },
        {
          "name": "blocks",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "botUser",
          "type": "boolean",
          "values": [],
          "description": "Bot user option indicates the token belongs to a custom Slack app bot user in Slack.\n\n \nIf the notification will be sent to a user via direct message, the default integration sends it via @slackbot, use this option if you want to send messages via a bot user.",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Slack Plugin channel specified in the global configuration. Multiple channels may be provided as a comma, semicolon, or space delimited string.\n \n\n `slackSend channel: \"#channel-name\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "An **optional** value that can either be one of **good**, **warning**, **danger**, or any **hex color code** (eg. #439FE0). This value is used to color the border along the left side of the message attachment.\n \n\n `slackSend color: \"#439FE0\", message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If set to true, then the step will abort the Workflow run if there is an error sending message.\n \n\n `slackSend failOnError: true, message: \"Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}\"`",
          "isOptional": true
        },
        {
          "name": "iconEmoji",
          "type": "String",
          "values": [],
          "description": "Choose a custom emoji to use as the bot's icon in Slack, requires using a bot user",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "This is the main text in a message attachment, and can contain standard message markup. The content will automatically collapse if it contains 700+ characters or 5+ linebreaks, and will display a \"Show more...\" link to expand the content. Message may include global variables, for example environment and currentBuild variables:\n \n\n ` slackSend \"started ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
          "isOptional": true
        },
        {
          "name": "notifyCommitters",
          "type": "boolean",
          "values": [],
          "description": "Notify committers via direct message in addition to specified channels, requires using a bot user",
          "isOptional": true
        },
        {
          "name": "replyBroadcast",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sendAsText",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "teamDomain",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Slack Plugin Integration Team Domain specified in the global configuration.",
          "isOptional": true
        },
        {
          "name": "timestamp",
          "type": "String",
          "values": [],
          "description": "Allows updating an existing message instead of posting a new one.",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Slack Plugin Integration Token specified in the global configuration.",
          "isOptional": true
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to send notifications to Slack. The \"Kind\" of the credential must be \"Secret text.\" If both \"Integration Token\" and \"Integration Token Credential ID\" are set, the \"Integration Token Credential ID\" will take precedence for security reasons.\n\n \nThis overrides the global setting.",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "Choose a custom username to use as the bot's name, requires using a bot user",
          "isOptional": true
        }
      ],
      "plugin": "slack"
    },
    {
      "command": "slackUploadFile",
      "title": "slackUploadFile: Upload file to slack",
      "description": "",
      "parameters": [
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "File path to search in to upload the file. Globs are accepted but only the first file found will be uploaded.\n \n\n `slackUploadFile \"file.txt\"`",
          "isOptional": false
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "Allows overriding the Slack Plugin channel specified in the global configuration. Multiple channels may be provided as a comma separated string.\n \n\n `slackUploadFile channel: \"#channel-name\", filePath: \"file.txt\"`",
          "isOptional": true
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the bot user token from the Credentials plugin to be used to send notifications to Slack. The \"Kind\" of the credential must be \"Secret text.\" \n\n \nThis overrides the global setting.\n **The user token must be the bot user oauth token**",
          "isOptional": true
        },
        {
          "name": "initialComment",
          "type": "String",
          "values": [],
          "description": "A comment that will be added by the bot when the file is uploaded ` `slackUploadFile initialComment: \"Test result failures\", filePath: \"file.txt\"` `",
          "isOptional": true
        }
      ],
      "plugin": "slack"
    },
    {
      "command": "slackUserIdFromEmail",
      "title": "slackUserIdFromEmail: Resolve Slack UserId from Email Address",
      "description": "",
      "parameters": [
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "A Slack User ID will be resolved from the email address using the [users.lookupByEmail](https://slack.com/api/users.lookupByEmail) API method. Requires using a bot user.",
          "isOptional": false
        },
        {
          "name": "botUser",
          "type": "boolean",
          "values": [],
          "description": "Bot user option indicates the token belongs to a custom Slack app bot user in Slack.\n\n \nIf the notification will be sent to a user via direct message, the default integration sends it via @slackbot, use this option if you want to send messages via a bot user.",
          "isOptional": true
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to send notifications to Slack. The \"Kind\" of the credential must be \"Secret text.\"\n\n \nThis overrides the global setting.",
          "isOptional": true
        }
      ],
      "plugin": "slack"
    },
    {
      "command": "slackUserIdsFromCommitters",
      "title": "slackUserIdsFromCommitters: Resolve Slack UserIds from Changeset Authors",
      "description": "",
      "parameters": [
        {
          "name": "botUser",
          "type": "boolean",
          "values": [],
          "description": "Bot user option indicates the token belongs to a custom Slack app bot user in Slack.\n\n \nIf the notification will be sent to a user via direct message, the default integration sends it via @slackbot, use this option if you want to send messages via a bot user.",
          "isOptional": true
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to send notifications to Slack. The \"Kind\" of the credential must be \"Secret text.\"\n\n \nThis overrides the global setting.",
          "isOptional": true
        }
      ],
      "plugin": "slack"
    },
    {
      "command": "sleep",
      "title": "sleep: Sleep",
      "description": "Simply pauses the Pipeline build until the given amount of time has expired. Equivalent to (on Unix) `sh 'sleep …'`. May be used to pause one branch of `parallel` while another proceeds.",
      "parameters": [
        {
          "name": "time",
          "type": "int",
          "values": [],
          "description": "The length of time for which the step will sleep.",
          "isOptional": false
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "The unit for the time parameter. Defaults to 'SECONDS' if not specified.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "sloccountPublish",
      "title": "sloccountPublish: Publish Sloccount reports",
      "description": "",
      "parameters": [
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commentIsCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numBuildsInGraph",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreBuildFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sloccount"
    },
    {
      "command": "smartcheckScan",
      "title": "smartcheckScan: Deep Security Smart Check Scan",
      "description": "",
      "parameters": [
        {
          "name": "smartcheckHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "imageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "findingsThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "imagePullAuth",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "insecureSkipRegistryTLSVerify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "insecureSkipTLSVerify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preregistryCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preregistryHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preregistryPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preregistryScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preregistryUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "smartCheckHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "smartcheckCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "smartcheckPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "smartcheckUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "deepsecurity-smartcheck"
    },
    {
      "command": "smilehubSend",
      "title": "smilehubSend: Send SmileHub Message",
      "description": "Simple step for sending a SmileHub message to specified channel.\n \n\n Use the advanced settings to override the SmileHub Plugin global configuration to include: `channel`.\n \n\n Please see the SmileHub Plugin global configuration for more details on the fields. Usage Example:\n \n\n ` rocketSend \"Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Open&gt;)\" `",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attachments",
          "type": "Nested",
          "values": [
            "title",
            "audioUrl",
            "authorIcon",
            "authorName",
            "collapsed",
            "color",
            "imageUrl",
            "messageLink",
            "text",
            "thumbUrl",
            "titleLink",
            "titleLinkDownload",
            "ts",
            "videoUrl"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "avatar",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "channel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "color",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "emoji",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rawMessage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookTokenCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "smilehubnotifier"
    },
    {
      "command": "snActivatePlugin",
      "title": "snActivatePlugin: SN: Activate plugin",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here).\n \n\n This field cannot be empty. It doesn't use global settings from ServiceNow Parameters.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "pluginId",
          "type": "String",
          "values": [],
          "description": "Unique identifier of the plugin. You can locate this identifier on the Plugins page within the card of the desired plugin; identified with the name \"ID\".",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url. This field cannot be empty. It doesn't use global settings from ServiceNow Parameters.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snApplyChanges",
      "title": "snApplyChanges: SN: Apply changes",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here) used for the instance (usually where the application will be published).",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "appScope",
          "type": "String",
          "values": [],
          "description": "Required if `application system ID` is not specified. The scope name of the application for which to apply the changes, such as x_aah_custom_app. You can locate this value in the scope field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appSysId",
          "type": "String",
          "values": [],
          "description": "Required if `application scope` is not specified. The system id of the application for which to apply the changes. You can locate this value in the Sys ID field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "branchName",
          "type": "String",
          "values": [],
          "description": "Name of the branch in the source control system from which to acquire the application.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url (usually where the application will be published to).",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snInstallApp",
      "title": "snInstallApp: SN: Install application",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here) used for the instance where the application will be installed.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "appScope",
          "type": "String",
          "values": [],
          "description": "Required if `application system ID` is not specified. The scope name of the application for which to apply the changes, such as x_aah_custom_app. You can locate this value in the scope field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appSysId",
          "type": "String",
          "values": [],
          "description": "Required if `application scope` is not specified. The system id of the application for which to apply the changes. You can locate this value in the Sys ID field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appVersion",
          "type": "String",
          "values": [],
          "description": "Version of the application to install. If empty, the published version will be used.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url where the application will be installed.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snPublishApp",
      "title": "snPublishApp: SN: Publish application",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here) used for the instance where the application will be published.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "appScope",
          "type": "String",
          "values": [],
          "description": "Required if `application system ID` is not specified. The scope name of the application for which to apply the changes, such as x_aah_custom_app. You can locate this value in the scope field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appSysId",
          "type": "String",
          "values": [],
          "description": "Required if `application scope` is not specified. The system id of the application for which to apply the changes. You can locate this value in the Sys ID field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appVersion",
          "type": "String",
          "values": [],
          "description": "Version under which to store the application. Provide 2 significant numbers separated by '.' eg. 1.0 (the third number will be automatically added with build number, what gives eg. 1.0.106).\n \n\nIf the version number is passed, the publish process uses that version and updates the local application version if different. If the version number is not passed, the publish process uses the current version of the local application.",
          "isOptional": true
        },
        {
          "name": "devNotes",
          "type": "String",
          "values": [],
          "description": "Developer notes to store with the application.",
          "isOptional": true
        },
        {
          "name": "obtainVersionAutomatically",
          "type": "boolean",
          "values": [],
          "description": "Calculate next application version that will be published. Retrieve it in smart way using API or source control (if SCM is configured for the build). API has the highest priority, then SCM will be used.\n \n\n**The value from ''Application version'' will be ignored.**",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url where the application will be published to.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snRollbackApp",
      "title": "snRollbackApp: SN: Roll back application",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here) used for the instance where the application is installed.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "appScope",
          "type": "String",
          "values": [],
          "description": "Required if `application system ID` is not specified. The scope name of the application for which to apply the changes, such as x_aah_custom_app. You can locate this value in the scope field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "appSysId",
          "type": "String",
          "values": [],
          "description": "Required if `application scope` is not specified. The system id of the application for which to apply the changes. You can locate this value in the Sys ID field in the Custom Application [sys_app] table.",
          "isOptional": true
        },
        {
          "name": "rollbackAppVersion",
          "type": "String",
          "values": [],
          "description": "Expected rollback version. This version is compared to the version that is included in the last rollback context, if they don't match, the build step fails.\n \n\nIf empty, installed version from previous step will be taken.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url where the application was installed.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snRollbackPlugin",
      "title": "snRollbackPlugin: SN: Roll back plugin",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here).\n \n\n This field cannot be empty. It doesn't use global settings from ServiceNow Parameters.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "pluginId",
          "type": "String",
          "values": [],
          "description": "Unique identifier of the plugin. You can locate this identifier on the Plugins page within the card of the desired plugin; identified with the name \"ID\".",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url. This field cannot be empty. It doesn't use global settings from ServiceNow Parameters.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snRunTestSuite",
      "title": "snRunTestSuite: SN: Run test suite with results",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "User name and password defined in global credentials (credentials ID is required here) used for the instance where the application will be installed.",
          "isOptional": true
        },
        {
          "name": "apiVersion",
          "type": "String",
          "values": [],
          "description": "Optional. Version of the endpoint to access. For example, v1 or v2. Only specify this value to use an endpoint version other than the latest.",
          "isOptional": true
        },
        {
          "name": "browserName",
          "type": "String",
          "values": [],
          "description": "Name of the browser to use to run the client test. This value must match what is specified in the scheduled client test runner. For additional information on scheduled client test runners, see [Scheduled Client Test Runners](https://developer.servicenow.com/app.do#!/training/article/app_store_learnv2_atf_newyork_using_the_automated_test_framework/app_store_learnv2_atf_newyork_scheduled_client_test_runners?v=orlando).\n \nValid values:\n\n \n  \n* Any\n\n  \n* Chrome\n\n  \n* Firefox\n\n  \n* Edge\n\n  \n* IE\n\n  \n* Safari",
          "isOptional": true
        },
        {
          "name": "browserVersion",
          "type": "String",
          "values": [],
          "description": "Starting value of the version of the browser specified in browser_name to use to run the test. For example, if you enter \"9\", that would enable all 9.x.x.x versions. This value must match what is specified in the scheduled client test runner.",
          "isOptional": true
        },
        {
          "name": "osName",
          "type": "String",
          "values": [],
          "description": "Name of the operating system under which to run the test suite. This value must match what is specified in the scheduled client test runner.",
          "isOptional": true
        },
        {
          "name": "osVersion",
          "type": "String",
          "values": [],
          "description": "Starting value of the version of the operating system under which to run the test suite. For example, if you enter \"8\", that would enable all 8.x.x.x versions. This value must match what is specified in the scheduled client test. runner.",
          "isOptional": true
        },
        {
          "name": "responseBodyFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testSuiteName",
          "type": "String",
          "values": [],
          "description": "Required if <i>Test suite sys_id</i> is not specified. The name of the test suite to run. This value is located in the Test [sys_atf_test_suite] table.",
          "isOptional": true
        },
        {
          "name": "testSuiteSysId",
          "type": "String",
          "values": [],
          "description": "Required if <i>Test suite name</i> is not specified. The `sys_id` of the test suite to run. This value is located in the Test [sys_atf_test_suite] table.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "ServiceNow instance url where the application will be installed.",
          "isOptional": true
        },
        {
          "name": "withResults",
          "type": "boolean",
          "values": [],
          "description": "If the checkbox is checked, then results from ServiceNow will be visible in Output Console, together with the link to the visualization on the NOW platform.",
          "isOptional": true
        }
      ],
      "plugin": "servicenow-cicd"
    },
    {
      "command": "snowglobe_apply",
      "title": "snowglobe_apply: ApplyStep",
      "description": "",
      "parameters": [
        {
          "name": "createAction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "globeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snowglobe_clone",
      "title": "snowglobe_clone: CloneStep",
      "description": "",
      "parameters": [
        {
          "name": "createAction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snowglobe_destroy",
      "title": "snowglobe_destroy: DestroyStep",
      "description": "",
      "parameters": [
        {
          "name": "globeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remove",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snowglobe_get_variables",
      "title": "snowglobe_get_variables: GetVariablesStep",
      "description": "",
      "parameters": [
        {
          "name": "globeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snowglobe_set_variables",
      "title": "snowglobe_set_variables: SetVariablesStep",
      "description": "",
      "parameters": [
        {
          "name": "globeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snowglobe_state",
      "title": "snowglobe_state: StateStep",
      "description": "",
      "parameters": [
        {
          "name": "createAction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "globeId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snowglobe"
    },
    {
      "command": "snsPublish",
      "title": "snsPublish: Publish notification to SNS",
      "description": "",
      "parameters": [
        {
          "name": "topicArn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "subject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "messageAttributes",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "snykSecurity",
      "title": "snykSecurity: Invoke Snyk Security task",
      "description": "",
      "parameters": [
        {
          "name": "additionalArguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnIssues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "monitorProjectOnBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "organisation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "snykInstallation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "snykTokenId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "targetFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "snyk-security-scanner"
    },
    {
      "command": "sonarToGerrit",
      "title": "sonarToGerrit: Post SonarQube issues as Gerrit comments",
      "description": "",
      "parameters": [
        {
          "name": "authConfig",
          "type": "Nested",
          "values": [
            "password",
            "username"
          ],
          "description": "**Override** HTTP credentials specified in Gerrit Trigger settings to be used for review posting",
          "isOptional": true
        },
        {
          "name": "category",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changedLinesOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inspectionConfig",
          "type": "Nested",
          "values": [
            "autoMatch",
            "baseConfig",
            "serverURL",
            "subJobConfigs",
            "type"
          ],
          "description": "Configure accordance of SonarQube report(s) and project or module(s) path(s)",
          "isOptional": true
        },
        {
          "name": "issueComment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "issuesNotification",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "issuesScore",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newIssuesOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noIssuesNotification",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noIssuesScore",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noIssuesToPostText",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notificationConfig",
          "type": "Nested",
          "values": [
            "commentedIssuesNotificationRecipient",
            "negativeScoreNotificationRecipient",
            "noIssuesNotificationRecipient"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideCredentials",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "postScore",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reviewConfig",
          "type": "Nested",
          "values": [
            "issueCommentTemplate",
            "issueFilterConfig",
            "noIssuesTitleTemplate",
            "someIssuesTitleTemplate"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scoreConfig",
          "type": "Nested",
          "values": [
            "category",
            "issueFilterConfig",
            "issuesScore",
            "noIssuesScore"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "someIssuesToPostText",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sonarURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "subJobConfigs",
          "type": "Nested",
          "values": [
            "autoMatch",
            "projectPath",
            "sonarReportPath"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sonar-gerrit"
    },
    {
      "command": "sparkSend",
      "title": "sparkSend: Send spark message",
      "description": "Spark Notifier Plugin sends messages to spark spaces\n \n\n\n \n\n Make sure you add the correct bot or user to the space",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "Define the message to send to spark space\n \n\n\n \n\n Environment variable examples:\n \n  \n* $BUILD_URL\n\n  \n* ${BUILD_URL}\n\n  \n* ${env.BUILD_URL}\n\n  Commonly used variables:\n \n  \n* ${JOB_NAME}\n\n  \n* ${JOB_URL}\n\n  \n* ${BUILD_NUMBER}\n\n  \n* ${BUILD_URL}\n\n  \n* ${BUILD_DISPLAY_NAME}\n\n  \n* ${BUILD_ID}\n\n  \n* ${BUILD_TAG}\n\n  \n* ${JAVA_HOME}\n\n  \n* ${JAVA_VERSION}\n\n  \n* ${JENKINS_URL}\n\n  \n* ${JENKINS_VERSION}\n\n  \n* ${NODE_LABELS}\n\n  \n* ${NODE_NAME}\n\n  \n* ${PATH}\n\n  \n* ${PWD}\n\n  \n* ${EXECUTOR_NUMBER}\n\n  if using SCM or SCM trigger (see the corresponding plugin wiki for additional environment variables):\n \n  \n* ${BRANCH_NAME}\n\n  \n* ${CHANGE_ID}\n\n  \n* ${CHANGE_URL}\n\n  \n* ${CHANGE_TITLE}\n\n  \n* ${CHANGE_AUTHOR}\n\n  \n* ${CHANGE_AUTHOR_DISPLAY_NAME}\n\n  \n* ${CHANGE_AUTHOR_EMAIL}\n\n  \n* ${CHANGE_TARGET}\n\n  Environment variables injected into the step from withEnv and withCredentials can also be used",
          "isOptional": false
        },
        {
          "name": "spaceList",
          "type": "Nested",
          "values": [
            "spaceName",
            "spaceId"
          ],
          "description": "To get the Space ID, go to web.ciscospark.com, select the space you want to message and get the ID from the URL.\n \n\n\n \n\n Example: https://web.ciscospark.com/#/rooms/f2fbc1f0-317c-11e6-8308-f3bee39e57c5\n \n\n The Space ID would be: f2fbc1f0-317c-11e6-8308-f3bee39e57c5\n \n\n\n \n\n\n \n\n You can also use the room ID representation acquired from GET https://api.ciscospark.com/v1/rooms\n \n\n\n \n\n See https://developer.ciscospark.com/endpoint-rooms-get.html for more information",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "disable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "messageType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cisco-spark-notifier"
    },
    {
      "command": "split",
      "title": "split: Split Admin Task",
      "description": "",
      "parameters": [
        {
          "name": "splitTask",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "splitName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "trafficTypeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "splitDefinitions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "whitelistKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "treatmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "splitYAMLFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "split-admin"
    },
    {
      "command": "splitTests",
      "title": "splitTests: Split Test Runs",
      "description": "Asks Jenkins to analyze the timing of tests from the last build and divide the tests for this build into roughly equal subsets for `parallel` execution. [example `Jenkinsfile`](https://github.com/jenkinsci/parallel-test-executor-plugin/blob/master/demo/repo/Jenkinsfile)",
      "parameters": [
        {
          "name": "parallelism",
          "type": "Nested",
          "values": [
            "count",
            "time"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "estimateTestsFromFiles",
          "type": "boolean",
          "values": [],
          "description": "The first run (or a run without any reference to test result from previous runs) will estimate tests according the content of workspace and maven java project patterns for tests. The Tests will be splitted according to this estimation.",
          "isOptional": true
        },
        {
          "name": "generateInclusions",
          "type": "boolean",
          "values": [],
          "description": "If disabled, the splitStep call will return a <i>List&lt;List&lt;String&gt;&gt;</i> containing the exclusion patterns for the different buckets.\n\n\nIf enabled, the splitStep call won't return a <i>List&lt;List&lt;String&gt;&gt;</i>.\n\n Instead it will return a <i>List</i> of a structure with : \n\n\n \n* <i>boolean includes</i> whether the following list is an inclusion or an exclusion list\n\n \n* <i>List&lt;String&gt; list</i> the list of patterns",
          "isOptional": true
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "parallel-test-executor"
    },
    {
      "command": "springBoot",
      "title": "springBoot: Generate spring boot application",
      "description": "",
      "parameters": [
        {
          "name": "selectedIDs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "artifactId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "autocomplete",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bootVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "javaVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "language",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "packaging",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "spring-initalzr"
    },
    {
      "command": "springConfig",
      "title": "springConfig: A step to read spring style profile configs",
      "description": "",
      "parameters": [
        {
          "name": "hideInBuildPage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "location",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "profiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "spring-config"
    },
    {
      "command": "sprintsAddItem",
      "title": "sprintsAddItem: [Zoho Sprints] Create New Item",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Enter the item name.",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Add a work item to Zoho Sprints. Format: PI#S2 (P1 - Project Number, S2 - Sprint Number). Input P1#S0, if you would like to add the item to the backlog.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "Brief your item here.",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "Item type can either be a bug or task.",
          "isOptional": false
        },
        {
          "name": "assignee",
          "type": "String",
          "values": [],
          "description": "Enter the email address of the portal user. Here, the assignee should be in an active state. When you try to add an inactive user, the following operation will not reflect in Zoho Sprints.",
          "isOptional": false
        },
        {
          "name": "attachment",
          "type": "String",
          "values": [],
          "description": "Upload the build log file as attachment.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsAddItemComment",
      "title": "sprintsAddItemComment: [Zoho Sprints] Add Comments to Item",
      "description": "",
      "parameters": [
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Enter the syntax. Example: P1#I10 (P3 - Project ID, I10 - Item ID). You can only add a comment up to 10 items.",
          "isOptional": false
        },
        {
          "name": "note",
          "type": "String",
          "values": [],
          "description": "Any malicious content will be automatically removed.",
          "isOptional": false
        },
        {
          "name": "logfile",
          "type": "String",
          "values": [],
          "description": "Upload the build log file as an attachment.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsAssociateItemToRelease",
      "title": "sprintsAssociateItemToRelease: [Zoho Sprints] Associate Item To Release",
      "description": "",
      "parameters": [
        {
          "name": "releasePrefix",
          "type": "String",
          "values": [],
          "description": "Enter the release details. Example: P2#R10",
          "isOptional": false
        },
        {
          "name": "itemPrefix",
          "type": "String",
          "values": [],
          "description": "Enter the prefix of your item here. Example: P1#I10 (P1 - Project number, I10 - Item number), P#I11, P#I12, P2#I13",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsCreateRelease",
      "title": "sprintsCreateRelease: [ZohoSprints] Create Release",
      "description": "",
      "parameters": [
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Enter the prefix of your project here. Example: P10 (P10 - Project number)",
          "isOptional": false
        },
        {
          "name": "itemPrefix",
          "type": "String",
          "values": [],
          "description": "Enter the prefix of your item here. Example: P1#I10 (P1 - Project number, I10 - Item number), P#I11, P#I12, P2#I13",
          "isOptional": false
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the release here",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "Add a line or two to describe the release",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "Mention the stage of the release",
          "isOptional": false
        },
        {
          "name": "owner",
          "type": "String",
          "values": [],
          "description": "Mention the email id of the release’s owner",
          "isOptional": false
        },
        {
          "name": "period",
          "type": "String",
          "values": [],
          "description": "Mention the number of days required for the release (not lesser than 3)",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsUpdateItemPriority",
      "title": "sprintsUpdateItemPriority: [Zoho Sprints] Update Item Priority",
      "description": "",
      "parameters": [
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Input the relevant project and item id here. Example: P1#I10 (P1 - Project number, I10 - Item number). You can update priority of up to 10 items across projects at a time. Example: P1#I10, P#I11, P#I12, P2#I13",
          "isOptional": false
        },
        {
          "name": "priority",
          "type": "String",
          "values": [],
          "description": "Enter a valid priority name as mentioned in Zoho Sprints. The following operation will not reflect if you enter an invalid priority name.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsUpdateItemStatus",
      "title": "sprintsUpdateItemStatus: [Zoho Sprints] Update Item Status",
      "description": "",
      "parameters": [
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Input the relevant project and item id here. Example: P1#I10 (P1 - Project number, I10 - Item number). You can update status of up to 10 items across projects at a time. Example: P1#I10, P#I11, P#I12, P2#I13",
          "isOptional": false
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "Enter a valid status name as mentioned in Zoho Sprints. The following operation will not reflect if you enter an invalid status name. (Or) Enter $STATUS_PARAM to fetch all the status on the sprint board.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sprintsUpdateReleaseStage",
      "title": "sprintsUpdateReleaseStage: [ZohoSprints] Update Release Stage",
      "description": "",
      "parameters": [
        {
          "name": "releasePrefix",
          "type": "String",
          "values": [],
          "description": "Enter the release details. Example: P2#R10",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "Mention the stage to which you want to update your release.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "sql",
      "title": "sql: Run SQL",
      "description": "",
      "parameters": [
        {
          "name": "sql",
          "type": "String",
          "values": [],
          "description": "SQL Statement to execute on given database connection. If the statment requires parameters pass an array like so:\n\n `sql sql: \"SELECT * FROM jobs WHERE id = ?\", parameters: [1]`",
          "isOptional": false
        },
        {
          "name": "connection",
          "type": "String",
          "values": [],
          "description": "ID of the connection as passed to the `getDatabaseConnection` step",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "database"
    },
    {
      "command": "sscm",
      "title": "sscm: Surround SCM",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "Enter the Surround SCM URL for the repository to retrieve.\n \n\n Example: sscm://ServerAddress:4900//BranchName//Mainline/Path/To/Repository",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rsaKey",
          "type": "Nested",
          "values": [
            "rsaKeyFileId",
            "rsaKeyFilePath",
            "rsaKeyType",
            "rsaKeyValue"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rsaKeyFileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rsaKeyFilePath",
          "type": "String",
          "values": [],
          "description": "Enter the full path to the RSA key file for the Surround SCM connection. Example: C:\\SurroundRSAKeyFile.xml",
          "isOptional": true
        }
      ],
      "plugin": "surround-scm-plugin"
    },
    {
      "command": "sseBuild",
      "title": "sseBuild: Execute Micro Focus tests using Micro Focus ALM Lab Management",
      "description": "",
      "parameters": [
        {
          "name": "almServerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientType",
          "type": "String",
          "values": [],
          "description": "Client type is required for some ALM above 12.60 in authentication.",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "runType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almEntityId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDuration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cdaDetails",
          "type": "Nested",
          "values": [
            "deploymentAction",
            "deployedEnvironmentName",
            "deprovisioningAction"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentConfigurationId",
          "type": "String",
          "values": [],
          "description": "To find the ID of your environment configuration, right-click the entity, copy the URL, and paste it to a text editor. Use the number associated with the EntityID at the end of the URL.",
          "isOptional": true
        },
        {
          "name": "postRunAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "sseBuildAndPublish",
      "title": "sseBuildAndPublish: Execute tests using ALM Lab Management and Publish tests result",
      "description": "",
      "parameters": [
        {
          "name": "almServerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientType",
          "type": "String",
          "values": [],
          "description": "Client type is required for some ALM above 12.60 in authentication.",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "runType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almEntityId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeslotDuration",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archiveTestResultsMode",
          "type": "String",
          "values": [],
          "description": "To view the run results, do one of the following:\n \n\n 1) In the left pane, click the **Report and Summary** link to display the report link and the link to the report folder. From this link, you can open the run results directly in your browser or open the artifacts\n \n\n 2) From the **Build Artifacts:**\n \n\n • Open the run_results.html to view the run results.\n \n\n • Download the zipped report to your desired location and unzip it. In the **Run Results Viewer**, select the Results.xml file found inside the unzipped folder.\n \n\n Note that this option is valid only when using the “Execute test from file system” build step.",
          "isOptional": false
        },
        {
          "name": "cdaDetails",
          "type": "Nested",
          "values": [
            "deploymentAction",
            "deployedEnvironmentName",
            "deprovisioningAction"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "environmentConfigurationId",
          "type": "String",
          "values": [],
          "description": "To find the ID of your environment configuration, right-click the entity, copy the URL, and paste it to a text editor. Use the number associated with the EntityID at the end of the URL.",
          "isOptional": true
        },
        {
          "name": "postRunAction",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "sshCommand",
      "title": "sshCommand: SSH Steps: sshCommand - Execute command on remote node.",
      "description": "Takes a remote (map) of settings and `command` to execute it on the remote node and returns output. See docs on the [README](https://github.com/jenkinsci/ssh-steps-plugin) for more information.\n\n \n\n\n \n```groovy\n    def remote = [:]\n    remote.name = 'test'\n    remote.host = 'test.domain.com'\n    remote.user = 'root'\n    remote.password = 'password'\n    remote.allowAnyHosts = true\n    stage('Remote SSH') {\n      sshCommand remote: remote, command: \"ls -lrt\"\n      sshCommand remote: remote, command: \"for i in {1..5}; do echo -n \\\"Loop \\$i \\\"; date ; sleep 1; done\"\n    }\n  \n```",
      "parameters": [
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remote",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sudo",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-steps"
    },
    {
      "command": "sshGet",
      "title": "sshGet: SSH Steps: sshGet - Get a file/directory from remote node.",
      "description": "Takes a remote (map) of settings, local file/directory `into` to get the given file/directory `from` remote node. See docs on the [README](https://github.com/jenkinsci/ssh-steps-plugin) for more information.\n\n \n\n\n \n```groovy\n    def remote = [:]\n    remote.name = 'test'\n    remote.host = 'test.domain.com'\n    remote.user = 'root'\n    remote.password = 'password'\n    remote.allowAnyHosts = true\n    stage('Remote SSH') {\n      sshGet remote: remote, from: 'abc.sh', into: 'abc_get.sh', override: true\n    }\n  \n```",
      "parameters": [
        {
          "name": "from",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "into",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterBy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterRegex",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "override",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remote",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-steps"
    },
    {
      "command": "sshPublisher",
      "title": "sshPublisher: Send build artifacts over SSH",
      "description": "Send files or execute commands over SSH.",
      "parameters": [
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "Select to publish from the Jenkins master.\n\n \nThe default is to publish from the server that holds the files to transfer (workspace on the agent, or artifacts directory on the master).\n\n Enabling this option could help dealing with strict network configurations and firewall rules.\n\n This option will cause the files to be transferred through the master before being sent to the remote server, this may increase network traffic, and could increase the build time.",
          "isOptional": true
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to continue publishing to the other servers after a problem with a previous server.",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to mark the build as a failure if there is a problem publishing to a server. The default is to mark the build as unstable.",
          "isOptional": true
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "Set the NODE_NAME for the master Jenkins.\n\n \nSet this option to give a value to the NODE_NAME environment variable when the value is missing (the Jenkins master).\n\n This is useful if you use the NODE_NAME variable in the remote directory option and the build may occur on the master.",
          "isOptional": true
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "parameterName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "sshRetry",
            "sshLabel",
            "sshCredentials"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "publish-over-ssh"
    },
    {
      "command": "sshPut",
      "title": "sshPut: SSH Steps: sshPut - Put a file/directory on remote node.",
      "description": "Takes a remote (map) of settings, local file/directory `from` workspace and path to put this `into` remote node. See docs on the [README](https://github.com/jenkinsci/ssh-steps-plugin) for more information.\n\n \n\n\n \n```groovy\n    def remote = [:]\n    remote.name = 'test'\n    remote.host = 'test.domain.com'\n    remote.user = 'root'\n    remote.password = 'password'\n    remote.allowAnyHosts = true\n    stage('Remote SSH') {\n      writeFile file: 'abc.sh', text: 'ls -lrt'\n      sshPut remote: remote, from: 'abc.sh', into: '.'\n    }\n  \n```",
      "parameters": [
        {
          "name": "from",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "into",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterBy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filterRegex",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remote",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-steps"
    },
    {
      "command": "sshRemove",
      "title": "sshRemove: SSH Steps: sshRemove - Remove a file/directory from remote node.",
      "description": "Takes a remote (map) of settings and `path` (file/directory) to remove from remote node. See docs on the [README](https://github.com/jenkinsci/ssh-steps-plugin) for more information.\n\n \n\n\n \n```groovy\n    def remote = [:]\n    remote.name = 'test'\n    remote.host = 'test.domain.com'\n    remote.user = 'root'\n    remote.password = 'password'\n    remote.allowAnyHosts = true\n    stage('Remote SSH') {\n      sshRemove remote: remote, path: \"abc.sh\"\n    }\n  \n```",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remote",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-steps"
    },
    {
      "command": "sshScript",
      "title": "sshScript: SSH Steps: sshScript - Execute script(file) on remote node.",
      "description": "Takes a remote (map) of settings and script a shell script file to execute it on the remote node and returns output. See docs on the [README](https://github.com/jenkinsci/ssh-steps-plugin) for more information.\n\n \n\n\n \n```groovy\n    def remote = [:]\n    remote.name = 'test'\n    remote.host = 'test.domain.com'\n    remote.user = 'root'\n    remote.password = 'password'\n    remote.allowAnyHosts = true\n    stage('Remote SSH') {\n      writeFile file: 'abc.sh', text: 'ls -lrt'\n      sshScript remote: remote, script: \"abc.sh\"\n    }\n  \n```",
      "parameters": [
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dryRun",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remote",
          "type": "Nested",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-steps"
    },
    {
      "command": "sshagent",
      "title": "sshagent: SSH Agent",
      "description": "```groovy\n\nnode {\n  sshagent (credentials: ['deploy-dev']) {\n    sh 'ssh -o StrictHostKeyChecking=no -l cloudbees 192.168.1.106 uname -a'\n  }\n}\n\n```\n\n\nMultiple credentials could be passed in the array but it is not supported using Snippet Generator.",
      "parameters": [
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreMissing",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ssh-agent"
    },
    {
      "command": "stackrox",
      "title": "stackrox: StackRox Container Image Scanner",
      "description": "",
      "parameters": [
        {
          "name": "apiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "caCertPEM",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enableTLSVerification",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnCriticalPluginError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnPolicyEvalFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "portalAddress",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "stackrox-container-image-scanner"
    },
    {
      "command": "stage",
      "title": "stage: Stage",
      "description": "Creates a labeled block.\n \n An older, deprecated mode of this step did not take a block argument, and accepted a `concurrency` parameter.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "concurrency",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-stage-step"
    },
    {
      "command": "startET",
      "title": "startET: [TT] Start ECU-TEST",
      "description": "Configure and start a preconfigured ECU-TEST installation.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\nstartET(String toolName) : void\n            \n```\n\n   \n```groovy\nstartET(String toolName, String workspaceDir, String settingsDir, int timeout,\n        boolean debugMode, boolean keepInstance, boolean updateUserLibs) : void\n            \n```\n\n   \n```groovy\nETInstance.start() : void\n            \n```\n\n   \n```groovy\nETInstance.start(String workspaceDir, String settingsDir, int timeout,\n         boolean debugMode, boolean keepInstance, boolean updateUserLibs) : void\n            \n```\n\n   \n```groovy\nETInstance.start(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nstartET('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\nstartET installation: instance.installation, workspaceDir: 'C:\\\\Data'\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.start()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.start workspaceDir: 'C:\\\\Data', settingsDir: 'C:\\\\Data', timeout: 120, debugMode: true, keepInstance: false, updateUserLibs: true\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debugMode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepInstance",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "settingsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "updateUserLibs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workspaceDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "startSandbox",
      "title": "startSandbox: starts a CloudShell Sandbox",
      "description": "A CloudShell Sandbox will be created. The Sandbox Id will be accessible as an environment variable, as seen in the example code.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of the blueprint to use for the new sandbox.",
          "isOptional": false
        },
        {
          "name": "duration",
          "type": "int",
          "values": [],
          "description": "Defines a timeout for the sandbox. The sandbox will automatically ended once the max duration time is exceeded.",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Enter the number of minutes to wait until the Sandbox becomes available in case no resources are available to reserve it.",
          "isOptional": false
        },
        {
          "name": "params",
          "type": "String",
          "values": [],
          "description": "Blueprint Parameter in this syntax: \"input1=my_name; input2=30\"",
          "isOptional": true
        },
        {
          "name": "sandboxDomain",
          "type": "String",
          "values": [],
          "description": "Sandbox will be created in the following domain.",
          "isOptional": true
        },
        {
          "name": "sandboxName",
          "type": "String",
          "values": [],
          "description": "Sandboxes will be created with this name instead of the blueprint name.",
          "isOptional": true
        },
        {
          "name": "setupTimeout",
          "type": "int",
          "values": [],
          "description": "Enter the number of minutes to wait for the sandbox setup to complete",
          "isOptional": true
        }
      ],
      "plugin": "cloudshell-sandbox"
    },
    {
      "command": "startSession",
      "title": "startSession: Start Dynatrace session recording",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lockSession",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recordingOption",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "startTS",
      "title": "startTS: [TT] Start Tool-Server",
      "description": "Configure and start Tool-Server.\n **Pipeline usage**\n \n  Signatures:\n  \n   \n```groovy\nstartTS(String toolName) : void\n            \n```\n\n   \n```groovy\nstartTS(String toolName, String toolLibsIniPath, int tcpPort, int timeout, boolean keepInstance) : void\n            \n```\n\n   \n```groovy\nETInstance.startTS() : void\n            \n```\n\n   \n```groovy\nETInstance.startTS(String toolLibsIniPath, int tcpPort, int timeout, boolean keepInstance) : void\n            \n```\n\n   \n```groovy\nETInstance.startTS(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nstartTS('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\nstartTS installation: instance.installation\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.startTS()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.startTS toolLibsIniPath: C:\\\\ToolLibs.ini, tcpPort: 5017, timeout: 60, keepInstance: false\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keepInstance",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tcpPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolLibsIni",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "startZap",
      "title": "startZap: Start ZAP process",
      "description": "",
      "parameters": [
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "zapHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowedHosts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sessionPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zap-pipeline"
    },
    {
      "command": "stash",
      "title": "stash: Stash some files to be used later in the build",
      "description": "Saves a set of files for later use on any node/workspace in the same Pipeline run. By default, stashed files are discarded at the end of a pipeline run. Other plugins may change this behavior to preserve stashes for longer. For example, Declarative Pipeline includes a `preserveStashes()` option to allow stashes from a run to be retained and used if that run is restarted.\n \n\n Stashes from one Pipeline run are not available in other runs, other Pipelines, or other jobs. If you want to persist artifacts for use outside of a single run, consider using [ `archiveArtifacts`](https://jenkins.io/doc/pipeline/steps/core/#archiveartifacts-archive-the-artifacts) instead. **Note** that the `stash` and `unstash` steps are designed for use with small files. For large data transfers, use the External Workspace Manager plugin, or use an external repository manager such as Nexus or Artifactory. This is because stashed files are archived in a compressed TAR, and with large files this demands considerable on-master resources, particularly CPU time. There's not a hard stash size limit, but between 5-100 MB you should probably consider alternatives.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name of a stash. Should be a simple identifier akin to a job name.",
          "isOptional": false
        },
        {
          "name": "allowEmpty",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optional set of [Ant-style exclude patterns](https://ant.apache.org/manual/dirtasks.html#patterns).\n \n\n Use a comma separated list to add more than one expression.\n \n\n If blank, no files will be excluded.",
          "isOptional": true
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "Optional set of [Ant-style include patterns](https://ant.apache.org/manual/dirtasks.html#patterns).\n \n\n Use a comma separated list to add more than one expression.\n \n\n If blank, treated like `**`: all files.\n \n\n The current working directory is the base directory for the saved files, which will later be restored in the same relative locations, so if you want to use a subdirectory wrap this in [`dir`](https://jenkins.io/doc/pipeline/steps/workflow-basic-steps/#code-dir-code-change-current-directory).",
          "isOptional": true
        },
        {
          "name": "useDefaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "If selected, use the default excludes from Ant - see [here](http://ant.apache.org/manual/dirtasks.html#defaultexcludes) for the list.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "step",
      "title": "step: General Build Step",
      "description": "This is a special step that allows to call builders or post-build actions (as in freestyle or similar projects), in general \"build steps\".\n Just select the build step to call from the dropdown list and configure it as needed.\n \n\n \n\n Note that only Pipeline-compatible steps will be shown in the list.\n \n\n\n\n\nTo use this step you need to specify a delegate class, e.g step([$class: 'A3Builder']).",
      "parameters": [],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "step([$class: 'A3Builder'])",
      "title": "step([$class: 'A3Builder']): a³ Analysis Run",
      "description": "",
      "parameters": [
        {
          "name": "project_file",
          "type": "String",
          "values": [],
          "description": "Absolute path to the a³ **project** file (.apx) containing the analysis items and configuration.\n \n\n (Note: a³ workspace files (also .apx) are not supported as input.)",
          "isOptional": false
        },
        {
          "name": "analysis_ids",
          "type": "String",
          "values": [],
          "description": "The following values are allowed:\n \n  \n* Comma separated list of analysis IDs. Then only the given analysis items will be executed. Note: The ID must be contained in the apx project and must adhere the analysis ID naming conventions (letters, numbers and underscores only).\n\n  \n* No ID at all (i.e. empty field). Then **all** analysis items specified in the apx project file will be executed.",
          "isOptional": false
        },
        {
          "name": "pedantic_level",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "export_a3apxworkspace",
          "type": "String",
          "values": [],
          "description": "Exports the status of a³ at the end of the a³ analysis build step run as a workspace .apx file. This workspace file can later be opened in an interactive run of a³. The result is that the a³ GUI then shows all messages and all results generated by the batch-mode analyses without the need to run these analyses again.",
          "isOptional": false
        },
        {
          "name": "copy_report_file",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "copy_result_file",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skip_a3_analysis",
          "type": "boolean",
          "values": [],
          "description": "This switch can be used to deactivate the a³ analysis build step. This switch provides a more convenient method to temporarily deactivate analysis runs than removing the entire build step and reconfiguring the a³ analysis run from scratch when later adding the build step again.",
          "isOptional": false
        }
      ],
      "plugin": "absint-a3"
    },
    {
      "command": "step([$class: 'ACIPluginPublisher'])",
      "title": "step([$class: 'ACIPluginPublisher']): Publish XML Summary Reports",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "shownOnProjectPage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "summary_report"
    },
    {
      "command": "step([$class: 'ACSDeploymentBuilder'])",
      "title": "step([$class: 'ACSDeploymentBuilder']): Deploy to Azure Container Service (AKS)",
      "description": "",
      "parameters": [
        {
          "name": "context",
          "type": "Nested",
          "values": [
            "azureCredentialsId",
            "resourceGroupName",
            "containerService",
            "sshCredentialsId",
            "configFilePaths",
            "containerRegistryCredentials",
            "dcosDockerCredenditalsPathShared",
            "dcosDockerCredentialsPath",
            "enableConfigSubstitution",
            "secretName",
            "secretNamespace",
            "swarmRemoveContainersFirst"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "azure-acs"
    },
    {
      "command": "step([$class: 'AWSCodeDeployPublisher'])",
      "title": "step([$class: 'AWSCodeDeployPublisher']): Deploy an application to AWS CodeDeploy",
      "description": "",
      "parameters": [
        {
          "name": "s3bucket",
          "type": "String",
          "values": [],
          "description": "The bucket in S3 where new AWS CodeDeploy revisions will be uploaded.",
          "isOptional": false
        },
        {
          "name": "s3prefix",
          "type": "String",
          "values": [],
          "description": "The prefix in the S3 Bucket to prepend to the AWS CodeDeploy revision. Default is the root of the bucket. You can use environment variables in this field.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "The name of the AWS CodeDeploy application you wish to deploy to. This plugin assumes that you've already created the application and deployment group. If you haven't already, work through the [How to create an Application with AWS CodeDeploy](http://alpha-docs-aws.amazon.com/codedeploy/latest/userguide/how-to-create-application.html) documentation. You can use environment variables in this field.",
          "isOptional": false
        },
        {
          "name": "deploymentGroupName",
          "type": "String",
          "values": [],
          "description": "The name of the AWS CodeDeploy deployment group attached to your application that you want to deploy to. This plugin assumes that you've already created the application and deployment group. If you haven't already, work through the [How to create an Application with AWS CodeDeploy](http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-create-application.html) documentation.",
          "isOptional": false
        },
        {
          "name": "deploymentConfig",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deploymentGroupAppspec",
          "type": "boolean",
          "values": [],
          "description": "If checked, the build will use a dedicated appspec.yml file per deployment group.\n\n \nThe appspec file should be named \"appspec.DEPLOYMENT_GROUP_NAME.yml\" and must be present in the jenkins project workspace.\n\n \n\n\n \n\n\n \ne.g.: appsec.staging.yml",
          "isOptional": false
        },
        {
          "name": "waitForCompletion",
          "type": "boolean",
          "values": [],
          "description": "If checked, this build will wait for the AWS CodeDeploy deployment to finish (with either success or failure). Polling Timeout, below, sets the maximum amount of time to wait.\n\n\n\nIf unchecked, the deployment will be handed off to AWS CodeDeploy and the build will move on to the next step.\n\n \nThe build will be marked a failure if <em>either</em> the timeout is reached or the deployment fails. The build log will indicate which.",
          "isOptional": false
        },
        {
          "name": "pollingTimeoutSec",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollingFreqSec",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionFileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deploymentMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "awsAccessKey",
          "type": "String",
          "values": [],
          "description": "AWS Access and Secret keys to use for this deployment. At minimum the keys must be allowed to execute `codedeploy:*` and `s3:Put*`. It's a best practice to have these keys be from an IAM role with limited scope.\n\n \n If your Jenkins install is running on an EC2 instance with an associate IAM role, you can leave these fields blank. You will just need to ensure that the role has the correct policies.",
          "isOptional": false
        },
        {
          "name": "awsSecretKey",
          "type": "String",
          "values": [],
          "description": "AWS Access and Secret keys to use for this deployment. At minimum the keys must be allowed to execute `codedeploy:*` and `s3:Put*`. It's a best practice to have these keys be from an IAM role with limited scope.\n\n \n If your Jenkins install is running on an EC2 instance with an associate IAM role, you can leave these fields blank. You will just need to ensure that the role has the correct policies.",
          "isOptional": false
        },
        {
          "name": "iamRoleArn",
          "type": "String",
          "values": [],
          "description": "In order to keep your application(s) more secure, this plugin only uses temporary credentials via STS, scoped to each application. To set this up: \n\n \n  \n* Log into the AWS Management Console, and navigate to the [Identity and Access Management console](https://console.aws.amazon.com/iam/).\n\n  \n* Click on [Roles](https://console.aws.amazon.com/iam/#roles), then click **Create New Role**.\n\n  \n* Give an appropriate name for this role (for example, \"JenkinsCodeDeployProject\").\n\n  \n* In the \"Select Role Type\" screen, click \"Role for Cross-Account Access\" then select **Allows IAM users from a 3rd party AWS account to access this account.**\n\n  \n* The account and external IDs for this Jenkins project are listed below\n\n  \n* In the policy screen, select **Custom Policy** and copy-paste the following policy:\n   \n \n* `{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Action\": [\"codedeploy:*\", \"s3:*\"], \"Resource\": \"*\"}]}`\n\n \n\n  \n* Click **Create Role**, then copy-paste the **Role ARN** into the below field.\n\n  \n* Click the **Test Connection** button to ensure that the permissions are set up properly.",
          "isOptional": false
        },
        {
          "name": "externalId",
          "type": "String",
          "values": [],
          "description": "The External ID you should use in the IAM cross-account access policy.",
          "isOptional": false
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "**Includes** and **Excludes** together define the file(s) that will be contained in the application revision that is uploaded to Amazon S3.",
          "isOptional": false
        },
        {
          "name": "proxyHost",
          "type": "String",
          "values": [],
          "description": "Proxy host DNS name",
          "isOptional": false
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "Proxy host port",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "**Includes** and **Excludes** together define the file(s) that will be contained in the application revision that is uploaded to Amazon S3.",
          "isOptional": false
        },
        {
          "name": "subdirectory",
          "type": "String",
          "values": [],
          "description": "A subdirectory inside the workspace to be packed instead of the whole workspace. Remember that the <i>appspec.yml</i> must be placed at the top of the .zip archive. The <i>excludes</i> and <i>includes</i> will be applied based on this path.",
          "isOptional": false
        }
      ],
      "plugin": "codedeploy"
    },
    {
      "command": "step([$class: 'AWSEBDeploymentBuilder'])",
      "title": "step([$class: 'AWSEBDeploymentBuilder']): AWS Elastic Beanstalk",
      "description": "",
      "parameters": [
        {
          "name": "config",
          "type": "class br.com.ingenieux.jenkins.plugins.awsebdeployment.AWSEBDeploymentConfig",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "AWS EB Application Name (e.g.: \"myapp\")",
          "isOptional": true
        },
        {
          "name": "awsRegion",
          "type": "String",
          "values": [],
          "description": "AWS Region (e.g. us-east-1)",
          "isOptional": true
        },
        {
          "name": "bucketName",
          "type": "String",
          "values": [],
          "description": "S3 Bucket Name to Upload to (e.g. \"my-awseb-apps\")\n\n \n(Optional, will call `createStorageLocation` if blank)",
          "isOptional": true
        },
        {
          "name": "checkHealth",
          "type": "boolean",
          "values": [],
          "description": "Uncheck this to disable the Health check on deploy. Some implementations may not care to wait until the environment shows \"Green\".",
          "isOptional": true
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "Select the credentials to use.",
          "isOptional": true
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "Optional: AWS EB Environment name(s) to deploy to.\n\n \n Can accept single or multiple comma-separated values. Examples: \n\n \n  \n* \"my-prod-env\" (single environment)\n\n  \n* \"my-dev-env,my-staging-env\" (multiple environments) \n\n \n \n\n\n \nWhen this value is set and each requested environment exists, an UpdateEnvironment call will be triggered as the Application Version is created.",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optional (if rootObject points to a directory): Glob for Zip Excludes, comma-separated eg '**/.git/**/*,**/node_modules/**/*'",
          "isOptional": true
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "Optional (if rootObject points to a directory): Glob for Zip Includes, comma-separated like 'target/file,target/myapp/**/*'",
          "isOptional": true
        },
        {
          "name": "keyPrefix",
          "type": "String",
          "values": [],
          "description": "Prefix for newly created apps on S3 Bucket. For Example, myapp/builds/myapp-prod-env/",
          "isOptional": true
        },
        {
          "name": "maxAttempts",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rootObject",
          "type": "String",
          "values": [],
          "description": "Workspace-relative path of the artifact file to upload (if it's a file), or if it's a directory, the base directory to build the zip/war against\n\n \nExamples:\n\n \n  \n* File, like `target/mywebapp.war`: The war file will be uploaded\n\n  \n* A Directory, like '`.`' or '`target/war`': A Zip file will be built and uploaded instead (using includes and excludes).",
          "isOptional": true
        },
        {
          "name": "skipEnvironmentUpdates",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sleepTime",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "versionDescriptionFormat",
          "type": "String",
          "values": [],
          "description": "How to set the version description? For instance, for \"${GIT_COMMIT}\", the version Description will be 4b5f7669b3376a1ce504bf7ef8bf7aeee9d21746 on AWS EB Application Versions",
          "isOptional": true
        },
        {
          "name": "versionLabelFormat",
          "type": "String",
          "values": [],
          "description": "How to set the version label? For instance, for \"${GIT_COMMIT}-${BUILD_TAG}\", and with \"Key Prefix\" set to \"myapp/builds/myapp-prod-env/\", the S3 Object Key is set to myapp/builds/myapp-prod-env/4b5f7669b3376a1ce504bf7ef8bf7aeee9d21746-myjob-41.zip and the version Label will be 4b5f7669b3376a1ce504bf7ef8bf7aeee9d21746-myjob-41 on AWS EB Application Versions",
          "isOptional": true
        },
        {
          "name": "zeroDowntime",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "awseb-deployment-plugin"
    },
    {
      "command": "step([$class: 'AddTestToSetStep'])",
      "title": "step([$class: 'AddTestToSetStep']): Bumblebee: Add Test to Test Set",
      "description": "",
      "parameters": [
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "HP ALM Domain",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "HP ALM Project name",
          "isOptional": false
        },
        {
          "name": "testPlanPath",
          "type": "String",
          "values": [],
          "description": "Path to a test or test folder in HP ALM which shall be added to a test set",
          "isOptional": false
        },
        {
          "name": "testSetPath",
          "type": "String",
          "values": [],
          "description": "Path to a test set in HP ALM into which test(s) shall be added",
          "isOptional": false
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'AnalysisPublisher'])",
      "title": "step([$class: 'AnalysisPublisher']): [Deprecated] Publish combined static analysis results",
      "description": "",
      "parameters": [
        {
          "name": "androidLintActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "checkStyleActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dryActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "findBugsActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "openTasksActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pmdActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "warningsActivated",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "analysis-collector"
    },
    {
      "command": "step([$class: 'AnsibleAdHocCommandBuilder'])",
      "title": "step([$class: 'AnsibleAdHocCommandBuilder']): Invoke Ansible Ad-Hoc Command",
      "description": "",
      "parameters": [
        {
          "name": "hostPattern",
          "type": "String",
          "values": [],
          "description": "The host or set of hosts on which the command will be executed. For more details see the ansible documentation for [Patterns](http://docs.ansible.com/intro_patterns.html#patterns).",
          "isOptional": false
        },
        {
          "name": "inventory",
          "type": "Nested",
          "values": [
            "$class: 'InventoryContent'",
            "$class: 'InventoryDoNotSpecify'",
            "$class: 'InventoryPath'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "module",
          "type": "String",
          "values": [],
          "description": "Module name to execute. The shell module is used when left empty.",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "Module arguments or shell command to execute",
          "isOptional": false
        },
        {
          "name": "additionalParameters",
          "type": "String",
          "values": [],
          "description": "Any additional parameters to pass to the ansible command.\n \n### Warning: \n The content of this textbox will be passed **as is** to the command line.",
          "isOptional": true
        },
        {
          "name": "ansibleName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "becomeUser",
          "type": "String",
          "values": [],
          "description": "Desired become user. \"root\" is used when this field is empty.",
          "isOptional": true
        },
        {
          "name": "colorizedOutput",
          "type": "boolean",
          "values": [],
          "description": "Check this box to allow ansible to render ANSI color codes in the Jenkins console. This option works well with the [Jenkins AnsiColor plugin](https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin).",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for the SSH connections. Only private key authentication is supported.",
          "isOptional": true
        },
        {
          "name": "disableHostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "Check this box if you **really** want to disable the validation of the hosts SSH server keys.",
          "isOptional": true
        },
        {
          "name": "extraVars",
          "type": "Nested",
          "values": [
            "hidden",
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forks",
          "type": "int",
          "values": [],
          "description": "Specify number of parallel processes to use. Set to 0 to use the default value.",
          "isOptional": true
        },
        {
          "name": "hostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sudo",
          "type": "boolean",
          "values": [],
          "description": "Run operations with sudo. It works only when the remote user is sudoer with <em>nopasswd</em> option. Sudo has been deprecated in favor of become and will be removed in Ansible 2.6.",
          "isOptional": true
        },
        {
          "name": "sudoUser",
          "type": "String",
          "values": [],
          "description": "Desired sudo user. \"root\" is used when this field is empty. Sudo has been deprecated in favor of become and will be removed in Ansible 2.6.",
          "isOptional": true
        },
        {
          "name": "unbufferedOutput",
          "type": "boolean",
          "values": [],
          "description": "Skip standard output buffering for the ansible process. The ansible output is directly rendered into the Jenkins console. This option can be usefull for long running operations.",
          "isOptional": true
        },
        {
          "name": "vaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for vault encrypted vars. Only secret file and secret text are supported.",
          "isOptional": true
        }
      ],
      "plugin": "ansible"
    },
    {
      "command": "step([$class: 'AnsiblePlaybookBuilder'])",
      "title": "step([$class: 'AnsiblePlaybookBuilder']): Invoke Ansible Playbook",
      "description": "",
      "parameters": [
        {
          "name": "playbook",
          "type": "String",
          "values": [],
          "description": "Path to the ansible playbook file. The path can be absolute or relative to the job workspace.",
          "isOptional": false
        },
        {
          "name": "inventory",
          "type": "Nested",
          "values": [
            "$class: 'InventoryContent'",
            "$class: 'InventoryDoNotSpecify'",
            "$class: 'InventoryPath'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "additionalParameters",
          "type": "String",
          "values": [],
          "description": "Any additional parameters to pass to the ansible command.\n \n### Warning: \n The content of this textbox will be passed **as is** to the command line.",
          "isOptional": true
        },
        {
          "name": "ansibleName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "becomeUser",
          "type": "String",
          "values": [],
          "description": "Desired become user. \"root\" is used when this field is empty.",
          "isOptional": true
        },
        {
          "name": "colorizedOutput",
          "type": "boolean",
          "values": [],
          "description": "Check this box to allow ansible to render ANSI color codes in the Jenkins console. This option works well with the [Jenkins AnsiColor plugin](https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin).",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for the SSH connections. Only private key authentication is supported.",
          "isOptional": true
        },
        {
          "name": "disableHostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "Check this box if you **really** want to disable the validation of the hosts SSH server keys.",
          "isOptional": true
        },
        {
          "name": "extraVars",
          "type": "Nested",
          "values": [
            "hidden",
            "key",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forks",
          "type": "int",
          "values": [],
          "description": "Specify number of parallel processes to use. Set to 0 to use the default value.",
          "isOptional": true
        },
        {
          "name": "hostKeyChecking",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "limit",
          "type": "String",
          "values": [],
          "description": "Further limit selected hosts to an additional pattern.",
          "isOptional": true
        },
        {
          "name": "skippedTags",
          "type": "String",
          "values": [],
          "description": "only run plays and tasks whose tags do not match these values.",
          "isOptional": true
        },
        {
          "name": "startAtTask",
          "type": "String",
          "values": [],
          "description": "Start the playbook at the task matching this name.",
          "isOptional": true
        },
        {
          "name": "sudo",
          "type": "boolean",
          "values": [],
          "description": "Run operations with sudo. It works only when the remote user is sudoer with <em>nopasswd</em> option. Sudo has been deprecated in favor of become and will be removed in Ansible 2.6.",
          "isOptional": true
        },
        {
          "name": "sudoUser",
          "type": "String",
          "values": [],
          "description": "Desired sudo user. \"root\" is used when this field is empty. Sudo has been deprecated in favor of become and will be removed in Ansible 2.6.",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "Only run plays and tasks tagged with these values.",
          "isOptional": true
        },
        {
          "name": "unbufferedOutput",
          "type": "boolean",
          "values": [],
          "description": "Skip standard output buffering for the ansible process. The ansible output is directly rendered into the Jenkins console. This option can be usefull for long running operations.",
          "isOptional": true
        },
        {
          "name": "vaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for vault encrypted vars. Only secret file and secret text are supported.",
          "isOptional": true
        }
      ],
      "plugin": "ansible"
    },
    {
      "command": "step([$class: 'AnsibleVaultBuilder'])",
      "title": "step([$class: 'AnsibleVaultBuilder']): Invoke Ansible Vault",
      "description": "",
      "parameters": [
        {
          "name": "action",
          "type": "String",
          "values": [],
          "description": "Desired vault action.",
          "isOptional": true
        },
        {
          "name": "ansibleName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "content",
          "type": "String",
          "values": [],
          "description": "Desired encrypted content.",
          "isOptional": true
        },
        {
          "name": "input",
          "type": "String",
          "values": [],
          "description": "Desired input file to encrypt.",
          "isOptional": true
        },
        {
          "name": "newVaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for rekeying vault encrypted files. Only Jenkins secret file and secret text are supported.",
          "isOptional": true
        },
        {
          "name": "output",
          "type": "String",
          "values": [],
          "description": "Desired output file for encrypted content.",
          "isOptional": true
        },
        {
          "name": "vaultCredentialsId",
          "type": "String",
          "values": [],
          "description": "Select the credentials for vault encrypted vars. Only Jenkins secret file and secret text are supported.",
          "isOptional": true
        }
      ],
      "plugin": "ansible"
    },
    {
      "command": "step([$class: 'AppScanSourceBuilder'])",
      "title": "step([$class: 'AppScanSourceBuilder']): Run AppScan Source",
      "description": "",
      "parameters": [
        {
          "name": "disableScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "acceptSSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customScanWorkspace",
          "type": "String",
          "values": [],
          "description": "This value will be passed to AppScan Source as the scan workspace. AppScan Source assessment and working files will be stored in this directory.\n\n\nIf this field is blank, the default scan directory will be used.\n\n\nThe default directory is this job's build folder, as defined by Jenkins.",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-security-appscansource-scanner"
    },
    {
      "command": "step([$class: 'AppScanStandardBuilder'])",
      "title": "step([$class: 'AppScanStandardBuilder']): Run AppScan Standard",
      "description": "",
      "parameters": [
        {
          "name": "startingURL",
          "type": "String",
          "values": [],
          "description": "Insert the URL that you want AppScan Standard to start scanning from.\n \nSpiders will find the remaining URLs in the domain to be included for scanning.",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "additionalCommands",
          "type": "String",
          "values": [],
          "description": "Provide additional and optional commands to run on AppScan Standard CLI.\n \n```groovy\nAppScanCMD exec|ex|e\n\n        Parameters:\n        [ /dest_scan|/dest|/d  ]\n        [ /base_scan|/base|/b  ]\n        [ /old_host|/ohost|/oh  ]\n        [ /new_host|/nhost|/nh  ]\n        [ /scan_template|/stemplate|/st  ]\n        [ /login_file|/lfile|/lf  ]\n        [ /multi_step_file|/mstepfile|/mf  ]\n        [ /manual_explore_file|/mexplorefile|/mef  ]\n        [ /policy_file|/pfile|/pf  ]\n        [ /additional_domains|/adomains|/ad  ]\n        [ /report_file|/rf  ]\n        [ /report_type|/rt  {xml} ]\n        [ /min_severity|/msev  {informational} ]\n        [ /test_type|/tt  ]\n        [ /report_template|/rtemplate|/rtm  {CliDefault} ]\n\n        Flags:\n        [ /verbose|/v {false} ]\n        [ /scan_log|/sl {false} ]\n        [ /explore_only|/eo {false} ]\n        [ /test_only|/to {false} ]\n        [ /multi_step|/mstep|/ms {false} ]\n        [ /continue|/c {false} ]\n        [ /merge_manual_explore_requests|/mmer {false} ]\n        [ /include_responses|/ir {false} ]\n        [ /open_proxy|/oprxy|/opr /listening_port|/lport|/lp  ]\n\n        Creates new scan with base_scan's configuration\n    saving dest_scan and creating report, if configured.\n\nAppScanCMD report|rep|r\n\n        Parametrs:\n        /base_scan|/base|/b\n        /report_file|/rf\n        /report_type|/rt\n        [ /min_severity|/msev  {informational} ]\n        [ /test_type|/tt  ]\n        [ /report_template|/rtemplate|/rtm  {CliDefault} ]\n\n        Flags:\n        [ /verbose|/v {false} ]\n\n        Creates a report for base_scan.\n\nAppScanCMD close_proxy|cprxy|cpr\n\n        Closes AppScan proxy if was previously opened.\n\nMore info. at:\n(9.0.3.2 User Guide) CLI - Chapter 15 - CLI - Page 315\nhttp://www-01.ibm.com/support/docview.wss?uid=swg27048015#2\n\n\n```",
          "isOptional": true
        },
        {
          "name": "authScan",
          "type": "boolean",
          "values": [],
          "description": "Checking this option will allow AppScan Stardard to spider and scan a website using authentication, optimizing the results obtained in the report.\n \nIf the website contains private information accessed only by logging in this option should be checked and credentials provided to increase dynamic security coverage.",
          "isOptional": true
        },
        {
          "name": "authScanPw",
          "type": "String",
          "values": [],
          "description": "Provide the password corresponding to the account's user name inserted above.\n \nProviding an account with higher authorization (such as Administrator) will increase the attack surface and therefore the scan coverage.",
          "isOptional": true
        },
        {
          "name": "authScanRadio",
          "type": "boolean",
          "values": [],
          "description": "Check \"Recorded Login Sequence\" if you have one for the website, this is, for the majority of the cases, the most reliable option for authenticated scanning.\n \nA login sequence may be recorded using AppScan Standard's GUI by following these steps: \n\n \n\"Scan\" &gt; \"Scan Configuration\" &gt; \"Login Management\" &gt; \"Record\" &gt; [ record your login...] &gt; \"I am logged in to the site\" &gt; \"Details\" (Tab) &gt; \"Export\" (small icon on the right side). \n\n \n \n\n \nCheck \"Form Based Authentication\" if you do not have a recorded login sequence, this option will require an user name and password combination and is not guaranteed to work for all scenarios.",
          "isOptional": true
        },
        {
          "name": "authScanUser",
          "type": "String",
          "values": [],
          "description": "Provide the user name of an account with access to the private functionalities of the website.\n \nProviding an account with higher authorization (such as Administrator) will increase the attack surface and therefore the scan coverage.",
          "isOptional": true
        },
        {
          "name": "generateReport",
          "type": "boolean",
          "values": [],
          "description": "Check this option if you want AppScan Standard to generate a report after scannning.\n \nThe report is available in HTML and PDF. \n\n \nThe HTML report generated is ready to be integrated with the HTML Publisher Plugin.",
          "isOptional": true
        },
        {
          "name": "htmlReport",
          "type": "boolean",
          "values": [],
          "description": "This report can be integrated with the [HTML Publisher Plugin](https://wiki.jenkins-ci.org/display/JENKINS/HTML+Publisher+Plugin).",
          "isOptional": true
        },
        {
          "name": "includeURLS",
          "type": "String",
          "values": [],
          "description": "This is used to include URLs for scanning,\n \nSome URLs might not be found by AppScan Standard's spiders, include them to get the best possible coverage.",
          "isOptional": true
        },
        {
          "name": "pathRecordedLoginSequence",
          "type": "String",
          "values": [],
          "description": "Provide the full path to the recorded login sequence file (.login). More info. at: (9.0.3.2 User Guide) Login Management view - Chapter 4 - Configuring - Page 45 http://www-01.ibm.com/support/docview.wss?uid=swg27048015#2",
          "isOptional": true
        },
        {
          "name": "pdfReport",
          "type": "boolean",
          "values": [],
          "description": "A PDF report is generated.",
          "isOptional": true
        },
        {
          "name": "policyFile",
          "type": "String",
          "values": [],
          "description": "Provide the Path to a Test Policy File (.policy) to determine which type of flaws to scan for.\n \nA Test Policy File can be created following these steps: \n\n \n\"Scan\" &gt; \"Scan Configuration\" &gt; \"Test Policy\" &gt; \"Export\".",
          "isOptional": true
        },
        {
          "name": "reportName",
          "type": "String",
          "values": [],
          "description": "Provide the name to save the report with.\n \nTo configure HTML Publisher Plugin properly, the names in the configuration must match.",
          "isOptional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "Selecting this option will enable AppScan Standards' verbose, printing the full scan output in Jenkins log.",
          "isOptional": true
        }
      ],
      "plugin": "ibm-security-appscanstandard-scanner"
    },
    {
      "command": "step([$class: 'ApperianRecorder'])",
      "title": "step([$class: 'ApperianRecorder']): Digital.ai App Management Publisher",
      "description": "",
      "parameters": [
        {
          "name": "uploads",
          "type": "Nested",
          "values": [
            "prodEnv",
            "customApperianUrl",
            "apiTokenId",
            "appId",
            "filename",
            "appName",
            "shortDescription",
            "longDescription",
            "author",
            "version",
            "versionNotes",
            "signApp",
            "credential",
            "enableApp",
            "reapplyPolicies"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ease-plugin"
    },
    {
      "command": "step([$class: 'ApprendaBuilder'])",
      "title": "step([$class: 'ApprendaBuilder']): Deploy to Apprenda",
      "description": "",
      "parameters": [
        {
          "name": "appAlias",
          "type": "String",
          "values": [],
          "description": "The Applicaton Alias to be used.",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "The Applicaton Name to be used.",
          "isOptional": false
        },
        {
          "name": "versionAlias",
          "type": "String",
          "values": [],
          "description": "The application Version Alias to target.",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "The desired Apprenda Application lifecycle Stage.",
          "isOptional": false
        },
        {
          "name": "artifactName",
          "type": "String",
          "values": [],
          "description": "The filename of the Apprenda Application Package. For example myapplication.zip.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "The Version Alias prefix to be used. Apprenda will append a number to the prefix to complete the Version Alias.",
          "isOptional": false
        },
        {
          "name": "advVersionAliasToBeForced",
          "type": "String",
          "values": [],
          "description": "The complete Version Alias, including the Version prefix and Version number to be used. For example v23.",
          "isOptional": false
        },
        {
          "name": "advancedNewVersionOption",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customPackageDirectory",
          "type": "String",
          "values": [],
          "description": "The full path to the folder that contains the Apprenda Application Package defined in the Artifact Name.",
          "isOptional": false
        },
        {
          "name": "applicationPackageURL",
          "type": "String",
          "values": [],
          "description": "The complete URL to the Apprenda Application Package, starting with http:// or https://.",
          "isOptional": false
        },
        {
          "name": "archiveUploadMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildWithParameters",
          "type": "boolean",
          "values": [],
          "description": "Check this box if you are using a parameterized project and want the Apprenda build step to do the substitution of variables from parameters.",
          "isOptional": false
        }
      ],
      "plugin": "apprenda"
    },
    {
      "command": "step([$class: 'ArtifactPromotionBuilder'])",
      "title": "step([$class: 'ArtifactPromotionBuilder']): Single Artifact Promotion",
      "description": "Here you can configure the artifact promotion plugin for single artifacts. In the first section (<i>Artifact Information</i>) you enter the coordinates of your artifact.\n \n\n In the <i>Staging Repository Information</i> section you tell there your source repository is, e.g. http://192.168.56.24/nexus/content/repositories/staging/.\n \n\n In the following section <i>Release Repository Information</i>, you enter the information about the target repository, e.g. http://192.168.56.24/nexus/content/repositories/releases/. In both sections, you can add user credentials. If you do, the connection to the repository servers will be done using these credentials. If you don't suppot credentials, the access will be done without any authentication.\n \n\n Both repositorys should be <i>release</i> repositories, not snapshot repos! The password(s) will be saved currently using the standard Jenkins functionality to save those. It's planned to use in the future the credentials plugin.",
      "parameters": [
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "classifier",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extension",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stagingPW",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releasePW",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "promoterClass",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skipDeletion",
          "type": "boolean",
          "values": [],
          "description": "'Skip deletion' option preserves the files in the staging repository.\n\n \nUntick 'Skip deletion' only after you've promoted all the relevant files in previous steps.",
          "isOptional": false
        }
      ],
      "plugin": "artifact-promotion"
    },
    {
      "command": "step([$class: 'AstreeBuilder'])",
      "title": "step([$class: 'AstreeBuilder']): Astrée Analysis Run",
      "description": "",
      "parameters": [
        {
          "name": "dax_file",
          "type": "String",
          "values": [],
          "description": "Absolute path to the DAX file containing the analysis specification and configuration.\n \n\n Note: In this setting, environment variables can be expanded. Expansion will affect all occurrences of the pattern ${name} where name is a valid environment variable name consisting solely of underscores, digits, and alphabetics from the portable character set and where the first character is not a digit.\n \n\n Paths and environment variables are evaluated on the machine running Jenkins.",
          "isOptional": false
        },
        {
          "name": "analysis_id",
          "type": "String",
          "values": [],
          "description": "ID of an existing, preconfigured analysis on the Astrée server that serves as a revisioning base for the analyses of the current Jenkins project. The analysis, as configured via the supported DAX file, of a build is imported as a new revision into the project with this ID on the server, if such a project exists. The new revision will become a child revision of the last existing revision. If no project with this ID exists on the server, the analysis will become the first revision of a new project with the specified ID.\n \n\n Note: In this setting, environment variables can be expanded. Expansion will affect all occurrences of the pattern ${name} where name is a valid environment variable name consisting solely of underscores, digits, and alphabetics from the portable character set and where the first character is not a digit.",
          "isOptional": false
        },
        {
          "name": "output_dir",
          "type": "String",
          "values": [],
          "description": "Absolute path to the folder into which the Summary Reports are to be generated. If left empty, reports will be generated into the project's Workspace directory and will be accessible from the Jenkins web interface.\n \n\n Note: In this setting, environment variables can be expanded. Expansion will affect all occurrences of the pattern ${name} where name is a valid environment variable name consisting solely of underscores, digits, and alphabetics from the portable character set and where the first character is not a digit.",
          "isOptional": false
        },
        {
          "name": "skip_analysis",
          "type": "boolean",
          "values": [],
          "description": "This switch can be used to deactivate the Astrée analysis build step. This switch provides a more convenient method to temporarily deactivate analysis runs than removing the entire build step and reconfiguring the Astrée analysis run from scratch when later adding the build step again.",
          "isOptional": false
        },
        {
          "name": "genXMLOverview",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "genXMLCoverage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "genXMLAlarmsByOccurence",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "genXMLAlarmsByCategory",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "genXMLAlarmsByFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "genXMLRulechecks",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dropAnalysis",
          "type": "boolean",
          "values": [],
          "description": "When this option is activated, the analysis is not stored on the Astrée server, instead it is automatically deleted after the analysis run of the build step.\n \n\n This option is very helpful if the analysis run is only specified by a DAX file and it is not intended to archive each analysis run on the server.\n \n\n Please be aware that using this option in an analysis run only specified by an analysis ID will result in deleting the analysis with that ID on the Astrée server.\n \n\n This option corresponds to adding a <i>--drop</i> to a command line call to Astrée.",
          "isOptional": false
        },
        {
          "name": "genPreprocessOutput",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failonswitch",
          "type": "Nested",
          "values": [
            "failon"
          ],
          "description": "This option allow Astrée to fail a build depeneding on the types of detected code defects. The following settings are available:\n \n  \n*  Only Errors \n\n ... lets Astrée fail a build if an Error (Definite Type A Alarm) is reported. \n\n This is the preferred setting for most use cases. A build is failed if Astrée can formally show the presence of a severe code defect in a (analysis) context. \n\n  \n*  Errors and Alarms \n\n ... lets Astrée fail a build if an Error or Alarm (Definite Type A Alarm or Potential Alarm of Type B or Type C) is reported. \n\n This is the preferred setting in case the absence of runtime errors in an application is to be formally shown. A build is failed if Astrée reports potential runtime errors. \n\n  \n*  Errors, Alarms, and Data-Flow Anomalies \n\n ... lets Astrée fail a build if and only if any type of alarm (definite/potential Type A, B, C or D) is reported. \n\n This setting fails builds on any reported potential code defect or anomaly.",
          "isOptional": false
        }
      ],
      "plugin": "absint-astree"
    },
    {
      "command": "step([$class: 'Autogen'])",
      "title": "step([$class: 'Autogen']): Autogen",
      "description": "",
      "parameters": [
        {
          "name": "element",
          "type": "String",
          "values": [],
          "description": "Specify the name of the element in your CA Endevor® sandbox that you want to include in the autogeneration process, for example, <i>RUNCOB01</i>. The maximum length is 8 characters.\n\n \nYou can specify several specific comma-separated elements within the sandbox, for example, <i>RUNCOB01, RUNCOB02</i>.\n\n \nYou can use wildcards % and * to define the name patterns for the element names.\n\n Examples:\n\n Specify <i>*</i> to include all elements from the sandbox in the autonegeration process.\n\n Specify <i>RUNCOB*</i> to include all element names that start with \"RUNCOB\".\n\n Specify <i>%%%COB*</i> to include elements that contain the substring COB starting after position three.",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "Provide the environment for the CA Endevor® sandbox that you want to include in the autogeneration process, for example, <i>DEV</i>.",
          "isOptional": false
        },
        {
          "name": "system",
          "type": "String",
          "values": [],
          "description": "Provide the system name for the environment in your CA Endevor® sandbox that you want to include in the autogeneration process, for example, <i>APCTTC0</i>.",
          "isOptional": false
        },
        {
          "name": "subsystem",
          "type": "String",
          "values": [],
          "description": "Provide the subsystem name for the environment in your CA Endevor® sandbox that you want to include in the autogeneration process, for example, <i>TESTCICD</i>.",
          "isOptional": false
        },
        {
          "name": "stage",
          "type": "String",
          "values": [],
          "description": "Specify the environment stage in your CA Endevor® that you want to include in the autogeneration process, for example, <i>1</i>.",
          "isOptional": false
        },
        {
          "name": "instance",
          "type": "String",
          "values": [],
          "description": "Specify the instance name of the environment that is associated with CA Endevor® Web services, for example, <i>WEBSMFNE</i>.",
          "isOptional": false
        },
        {
          "name": "signout",
          "type": "boolean",
          "values": [],
          "description": "Select this option to work with elements in CA Endevor® that might be currently worked on by another user.\n\n \nSelect the **Override signout** option only if you have the permission to override the signout of another user.",
          "isOptional": false
        }
      ],
      "plugin": "ca-mat-performance-benchmarking-by-broadcom"
    },
    {
      "command": "step([$class: 'BapFtpPromotionPublisherPlugin'])",
      "title": "step([$class: 'BapFtpPromotionPublisherPlugin']): Send build artifacts over FTP",
      "description": "Send build artifacts over FTP as a build step during a promotion process",
      "parameters": [
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "ftpRetry",
            "ftpLabel",
            "ftpCredentials"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "parameterName"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "publish-over-ftp"
    },
    {
      "command": "step([$class: 'BapSshPromotionPublisherPlugin'])",
      "title": "step([$class: 'BapSshPromotionPublisherPlugin']): Send build artifacts over SSH",
      "description": "Send files or execute commands over SSH as a build step during a promotion process.",
      "parameters": [
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "sshRetry",
            "sshLabel",
            "sshCredentials"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "parameterName"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "publish-over-ssh"
    },
    {
      "command": "step([$class: 'BeaglePlugin'])",
      "title": "step([$class: 'BeaglePlugin']): Trigger Beagle Penetration Testing",
      "description": "",
      "parameters": [
        {
          "name": "apptoken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "### Generate your Application Token From Beagle\n\n\n\n <h5>Home -&gt; Applications -&gt; Select your Application -&gt; Settings -&gt; Application Token \n\n</h5>\n <img src=\"https://beagle-assets.s3.ca-central-1.amazonaws.com/share/apptoken.png\">",
          "isOptional": false
        },
        {
          "name": "accesstoken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "### Generate your Access Token From Beagle User Settings\n\n\n\n <h5>Settings -&gt; Access Token -&gt; Generate Your New Personal Access Token\n\n </h5>\n <img src=\"https://beagle-assets.s3.ca-central-1.amazonaws.com/share/usertoken.png\">",
          "isOptional": false
        }
      ],
      "plugin": "beagle-security"
    },
    {
      "command": "step([$class: 'BitbucketPublisher'])",
      "title": "step([$class: 'BitbucketPublisher']): Publish to Bitbucket Server",
      "description": "",
      "parameters": [
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "Bitbucket Server Url.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials for bitucket server. The user must have access to create project and repository.",
          "isOptional": true
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "Input the project key for the bitbucket.",
          "isOptional": true
        },
        {
          "name": "createProject",
          "type": "Nested",
          "values": [
            "projectName",
            "projectUsers",
            "projectGroups"
          ],
          "description": "Check this if you want to create the bitbucket project.",
          "isOptional": true
        },
        {
          "name": "createJenkinsJobs",
          "type": "Nested",
          "values": [
            "ciServer"
          ],
          "description": "Check this if you want to use the bitbucket post commit external hook to call.",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Input name of the Bitbucket project.",
          "isOptional": true
        }
      ],
      "plugin": "publish-to-bitbucket"
    },
    {
      "command": "step([$class: 'BlueprintLaunch'])",
      "title": "step([$class: 'BlueprintLaunch']): Nutanix Calm Blueprint Launch",
      "description": "",
      "parameters": [
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Project selection is mandatory.",
          "isOptional": false
        },
        {
          "name": "blueprintName",
          "type": "String",
          "values": [],
          "description": "Blueprint selection is mandatory.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Application Name is mandatory.\n\n \nThis is the Application name used for blueprint launch in Nutanix Calm. Appending the _${BUILD_ID} to the Application name is recommended for unique application names. Other Jenkins Environment Variables may also be used.",
          "isOptional": false
        },
        {
          "name": "appProfileName",
          "type": "String",
          "values": [],
          "description": "Application Profile selection is mandatory.",
          "isOptional": false
        },
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "The field is mandatory\n\n \n\n\n \nSelect the required action need to run after the application launch from the list of actions, else please select none.",
          "isOptional": false
        },
        {
          "name": "runtimeVariables",
          "type": "String",
          "values": [],
          "description": "Click on Fetch Runtime Variables to fetch all editable variables for the selected Application Profile in JSON format. Modify the key values from the defaults as needed.The values can also reference jenkins environment variables.",
          "isOptional": false
        },
        {
          "name": "waitForSuccessFulLaunch",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "blueprintDescription",
          "type": "String",
          "values": [],
          "description": "Description is fetched from the selected Calm blueprint",
          "isOptional": false
        }
      ],
      "plugin": "nutanix-calm"
    },
    {
      "command": "step([$class: 'BrakemanPublisher'])",
      "title": "step([$class: 'BrakemanPublisher']): Publish Brakeman warnings",
      "description": "",
      "parameters": [
        {
          "name": "outputFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "brakeman"
    },
    {
      "command": "step([$class: 'BrowserStackReportPublisher'])",
      "title": "step([$class: 'BrowserStackReportPublisher']): BrowserStack Test Report",
      "description": "",
      "parameters": [],
      "plugin": "browserstack-integration"
    },
    {
      "command": "step([$class: 'BuildScanner'])",
      "title": "step([$class: 'BuildScanner']): Acunetix",
      "description": "Trigger automated Acunetix scans as part of your web application's build process",
      "parameters": [
        {
          "name": "profile",
          "type": "String",
          "values": [],
          "description": "The Scan Type used to scan the target",
          "isOptional": false
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "The Scan Target on which to run a scan (excludes Targets requiring Manual Intervention)",
          "isOptional": false
        },
        {
          "name": "repTemp",
          "type": "String",
          "values": [],
          "description": "Generate a Report after the scan completes. The report is available for download from Acunetix backend within a time frame of one hour",
          "isOptional": false
        },
        {
          "name": "threat",
          "type": "String",
          "values": [],
          "description": "The Threat Level (High, Medium, Low) to fail the build on",
          "isOptional": false
        },
        {
          "name": "stopScan",
          "type": "boolean",
          "values": [],
          "description": "If selected, the scan will be stopped if the build fails (Threat Level is reached)",
          "isOptional": false
        },
        {
          "name": "svRep",
          "type": "boolean",
          "values": [],
          "description": "Option to download the report in the project workspace from where it can be used for other operations like attaching to an email or archiving.\n \n\n Note: Archiving can be done with \"Archive the artifacts\" post-build action",
          "isOptional": false
        },
        {
          "name": "incScan",
          "type": "boolean",
          "values": [],
          "description": "This will create an Incremental scan. The first scan will scan all the site. Subsequent scans will only scan the changes in the site, resulting in smaller scans.",
          "isOptional": false
        },
        {
          "name": "incScanId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "acunetix"
    },
    {
      "command": "step([$class: 'BuildStepsFromJsonBuilder'])",
      "title": "step([$class: 'BuildStepsFromJsonBuilder']): Build Steps from Json",
      "description": "",
      "parameters": [
        {
          "name": "buildStep",
          "type": "Nested",
          "values": [
            "$class: 'A3Builder'",
            "$class: 'ACSDeploymentBuilder'",
            "qualysAPIStaticAssessment",
            "cfyAzureArm",
            "$class: 'AWSEBBuilder'",
            "$class: 'AWSEBDeploymentBuilder'",
            "awsebReleaser",
            "abapCi",
            "$class: 'ActionHubPlugin'",
            "snActivatePlugin",
            "$class: 'AddComment'",
            "$class: 'AddTestToSetStep'",
            "$class: 'AmxEclipseAntBuilder'",
            "anchore",
            "$class: 'AnsibleAdHocCommandBuilder'",
            "cfyAnsible",
            "$class: 'AnsiblePlaybookBuilder'",
            "$class: 'AnsibleTower'",
            "$class: 'AnsibleTowerProjectRevisionFreestyle'",
            "$class: 'AnsibleTowerProjectSyncFreestyle'",
            "$class: 'AnsibleVaultBuilder'",
            "ant",
            "$class: 'AntExec'",
            "antws",
            "$class: 'ApiFortressBuilder'",
            "$class: 'AppClone'",
            "appray",
            "appscan",
            "appscanenterprise",
            "$class: 'AppScanSourceBuilder'",
            "$class: 'AppScanStandardBuilder'",
            "xooa",
            "$class: 'AppUploaderBuilder'",
            "applatix",
            "snApplyChanges",
            "$class: 'ApprendaBuilder'",
            "aqua",
            "aquaMicroscanner",
            "aquaServerlessScanner",
            "arachniScanner",
            "$class: 'ArtifactPromotionBuilder'",
            "artifactResolver",
            "$class: 'ArtifactsUploadBuilder'",
            "assertthatBddFeatures",
            "$class: 'AssetBuilder'",
            "$class: 'AssociateItemToRelease'",
            "associateTag",
            "$class: 'AstreeBuilder'",
            "audit",
            "$class: 'AutEnvironmentBuilder'",
            "$class: 'AutoConfigBuilder'",
            "$class: 'Autogen'",
            "$class: 'AwsBatchBuilder'",
            "azureCLI",
            "azureDownload",
            "$class: 'BDSBuilder'",
            "$class: 'BapFtpBuilder'",
            "$class: 'BapSshBuilderPlugin'",
            "batchFile",
            "$class: 'BeaglePlugin'",
            "$class: 'BeakerBuilder'",
            "$class: 'BeginAnalysis'",
            "benchmark",
            "$class: 'BitbucketPublisher'",
            "$class: 'BlueprintLaunch'",
            "$class: 'BootPluginBuilder'",
            "$class: 'BranchDestructionStep'",
            "$class: 'BranchGenerationStep'",
            "dotnetBuild",
            "buildAddUrl",
            "$class: 'BuildBuilder'",
            "buildDescription",
            "buildName",
            "$class: 'BuildNameUpdater'",
            "crxBuild",
            "$class: 'BuildScanner'",
            "$class: 'BuildStepBuilder'",
            "$class: 'BuildStepWithTimeout'",
            "$class: 'BuildStepsFromJsonBuilder'",
            "$class: 'BuildoutBuilder'",
            "byteguardGreet",
            "$class: 'CFLaunchBuilder'",
            "$class: 'CFLintBuilder'",
            "$class: 'CIMessageBuilder'",
            "$class: 'CIMessageSubscriberBuilder'",
            "$class: 'CToolBuilder'",
            "generateCache",
            "$class: 'CallFunction'",
            "$class: 'CallOtherJenkinsBuilder'",
            "$class: 'CaptureIOSDeviceScreenshot'",
            "carbonetes",
            "carl",
            "castecho",
            "venafiVcertRequestCertificate",
            "changeAsmVer",
            "chatterPost",
            "$class: 'CheckGate'",
            "$class: 'CheckGateBuilder'",
            "$class: 'ChefBuilderConfiguration'",
            "chlAtuoAction",
            "$class: 'ChrootBuilder'",
            "$class: 'CifsBuilderPlugin'",
            "$class: 'ClangScanBuildBuilder'",
            "googleStorageUpload",
            "dotnetClean",
            "examCleanTarget",
            "validNetwork",
            "$class: 'ClifBuilder'",
            "$class: 'CloudBuildBuilder'",
            "pushToCloudFoundry",
            "cloudhubDeployer",
            "$class: 'CloudManagerBuilder'",
            "$class: 'CloudShellConfig'",
            "$class: 'CmakeBuilder'",
            "$class: 'CocoaPodsBuilder'",
            "$class: 'CodeAnalysisBuilder'",
            "$class: 'CodeBuilder'",
            "$class: 'CodeCoverageBuilder'",
            "$class: 'CodeScanBuilder'",
            "codescene",
            "$class: 'CodeStreamBuilder'",
            "$class: 'CodefreshPipelineBuilder'",
            "$class: 'CommentsRemoverBuilder'",
            "$class: 'CompareBuilder'",
            "$class: 'CompareWithBaselineBuilder'",
            "$class: 'CompoundBuilder'",
            "daticalDBCmdProject",
            "daticalDBExportSQL",
            "daticalDBExportRollbackSQL",
            "daticalDBScriptDir"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "build-steps-from-json"
    },
    {
      "command": "step([$class: 'BumblebeePublisher'])",
      "title": "step([$class: 'BumblebeePublisher']): Bumblebee  HP  ALM  Uploader",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "Nested",
          "values": [
            "domain",
            "projectName",
            "testPlan",
            "testLab",
            "testSet",
            "format",
            "resultPattern",
            "customProperties",
            "failIfUploadFailed",
            "offline",
            "defectCreatePolicy",
            "defectCreateStatus",
            "defectSeverity",
            "defectReopenStatus",
            "defectResolvePolicy",
            "defectResolveStatus",
            "defectCreateProperties",
            "defectReopenProperties",
            "defectResolveProperties"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'CallFunction'])",
      "title": "step([$class: 'CallFunction']): Reqtify: Call Function",
      "description": "Call a function You can choose:\n \n  \n* Function name\n\n  \n* Function Arguments",
      "parameters": [
        {
          "name": "functionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "argumentList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "argument",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reqtify"
    },
    {
      "command": "step([$class: 'CcmPublisher'])",
      "title": "step([$class: 'CcmPublisher']): Publish CCM analysis results",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ccm"
    },
    {
      "command": "step([$class: 'ChangeEvents'])",
      "title": "step([$class: 'ChangeEvents']): PagerDuty Change Events",
      "description": "Create Change Events on PagerDuty services when jobs complete.",
      "parameters": [
        {
          "name": "integrationKey",
          "type": "String",
          "values": [],
          "description": "This is the 32 character Integration Key for an Integration on a Service.",
          "isOptional": false
        },
        {
          "name": "createOnAborted",
          "type": "boolean",
          "values": [],
          "description": "Create a PagerDuty Change Event if the job ends as ABORTED.",
          "isOptional": true
        },
        {
          "name": "createOnFailure",
          "type": "boolean",
          "values": [],
          "description": "Create a PagerDuty Change Event if the job ends as FAILURE.",
          "isOptional": true
        },
        {
          "name": "createOnNotBuilt",
          "type": "boolean",
          "values": [],
          "description": "Create a PagerDuty Change Event if the job ends as NOT_BUILT.",
          "isOptional": true
        },
        {
          "name": "createOnSuccess",
          "type": "boolean",
          "values": [],
          "description": "Create a PagerDuty Change Event if the job ends as SUCCESS.",
          "isOptional": true
        },
        {
          "name": "createOnUnstable",
          "type": "boolean",
          "values": [],
          "description": "Create a PagerDuty Change Event if the job ends as UNSTABLE.",
          "isOptional": true
        }
      ],
      "plugin": "pagerduty"
    },
    {
      "command": "step([$class: 'CheckGate'])",
      "title": "step([$class: 'CheckGate']): UCV - Check Gate in UrbanCode Velocity",
      "description": "",
      "parameters": [
        {
          "name": "pipelineId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stageName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fatal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'ChefBuilderConfiguration'])",
      "title": "step([$class: 'ChefBuilderConfiguration']): Execute chef client on selected nodes",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sinatraurl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "privatekey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "parallel",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sinatra-chef-builder"
    },
    {
      "command": "step([$class: 'CifsPromotionPublisherPlugin'])",
      "title": "step([$class: 'CifsPromotionPublisherPlugin']): Send build artifacts to a windows share",
      "description": "Send build artifacts to a windows share as a build step during a promotion process",
      "parameters": [
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "retry",
            "label"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "paramPublish",
          "type": "Nested",
          "values": [
            "parameterName"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "publish-over-cifs"
    },
    {
      "command": "step([$class: 'ClaimPublisher'])",
      "title": "step([$class: 'ClaimPublisher']): Allow broken build claiming",
      "description": "",
      "parameters": [],
      "plugin": "claim"
    },
    {
      "command": "step([$class: 'CloudCoreoPublisher'])",
      "title": "step([$class: 'CloudCoreoPublisher']): Analyze CloudCoreo Results",
      "description": "",
      "parameters": [
        {
          "name": "blockOnHigh",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "blockOnMedium",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "blockOnLow",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cloudcoreo-deploytime"
    },
    {
      "command": "step([$class: 'CloudManagerBuilder'])",
      "title": "step([$class: 'CloudManagerBuilder']): Cloud Manager Build Step",
      "description": "",
      "parameters": [
        {
          "name": "program",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pipeline",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "adobe-cloud-manager"
    },
    {
      "command": "step([$class: 'CloverPublisher'])",
      "title": "step([$class: 'CloverPublisher']): Publish OpenClover coverage report",
      "description": "",
      "parameters": [
        {
          "name": "cloverReportDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloverReportFileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "healthyTarget",
          "type": "Nested",
          "values": [
            "methodCoverage",
            "conditionalCoverage",
            "statementCoverage"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unhealthyTarget",
          "type": "Nested",
          "values": [
            "methodCoverage",
            "conditionalCoverage",
            "statementCoverage"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failingTarget",
          "type": "Nested",
          "values": [
            "methodCoverage",
            "conditionalCoverage",
            "statementCoverage"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "clover"
    },
    {
      "command": "step([$class: 'CodeAnalysisBuilder'])",
      "title": "step([$class: 'CodeAnalysisBuilder']): Perform code analysis with Toad DevOps Toolkit",
      "description": "",
      "parameters": [
        {
          "name": "connection",
          "type": "String",
          "values": [],
          "description": "An Oracle connection string used for connecting to the database.\n`user/password@host:port/service`",
          "isOptional": false
        },
        {
          "name": "objects",
          "type": "Nested",
          "values": [
            "name",
            "owner",
            "type"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "objectFolders",
          "type": "Nested",
          "values": [
            "path",
            "filter",
            "recurse"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "report",
          "type": "Nested",
          "values": [
            "name",
            "html",
            "json",
            "xls",
            "xml"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ruleSet",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failConditions",
          "type": "Nested",
          "values": [
            "halstead",
            "maintainability",
            "mcCabe",
            "TCR",
            "ruleViolations",
            "syntaxErrors",
            "ignoreWrappedPackages"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ci-with-toad-devops-toolkit"
    },
    {
      "command": "step([$class: 'CodeBuilder'])",
      "title": "step([$class: 'CodeBuilder']): AWS CodeBuild",
      "description": "",
      "parameters": [
        {
          "name": "credentialsType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "awsAccessKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "awsSecretKey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "awsSessionToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sseAlgorithm",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceControlType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "localSourcePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaceSubdir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitCloneDepthOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportBuildStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "secondarySourcesOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "secondarySourcesVersionOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactNamespaceOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactPackagingOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactPathOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifactEncryptionDisabledOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideArtifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "secondaryArtifactsOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "envVariables",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "envParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildSpecFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildTimeoutOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "imageOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "computeTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cacheTypeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cacheLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cacheModesOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloudWatchLogsStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloudWatchLogsGroupNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloudWatchLogsStreamNameOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "s3LogsStatusOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "s3LogsEncryptionDisabledOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "s3LogsLocationOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "certificateOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceRoleOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "insecureSslOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "privilegedModeOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cwlStreamingDisabled",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "exceptionFailureMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "downloadArtifacts",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "downloadArtifactsRelativePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "aws-codebuild"
    },
    {
      "command": "step([$class: 'CodeClimatePublisher'])",
      "title": "step([$class: 'CodeClimatePublisher']): Code Climate Publisher",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codeclimate-plugin"
    },
    {
      "command": "step([$class: 'CodeCoverageBuilder'])",
      "title": "step([$class: 'CodeCoverageBuilder']): Retrieve Xpediter Code Coverage Statistics",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "analysisPropertiesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "analysisProperties",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "compuware-xpediter-code-coverage"
    },
    {
      "command": "step([$class: 'CodeDxPublisher'])",
      "title": "step([$class: 'CodeDxPublisher']): Publish to Code Dx",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "analysisName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "analysisResultConfiguration",
          "type": "Nested",
          "values": [
            "failureSeverity",
            "unstableSeverity",
            "failureOnlyNew",
            "unstableOnlyNew",
            "numBuildsInGraph"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludedSourceAndBinaryFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selfSignedCertificateFingerprint",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sourceAndBinaryFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "toolOutputFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codedx"
    },
    {
      "command": "step([$class: 'CodeScanBuilder'])",
      "title": "step([$class: 'CodeScanBuilder']): Build a CodeScan Project",
      "description": "",
      "parameters": [
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commitOverride",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "emailReportTo",
          "type": "String",
          "values": [],
          "description": "The list of user names in instance. Invalid usernames are skipped with a warning. \n\n \nSetting the analysis mode to 'preview' will create a 'new issues' build report but will not update the database",
          "isOptional": false
        },
        {
          "name": "analysisMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectBranch",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "blocking",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "codescan"
    },
    {
      "command": "step([$class: 'CodescannerPublisher'])",
      "title": "step([$class: 'CodescannerPublisher']): Symbian CodeScanner",
      "description": "",
      "parameters": [
        {
          "name": "threshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "newThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failureThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "newFailureThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourcecodedir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executable",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codescanner"
    },
    {
      "command": "step([$class: 'CommentsRemoverBuilder'])",
      "title": "step([$class: 'CommentsRemoverBuilder']): Invoke Comments Remover",
      "description": "",
      "parameters": [
        {
          "name": "filename",
          "type": "String",
          "values": [],
          "description": "Name of the input file to have comments removed from",
          "isOptional": false
        },
        {
          "name": "language",
          "type": "String",
          "values": [],
          "description": "Language of the input file - helps locate comments",
          "isOptional": false
        },
        {
          "name": "outputDir",
          "type": "String",
          "values": [],
          "description": "After execution the result will be in this directory in the workspace",
          "isOptional": false
        }
      ],
      "plugin": "comments-remover"
    },
    {
      "command": "step([$class: 'CompareCoverageAction'])",
      "title": "step([$class: 'CompareCoverageAction']): Publish coverage to GitHub",
      "description": "This step could be used only for Jenkins jobs triggered by [GitHub pull request builder plugin](https://wiki.jenkins-ci.org/display/JENKINS/GitHub+pull+request+builder+plugin)\n \n\n Step will get code coverage from build. Get collected previously coverage for master. Then post status to GitHub pull request as comment.\n \n\n To record master coverage add post build step **Record Master Coverage** to any job which you think should be master. Ensure that coverage report is present in a build.\n \n\n Step get test coverage from Cobertura or Jacoco reports (XML) if they present in build. They could be created by any tool. Otherwise coverage will be 0.",
      "parameters": [
        {
          "name": "jacocoCoverageCounter",
          "type": "String",
          "values": [],
          "description": "The coverage metric should be the same as in \"Record Master Coverage\" action in order to have accurate results",
          "isOptional": true
        },
        {
          "name": "publishResultAs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scmVars",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sonarLogin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sonarPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "github-pr-coverage-status"
    },
    {
      "command": "step([$class: 'ConsulKVBuilder'])",
      "title": "step([$class: 'ConsulKVBuilder']): Consul K/V Builder",
      "description": "",
      "parameters": [
        {
          "name": "hostUrl",
          "type": "String",
          "values": [],
          "description": "Host URL should contain protocol (HTTP/HTTPS)://&lt;HOST_NAME&gt;.",
          "isOptional": false
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "Key is used in GET/PUT requests to lookup the value from, or right the key/value pair to the Consul key/value store.",
          "isOptional": false
        },
        {
          "name": "aclToken",
          "type": "String",
          "values": [],
          "description": "Token is used to supply UUID token for Consul ACL token calls. Token can be supplied by build parameters.",
          "isOptional": true
        },
        {
          "name": "apiUri",
          "type": "String",
          "values": [],
          "description": "URL Override is used to override the K,V API URL.",
          "isOptional": true
        },
        {
          "name": "debugMode",
          "type": "Enum",
          "values": [
            "ENABLED",
            "DISABLED"
          ],
          "description": "Enable Debug messages for more verbose logging.",
          "isOptional": true
        },
        {
          "name": "envVarKey",
          "type": "String",
          "values": [],
          "description": "ENV Varaible Key is used to store the retrieved value in the build ENV variables to be used downstream.",
          "isOptional": true
        },
        {
          "name": "ignoreGlobalSettings",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyValue",
          "type": "String",
          "values": [],
          "description": "Value is used in PUT calls to insert/update a key/value pair.",
          "isOptional": true
        },
        {
          "name": "requestMode",
          "type": "Enum",
          "values": [
            "READ",
            "WRITE",
            "DELETE"
          ],
          "description": "Request Mode set to READ will execute a GET to lookup the value, WRITE will execute a PUT to insert/update the value.",
          "isOptional": true
        },
        {
          "name": "timeoutConnection",
          "type": "int",
          "values": [],
          "description": "Connection timeout in milliseconds, default is 10000.",
          "isOptional": true
        },
        {
          "name": "timeoutResponse",
          "type": "int",
          "values": [],
          "description": "Response timeout in milliseconds, default is 30000.",
          "isOptional": true
        }
      ],
      "plugin": "consul-kv-builder"
    },
    {
      "command": "step([$class: 'ContinuousReleaseProperties'])",
      "title": "step([$class: 'ContinuousReleaseProperties']): Pass Properties to UrbanCode Velocity Version",
      "description": "",
      "parameters": [
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'CordellWalkerRecorder'])",
      "title": "step([$class: 'CordellWalkerRecorder']): Activate Chuck Norris",
      "description": "",
      "parameters": [],
      "plugin": "chucknorris"
    },
    {
      "command": "step([$class: 'CpptestPublisher'])",
      "title": "step([$class: 'CpptestPublisher']): Publish Cpptest analysis results",
      "description": "",
      "parameters": [
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pluginName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cpptest"
    },
    {
      "command": "step([$class: 'CreateBuildBuilder'])",
      "title": "step([$class: 'CreateBuildBuilder']): Create BuildMaster Build",
      "description": "Creates a new build for the selected BuildMaster application and sets the BUILDMASTER_BUILD_NUMBER environment variable with the value returned from BuildMaster for the new build.\n\n \nIf your Jenkins job has produced artifacts to be loaded into BuildMaster, you have the following options. The choice is largely dependent on how you import the build artifacts into BuildMaster:\n\n <ol type=\"a\">\n  \n* Use BuildMasters Jenkins Extensions 'Jenkins::Import-Artifact' statement to import artifacts directly from Jenkins: <i>the post build action is required</i>\n\n  \n* Use BuildMasters 'Create-Artifact' statement to import files from a folder that you've placed the artifacts into from the Jenkins build (eg using [ArtifactDeployer Plugin](https://wiki.jenkins-ci.org/display/JENKINS/ArtifactDeployer+Plugin)): <i>either the post build or build step actions will be fine</i>\n\n  \n* Use an external artifact repository such as Nexus, Artifactory or ProGet: <i>either the post build or build step actions will be fine</i>",
      "parameters": [
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "The identifier of the BuildMaster application to trigger the build for.\n\n \nOptions are:\n\n \n  \n* The BUILDMASTER_APPLICATION_ID variable populated by a previous step\n\n  \n* An application",
          "isOptional": false
        },
        {
          "name": "releaseNumber",
          "type": "String",
          "values": [],
          "description": "The BuildMaster release number to trigger the build for. Options are:\n\n \n  \n* BUILDMASTER_RELEASE_NUMBER: variable populated by a previous step\n\n  \n* Latest Active Release: will automatically get the latest active release number from BuildMaster for the selected application\n\n  \n* [Release Number]: a release number from the list of active releases\n\n \n \n<i>The job will fail if there is no active BuildMaster release.</i>",
          "isOptional": false
        },
        {
          "name": "deployToFirstStage",
          "type": "Nested",
          "values": [
            "waitUntilCompleted",
            "printLogOnFailure"
          ],
          "description": "Will trigger the deployment to the first stage, and any subsequent stages where the stage is configured to automatically deploy to the next stage.",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "String",
          "values": [],
          "description": "Provide a list of variables to pass to the build.\n\n \n  \n* A variable must be in the format \"variable=value\"\n\n  \n* Additional variables must be declared on separate lines\n\n  \n* Lines starting with # are treated as comments\n\n  \n* When using pipeline script and you want to pass several variables use one of these formats:\n   \n \n* Separate variables using newline character. Generated script will resemble: <i>variables: 'var1=one\\nvar2=two'</i>\n\n \n* Separate variables using multi-line string. Generated script will resemble: <i>variables: '''var1=one\n\nvar2=two'''</i>",
          "isOptional": true
        }
      ],
      "plugin": "inedo-buildmaster"
    },
    {
      "command": "step([$class: 'CreateCustomTask'])",
      "title": "step([$class: 'CreateCustomTask']): Tekton : Create Task",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "params",
          "type": "Nested",
          "values": [
            "name",
            "description",
            "defaultValue"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaces",
          "type": "Nested",
          "values": [
            "name",
            "description",
            "mountPath"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "steps",
          "type": "Nested",
          "values": [
            "name",
            "image",
            "args",
            "command",
            "envs",
            "script",
            "tty",
            "workingDir"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "envs",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tekton-client"
    },
    {
      "command": "step([$class: 'CreateCustomTaskrun'])",
      "title": "step([$class: 'CreateCustomTaskrun']): Tekton : Create TaskRun",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "generateName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workspaces",
          "type": "Nested",
          "values": [
            "name",
            "claimName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "params",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "taskRef",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tekton-client"
    },
    {
      "command": "step([$class: 'CreateRaw'])",
      "title": "step([$class: 'CreateRaw']): Tekton : Create Resource (Raw)",
      "description": "",
      "parameters": [
        {
          "name": "input",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inputType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tekton-client"
    },
    {
      "command": "step([$class: 'CriticalBlockEnd'])",
      "title": "step([$class: 'CriticalBlockEnd']): Critical block end",
      "description": "Release all resources that Critical block start had allocated for this job.",
      "parameters": [],
      "plugin": "exclusion"
    },
    {
      "command": "step([$class: 'CriticalBlockStart'])",
      "title": "step([$class: 'CriticalBlockStart']): Critical block start",
      "description": "Delimite the beginning of the exclusion zone. All build steps that follow will be managed by exclusion plugin.",
      "parameters": [],
      "plugin": "exclusion"
    },
    {
      "command": "step([$class: 'CucumberTestReportPublisher'])",
      "title": "step([$class: 'CucumberTestReportPublisher']): Publish Cucumber reports generated with handlebars",
      "description": "",
      "parameters": [
        {
          "name": "reportsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileIncludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileExcludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markAsUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "copyHTMLInWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreUndefinedSteps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "bootstraped-multi-test-results-report"
    },
    {
      "command": "step([$class: 'CxScanBuilder'])",
      "title": "step([$class: 'CxScanBuilder']): Execute Checkmarx Scan",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "This option is for users that may already have Jenkins credentials, as defined in Jenkins, and would like to use them with the CxSAST Jenkins plugin. Select your credentials from the drop-down list.\n \n\nNOTE: If your credentials do not exist in the system, you can add them by clicking Add and selecting Jenkins (see Adding Jenkins Credentials to the CxSAST Jenkins Plugin, for more information).",
          "isOptional": false
        },
        {
          "name": "buildStep",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "teamPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sastEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "exclusionsSetting",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnNewResults",
          "type": "boolean",
          "values": [],
          "description": "Enables the option to fail the build according to the defined severity (or higher). This option works in addition to the regular thresholds (e.g. if \"x\" total high vulnerabilities were found OR at least 1 new vulnerability, fail the build). This option is only available if the \"Enable vulnerability threshold\" parameter is enabled.",
          "isOptional": false
        },
        {
          "name": "failBuildOnNewSeverity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useOwnServerCredentials",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "Checkmarx server url or ip address with or without port. Syntax: http(s)://server-name:port. Example: http://checkmarx-server, https://10.0.0.255:9495",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "Login username",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "Login password",
          "isOptional": true
        },
        {
          "name": "isProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configAsCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "A full absolute name of a project. The full Project name includes the whole path to the project, including Server, service provider, company, and team. Example: \"CxServer\\SP\\Company\\Users\\bs_java\" If project with such a name doesn't exist in the system, new project will be created. May reference build parameters like ${PARAM}.",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "Fully qualified team name for the project.",
          "isOptional": true
        },
        {
          "name": "preset",
          "type": "String",
          "values": [],
          "description": "Select the scan preset for this project",
          "isOptional": true
        },
        {
          "name": "jobStatusOnError",
          "type": "Enum",
          "values": [
            "GLOBAL",
            "FAILURE",
            "UNSTABLE"
          ],
          "description": "Determines how to act when a triggered Checkmarx scan in synchronous mode fails and returns an error message (i.e. no scan results, not to be confused with valid scan results that exceed the threshold).\n \n  \n* FAILURE is equivalent to a Job error that fails the entire build.\n\n  \n* UNSTABLE is equivalent to a Job warning that allows the build to proceed normally but provides an unstable status upon completion.\n\n  \n* Use the global setting implies that this project uses the value either FAILURE or UNSTABLE defined globally by the CxSAST Jenkins plugin.",
          "isOptional": true
        },
        {
          "name": "presetSpecified",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeFolders",
          "type": "String",
          "values": [],
          "description": "Comma separated list of folders to exclude from scan. Entries in this list are automatically converted to exclude wildcard patterns and appended to the full pattern list provided in the advanced section. May reference build parameters like ${PARAM}.\n \n Conversion is done as follows: \n\n `fold1, fold2 fold3`\n\n is converted to: \n\n `!**/fold1/**/*, !**/fold2/**/*, !**/fold3/**/*, `",
          "isOptional": true
        },
        {
          "name": "filterPattern",
          "type": "String",
          "values": [],
          "description": "Comma separated list of include or exclude wildcard patterns. Exclude patterns start with exclamation mark \"!\".\n \n Example: `**/*.java, `**/*.html, !**\\test\\**\\XYZ*` `\n` <h5> Pattern Syntax </h5>\n A given directory is recursively scanned for all files and directories. Each file/directory is matched against a set of selectors, including special support for matching against filenames with include and exclude patterns. Only files/directories which match at least one pattern of the include pattern list, and don't match any pattern of the exclude pattern list will be placed in the list of files/directories found. \n\n When no list of include patterns is supplied, \"**\" will be used, which means that everything will be matched. When no list of exclude patterns is supplied, an empty list is used, such that nothing will be excluded. When no selectors are supplied, none are applied. \n\n The filename pattern matching is done as follows: The name to be matched is split up in path segments. A path segment is the name of a directory or file, which is bounded by `File.separator` ('/' under UNIX, '\\' under Windows). For example, \"abc/def/ghi/xyz.java\" is split up in the segments \"abc\", \"def\",\"ghi\" and \"xyz.java\". The same is done for the pattern against which should be matched. \n\n The segments of the name and the pattern are then matched against each other. When '**' is used for a path segment in the pattern, it matches zero or more path segments of the name. \n\n There is a special case regarding the use of `File.separator`s at the beginning of the pattern and the string to match:\n\n When a pattern starts with a `File.separator`, the string to match must also start with a `File.separator`. When a pattern does not start with a `File.separator`, the string to match may not start with a `File.separator`. When one of these rules is not obeyed, the string will not match. \n\n When a name path segment is matched against a pattern path segment, the following special characters can be used:\n\n '*' matches zero or more characters\n\n '?' matches one character. \n \nMay reference build parameters like ${PARAM}.\n \n Examples: \n\n \"**\\*.class\" matches all .class files/dirs in a directory tree. \n\n \"test\\a??.java\" matches all files/dirs which start with an 'a', then two more characters and then \".java\", in a directory called test. \n\n \"**\" matches everything in a directory tree. \n\n \"**\\test\\**\\XYZ*\" matches all files/dirs which start with \"XYZ\" and where there is a parent directory called test (e.g. \"abc\\test\\def\\ghi\\XYZ123\"). \n`",
          "isOptional": true
        },
        {
          "name": "incremental",
          "type": "boolean",
          "values": [],
          "description": "Run incremental scan instead of full scan.",
          "isOptional": true
        },
        {
          "name": "fullScansScheduled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fullScanCycle",
          "type": "int",
          "values": [],
          "description": "Incremental scans are faster, but with time they become less accurate.\n \n\n Therefore, after a number of incremental scans it is recommended to perform a full scan.\n \n\n Here you can schedule periodic full scans to be executed after a certain number of incremental scans.\n \n\n\n \n\n Alternatively, if you want to run full scans on weekends, you can create 2 separate jobs.\n \n\n First job - to run incremental scans on weekdays and second job - to run full scans on weekends.",
          "isOptional": true
        },
        {
          "name": "sourceEncoding",
          "type": "String",
          "values": [],
          "description": "Source code character encoding.",
          "isOptional": true
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "Free text comment. May reference build parameters like ${PARAM}.",
          "isOptional": true
        },
        {
          "name": "skipSCMTriggers",
          "type": "boolean",
          "values": [],
          "description": "Do not perform Checkmarx scan when the build was triggered by SCM Change.",
          "isOptional": true
        },
        {
          "name": "waitForResultsEnabled",
          "type": "boolean",
          "values": [],
          "description": "In synchronous mode, Checkmarx build step will wait for Checkmarx scan to complete, then retrieve scan results and optionally check vulnerability thresholds. When disabled, the build step finishes after scan job submissions to Checkmarx server.",
          "isOptional": true
        },
        {
          "name": "vulnerabilityThresholdEnabled",
          "type": "boolean",
          "values": [],
          "description": "Mark the build as unstable if the number of high severity vulnerabilities is above the specified threshold.",
          "isOptional": true
        },
        {
          "name": "highThreshold",
          "type": "int",
          "values": [],
          "description": "High severity vulnerability threshold. If set, the threshold is crossed if number of high severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "mediumThreshold",
          "type": "int",
          "values": [],
          "description": "Medium severity vulnerability threshold. If set, the threshold is crossed if number of medium severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "lowThreshold",
          "type": "int",
          "values": [],
          "description": "Low severity vulnerability threshold. If set, the threshold is crossed if number of low severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "osaHighThreshold",
          "type": "int",
          "values": [],
          "description": "High severity vulnerabilities threshold for dependency scan. If set, the threshold is crossed if number of high severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "osaMediumThreshold",
          "type": "int",
          "values": [],
          "description": "Medium severity vulnerabilities threshold for dependency scan. If set, the threshold is crossed if number of medium severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "osaLowThreshold",
          "type": "int",
          "values": [],
          "description": "Low severity vulnerabilities threshold for dependency scan. If set, the threshold is crossed if number of low severity vulnerabilities exceeds it.",
          "isOptional": true
        },
        {
          "name": "generatePdfReport",
          "type": "boolean",
          "values": [],
          "description": "Downloads a PDF report with scan results from the Checkmarx server. The report is available via a link on \"Checkmarx Scan Results\" page.",
          "isOptional": true
        },
        {
          "name": "enableProjectPolicyEnforcement",
          "type": "boolean",
          "values": [],
          "description": "Mark the build as failed or unstable if the project's policy is violated.\n \n\n Note:\n \n\n Assigning a policy to a project is done from within CxSAST",
          "isOptional": true
        },
        {
          "name": "thresholdSettings",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnerabilityThresholdResult",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "avoidDuplicateProjectScans",
          "type": "boolean",
          "values": [],
          "description": "If there is a scan of this project in the queue in status working or queued do not send a new scan request to Checkmarx",
          "isOptional": true
        },
        {
          "name": "addGlobalCommenToBuildCommet",
          "type": "boolean",
          "values": [],
          "description": "Allow sast comment to be added to the build comment.By default the global comment is empty",
          "isOptional": true
        },
        {
          "name": "generateXmlReport",
          "type": "boolean",
          "values": [],
          "description": "Generate full XML and HTML CxSAST scan reports. These reports will contain additional information about the detected vulnerabilities",
          "isOptional": true
        },
        {
          "name": "dependencyScanConfig",
          "type": "Nested",
          "values": [
            "dependencyScanExcludeFolders",
            "dependencyScanPatterns",
            "dependencyScannerType",
            "fsaVariables",
            "osaArchiveIncludePatterns",
            "osaInstallBeforeScan",
            "overrideGlobalConfig",
            "scaAccessControlUrl",
            "scaCredentialsId",
            "scaServerUrl",
            "scaTenant",
            "scaWebAppUrl"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludeOpenSourceFolders",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includeOpenSourceFolders",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "osaArchiveIncludePatterns",
          "type": "String",
          "values": [],
          "description": "Comma separated list of archive wildcard patterns to include their extracted content for the scan. eg. *.zip, *.jar, *.ear\n\n\n Supported archive types are: jar, war, ear, sca, gem, whl, egg, tar, tar.gz, tgz, zip, rar\n\n\n Leave empty to extract all archives",
          "isOptional": true
        },
        {
          "name": "osaEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "osaInstallBeforeScan",
          "type": "boolean",
          "values": [],
          "description": "Select this option in order to be able to scan packages from various dependency managers (NPM, Nugget, Python and more.) as part of the CxOSA scan",
          "isOptional": true
        },
        {
          "name": "thisBuildIncremental",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "checkmarx"
    },
    {
      "command": "step([$class: 'DSLPublisher'])",
      "title": "step([$class: 'DSLPublisher']): vManager Post Build Actions",
      "description": "",
      "parameters": [
        {
          "name": "vAPIUrl",
          "type": "String",
          "values": [],
          "description": "vManager expose a REST API interface for API. The REST API is a dedicated process for serving remote http requests - vAPI.\n \n\n Starting 14.1 s005 The vAPI process is served automatically by the vManager Server process, and as such you need to supply the following url:\n \n\n **https://[VMANAGER_HOST:VMANAGER_PORT]/vmgr/vapi**\n \n\n For vmanager 14.1 s002, the vAPI process need to get started manually, as such, the url syntaxt is:\n \n\n **http://[VAPI_HOST:VAPI_PORT]/vmgr**",
          "isOptional": false
        },
        {
          "name": "vAPIUser",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, the userId will be shown as the user who perform the operation within vManager tool.\n \n\n In case of open mode, the default userid that will be used is \"vapi\".",
          "isOptional": false
        },
        {
          "name": "vAPIPassword",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, a password is needed\n \n\n Please contact vManager documentation for further info.",
          "isOptional": false
        },
        {
          "name": "authRequired",
          "type": "unknown",
          "values": [],
          "description": "vManager vAPI can operate in one of two modes:",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vmanager-plugin"
    },
    {
      "command": "step([$class: 'DeleteChartBuildStep'])",
      "title": "step([$class: 'DeleteChartBuildStep']): Kubernetes - Delete Chart",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "kubeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "chartsRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "chartName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-ci"
    },
    {
      "command": "step([$class: 'DeleteRaw'])",
      "title": "step([$class: 'DeleteRaw']): Tekton : Delete Resource (Raw)",
      "description": "",
      "parameters": [
        {
          "name": "deleteAllStatus",
          "type": "Nested",
          "values": [
            "resourceName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "tekton-client"
    },
    {
      "command": "step([$class: 'DeleteSnapshot'])",
      "title": "step([$class: 'DeleteSnapshot']): Delete a Snapshot",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM.",
          "isOptional": false
        },
        {
          "name": "snapshotName",
          "type": "String",
          "values": [],
          "description": "The name of the snapshot.",
          "isOptional": false
        },
        {
          "name": "consolidate",
          "type": "boolean",
          "values": [],
          "description": "Consolidate all redundant redo logs for this VM?",
          "isOptional": false
        },
        {
          "name": "failOnNoExist",
          "type": "boolean",
          "values": [],
          "description": "If the snapshot you are trying to delete doesnt exist, fail this build step. Sometimes, the job doesnt care if deletion was successful and only wants it gone---if this is the case, leave unchecked.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'Deploy'])",
      "title": "step([$class: 'Deploy']): Deploy VM from template",
      "description": "",
      "parameters": [
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "The name of the vSphere template to clone.",
          "isOptional": false
        },
        {
          "name": "clone",
          "type": "String",
          "values": [],
          "description": "The name of the cloned VM.",
          "isOptional": false
        },
        {
          "name": "linkedClone",
          "type": "boolean",
          "values": [],
          "description": "Linked clones will re-use any read-only disk backings (like snapshots) and create new children for your clone. This will drastically save time, but the disk backings will be shared.",
          "isOptional": false
        },
        {
          "name": "resourcePool",
          "type": "String",
          "values": [],
          "description": "The Resource Pool to be used by the VM. If no resource pool is being used, then leave blank.",
          "isOptional": false
        },
        {
          "name": "cluster",
          "type": "String",
          "values": [],
          "description": "The vCenter cluster to be used by the VM.",
          "isOptional": false
        },
        {
          "name": "datastore",
          "type": "String",
          "values": [],
          "description": "The data store to be used by the VM.",
          "isOptional": false
        },
        {
          "name": "folder",
          "type": "String",
          "values": [],
          "description": "(Optional) VSphere folder path or unique folder name where VM is going to be created.\n \n\n If blank, it will be created in the same folder as the original VM.",
          "isOptional": false
        },
        {
          "name": "customizationSpec",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeoutInSeconds",
          "type": "int",
          "values": [],
          "description": "The length of time, in seconds, to wait for the new VirtualMachine to be assigned an IP address after it has been powered on. If this value is zero, no attempt will be made to determine the IP address.",
          "isOptional": false
        },
        {
          "name": "powerOn",
          "type": "boolean",
          "values": [],
          "description": "Specifies whether or not the new VirtualMachine should be powered on after creation.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'DeployBuilder'])",
      "title": "step([$class: 'DeployBuilder']): Aliyun Container Service Deploy",
      "description": "",
      "parameters": [
        {
          "name": "masterurl",
          "type": "String",
          "values": [],
          "description": "MasterUrl is the Entrypoint of your Cluster from Aliyun Contanier Service. Eg, https://master1g1.cs-cn-beijing.aliyun.com:12345",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "Please type in the application name you want to deploy or redeploy to Aliyun Container Service.",
          "isOptional": true
        },
        {
          "name": "composeTemplate",
          "type": "String",
          "values": [],
          "description": "Default dir is the workspace of this project. For exmaple, if you just fill in \"Compose.yml\", Jenkins will use ../jobs/${project}/workspace/Compose.yml to deploy your application. So you can upload the compose file to directory ../jobs/${project}/workspace.\n \n\n Or locate the compose file with yout code package. For example, you can fill in \"code/Compose.yml\", \"code\" is your code package name.\n \n\n Note: DO NOT use '/' at the beginning, just begin with the file name or direcotory name.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Only Kind \"Docker Host Certificate Aunthentication\" can be used. Download these credentials of your Cluster, add it. Notice it should be the same cluster's information with MasterURL.",
          "isOptional": true
        },
        {
          "name": "publishStrategy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "aliyun-container-service-deploy"
    },
    {
      "command": "step([$class: 'DeployChartBuildStep'])",
      "title": "step([$class: 'DeployChartBuildStep']): Kubernetes - Deploy Chart",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "kubeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "chartsRepo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "chartName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deleteChartWhenFinished",
          "type": "boolean",
          "values": [],
          "description": "If checked, the deployed Chart will be deleted once the job has finished.",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-ci"
    },
    {
      "command": "step([$class: 'DescribeWithParamsBuilder'])",
      "title": "step([$class: 'DescribeWithParamsBuilder']): Describe with params",
      "description": "",
      "parameters": [
        {
          "name": "starter",
          "type": "boolean",
          "values": [],
          "description": "Do you want to show the name of the starter?",
          "isOptional": false
        },
        {
          "name": "separator",
          "type": "String",
          "values": [],
          "description": "Line end separator for your \"Markup Formatter\" setting.\n\n\n\n\n\n For example, \"\" for \"Plain text\", and \"&lt;br&gt;\" for \"Safe HTML\".",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "The parameters that you want to hide, separated by \";\".",
          "isOptional": false
        }
      ],
      "plugin": "describe-with-params"
    },
    {
      "command": "step([$class: 'DiawiUploader'])",
      "title": "step([$class: 'DiawiUploader']): Diawi Upload Step",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyHost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyProtocol",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "diawi-upload"
    },
    {
      "command": "step([$class: 'DockerBuilderControl'])",
      "title": "step([$class: 'DockerBuilderControl']): Start/Stop Docker Containers",
      "description": "",
      "parameters": [
        {
          "name": "option",
          "type": "Nested",
          "values": [
            "$class: 'DockerBuilderControlOptionProvisionAndStart'",
            "$class: 'DockerBuilderControlOptionRun'",
            "$class: 'DockerBuilderControlOptionStart'",
            "$class: 'DockerBuilderControlOptionStop'",
            "$class: 'DockerBuilderControlOptionStopAll'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "docker-plugin"
    },
    {
      "command": "step([$class: 'DockerBuilderPublisher'])",
      "title": "step([$class: 'DockerBuilderPublisher']): Build / Publish Docker Image",
      "description": "Build step that sends a Dockerfile for building to docker host that used for this build run.",
      "parameters": [
        {
          "name": "dockerFileDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fromRegistry",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cloud",
          "type": "String",
          "values": [],
          "description": "Cloud to do the build on - or, if empty, use the cloud that the build was performed on.",
          "isOptional": false
        },
        {
          "name": "tagsString",
          "type": "String",
          "values": [],
          "description": "Repository name (and optionally a tag) to be applied to the resulting image in case of success.\n \n\n Multiple entries are permitted if separated by newlines.\n \n\n Environment variable substitution is performed on the strings so you can use e.g. ${BUILD_NUMBER} as part of each entry.\n \n\n Each entry must be of the form IMAGE[:TAG] as per the [docker tag](https://docs.docker.com/engine/reference/commandline/tag/) command.",
          "isOptional": false
        },
        {
          "name": "pushOnSuccess",
          "type": "boolean",
          "values": [],
          "description": "If enabled (and the docker image builds successfully), the resulting docker image will be pushed to the registry (or registries) specified within the \"Image\" field.",
          "isOptional": false
        },
        {
          "name": "pushCredentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to push to a private registry.",
          "isOptional": false
        },
        {
          "name": "cleanImages",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cleanupWithJenkinsJobDelete",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "noCache",
          "type": "boolean",
          "values": [],
          "description": "If set, builds the image with `--no-cache` which disables caching of layers. See the docker [build command](https://docs.docker.com/engine/reference/commandline/build/) for more information.",
          "isOptional": true
        },
        {
          "name": "pull",
          "type": "boolean",
          "values": [],
          "description": "If set, builds the image with `--pull` to pull the latest version of the base image, instead of using the local one. See the docker [build command](https://docs.docker.com/engine/reference/commandline/build/) for more information.",
          "isOptional": true
        }
      ],
      "plugin": "docker-plugin"
    },
    {
      "command": "step([$class: 'DockerComposeBuilder'])",
      "title": "step([$class: 'DockerComposeBuilder']): Docker Compose Build Step",
      "description": "",
      "parameters": [
        {
          "name": "useCustomDockerComposeFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dockerComposeFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "option",
          "type": "Nested",
          "values": [
            "$class: 'ExecuteCommandInsideContainer'",
            "$class: 'StartAllServices'",
            "$class: 'StartService'",
            "$class: 'StopAllServices'",
            "$class: 'StopService'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "docker-compose-build-step"
    },
    {
      "command": "step([$class: 'DropAllBuilder'])",
      "title": "step([$class: 'DropAllBuilder']): Liquibase: Drop everything in database",
      "description": "",
      "parameters": [
        {
          "name": "changeLogFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeLogParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contexts",
          "type": "String",
          "values": [],
          "description": "Liquibase contexts to execute under.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Liquibase labels to execute",
          "isOptional": true
        },
        {
          "name": "liquibasePropertiesPath",
          "type": "String",
          "values": [],
          "description": "A liquibase.properties file can be used for default values. Any of the below settings will override what is in this file. This file should be relative to a directory listed in the \"Resource directories\" section.",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceDirectories",
          "type": "String",
          "values": [],
          "description": "Leave blank for workspace root. May be relative to workspace or an absolute path.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "example: jdbc:mysql://localhost:3306/sampledb. The JDBC driver must be available in the \"lib\" directory of your Liquibase installation",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "liquibase-runner"
    },
    {
      "command": "step([$class: 'DropboxPublisherPlugin'])",
      "title": "step([$class: 'DropboxPublisherPlugin']): Send build artifacts over Dropbox",
      "description": "Send build artifacts to a Dropbox account",
      "parameters": [
        {
          "name": "publishers",
          "type": "Nested",
          "values": [
            "configName",
            "verbose",
            "transfers",
            "useWorkspaceInPromotion",
            "usePromotionTimestamp",
            "dropboxRetry",
            "dropboxLabel"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to continue publishing to the other Dropbox accounts after a problem with a previous account",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "Select to mark the build as a failure if there is a problem publishing to an account. The default is to mark the build as unstable",
          "isOptional": false
        },
        {
          "name": "alwaysPublishFromMaster",
          "type": "boolean",
          "values": [],
          "description": "Select to publish from the Jenkins master.\n\n \nThe default is to publish from the server that holds the files to transfer (workspace on the slave, or artifacts directory on the master)\n\n Enabling this option could help dealing with strict network configurations and firewall rules.\n\n This option will cause the files to be transferred through the master before being sent to the remote server, this may increase network traffic, and could increase the build time.",
          "isOptional": false
        },
        {
          "name": "masterNodeName",
          "type": "String",
          "values": [],
          "description": "Set the NODE_NAME for the master Jenkins.\n\n \nSet this option to give a value to the NODE_NAME environment variable when the value is missing (the Jenkins master).\n\n This is useful if you use the $NODE_NAME variable in the remoteDirectory option and the build may occur on the master.",
          "isOptional": false
        }
      ],
      "plugin": "publish-over-dropbox"
    },
    {
      "command": "step([$class: 'ECXCDMBuilder'])",
      "title": "step([$class: 'ECXCDMBuilder']): Catalogic ECX CDM Integration",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Enter the ECX user name.",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "Enter the ECX password.",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "Enter the ECX URL and then press the Test Connection button to ensure this job can contact the ECX server.",
          "isOptional": false
        },
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Enter a job id that can be found in the list above and in square brackets.",
          "isOptional": false
        },
        {
          "name": "production",
          "type": "boolean",
          "values": [],
          "description": "Select this checkbox if using ECX in production with a valid certificate.",
          "isOptional": false
        },
        {
          "name": "maxWaitTime",
          "type": "int",
          "values": [],
          "description": "Enter the amount of time in seconds to wait for an ECX job to complete.",
          "isOptional": false
        }
      ],
      "plugin": "catalogic-ecx"
    },
    {
      "command": "step([$class: 'ElasticsearchQueryBuilder'])",
      "title": "step([$class: 'ElasticsearchQueryBuilder']): Elasticsearch Query",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "type": "String",
          "values": [],
          "description": "Elastic Search query to run",
          "isOptional": false
        },
        {
          "name": "aboveOrBelow",
          "type": "String",
          "values": [],
          "description": "Whether the threshold value is too high or too low. If set to gte counts greater than or equal to threshold will fail the build. If set to lte counts less than or equal to threshold with fail the build.",
          "isOptional": false
        },
        {
          "name": "threshold",
          "type": "long",
          "values": [],
          "description": "The count of query results in a given time to trigger build failure",
          "isOptional": false
        },
        {
          "name": "since",
          "type": "long",
          "values": [],
          "description": "How long ago to look back for results relative to the time the build executes must be greater than 0.",
          "isOptional": false
        },
        {
          "name": "units",
          "type": "String",
          "values": [],
          "description": "Time units for the since value",
          "isOptional": false
        }
      ],
      "plugin": "elasticsearch-query"
    },
    {
      "command": "step([$class: 'ElectricFlowGenericRestApi'])",
      "title": "step([$class: 'ElectricFlowGenericRestApi']): CloudBees CD - Call REST API",
      "description": "Call CloudBees CD REST API",
      "parameters": [
        {
          "name": "parameters",
          "type": "Nested",
          "values": [
            "key",
            "value"
          ],
          "description": "Specify the parameters for the REST API. Parameters are transformed into JSON object and used within body of HTTP request.",
          "isOptional": true
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "Specify the body for the REST API. This parameter is not used if 'Parameters' are provided.",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "Specify the name of the CloudBees CD configuration.",
          "isOptional": true
        },
        {
          "name": "envVarNameForResult",
          "type": "String",
          "values": [],
          "description": "If provided, result of calling CloudBees REST API (json output) will be stored within provided environment variable available within build.",
          "isOptional": true
        },
        {
          "name": "httpMethod",
          "type": "String",
          "values": [],
          "description": "Specify the HTTP Method",
          "isOptional": true
        },
        {
          "name": "overrideCredential",
          "type": "Nested",
          "values": [
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "urlPath",
          "type": "String",
          "values": [],
          "description": "Specify the URL Path for the REST API",
          "isOptional": true
        }
      ],
      "plugin": "electricflow"
    },
    {
      "command": "step([$class: 'EmailPostBuildAction'])",
      "title": "step([$class: 'EmailPostBuildAction']): Performance Benchmarking Report",
      "description": "Specify the list of recipients who will obtain email with performance benchmarking results after each pipeline execution. The performance benchmarking reports contain comprehensive data about the current performance of the Test Job, and provide analytical comparison with the previous and average performance metrics of this job. If the plugin detects any significant deviations from the statistically normal performance of the job, the recipients get an alert notification.",
      "parameters": [
        {
          "name": "recipients",
          "type": "String",
          "values": [],
          "description": "Provide a comma-separated list of email addresses of intended recipients of the performance benchmarking reports, for example, <i>user1@example.com,user2@example.com</i>.",
          "isOptional": false
        }
      ],
      "plugin": "ca-mat-performance-benchmarking-by-broadcom"
    },
    {
      "command": "step([$class: 'EvaluateGate'])",
      "title": "step([$class: 'EvaluateGate']): IBM Cloud DevOps Gate",
      "description": "",
      "parameters": [
        {
          "name": "policyName",
          "type": "String",
          "values": [],
          "description": "Select the policy that you want this gate to enforce. You can create more policies in DevOps Insights.",
          "isOptional": false
        },
        {
          "name": "toolchainName",
          "type": "String",
          "values": [],
          "description": "Select a toolchain. If you have not created a toolchain yet, create one [here](https://cloud.ibm.com/devops/create).",
          "isOptional": false
        },
        {
          "name": "buildJobName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the build job that triggers this test job. You can use an environment variable, such as $BUILD_JOB.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select an API Key from the menu. If no API Key are in the menu, click Add to add one. Click Test Connection to verify the selected credentials. The use of Username/Password will be deprecated soon",
          "isOptional": false
        },
        {
          "name": "willDisrupt",
          "type": "boolean",
          "values": [],
          "description": "Select this check box to cancel associated Jenkins builds when this gate fails.",
          "isOptional": false
        },
        {
          "name": "scope",
          "type": "Nested",
          "values": [
            "value",
            "branchName",
            "envName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "additionalBuildInfo",
          "type": "Nested",
          "values": [
            "buildNumber",
            "buildUrl"
          ],
          "description": "Select this check box if the deployed app is not built in Jenkins.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Type a name for the application that information is being uploaded for. Use this application name when you configure **DevOps Insights gates**. You can use an environment variable, such as $APP_NAME.",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "step([$class: 'ExposeGuestInfo'])",
      "title": "step([$class: 'ExposeGuestInfo']): Expose Guest Info",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM to expose guest info for.\n \n\n Variables IpAddress, Hostname, ToolsStatus, ToolsRunningStatus, ToolsVersion, ToolsVersionStatus, GuestState, GuestId, GuestFamily, GuestFullName, AppHeartbeatStatus, GuestOperationsReady, InteractiveGuestOperationsReady are exposed.",
          "isOptional": false
        },
        {
          "name": "envVariablePrefix",
          "type": "String",
          "values": [],
          "description": "Prefix for guest info environmental variables. E.g. for prefix VM1, variables would be VM1_IpAddress, VM1_HostName etc.",
          "isOptional": false
        },
        {
          "name": "waitForIp4",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'ExtensiveTestingBuilder'])",
      "title": "step([$class: 'ExtensiveTestingBuilder']): Launch eXtensive Testing job",
      "description": "",
      "parameters": [
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "login",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "extensivetesting"
    },
    {
      "command": "step([$class: 'FireLineBuilder'])",
      "title": "step([$class: 'FireLineBuilder']): Execute FireLine",
      "description": "",
      "parameters": [
        {
          "name": "fireLineTarget",
          "type": "Nested",
          "values": [
            "csp",
            "blockBuild",
            "configuration",
            "reportPath",
            "reportFileName",
            "buildWithParameter",
            "jdk",
            "jvm"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fireline"
    },
    {
      "command": "step([$class: 'FitnesseBuilder'])",
      "title": "step([$class: 'FitnesseBuilder']): Execute FitNesse tests",
      "description": "",
      "parameters": [
        {
          "name": "options",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fitnesse"
    },
    {
      "command": "step([$class: 'FitnesseResultsRecorder'])",
      "title": "step([$class: 'FitnesseResultsRecorder']): Publish Fitnesse results report",
      "description": "",
      "parameters": [
        {
          "name": "fitnessePathToXmlResultsIn",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fitnesse"
    },
    {
      "command": "step([$class: 'Fluentd'])",
      "title": "step([$class: 'Fluentd']): Send to Fluentd",
      "description": "",
      "parameters": [
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "json",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pushFromAgent",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fluentd"
    },
    {
      "command": "step([$class: 'FtpRenameBuilder'])",
      "title": "step([$class: 'FtpRenameBuilder']): FTP Rename",
      "description": "",
      "parameters": [
        {
          "name": "ftpServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPort",
          "type": "int",
          "values": [],
          "description": "if you don't specify the port, the default port is 21.",
          "isOptional": false
        },
        {
          "name": "ftpUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPassword",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPath",
          "type": "String",
          "values": [],
          "description": "Specify the path to your artifact.",
          "isOptional": false
        },
        {
          "name": "artifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newArtifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteDirectory",
          "type": "String",
          "values": [],
          "description": "Optional destination folder.\n\n This folder will be below the one in the global configuration, if present.\n\n The folder won't be created if does not exist.",
          "isOptional": true
        }
      ],
      "plugin": "ftp-rename"
    },
    {
      "command": "step([$class: 'FtpRenamePublisher'])",
      "title": "step([$class: 'FtpRenamePublisher']): FTP Rename",
      "description": "",
      "parameters": [
        {
          "name": "ftpServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPort",
          "type": "int",
          "values": [],
          "description": "if you don't specify the port, the default port is 21.",
          "isOptional": false
        },
        {
          "name": "ftpUser",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPassword",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ftpPath",
          "type": "String",
          "values": [],
          "description": "Specify the path to your artifact.",
          "isOptional": false
        },
        {
          "name": "artifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "newArtifactName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteDirectory",
          "type": "String",
          "values": [],
          "description": "Optional destination folder.\n\n This folder will be below the one in the global configuration, if present.\n\n The folder won't be created if does not exist.",
          "isOptional": true
        }
      ],
      "plugin": "ftp-rename"
    },
    {
      "command": "step([$class: 'FuzzBuildStep'])",
      "title": "step([$class: 'FuzzBuildStep']): (no description)",
      "description": "",
      "parameters": [
        {
          "name": "configurationFilePath",
          "type": "String",
          "values": [],
          "description": "The file path where the test configuration file (*.set or *.testplan) for this job can be found, relative to the project's workspace. \n\n \nA test configuration file defines what kind of testing is to be done, and can be created using Defensics. Configure a test suite in Defensics and save the settings file in File -&gt; Save Settings.",
          "isOptional": false
        },
        {
          "name": "configurationOverrides",
          "type": "String",
          "values": [],
          "description": "Additional test configuration settings that override the settings saved in the test configuration file. This can be useful if, for example, the test target address needs to be set dynamically.\n\n \nThe available settings are the same as the Defensics command line settings. Each setting should follow the format '--setting-name value'. Multiple settings are separated with spaces.\n\n \nExample for HTTP Server Test Suite: \n\n \n```groovy\n--uri https://example.com --http-status-filter \"1xx 2xx 3xx\" \n```",
          "isOptional": true
        },
        {
          "name": "defensicsInstance",
          "type": "String",
          "values": [],
          "description": "Select Defensics instance to use for running tests. Instances can be added in Jenkins' global configuration under the Defensics section.",
          "isOptional": true
        },
        {
          "name": "saveResultPackage",
          "type": "boolean",
          "values": [],
          "description": "Check this if you want Jenkins to download the Defensics result package and store it for the build. The result package includes all logs for the test run. The package can be downloaded from the build status page. Use with caution as the package filesize can be large.",
          "isOptional": true
        }
      ],
      "plugin": "defensics"
    },
    {
      "command": "step([$class: 'FuzzPostBuildStep'])",
      "title": "step([$class: 'FuzzPostBuildStep']): (no description)",
      "description": "",
      "parameters": [
        {
          "name": "configurationFilePath",
          "type": "String",
          "values": [],
          "description": "The file path where the test configuration file (*.set or *.testplan) for this job can be found, relative to the project's workspace. \n\n \nA test configuration file defines what kind of testing is to be done, and can be created using Defensics. Configure a test suite in Defensics and save the settings file in File -&gt; Save Settings.",
          "isOptional": false
        },
        {
          "name": "configurationOverrides",
          "type": "String",
          "values": [],
          "description": "Additional test configuration settings that override the settings saved in the test configuration file. This can be useful if, for example, the test target address needs to be set dynamically.\n\n \nThe available settings are the same as the Defensics command line settings. Each setting should follow the format '--setting-name value'. Multiple settings are separated with spaces.\n\n \nExample for HTTP Server Test Suite: \n\n \n```groovy\n--uri https://example.com --http-status-filter \"1xx 2xx 3xx\" \n```",
          "isOptional": true
        },
        {
          "name": "defensicsInstance",
          "type": "String",
          "values": [],
          "description": "Select Defensics instance to use for running tests. Instances can be added in Jenkins' global configuration under the Defensics section.",
          "isOptional": true
        },
        {
          "name": "saveResultPackage",
          "type": "boolean",
          "values": [],
          "description": "Check this if you want Jenkins to download the Defensics result package and store it for the build. The result package includes all logs for the test run. The package can be downloaded from the build status page. Use with caution as the package filesize can be large.",
          "isOptional": true
        }
      ],
      "plugin": "defensics"
    },
    {
      "command": "step([$class: 'GatlingChecker'])",
      "title": "step([$class: 'GatlingChecker']): Gatling Checker",
      "description": "",
      "parameters": [
        {
          "name": "metrics",
          "type": "Nested",
          "values": [
            "$class: 'GlobalOKRateMetric'",
            "$class: 'GlobalQpsMetric'",
            "$class: 'GlobalResponseTime95Metric'",
            "$class: 'GlobalResponseTime99Metric'",
            "$class: 'GlobalResponseTimeAvgMetric'",
            "$class: 'RequestOKRateMetric'",
            "$class: 'RequestQpsMetric'",
            "$class: 'RequestResponseTime95Metric'",
            "$class: 'RequestResponseTime99Metric'",
            "$class: 'RequestResponseTimeAvgMetric'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "gatling-check"
    },
    {
      "command": "step([$class: 'GatlingPublisher'])",
      "title": "step([$class: 'GatlingPublisher']): Track a Gatling load simulation",
      "description": "",
      "parameters": [
        {
          "name": "enabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "gatling"
    },
    {
      "command": "step([$class: 'GetTestResults'])",
      "title": "step([$class: 'GetTestResults']): Bumblebee: Import HP ALM Test Results",
      "description": "",
      "parameters": [
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "HP ALM Domain",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "HP ALM Project name",
          "isOptional": false
        },
        {
          "name": "resultsDir",
          "type": "String",
          "values": [],
          "description": "Path to the directory where to put JUnit-like reports containing results of tests in HP ALM.\n \n\n This path can be used for publishing JUnit reports in subsequent post-build action.",
          "isOptional": false
        },
        {
          "name": "configurations",
          "type": "Nested",
          "values": [
            "testSetPath"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "user",
          "type": "String",
          "values": [],
          "description": "HP ALM Login Name. If set, this value overrides value from Bumblebee Global Configuration.\n \n\nIf empty, value from Bumblebee Global Configuration will be used",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "HP ALM user's password. If set, this value overrides the value from Bumblebee Global Configuration.\n \n\nIf empty, value from Bumblebee Global Configuration will be used",
          "isOptional": true
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'GhprbPullRequestMerge'])",
      "title": "step([$class: 'GhprbPullRequestMerge']): Github Pull Request Merger",
      "description": "",
      "parameters": [
        {
          "name": "mergeComment",
          "type": "String",
          "values": [],
          "description": "Comment that should show up when the merge command is sent to GitHub.",
          "isOptional": false
        },
        {
          "name": "onlyAdminsMerge",
          "type": "boolean",
          "values": [],
          "description": "Only allow admin users to trigger a pull request merge.",
          "isOptional": false
        },
        {
          "name": "disallowOwnCode",
          "type": "boolean",
          "values": [],
          "description": "Disallow a user to merge their own code.",
          "isOptional": false
        },
        {
          "name": "failOnNonMerge",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deleteOnMerge",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowMergeWithoutTriggerPhrase",
          "type": "boolean",
          "values": [],
          "description": "Allow merging even if the trigger phrase is not present. This can be used with the permitAll (\"Build every pull request automatically without asking (Dangerous!).\")",
          "isOptional": false
        }
      ],
      "plugin": "ghprb"
    },
    {
      "command": "step([$class: 'GitBisectOnFailure'])",
      "title": "step([$class: 'GitBisectOnFailure']): Git Bisect On Failure",
      "description": "",
      "parameters": [
        {
          "name": "gitCommand",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "revisionParameterName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideGitCommand",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "git-bisect"
    },
    {
      "command": "step([$class: 'GitChangelogRecorder'])",
      "title": "step([$class: 'GitChangelogRecorder']): Git Changelog",
      "description": "See [Git Changelog Plugin](https://github.com/jenkinsci/git-changelog-plugin) for details on how to configure and use this plugin.",
      "parameters": [
        {
          "name": "config",
          "type": "Nested",
          "values": [
            "configFile",
            "createFileTemplateContent",
            "createFileTemplateFile",
            "createFileUseTemplateContent",
            "createFileUseTemplateFile",
            "customIssues",
            "dateFormat",
            "file",
            "fromReference",
            "fromType",
            "gitHubApi",
            "gitHubApiTokenCredentialsId",
            "gitHubIssuePattern",
            "gitHubToken",
            "gitLabApiTokenCredentialsId",
            "gitLabProjectName",
            "gitLabServer",
            "gitLabToken",
            "ignoreCommitsIfMessageMatches",
            "ignoreCommitsWithoutIssue",
            "ignoreTagsIfNameMatches",
            "jiraBasicAuthString",
            "jiraBasicAuthStringCredentialsId",
            "jiraIssuePattern",
            "jiraPassword",
            "jiraServer",
            "jiraUsername",
            "jiraUsernamePasswordCredentialsId",
            "noIssueName",
            "readableTagName",
            "showSummary",
            "showSummaryTemplateContent",
            "showSummaryTemplateFile",
            "showSummaryUseTemplateContent",
            "showSummaryUseTemplateFile",
            "subDirectory",
            "timeZone",
            "toReference",
            "toType",
            "untaggedName",
            "useConfigFile",
            "useFile",
            "useGitHub",
            "useGitLab",
            "useIgnoreTagsIfNameMatches",
            "useJira",
            "useReadableTagName",
            "useSubDirectory"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "git-changelog"
    },
    {
      "command": "step([$class: 'GitHubCommitNotifier'])",
      "title": "step([$class: 'GitHubCommitNotifier']): Set build status on GitHub commit [deprecated]",
      "description": "This notifier will set GH commit status. **This step is DEPRECATED and will be migrated to new step in one of the next major plugin releases.**\n \n\n Please refer to new universal step.",
      "parameters": [
        {
          "name": "resultOnFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusMessage",
          "type": "Nested",
          "values": [
            "content"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "github"
    },
    {
      "command": "step([$class: 'GitHubCommitStatusSetter'])",
      "title": "step([$class: 'GitHubCommitStatusSetter']): Set GitHub commit status (universal)",
      "description": "Using GitHub status api sets status of the commit.",
      "parameters": [
        {
          "name": "commitShaSource",
          "type": "Nested",
          "values": [
            "$class: 'BuildDataRevisionShaSource'",
            "$class: 'ManuallyEnteredShaSource'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contextSource",
          "type": "Nested",
          "values": [
            "$class: 'DefaultCommitContextSource'",
            "$class: 'ManuallyEnteredCommitContextSource'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "errorHandlers",
          "type": "Nested",
          "values": [
            "$class: 'ChangingBuildStatusErrorHandler'",
            "$class: 'ShallowAnyErrorHandler'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reposSource",
          "type": "Nested",
          "values": [
            "$class: 'AnyDefinedRepositorySource'",
            "$class: 'ManuallyEnteredRepositorySource'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "statusBackrefSource",
          "type": "Nested",
          "values": [
            "$class: 'BuildRefBackrefSource'",
            "$class: 'ManuallyEnteredBackrefSource'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "statusResultSource",
          "type": "Nested",
          "values": [
            "$class: 'ConditionalStatusResultSource'",
            "$class: 'DefaultStatusResultSource'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "github"
    },
    {
      "command": "step([$class: 'GitHubIssueNotifier'])",
      "title": "step([$class: 'GitHubIssueNotifier']): Create GitHub issue on failure",
      "description": "",
      "parameters": [
        {
          "name": "issueAppend",
          "type": "boolean",
          "values": [],
          "description": "If checked, and a job is continuously failing, every additional failure adds a new comment.",
          "isOptional": true
        },
        {
          "name": "issueBody",
          "type": "String",
          "values": [],
          "description": "Body text to use for the GitHub issues created when builds start to fail. Use the \"Content Token Reference\" help below to see all the available tokens.",
          "isOptional": true
        },
        {
          "name": "issueLabel",
          "type": "String",
          "values": [],
          "description": "If specified, this label will be applied to all tasks created through this plugin. Optional.",
          "isOptional": true
        },
        {
          "name": "issueReopen",
          "type": "boolean",
          "values": [],
          "description": "Check this to change the behavior when a job fails a second time and previously created issue exists, if checked, this issue get reopened instead of creating a new one.",
          "isOptional": true
        },
        {
          "name": "issueRepo",
          "type": "String",
          "values": [],
          "description": "Repo to use for the GitHub issues to create when builds start to fail. If kept blank the project attribute of the GitHub plugin will be used.",
          "isOptional": true
        },
        {
          "name": "issueTitle",
          "type": "String",
          "values": [],
          "description": "Title to use for the GitHub issues created when builds start to fail. Use the \"Content Token Reference\" help below to see all the available tokens.",
          "isOptional": true
        }
      ],
      "plugin": "github-issues"
    },
    {
      "command": "step([$class: 'GitHubSetCommitStatusBuilder'])",
      "title": "step([$class: 'GitHubSetCommitStatusBuilder']): Set build status to \"pending\" on GitHub commit",
      "description": "",
      "parameters": [
        {
          "name": "contextSource",
          "type": "Nested",
          "values": [
            "$class: 'DefaultCommitContextSource'",
            "$class: 'ManuallyEnteredCommitContextSource'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "statusMessage",
          "type": "Nested",
          "values": [
            "content"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "github"
    },
    {
      "command": "step([$class: 'HyperBuilder'])",
      "title": "step([$class: 'HyperBuilder']): Execute shell in Hyper.sh",
      "description": "",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commands",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hyper-build-step"
    },
    {
      "command": "step([$class: 'InfluxDbPublisher'])",
      "title": "step([$class: 'InfluxDbPublisher']): Publish build data to InfluxDB",
      "description": "",
      "parameters": [
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customData",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataMap",
          "type": "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataMapTags",
          "type": "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customDataTags",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customPrefix",
          "type": "String",
          "values": [],
          "description": "A custom prefix that gets prepended to the job name, for example to prevent several 'master' metrics for different jobs in multi branch pipeline jobs.",
          "isOptional": true
        },
        {
          "name": "customProjectName",
          "type": "String",
          "values": [],
          "description": "Sets a custom value for the InfluxDB 'project_name' tag key, that overrides the default, which is the job name.\n\nUseful to easily group metrics for different jobs in multi branch pipeline jobs.",
          "isOptional": true
        },
        {
          "name": "jenkinsEnvParameterField",
          "type": "String",
          "values": [],
          "description": "Custom field set that will be added to the default measurement 'jenkins_data', configured as key-value pairs (one per line, in Java Properties file format).\n\nCurrent build parameters and/or environment variables can be used in the form of ${PARAM}\n\n\n \n* KEY=${PARAM}\n\n \n* KEY=PREFIX_${PARAM}_SUFFIX\n\n \n* KEY=VALUE",
          "isOptional": true
        },
        {
          "name": "jenkinsEnvParameterTag",
          "type": "String",
          "values": [],
          "description": "Custom tag set that will be added to all measurements, configured as key-value pairs (one per line, in Java Properties file format).\n\nCurrent build parameters and/or environment variables can be used in the form of ${PARAM}\n\n\n \n* KEY=${PARAM}\n\n \n* KEY=PREFIX_${PARAM}_SUFFIX\n\n \n* KEY=VALUE",
          "isOptional": true
        },
        {
          "name": "measurementName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selectedTarget",
          "type": "String",
          "values": [],
          "description": "InfluxDB target to send data to. Targets have to be configured in the global Jenkins settings.",
          "isOptional": true
        }
      ],
      "plugin": "influxdb"
    },
    {
      "command": "step([$class: 'IronMQNotifier'])",
      "title": "step([$class: 'IronMQNotifier']): Send Message to IronMQ Service",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tokenId",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "queueName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "preferredServerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "send_success",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "send_failure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "send_unstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "expirySeconds",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ironmq-notifier"
    },
    {
      "command": "step([$class: 'IssueFieldUpdateStep'])",
      "title": "step([$class: 'IssueFieldUpdateStep']): Jira: Issue custom field updater",
      "description": "JiraIssueFieldUpdater can be used to update custom Jira issue field.",
      "parameters": [
        {
          "name": "issueSelector",
          "type": "Nested",
          "values": [
            "$class: 'DefaultIssueSelector'",
            "$class: 'ExplicitIssueSelector'",
            "$class: 'JqlIssueSelector'",
            "$class: 'P4JobIssueSelector'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fieldId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fieldValue",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "step([$class: 'JDCodeDeployPublisher'])",
      "title": "step([$class: 'JDCodeDeployPublisher']): Deploy to JDCloud CodeDeploy",
      "description": "",
      "parameters": [
        {
          "name": "ossBucket",
          "type": "String",
          "values": [],
          "description": "The bucket in Object Storage Service where new JDCloud CodeDeploy revisions will be uploaded.",
          "isOptional": false
        },
        {
          "name": "ossObject",
          "type": "String",
          "values": [],
          "description": "The Object in the Object Storage Service Bucket to prepend to the JDCloud CodeDeploy revision.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "The name of the JDCloud CodeDeploy application you wish to deploy to. This plugin assumes that you've already created the application and deployment group.",
          "isOptional": false
        },
        {
          "name": "deploymentGroupName",
          "type": "String",
          "values": [],
          "description": "The name of the JDCloud CodeDeploy deployment group attached to your application that you want to deploy to.",
          "isOptional": false
        },
        {
          "name": "regionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitForCompletion",
          "type": "boolean",
          "values": [],
          "description": "If checked, this build will wait for the JDCloud CodeDeploy deployment to finish (with either success or failure). Polling Timeout, below, sets the maximum amount of time to wait.\n\n\n\nIf unchecked, the deployment will be handed off to JDCloud CodeDeploy and the build will move on to the next step.\n\n \nThe build will be marked a failure if <em>either</em> the timeout is reached or the deployment fails. The build log will indicate which.",
          "isOptional": false
        },
        {
          "name": "pollingTimeoutSec",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollingFreqSec",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "doDeploy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "accessKey",
          "type": "String",
          "values": [],
          "description": "JDCloud Access and Secret keys to use for this deployment.",
          "isOptional": false
        },
        {
          "name": "secretKey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "JDCloud Access and Secret keys to use for this deployment.",
          "isOptional": false
        },
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "**Includes** and **Excludes** together define the file(s) that will be contained in the application revision that is uploaded to Object Storage Service.",
          "isOptional": false
        },
        {
          "name": "downloadUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deploySource",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "**Includes** and **Excludes** together define the file(s) that will be contained in the application revision that is uploaded to Object Storage Service.",
          "isOptional": false
        },
        {
          "name": "subdirectory",
          "type": "String",
          "values": [],
          "description": "A subdirectory inside the workspace to be packed instead of the whole workspace. Remember that the <i>jdcloud-codedeploy.yml</i> must be placed at the top of the .tar.gz archive. The <i>excludes</i> and <i>includes</i> will be applied based on this path.",
          "isOptional": false
        }
      ],
      "plugin": "jdcloud-codedeploy"
    },
    {
      "command": "step([$class: 'JUnitResultArchiver'])",
      "title": "step([$class: 'JUnitResultArchiver']): Publish JUnit test result report",
      "description": "Jenkins understands the JUnit test report XML format (which is also used by TestNG). When this option is configured, Jenkins can provide useful information about test results, such as historical test result trends, a web UI for viewing test reports, tracking failures, and so on.\n \n To use this feature, first set up your build to run tests, then specify the path to JUnit XML files in the [Ant glob syntax](http://ant.apache.org/manual/Types/fileset.html), such as **/build/test-reports/*.xml. Be sure not to include any non-report files into this pattern. You can specify multiple patterns of files separated by commas.",
      "parameters": [
        {
          "name": "testResults",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "allowEmptyResults",
          "type": "boolean",
          "values": [],
          "description": "If checked, the default behavior of failing a build on missing test result files or empty test results is changed to not affect the status of the build. Please note that this setting make it harder to spot misconfigured jobs or build failures where the test tool does not exit with an error code when not producing test report files.",
          "isOptional": true
        },
        {
          "name": "checksName",
          "type": "String",
          "values": [],
          "description": "If provided, and publishing checks enabled, the plugin will use this name when publishing results to corresponding SCM hosting platforms. If not, a default of \"Tests\" will be used.",
          "isOptional": true
        },
        {
          "name": "healthScaleFactor",
          "type": "double",
          "values": [],
          "description": "The amplification factor to apply to test failures when computing the test result contribution to the build health score.\n \n\n The default factor is `1.0`\n \n  \n* A factor of `0.0` will disable the test result contribution to build health score.\n\n  \n* A factor of `0.1` means that 10% of tests failing will score 99% health\n\n  \n* A factor of `0.5` means that 10% of tests failing will score 95% health\n\n  \n* A factor of `1.0` means that 10% of tests failing will score 90% health\n\n  \n* A factor of `2.0` means that 10% of tests failing will score 80% health\n\n  \n* A factor of `2.5` means that 10% of tests failing will score 75% health\n\n  \n* A factor of `5.0` means that 10% of tests failing will score 50% health\n\n  \n* A factor of `10.0` means that 10% of tests failing will score 0% health\n\n  The factor is persisted with the build results, so changes will only be reflected in new builds.",
          "isOptional": true
        },
        {
          "name": "keepLongStdio",
          "type": "boolean",
          "values": [],
          "description": "If checked, any standard output or error from a test suite will be retained in the test results after the build completes. (This refers only to additional messages printed to console, not to a failure stack trace.) Such output is always kept if the test failed, but by default lengthy output from passing tests is truncated to save space. Check this option if you need to see every log message from even passing tests, but beware that Jenkins's memory consumption can substantially increase as a result, even if you never look at the test results!",
          "isOptional": true
        },
        {
          "name": "skipPublishingChecks",
          "type": "boolean",
          "values": [],
          "description": "If this option is unchecked, then the plugin automatically publishes the test results to corresponding SCM hosting platforms. For example, if you are using this feature for a GitHub organization project, the warnings will be published to GitHub through the Checks API. If this operation slows down your build, or you don't want to publish the warnings to SCM platforms, you can use this option to deactivate this feature.",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "junit"
    },
    {
      "command": "step([$class: 'JUnitTestReportPublisher'])",
      "title": "step([$class: 'JUnitTestReportPublisher']): Publish JUnit reports generated with handlebars",
      "description": "",
      "parameters": [
        {
          "name": "reportsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileIncludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileExcludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markAsUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "copyHTMLInWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "bootstraped-multi-test-results-report"
    },
    {
      "command": "step([$class: 'JgivenReportGenerator'])",
      "title": "step([$class: 'JgivenReportGenerator']): Generate JGiven Reports",
      "description": "",
      "parameters": [
        {
          "name": "reportConfigs",
          "type": "Nested",
          "values": [
            "$class: 'AsciiDocReportConfig'",
            "$class: 'HtmlReportConfig'",
            "$class: 'TextReportConfig'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludeEmptyScenarios",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jgivenResults",
          "type": "String",
          "values": [],
          "description": "[Fileset 'includes'](http://ant.apache.org/manual/Types/fileset.html) setting that specifies the generated raw json JGiven report files, such as 'myproject/target/jgiven-reports/json/*.json'. Basedir of the fileset is <a rel=\"nofollow\">the workspace root</a>.\n \n\n If not set then '**/json/*.json' is used.",
          "isOptional": true
        }
      ],
      "plugin": "jgiven"
    },
    {
      "command": "step([$class: 'JiraIssueUpdateBuilder'])",
      "title": "step([$class: 'JiraIssueUpdateBuilder']): Jira: Progress issues by workflow action",
      "description": "Performs a Jira workflow action for every issue that matches the JQL query. A common use might be to consider a ticket \"confirmed\" in the last build step of a job, or to mark an issue as \"merged\" if the job is used to merge changes from one SCM repository to another.\n \n\n Optionally, include a comment that will be attached to those tickets that are modified as a result of this build step.",
      "parameters": [
        {
          "name": "jqlSearch",
          "type": "String",
          "values": [],
          "description": "Issues which match this JQL Query will be progressed using the specified workflow action.\n \n\n This can contain **$PARAM** values which will be replaced by the build parameters.\n \n Example: \n\n <blockquote>\n  \n```groovy\nproject = JENKINS and fixVersion = \"$RELEASE_VERSION\" and status not in (Resolved, Closed)\n```\n\n </blockquote> or (e.g., combined with a Jira Issue Parameter, selecting one issue from a JQL result set):\n <blockquote>\n  \n```groovy\nissue = $ISSUE_ID\n```\n\n </blockquote>",
          "isOptional": false
        },
        {
          "name": "workflowActionName",
          "type": "String",
          "values": [],
          "description": "The workflow action to be performed on the selected Jira issues.\n \n\n Be mindful of the issues being selected by the JQL query, because not all actions are valid for all issue statuses.\n \n\n **NOTE:** the Jenkins user must have access to perform the workflow step, as if the user were logged in and viewing the issue in a web browser.",
          "isOptional": false
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "An optional comment to be added to the issue after updating the workflow. If left empty, no comment will be added.\n \n\n This can contain **$PARAM** values which will be replaced by the build parameters.",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "step([$class: 'JiraIssueUpdater'])",
      "title": "step([$class: 'JiraIssueUpdater']): Jira: Update relevant issues",
      "description": "",
      "parameters": [
        {
          "name": "issueSelector",
          "type": "Nested",
          "values": [
            "$class: 'DefaultIssueSelector'",
            "$class: 'ExplicitIssueSelector'",
            "$class: 'JqlIssueSelector'",
            "$class: 'P4JobIssueSelector'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scm",
          "type": "Nested",
          "values": [
            "$class: 'AWSCodePipelineSCM'",
            "accurev",
            "$class: 'BazaarSCM'",
            "$class: 'BitKeeperSCM'",
            "BbS",
            "$class: 'BlameSubversionSCM'",
            "$class: 'CCUCMScm'",
            "$class: 'CVSSCM'",
            "$class: 'ClearCaseSCM'",
            "$class: 'ClearCaseUcmBaselineSCM'",
            "$class: 'ClearCaseUcmSCM'",
            "$class: 'CloneWorkspaceSCM'",
            "$class: 'CmvcSCM'",
            "$class: 'ConfigurationRotator'",
            "$class: 'CvsProjectset'",
            "$class: 'DarcsScm'",
            "$class: 'DelegateSCM'",
            "$class: 'DimensionsSCM'",
            "$class: 'DrushMakefileSCM'",
            "$class: 'EndevorConfiguration'",
            "filesystem",
            "$class: 'FeatureBranchAwareMercurialSCM'",
            "$class: 'GeneXusServerSCM'",
            "$class: 'GitSCM'",
            "$class: 'HarvestSCM'",
            "$class: 'IspwConfiguration'",
            "$class: 'IspwContainerConfiguration'",
            "$class: 'MercurialSCM'",
            "$class: 'MergeBotUpdater'",
            "$class: 'MultiSCM'",
            "none",
            "$class: 'OpenShiftImageStreams'",
            "$class: 'PdsConfiguration'",
            "$class: 'PerforceSCM'",
            "perforce",
            "$class: 'PlasticSCM'",
            "$class: 'ProxySCM'",
            "$class: 'PvcsScm'",
            "$class: 'RTCScm'",
            "$class: 'SCLMSCM'",
            "$class: 'ShellScriptSCM'",
            "$class: 'SimpleClearCaseSCM'",
            "$class: 'StarTeamSCM'",
            "$class: 'StoreSCM'",
            "$class: 'SubversionSCM'",
            "$class: 'SurroundSCM'",
            "$class: 'SynergySCM'",
            "$class: 'TeamFoundationServerScm'",
            "$class: 'VaultSCM'",
            "$class: 'hudson.plugins.gradle_repo.RepoScm'",
            "$class: 'hudson.plugins.repo.RepoScm'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "step([$class: 'JiraReleaseVersionUpdaterBuilder'])",
      "title": "step([$class: 'JiraReleaseVersionUpdaterBuilder']): Jira: Mark a version as Released",
      "description": "",
      "parameters": [
        {
          "name": "jiraProjectKey",
          "type": "String",
          "values": [],
          "description": "Specify the project key. A project key is the all capitals part before the issue number in Jira.\n\n \n(**EXAMPLE**-100)",
          "isOptional": false
        },
        {
          "name": "jiraRelease",
          "type": "String",
          "values": [],
          "description": "Specify the name of the parameter which will contain the release version. This can reference a build parameter.",
          "isOptional": false
        },
        {
          "name": "jiraDescription",
          "type": "String",
          "values": [],
          "description": "**Optional**\n \n\n Specify a description of the release version. This can reference a build parameter.",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "step([$class: 'JiraVersionCreatorBuilder'])",
      "title": "step([$class: 'JiraVersionCreatorBuilder']): Jira: Create new version",
      "description": "",
      "parameters": [
        {
          "name": "jiraVersion",
          "type": "String",
          "values": [],
          "description": "Specify the name of the parameter which will contain the release version. This can reference a build parameter.",
          "isOptional": false
        },
        {
          "name": "jiraProjectKey",
          "type": "String",
          "values": [],
          "description": "Specify the project key. A project key is the all capitals part before the issue number in Jira.\n\n \n(**EXAMPLE**-100)",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "step([$class: 'JobConfigRebrander'])",
      "title": "step([$class: 'JobConfigRebrander']): Fix old Micro Focus Jenkins builds",
      "description": "",
      "parameters": [],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'KarafBuildStepBuilder'])",
      "title": "step([$class: 'KarafBuildStepBuilder']): Execute Karaf command",
      "description": "",
      "parameters": [
        {
          "name": "useCustomKaraf",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "karafHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "flags",
          "type": "String",
          "values": [],
          "description": "**-a [port]**\n \nspecify the port to connect to\n **-h [host]**\n \nspecify the host to connect to\n **-u [user]**\n \nspecify the user name\n **-p [password]**\n \nspecify the password (optional, if not provided, the password is prompted)\n **-v**\n \nraise verbosity\n **-l**\n \nset client logging level. Set to 0 for ERROR logging and up to 4 for TRACE\n **-r [attempts]**\n \nretry connection establishment (up to attempts times)\n **-d [delay]**\n \nintra-retry delay (defaults to 2 seconds)\n **-f [file]**\n \nread commands from the specified file\n **-k [keyFile]**\n \nspecify the private keyFile location when using key login, need have BouncyCastle registered as security provider using this flag\n **-t [timeout]**\n \ndefine the client idle timeout",
          "isOptional": false
        },
        {
          "name": "option",
          "type": "Nested",
          "values": [
            "$class: 'KarafCommandFileOption'",
            "$class: 'KarafCommandScriptOption'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "karaf-build-step"
    },
    {
      "command": "step([$class: 'KlocworkBuildSpecBuilder'])",
      "title": "step([$class: 'KlocworkBuildSpecBuilder']): Klocwork - Step 1 (CI/Full) - Capture Build Information",
      "description": "**Integration analysis (Full)**\n\n\n\n\n\n\n\n  Use the following steps to perform a Klocwork integration analysis and load the results to the Klocwork Server:\n\n\n\n\n\n\n\n <table></table>  Klocwork - Step 1 (CI/Full) - Capture Build Information runs a Klocwork build specification generation tool to capture compilation information about the project   Klocwork - Step 2 (Full) - Run Analysis runs the Klocwork Server analysis engine against the data captured within the build specification   Klocwork - Step 3 (Full) - Load Analysis Results runs the Klocwork Server load tool, which imports analysis data into the Klocwork Server database\n\n\n\n\n\n\n **Differential Analysis (CI)**\n\n\n\n\n\n\n\n  Use the following steps to perform a differential analysis, which does not publish the results to the Klocwork Server and only reports the new issues detected since the previous integration analysis. Differential analysis can be used as a quality measure to reduce new issues being added to the Klocwork Server, and can also be configured to only analyze the changed files from the checkin, making the process much quicker:\n\n\n\n\n\n\n\n <table></table>  Klocwork - Step 1 (CI/Full) - Capture Build Information runs a Klocwork build specification generation tool to capture compilation information about the project   Klocwork - Step 2 (CI) - Run Differential Analysis runs an analysis only on the changed files by using the Klocwork command line user tool",
      "parameters": [
        {
          "name": "buildSpecConfig",
          "type": "Nested",
          "values": [
            "buildCommand",
            "tool",
            "output",
            "additionalOpts",
            "ignoreErrors"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KlocworkCiBuilder'])",
      "title": "step([$class: 'KlocworkCiBuilder']): Klocwork - Step 2 (CI) - Run Differential Analysis",
      "description": "",
      "parameters": [
        {
          "name": "ciConfig",
          "type": "Nested",
          "values": [
            "buildSpec",
            "projectDir",
            "cleanupProject",
            "reportFile",
            "additionalOpts",
            "incrementalAnalysis",
            "differentialAnalysisConfig"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KlocworkFailureConditionPublisher'])",
      "title": "step([$class: 'KlocworkFailureConditionPublisher']): Klocwork - Post Analysis (Full/CI) - Build Failure Conditions (Optional)",
      "description": "",
      "parameters": [
        {
          "name": "failureConditionConfig",
          "type": "Nested",
          "values": [
            "enableServerFailureCondition",
            "failureConditionServerConfigs",
            "enableCiFailureCondition",
            "enableDesktopFailureCondition",
            "failureConditionCiConfig",
            "failureConditionCiConfigs",
            "failureConditionDesktopConfig"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KlocworkServerAnalysisBuilder'])",
      "title": "step([$class: 'KlocworkServerAnalysisBuilder']): Klocwork - Step 2 (Full) - Run Analysis",
      "description": "",
      "parameters": [
        {
          "name": "serverConfig",
          "type": "Nested",
          "values": [
            "buildSpec",
            "tablesDir",
            "incrementalAnalysis",
            "ignoreCompileErrors",
            "importConfig",
            "additionalOpts",
            "disableKwdeploy",
            "duplicateFrom",
            "enabledCreateProject"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KlocworkServerLoadBuilder'])",
      "title": "step([$class: 'KlocworkServerLoadBuilder']): Klocwork - Step 3 (Full) - Load Analysis Results",
      "description": "",
      "parameters": [
        {
          "name": "serverConfig",
          "type": "Nested",
          "values": [
            "tablesDir",
            "buildName",
            "additionalOpts"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reportConfig",
          "type": "Nested",
          "values": [
            "displayChart",
            "chartHeight",
            "chartWidth",
            "query"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KlocworkXSyncBuilder'])",
      "title": "step([$class: 'KlocworkXSyncBuilder']): Klocwork - Post Analysis (Full) - Cross-Project Issue Sync (Optional)",
      "description": "",
      "parameters": [
        {
          "name": "syncConfig",
          "type": "Nested",
          "values": [
            "dryRun",
            "lastSync",
            "projectRegexp",
            "statusAnalyze",
            "statusIgnore",
            "statusNotAProblem",
            "statusFix",
            "statusFixInNextRelease",
            "statusFixInLaterRelease",
            "statusDefer",
            "statusFilter",
            "additionalOpts"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "klocwork"
    },
    {
      "command": "step([$class: 'KubernetesDeploy'])",
      "title": "step([$class: 'KubernetesDeploy']): Deploy to Kubernetes",
      "description": "",
      "parameters": [
        {
          "name": "context",
          "type": "Nested",
          "values": [
            "configs",
            "credentialsType",
            "deleteResource",
            "dockerCredentials",
            "enableConfigSubstitution",
            "kubeConfig",
            "kubeconfigId",
            "secretName",
            "secretNamespace",
            "ssh",
            "textCredentials"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-cd"
    },
    {
      "command": "step([$class: 'LabeledTestResultGroupPublisher'])",
      "title": "step([$class: 'LabeledTestResultGroupPublisher']): Publish Test Results in Labeled Groups",
      "description": "",
      "parameters": [
        {
          "name": "configs",
          "type": "Nested",
          "values": [
            "parserClassName",
            "testResultFileMask",
            "label"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "labeled-test-groups-publisher"
    },
    {
      "command": "step([$class: 'LedBorgPublisher'])",
      "title": "step([$class: 'LedBorgPublisher']): LED Borg controller",
      "description": "",
      "parameters": [
        {
          "name": "failureState",
          "type": "String",
          "values": [],
          "description": "Colour selection for the LED when the latest build state is : Fail (Default RED)",
          "isOptional": false
        },
        {
          "name": "successState",
          "type": "String",
          "values": [],
          "description": "Colour selection for the LED when the latest build state is : Success (Default BLUE)",
          "isOptional": false
        },
        {
          "name": "unstableState",
          "type": "String",
          "values": [],
          "description": "Colour selection for the LED when the latest build state is : Unstable (Default Yellow)",
          "isOptional": false
        },
        {
          "name": "notBuiltState",
          "type": "String",
          "values": [],
          "description": "Colour selection for the LED when the latest build state is : Not Built (Default OFF)",
          "isOptional": false
        },
        {
          "name": "abortedState",
          "type": "String",
          "values": [],
          "description": "Colour selection for the LED when the latest build state is : Aborted (Default MAGENTA)",
          "isOptional": false
        }
      ],
      "plugin": "rpi-build-status"
    },
    {
      "command": "step([$class: 'LifxNotifier'])",
      "title": "step([$class: 'LifxNotifier']): Lifx notifier",
      "description": "",
      "parameters": [
        {
          "name": "notifyInProgress",
          "type": "Nested",
          "values": [
            "colorInProgress"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "groupColorSuccess",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "groupColorFailure",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "colorSuccess",
          "type": "String",
          "values": [],
          "description": "Build success color.",
          "isOptional": false
        },
        {
          "name": "colorFailure",
          "type": "String",
          "values": [],
          "description": "Build failure color.",
          "isOptional": false
        },
        {
          "name": "colorSuccessCustom",
          "type": "String",
          "values": [],
          "description": "Build success color (custom). Format RRGGBB, e.g: 00ff00 (green).",
          "isOptional": false
        },
        {
          "name": "colorFailureCustom",
          "type": "String",
          "values": [],
          "description": "Build failure color (custom). Format RRGGBB, e.g: ff0000 (red).",
          "isOptional": false
        }
      ],
      "plugin": "lifx-notifier"
    },
    {
      "command": "step([$class: 'LintPublisher'])",
      "title": "step([$class: 'LintPublisher']): Publish CFLint results",
      "description": "",
      "parameters": [
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "cflint"
    },
    {
      "command": "step([$class: 'LoadNinjaBuilder'])",
      "title": "step([$class: 'LoadNinjaBuilder']): LoadNinja",
      "description": "",
      "parameters": [
        {
          "name": "apiKey",
          "type": "String",
          "values": [],
          "description": "Your LoadNinja API KEY.",
          "isOptional": false
        },
        {
          "name": "scenarioId",
          "type": "String",
          "values": [],
          "description": "The Scenario Id of the Load Ninja load test you want to run.",
          "isOptional": false
        },
        {
          "name": "oeb",
          "type": "Nested",
          "values": [
            "errorPassCriteria"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "odb",
          "type": "Nested",
          "values": [
            "durationPassCriteria"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "loadninja"
    },
    {
      "command": "step([$class: 'LoadrunnerAnalysisRecorder'])",
      "title": "step([$class: 'LoadrunnerAnalysisRecorder']): Run Loadrunner Analysis",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "resultPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testSetId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "loadrunner"
    },
    {
      "command": "step([$class: 'LoadrunnerBuilder'])",
      "title": "step([$class: 'LoadrunnerBuilder']): Run Loadrunner",
      "description": "",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "connectQC",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qcDb",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testSetId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "loadrunner"
    },
    {
      "command": "step([$class: 'LogstashNotifier'])",
      "title": "step([$class: 'LogstashNotifier']): Send console log to Logstash",
      "description": "Send the tail of the log to Logstash.",
      "parameters": [
        {
          "name": "maxLines",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "logstash"
    },
    {
      "command": "step([$class: 'Mailer'])",
      "title": "step([$class: 'Mailer']): E-mail Notification",
      "description": "If configured, Jenkins will send out an e-mail to the specified recipients when a certain important event occurs.\n \n  \n* Every failed build triggers a new e-mail. \n\n  \n* A successful build after a failed (or unstable) build triggers a new e-mail, indicating that a crisis is over. \n\n  \n* An unstable build after a successful build triggers a new e-mail, indicating that there's a regression. \n\n  \n* Unless configured, every unstable build triggers a new e-mail, indicating that regression is still there. \n\n  For lazy projects where unstable builds are the norm, Uncheck \"Send e-mail for every unstable build\".",
      "parameters": [
        {
          "name": "recipients",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notifyEveryUnstableBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sendToIndividuals",
          "type": "boolean",
          "values": [],
          "description": "If this option is checked, the notification e-mail will be sent to individuals who have committed changes for the broken build (by assuming that those changes broke the build).\n \n If e-mail addresses are also specified in the recipient list, then both the individuals as well as the specified addresses get the notification e-mail. If the recipient list is empty, then only the individuals will receive e-mails.",
          "isOptional": false
        }
      ],
      "plugin": "mailer"
    },
    {
      "command": "step([$class: 'MasterCoverageAction'])",
      "title": "step([$class: 'MasterCoverageAction']): Record Master Coverage",
      "description": "This step get test coverage for repository as master coverage. When you run another build to check pull request. Master coverage will be used co compare vs pull request and post information to pull request comments.\n \n\n Step get test coverage from Cobertura or Jacoco reports (XML) if they present in build. They could be created by any tool. Otherwise coverage will be 0.",
      "parameters": [
        {
          "name": "jacocoCounterType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scmVars",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "github-pr-coverage-status"
    },
    {
      "command": "step([$class: 'MatlabBuilder'])",
      "title": "step([$class: 'MatlabBuilder']):",
      "description": "",
      "parameters": [
        {
          "name": "matlabRoot",
          "type": "String",
          "values": [],
          "description": "Enter the full path to the MATLAB root folder, which is returned by the <i>**matlabroot**</i> function.\n \n\n\n \n\nExample:\n \n\n\n \n\n<i>**<u>Windows:</u>**</i>\n \n\n C:\\Program Files\\MATLAB\\R2019a\n \n\n <i>**<u>Linux:</u>**</i>\n \n\n /usr/local/MATLAB/R2019a\n \n\n <i>**<u>Mac:</u>**</i>\n \n\n /Applications/MATLAB_R2019a.app\n \n\n\n \n **Note:** If the job runs on a remote agent, you must specify the full path to MATLAB root folder on the remote agent.",
          "isOptional": true
        },
        {
          "name": "testRunTypeList",
          "type": "unknown",
          "values": [],
          "description": "Select the test run mode from the following options.",
          "isOptional": true
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "step([$class: 'MavenInvokerRecorder'])",
      "title": "step([$class: 'MavenInvokerRecorder']): Maven Invoker Plugin Results",
      "description": "",
      "parameters": [
        {
          "name": "reportsFilenamePattern",
          "type": "String",
          "values": [],
          "description": "This is a file name pattern that can be used to locate the Maven Invoker report files (for example ****/target/invoker-reports/BUILD*.xml**).",
          "isOptional": false
        },
        {
          "name": "invokerBuildDir",
          "type": "String",
          "values": [],
          "description": "This is the directory where Maven Invoker runs. It is used to find the builds logs (for example ****/target/its**).",
          "isOptional": false
        }
      ],
      "plugin": "maven-invoker-plugin"
    },
    {
      "command": "step([$class: 'MetricsRecorder'])",
      "title": "step([$class: 'MetricsRecorder']): Record Metrics",
      "description": "",
      "parameters": [
        {
          "name": "classPathFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "metrics-aggregation"
    },
    {
      "command": "step([$class: 'MigrateAlmCredentialsBuilder'])",
      "title": "step([$class: 'MigrateAlmCredentialsBuilder']): Migrate ALM Credentials",
      "description": "",
      "parameters": [],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'MinioUploader'])",
      "title": "step([$class: 'MinioUploader']): Upload build artifacts to Minio server",
      "description": "",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludedFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bucketName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "objectNamePrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "minio-storage"
    },
    {
      "command": "step([$class: 'MobileStudioTestBuilder'])",
      "title": "step([$class: 'MobileStudioTestBuilder']): Mobile Studio runner configuration",
      "description": "Jenkins plugin for execution of Progress Mobile Studio tests.",
      "parameters": [
        {
          "name": "mobileStudioRunnerPath",
          "type": "String",
          "values": [],
          "description": "Full path to Mobile Studio Runner executable.",
          "isOptional": false
        },
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "The full path to the .mttest test or .mtlist (test list) to run.",
          "isOptional": false
        },
        {
          "name": "msgServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deviceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectRoot",
          "type": "String",
          "values": [],
          "description": "The path to the project root folder.",
          "isOptional": true
        },
        {
          "name": "testAsUnit",
          "type": "boolean",
          "values": [],
          "description": "If checked MobileStudio test will be converted to JUnit test, else test will be converted to testsuite and test steps will be converted to JUnit test.",
          "isOptional": true
        }
      ],
      "plugin": "teststudiomobiletesting"
    },
    {
      "command": "step([$class: 'MockLoadBuilder'])",
      "title": "step([$class: 'MockLoadBuilder']): Mock Load",
      "description": "Generates load on the Jenkins build node and over the remoting channel. There will be a random number of build artifacts created matching the file name pattern `mock-artifact-*.txt`. There will be a JUnit test report with the file name `mock-junit.xml`. Approximately 5% of the time, the build will \"fail\" its tests and thus no artifacts will be generated.",
      "parameters": [
        {
          "name": "averageDuration",
          "type": "long",
          "values": [],
          "description": "The average duration that the build should take. The actual duration of each step will be randomly selected where with an expected standard deviation equal to the square root of the expected average duration.",
          "isOptional": false
        }
      ],
      "plugin": "mock-load-builder"
    },
    {
      "command": "step([$class: 'NSNDIntegrationResultsPublisher'])",
      "title": "step([$class: 'NSNDIntegrationResultsPublisher']): NS/NC-ND Integration Performance Publisher",
      "description": "",
      "parameters": [
        {
          "name": "nsIntegrationUri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nsUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nsPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ndIntegrationUri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ndUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ndPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkProfilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "criThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "warThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timePeriod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curStartTimeAbsolute",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curEndTimeAbsolute",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curStartTimeElapsed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curEndTimeElapsed",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "phase",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cavisson-ns-nd-integration"
    },
    {
      "command": "step([$class: 'NeoBuildAction'])",
      "title": "step([$class: 'NeoBuildAction']): Execute a NeoLoad Scenario",
      "description": "This build step executes a NeoLoad scenario and adds trend result graphs to the job page.",
      "parameters": [
        {
          "name": "executable",
          "type": "String",
          "values": [],
          "description": "This is the absolute path to the NeoLoad executable file.\n \n\n For example,`/opt/NeoLoad 6.5/bin/NeoLoadCmd`, `C:\\Program Files\\NeoLoad 6.5\\bin\\NeoLoadCmd.exe` or `/Applications/NeoLoad 6.5/bin/NeoLoadCmd`.",
          "isOptional": false
        },
        {
          "name": "projectType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "localProjectFile",
          "type": "String",
          "values": [],
          "description": "This is the local project file path.\n \n\n For example,`/home/ajohnson/neoload_projects/JenkinsExample/JenkinsExample.nlp`, `C:\\neoload_projects\\JenkinsExample\\JenkinsExample.nlp` or `/Users/ajohnson/neoload_projects/JenkinsExample/JenkinsExample.nlp` or `C:\\neoload_projects\\JenkinsExample\\JenkinsExample.yaml`.",
          "isOptional": false
        },
        {
          "name": "sharedProjectName",
          "type": "String",
          "values": [],
          "description": "This is the name of the shared project to checkout and load.\n \n\n For example, `MyProjectName`.",
          "isOptional": false
        },
        {
          "name": "scenarioName",
          "type": "String",
          "values": [],
          "description": "The name of the Scenario to launch.",
          "isOptional": false
        },
        {
          "name": "htmlReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the HTLM report file is created by NeoLoad.\n \n\n For example, `${WORKSPACE}/neoload-report/report.html`.",
          "isOptional": false
        },
        {
          "name": "xmlReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the XML report file is created.\n \n\n For example, `${WORKSPACE}/neoload-report/report.xml`.",
          "isOptional": false
        },
        {
          "name": "pdfReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the PDF report file is created.\n \n\n For example, `${WORKSPACE}/neoload-report/report.pdf`.",
          "isOptional": false
        },
        {
          "name": "junitReport",
          "type": "String",
          "values": [],
          "description": "This is the path where the JUnit results file (based on an SLA in NeoLoad) is created.\n \n\n For example, `${WORKSPACE}/neoload-report/junit-sla-results.xml`.",
          "isOptional": false
        },
        {
          "name": "scanAllBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "displayTheGUI",
          "type": "boolean",
          "values": [],
          "description": "When selected, then the NeoLoad GUI is displayed during the test. Note that the user launching the process must be able to display a user interface (which is not always the case for the Jenkins user). Note also that some errors or warning messages may prevent NeoLoad from closing automatically at the end of a test run. Thus this should only be used for testing purposes.",
          "isOptional": false
        },
        {
          "name": "testResultName",
          "type": "String",
          "values": [],
          "description": "This is the name of the test results. The value `$Date{hh:mm - dd MMM yyyy}` is replaced by the current date by NeoLoad and the value `${BUILD_NUMBER}` is replaced by the current build number by Jenkins.\n \n\n For example, `$Date{hh:mm - dd MMM yyyy} (build $${BUILD_NUMBER})`.",
          "isOptional": false
        },
        {
          "name": "testDescription",
          "type": "String",
          "values": [],
          "description": "The test description entered here appears in the report file.",
          "isOptional": false
        },
        {
          "name": "licenseType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "licenseVUCount",
          "type": "String",
          "values": [],
          "description": "This is the number of Virtual Users (User Paths) to reserve with the license.",
          "isOptional": false
        },
        {
          "name": "licenseVUSAPCount",
          "type": "String",
          "values": [],
          "description": "This is the number of SAP Virtual Users (User Paths for SAP) to reserve with the license.",
          "isOptional": false
        },
        {
          "name": "licenseDuration",
          "type": "String",
          "values": [],
          "description": "This is the number of hours to reserve the license. This must be at least as long as the test will last.",
          "isOptional": false
        },
        {
          "name": "customCommandLineOptions",
          "type": "String",
          "values": [],
          "description": "Include any additional Command Line options here.",
          "isOptional": false
        },
        {
          "name": "publishTestResults",
          "type": "boolean",
          "values": [],
          "description": "When selected, test results are published after the scenario is run.",
          "isOptional": false
        },
        {
          "name": "sharedProjectServer",
          "type": "Nested",
          "values": [
            "uniqueID",
            "url",
            "loginUser",
            "loginPassword",
            "label"
          ],
          "description": "Choose which server to use. If no servers appear, please configure one in the System Configuration screen of Jenkins.",
          "isOptional": false
        },
        {
          "name": "licenseServer",
          "type": "Nested",
          "values": [
            "uniqueID",
            "url",
            "loginUser",
            "loginPassword",
            "label",
            "collabPath",
            "licenseID"
          ],
          "description": "Choose which server to use to lease the license. If no servers appear, please configure one in the System Configuration screen of Jenkins.",
          "isOptional": false
        },
        {
          "name": "showTrendAverageResponse",
          "type": "boolean",
          "values": [],
          "description": "When selected, a trend graph of the average response time for all pages is displayed. Note that the build artifacts must include XML results from NeoLoad for the graph to be displayed.",
          "isOptional": false
        },
        {
          "name": "showTrendErrorRate",
          "type": "boolean",
          "values": [],
          "description": "When selected, a trend graph of the error rate of the most recent runs is included on the job page. Note that the build artifacts must include XML results from NeoLoad for the graph to be displayed.",
          "isOptional": false
        },
        {
          "name": "graphOptionsInfo",
          "type": "Nested",
          "values": [
            "name",
            "curve",
            "statistic"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "maxTrends",
          "type": "int",
          "values": [],
          "description": "Limit the number of points in trend charts. You can use 0 value to have unlimited charts",
          "isOptional": false
        }
      ],
      "plugin": "neoload-jenkins-plugin"
    },
    {
      "command": "step([$class: 'NetDiagnosticsResultsPublisher'])",
      "title": "step([$class: 'NetDiagnosticsResultsPublisher']): NetDiagnostics Performance Publisher",
      "description": "",
      "parameters": [
        {
          "name": "netdiagnosticsUri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3StartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3EndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkProfilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "criThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "warThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curStartTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "curEndTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base1MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base2MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "base3MSRName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cavisson-ns-nd-integration"
    },
    {
      "command": "step([$class: 'NetStormBuilder'])",
      "title": "step([$class: 'NetStormBuilder']): Execute NetStorm/NetCloud Test",
      "description": "This build step can be used to invoke Netstorm tasks",
      "parameters": [
        {
          "name": "URLConnectionString",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "subProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scenario",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "baselineType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "protocol",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repoIp",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repoPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repoPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repoUsername",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repoPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitPull",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cavisson-ns-nd-integration"
    },
    {
      "command": "step([$class: 'NetStormResultsPublisher'])",
      "title": "step([$class: 'NetStormResultsPublisher']): NetStorm/NetCloud Performance Publisher",
      "description": "",
      "parameters": [
        {
          "name": "netstormUri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "htmlTable",
          "type": "class net.sf.json.JSONObject",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "subProject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scenario",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "durationReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cavisson-ns-nd-integration"
    },
    {
      "command": "step([$class: 'NexusArtifactUploader'])",
      "title": "step([$class: 'NexusArtifactUploader']): Nexus artifact uploader",
      "description": "",
      "parameters": [
        {
          "name": "nexusVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "protocol",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nexusUrl",
          "type": "String",
          "values": [],
          "description": "If Nexus Url is <em>http://mynexusrepo:8081/nexus</em> the value for this field is <em>mynexusrepo:8081/nexus</em>",
          "isOptional": false
        },
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repository",
          "type": "String",
          "values": [],
          "description": "RepositoryId of the Repository in Nexus to which this artifact to be uploaded.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "artifacts",
          "type": "Nested",
          "values": [
            "artifactId",
            "type",
            "classifier",
            "file"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "nexus-artifact-uploader"
    },
    {
      "command": "step([$class: 'NexusPublisherBuildStep'])",
      "title": "step([$class: 'NexusPublisherBuildStep']): Nexus Repository Manager Publisher",
      "description": "",
      "parameters": [
        {
          "name": "nexusInstanceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nexusRepositoryId",
          "type": "String",
          "values": [],
          "description": "The publisher currently supports hosted release Maven 2 repositories. This list is limited to repositories which meet this requirement.",
          "isOptional": false
        },
        {
          "name": "packages",
          "type": "Nested",
          "values": [
            "$class: 'MavenPackage'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagName",
          "type": "String",
          "values": [],
          "description": "Tag is only available for Nexus Repository Manager 3+",
          "isOptional": true
        }
      ],
      "plugin": "nexus-jenkins-plugin"
    },
    {
      "command": "step([$class: 'NotifyEventsPublisher'])",
      "title": "step([$class: 'NotifyEventsPublisher']): Notify.Events",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onAborted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "notify-events"
    },
    {
      "command": "step([$class: 'OctoperfBuilder'])",
      "title": "step([$class: 'OctoperfBuilder']): OctoPerf",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select the Octoperf credentials to use.",
          "isOptional": true
        },
        {
          "name": "workspaceId",
          "type": "String",
          "values": [],
          "description": "Select the Octoperf Workspace.",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "Select the Octoperf Project.",
          "isOptional": true
        },
        {
          "name": "scenarioId",
          "type": "String",
          "values": [],
          "description": "OctoPerf's plugin for Jenkins allows users to automate load tests from the Cloud.\n \n\n Just choose the scenario you want to run. Let Jenkins start and stop the test and document the results.\n \n\n After the run, a test report will be generated directly into Jenkins and [your OctoPerf account.](https://api.octoperf.com)\n \n\n If the test list is empty, you must insert your unique OctoPerf Username and password into the <a rel=\"nofollow\">Jenkins settings</a>, or create a test in [your OctoPerf account.](https://api.octoperf.com)",
          "isOptional": true
        },
        {
          "name": "stopConditions",
          "type": "? extends org.jenkinsci.plugins.octoperf.conditions.TestStopCondition",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "octoperf"
    },
    {
      "command": "step([$class: 'OpenShiftBuildCanceller'])",
      "title": "step([$class: 'OpenShiftBuildCanceller']): Cancel OpenShift Builds",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftBuildVerifier'])",
      "title": "step([$class: 'OpenShiftBuildVerifier']): Verify OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftBuilder'])",
      "title": "step([$class: 'OpenShiftBuilder']): Trigger OpenShift Build",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bldCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get bc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "env",
          "type": "Nested",
          "values": [
            "name",
            "value"
          ],
          "description": "Specify a list of environment variables to include in the build (see oc start-build -e ...).",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commitID",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --commit option when invoking the OpenShift oc start-build command. It allows you to point the OpenShift build to a specific commit hash from the git-log of the source repository. If you do not supply a value, the plugin assumes the latest version from the source repository should be used.",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --from-build option when invoking the OpenShift oc start-build command. It allows you to point to OpenShift build to a previously run build, and run another build with exactly the same source and destination metadata. If you do not supply a value, the plugin will generate a new OpenShift build based on the Build Configuration referenced.",
          "isOptional": false
        },
        {
          "name": "showBuildLogs",
          "type": "String",
          "values": [],
          "description": "Indicates whether the build logs get dumped to the console of the Jenkins build.",
          "isOptional": false
        },
        {
          "name": "checkForTriggeredDeployments",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that any deployments triggered by this build's output fired.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftCreator'])",
      "title": "step([$class: 'OpenShiftCreator']): Create OpenShift Resource(s)",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeleterJsonYaml'])",
      "title": "step([$class: 'OpenShiftDeleterJsonYaml']): Delete OpenShift Resource(s) from JSON or YAML",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jsonyaml",
          "type": "String",
          "values": [],
          "description": "The JSON or YAML formatted text that conforms to the schema for defining the various OpenShift resources.",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeleterLabels'])",
      "title": "step([$class: 'OpenShiftDeleterLabels']): Delete OpenShift Resource(s) using Labels",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete, where those objects have labels corresponding to the specified key/value pairs. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the labels in the API objects to delete.",
          "isOptional": false
        },
        {
          "name": "values",
          "type": "String",
          "values": [],
          "description": "The comma separated list of values of the labels in the API objects to delete.",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeleterList'])",
      "title": "step([$class: 'OpenShiftDeleterList']): Delete OpenShift Resource(s) by Key",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "types",
          "type": "String",
          "values": [],
          "description": "The comma separated list of types of API objects to delete. See https://docs.openshift.org/latest/rest_api/index.html for the supported types.",
          "isOptional": false
        },
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "The comma separated list of keys of the API objects to delete.",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeployCanceller'])",
      "title": "step([$class: 'OpenShiftDeployCanceller']): Cancel OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeployer'])",
      "title": "step([$class: 'OpenShiftDeployer']): Trigger OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftDeploymentVerifier'])",
      "title": "step([$class: 'OpenShiftDeploymentVerifier']): Verify OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "This optional field's value represents the number expected running pods for the deployment for the DeploymentConfig specified. If no value is specified it will work the number of running pods against the desired replica count in the DeploymentConfig.",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftExec'])",
      "title": "step([$class: 'OpenShiftExec']): OpenShift Exec",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pod",
          "type": "String",
          "values": [],
          "description": "The pod in which to execute a command.",
          "isOptional": false
        },
        {
          "name": "container",
          "type": "String",
          "values": [],
          "description": "The container in which to execute a command. If not specified, the first container in the pod will be used.",
          "isOptional": false
        },
        {
          "name": "command",
          "type": "String",
          "values": [],
          "description": "The name of the command to execute.",
          "isOptional": false
        },
        {
          "name": "arguments",
          "type": "Nested",
          "values": [
            "value"
          ],
          "description": "Specify a list of arguments to pass to the command.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftImageTagger'])",
      "title": "step([$class: 'OpenShiftImageTagger']): Tag OpenShift Image",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testTag",
          "type": "String",
          "values": [],
          "description": "The name of the existing tag, or an actual, existing image ID. The image referenced will have the new tag applied to it.",
          "isOptional": false
        },
        {
          "name": "prodTag",
          "type": "String",
          "values": [],
          "description": "One or more tag names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testStream",
          "type": "String",
          "values": [],
          "description": "The name of the ImageStream for the existing tag.",
          "isOptional": false
        },
        {
          "name": "prodStream",
          "type": "String",
          "values": [],
          "description": "One or more ImageStream names in a comma delimited list. If multiple streams and multiple destination tags are specified, the two lists must contain the same number of elements.",
          "isOptional": false
        },
        {
          "name": "destinationNamespace",
          "type": "String",
          "values": [],
          "description": "The value here should match the value from the output from oc project if you created the resources related to this task from the command line. If nothing is specified, the plugin will inspect the PROJECT_NAME environment variable.",
          "isOptional": false
        },
        {
          "name": "destinationAuthToken",
          "type": "String",
          "values": [],
          "description": "The value here is what you supply with the --token option when invoking the OpenShift oc command. If you do not supply a value, the plugin will assume it is running in the OpenShift Jenkins image and attempt to load the kubernetes service account token stored in that image.",
          "isOptional": false
        },
        {
          "name": "alias",
          "type": "String",
          "values": [],
          "description": "This flag is the equivalent of the --alias option for the oc tag command. When false, the destination tag type is \"ImageStreamImage\", and when true, the destination tag type is \"ImageStreamTag\".",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftScaler'])",
      "title": "step([$class: 'OpenShiftScaler']): Scale OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "The value here should be the number of started pods desired for the deployment specified. It is the equivalent of the value supplied to --replicas with an oc scale command invocation. This is a required parameter. If an integer is not specified here, this build step can not be added to the job. Note: specifying a 0 is allowed, and means you do not want any pods for the specified deployment config running.",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftScalerPostAction'])",
      "title": "step([$class: 'OpenShiftScalerPostAction']): Scale OpenShift Deployment",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "depCfg",
          "type": "String",
          "values": [],
          "description": "If you run oc get dc for the project listed in \"nameSpace\", that is the value you want to put here.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "replicaCount",
          "type": "String",
          "values": [],
          "description": "The value here should be the number of started pods desired for the deployment specified. It is the equivalent of the value supplied to --replicas with an oc scale command invocation. This is a required parameter. If an integer is not specified here, this build step can not be added to the job. Note: specifying a 0 is allowed, and means you do not want any pods for the specified deployment config running.",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verifyReplicaCount",
          "type": "String",
          "values": [],
          "description": "This flag is the toggle for turning on or off the verification that the specified replica count for the deployment has been reached.",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'OpenShiftServiceVerifier'])",
      "title": "step([$class: 'OpenShiftServiceVerifier']): Verify OpenShift Service",
      "description": "",
      "parameters": [
        {
          "name": "apiURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "svcName",
          "type": "String",
          "values": [],
          "description": "The equivalent to the name supplied to a oc get service command line invocation.",
          "isOptional": false
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openshift-pipeline"
    },
    {
      "command": "step([$class: 'PCBuildNotifier'])",
      "title": "step([$class: 'PCBuildNotifier']): PingCode: create build record",
      "description": "",
      "parameters": [
        {
          "name": "overview",
          "type": "String",
          "values": [],
          "description": "A regular expression is used to match the result summary in the build output for display in PingCode.\n \n\n\n \n\n For example: The following is part of the build output in Jenkins:\n \n\n\n \n\n ` ...\n\n # utilities ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 40, true \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 39, false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 41, false \n\n ✓ #PLM-1239 isSha, input ' ' + '0-9a-fA-F' * 39, false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 39 + ' ', false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 1 + '0-9a-fA-F ' * + '0-9a-fA-F' * 1, true \n\n \n\n 720 passing (10s) `\n \n If you want to display the line **720 passing (10s)** on PingCode Agile Project, you need to enter **^.*passing** in the input box. PingCode jenkins plugin will match this line from the build result according to your input regular expression and send it to PingCode.",
          "isOptional": true
        },
        {
          "name": "defaultSummary",
          "type": "String",
          "values": [],
          "description": "If no information can be matched from the result logs, this value will be sent by default.",
          "isOptional": true
        },
        {
          "name": "resultURL",
          "type": "String",
          "values": [],
          "description": "A url of result for display in pingcode. if empty, the jenkins console result url will be used.\n \n\n You can use environment variables for dynamic variable substitution in the url.\n \n\n For example: http://jenkins-host/result-${BUILD_ID}, which means that the url is dynamically generated using the BUILD_ID. All environment variables injected by the plugin can be used. If the environment variable does not exist, the source character will be retained.",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "step([$class: 'PCDeployNotifier'])",
      "title": "step([$class: 'PCDeployNotifier']): PingCode: create deploy record",
      "description": "",
      "parameters": [
        {
          "name": "tagged",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "The name of the release. You can use environment variables for dynamic variable substitution in the name.\n \n\n For example: release-${BUILD_ID}, which means that the release name is dynamically generated using the BUILD_ID. All environment variables injected by the plugin can be used. If the environment variable does not exist, the source character will be retained.",
          "isOptional": true
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "The name of environment that the code will be deployed to. If the environment does not exist, the plugin will automatically create.",
          "isOptional": true
        },
        {
          "name": "releaseUrl",
          "type": "String",
          "values": [],
          "description": "Optional. A URL that can view the detail deployment results. If it is empty, no related links are displayed in PingCode.",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "step([$class: 'PartialReleaseMgrSuccessfulBuilder'])",
      "title": "step([$class: 'PartialReleaseMgrSuccessfulBuilder']): Svn-Partial Release Manager (After build)",
      "description": "",
      "parameters": [],
      "plugin": "svn-partial-release-mgr"
    },
    {
      "command": "step([$class: 'PerformanceAnalysisBuilder'])",
      "title": "step([$class: 'PerformanceAnalysisBuilder']): Performance Benchmarking",
      "description": "",
      "parameters": [
        {
          "name": "testjob",
          "type": "String",
          "values": [],
          "description": "Specify the data set name that contains the mainframe job that you want to run the performance benchmarking for, for example, <i>TEST.POC.JCLLIB(TESTJOB)</i>.\n\n \nThe maximum length is 44 characters.\n\n \nEnsure that the job is included in the monitoring scope of the CA MAT Performance Benchmarking plugin by Broadcom.",
          "isOptional": false
        }
      ],
      "plugin": "ca-mat-performance-benchmarking-by-broadcom"
    },
    {
      "command": "step([$class: 'PhabricatorNotifier'])",
      "title": "step([$class: 'PhabricatorNotifier']): Post to Phabricator",
      "description": "",
      "parameters": [
        {
          "name": "commentOnSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "uberallsEnabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "coverageCheck",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "coverageThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "minCoverageThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "coverageReportPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "preserveFormatting",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentWithConsoleLinkOnFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "customComment",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "processLint",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lintFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lintFileSize",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sendPartialResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "phabricator-plugin"
    },
    {
      "command": "step([$class: 'PlayBuilder'])",
      "title": "step([$class: 'PlayBuilder']): Invoke Play Framework",
      "description": "",
      "parameters": [
        {
          "name": "playToolHome",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "playVersion",
          "type": "Nested",
          "values": [
            "$class: 'Play1x'",
            "$class: 'Play2x'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "play-autotest-plugin"
    },
    {
      "command": "step([$class: 'PollingBuildStep'])",
      "title": "step([$class: 'PollingBuildStep']): Poll Fortify on Demand for Results",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pollingInterval",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "policyFailureBuildResultPreference",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientSecret",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "step([$class: 'PolyspacePostBuildActions'])",
      "title": "step([$class: 'PolyspacePostBuildActions']): Polyspace Notification",
      "description": "",
      "parameters": [
        {
          "name": "fileToAttach",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mailBody",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mailBodyBaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mailSubject",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "mailSubjectBaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "queryBaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recipients",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sendToOwners",
          "type": "boolean",
          "values": [],
          "description": "### Send different e-mails to individual recipients\n\n\nSend a different e-mail notification to each recipient with filtered results in attachment. For instance, if you use `$ps_helper -report-filter` in the **Build** section of this project to filter results for a file owner, you can send the filtered report to that file owner. Each time you use `$ps_helper -report-filter` with an owner name, the name is appended to a list of owners. You can send an individual e-mail to all owners in this list.\n\n\nSpecify a base name for file attachments and files containing mail subject and mail body. The recipient name (or owner name) is appended to this base name to create a personalized e-mail for each recipient. The recipient name also determines the e-mail address where this personalized e-mail is sent.\n\n\nFor instance, suppose you specify the following:\n\n\n \n* **Attachment file base name**: report.tsv \n\n \n* **Mail subject file base name**: subject.txt \n\n \n* **Mail body file base name**: body.txt \n\n\n\nIf the list of recipients contains the names `userA` and `userB`:\n\n\n \n* An e-mail is sent to `userA@emailExtension.com`. The email contains the file `report_userA.tsv` in attachment. The mail subject comes from `subject_userA.txt` and the mail body comes from `body_userA.txt`.\n\n \n* An e-mail is sent to `userB@emailExtension.com`. The email contains the file `report_userB.tsv` in attachment. The mail subject comes from `subject_userB.txt` and the mail body comes from `body_userB.txt`.\n\n\n\nThe full e-mail address is determined from the server specified in the E-mail Notification section on the <a rel=\"nofollow\">Configure System</a> page. You can create files for attachments and e-mail content through scripts in the **Build** section of this project. For instance, you can calculate the number of new findings for each owner and use the number in the mail subject for the owner.\n\n\nTo test this personalized e-mail notification, enter an e-mail username (or e-mail address) in the field **Unique recipients - Debug only**. Instead of separate e-mail notifications to individual recipients, all e-mails are sent to this address. After checking the e-mail content in the notifications, clear this field for later builds.",
          "isOptional": true
        },
        {
          "name": "sendToRecipients",
          "type": "boolean",
          "values": [],
          "description": "### Send common e-mail\n\n\n Send a common e-mail notification to multiple users. Specify a comma-separated list of e-mail usernames (or full e-mail addresses). If e-mail usernames are provided, the full e-mail address is determined from the server specified in the E-mail Notification section on the <a rel=\"nofollow\">Configure System</a> page. \n\n\n By default, the e-mail contains the status of the Jenkins build and has no attachment. You can customize the mail subject and body and send a Polyspace report (`.tsv` file) or another file in attachment. Specify the custom subject and body in text files. You can create files for attachments and e-mail content through scripts in the **Build** section of this project. \n\n\n For instance, you can enter this specification: \n\n\n \n* **E-mail usernames**: `johndoe, janedoe`\n\n \n* **Attachment filename**: `Results_All.tsv`\n\n \n* **Mail subject filename**: `mailsubject_common.txt`\n\n \n* **Mail body filename**: `mailbody_common.txt`",
          "isOptional": true
        },
        {
          "name": "uniqueRecipients",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "mathworks-polyspace"
    },
    {
      "command": "step([$class: 'PowerOff'])",
      "title": "step([$class: 'PowerOff']): Power-Off VM",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM to shut down.",
          "isOptional": false
        },
        {
          "name": "evenIfSuspended",
          "type": "boolean",
          "values": [],
          "description": "If the VM is currently suspended, it will still be shutdown.",
          "isOptional": false
        },
        {
          "name": "shutdownGracefully",
          "type": "boolean",
          "values": [],
          "description": "If the VM is powered on and VMware Tools is running, a graceful shutdown will be attempted by performing a Guest Shutdown. If the VM is still running after the timeout has been reached, a hard power off will be performed.",
          "isOptional": false
        },
        {
          "name": "ignoreIfNotExists",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gracefulShutdownTimeout",
          "type": "int",
          "values": [],
          "description": "The number of seconds after which the graceful shutdown attempt is abandoned, and hard power off is performed.",
          "isOptional": true
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'PragprogBuildStep'])",
      "title": "step([$class: 'PragprogBuildStep']): Activate tips from The Pragmatic Programmer",
      "description": "",
      "parameters": [
        {
          "name": "displayLanguageCode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "indicateBuildResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pragprog"
    },
    {
      "command": "step([$class: 'PreflightBuilder'])",
      "title": "step([$class: 'PreflightBuilder']): Run PreFlight Test",
      "description": "",
      "parameters": [
        {
          "name": "clientId",
          "type": "String",
          "values": [],
          "description": "(required) Client Id for PreFlight API. You can generate client id and client secret from [Account Settings&gt;API](https://app.preflight.com/account/api) under your Preflight account.",
          "isOptional": false
        },
        {
          "name": "clientSecret",
          "type": "String",
          "values": [],
          "description": "(required) Client Secret for PreFlight API. You can generate client id and client secret from [Account Settings&gt;API](https://app.preflight.com/account/api) under your Preflight account.",
          "isOptional": false
        },
        {
          "name": "testId",
          "type": "String",
          "values": [],
          "description": "(optional) Pass the Test Id to run. If test id or group id are not passed all the tests will be run.",
          "isOptional": false
        },
        {
          "name": "groupId",
          "type": "String",
          "values": [],
          "description": "(optional) Pass the Group Id to run. If test id or group id are not passed all the tests will be run. You can get it from [ Test Settings&gt;Groups](https://app.preflight.com/tests/settings/groups) under your Preflight account.",
          "isOptional": false
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "(optional) Environment ID for your test group. You can get it from [Test Settings&gt;Environments](https://app.preflight.com/tests/settings/environments) under your Preflight account.",
          "isOptional": false
        },
        {
          "name": "platforms",
          "type": "String",
          "values": [],
          "description": "(optional) Platforms and browsers you want to run your PreFlight tests.\n \n  \n* Example usage `win-chrome`.\n\n  \n* You can pass more than one browser option. Ex. `win-chrome,win-firefox`\n\n  \n* Platform options : `win`\n\n  \n* Browser options : `chrome, ie, edge, firefox`",
          "isOptional": false
        },
        {
          "name": "sizes",
          "type": "String",
          "values": [],
          "description": "(optional) Sizes you want to run your PreFlight tests.\n \n  \n* Example usage. (WidthxHeight) `1440x900`.\n\n  \n* You can pass more than one size option. Ex. `1920x1080, 1440x900`\n\n  \n* Size options : `1920x1080, 1440x900, 1024x768, 480x640`",
          "isOptional": false
        },
        {
          "name": "captureScreenshots",
          "type": "boolean",
          "values": [],
          "description": "Capture screenshots enables taking screenshots of the each step.",
          "isOptional": false
        },
        {
          "name": "waitResults",
          "type": "boolean",
          "values": [],
          "description": "Wait PreFlight test result(s). If you set it as true, your Jenkins build waits your PreFlight test result(s).",
          "isOptional": false
        }
      ],
      "plugin": "preflight-integration"
    },
    {
      "command": "step([$class: 'PublishBuild'])",
      "title": "step([$class: 'PublishBuild']): Publish build information to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "additionalBuildInfo",
          "type": "Nested",
          "values": [
            "buildNumber",
            "buildUrl"
          ],
          "description": "Select this check box if you want to set your own build number.",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Type a name for the application that information is being uploaded for. Use this application name when you configure **DevOps Insights gates**. You can use an environment variable, such as $APP_NAME.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select an API Key from the menu. If no API Key are in the menu, click Add to add one. Click Test Connection to verify the selected credentials. The use of Username/Password will be deprecated soon",
          "isOptional": true
        },
        {
          "name": "toolchainName",
          "type": "String",
          "values": [],
          "description": "Type the ID of your toolchain. If you have not created a toolchain yet, create one [here](https://cloud.ibm.com/devops/create).",
          "isOptional": true
        },
        {
          "name": "orgName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "step([$class: 'PublishDeploy'])",
      "title": "step([$class: 'PublishDeploy']): Publish deployment information to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "toolchainName",
          "type": "String",
          "values": [],
          "description": "Type the ID of your toolchain. If you have not created a toolchain yet, create one [here](https://cloud.ibm.com/devops/create).",
          "isOptional": false
        },
        {
          "name": "buildJobName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the build job that triggers this test job. You can use an environment variable, such as $BUILD_JOB.",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "Type the name of the environment that this job deploys to. If this environment is your staging environment, type \"STAGING.\" If this environment is your production requirement, type \"PRODUCTION.\" If you do not specify staging and production environments, DevOps Insights cannot completely analyze your project.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select an API Key from the menu. If no API Key are in the menu, click Add to add one. Click Test Connection to verify the selected credentials. The use of Username/Password will be deprecated soon",
          "isOptional": false
        },
        {
          "name": "applicationUrl",
          "type": "String",
          "values": [],
          "description": "Optional: If this is a web application, enter its URL. You can use an environment variable, such as $APP_URL.",
          "isOptional": false
        },
        {
          "name": "additionalBuildInfo",
          "type": "Nested",
          "values": [
            "buildNumber"
          ],
          "description": "Select this check box if you want to set your own build number",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Type a name for the application that information is being uploaded for. Use this application name when you configure **DevOps Insights gates**. You can use an environment variable, such as $APP_NAME.",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "step([$class: 'PublishSQ'])",
      "title": "step([$class: 'PublishSQ']): Publish SonarQube test result to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select an API Key from the menu. If no API Key are in the menu, click Add to add one. Click Test Connection to verify the selected credentials. The use of Username/Password will be deprecated soon",
          "isOptional": false
        },
        {
          "name": "toolchainName",
          "type": "String",
          "values": [],
          "description": "Select a toolchain. If you have not created a toolchain yet, create one [here](https://cloud.ibm.com/devops/create).",
          "isOptional": false
        },
        {
          "name": "buildJobName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the build job that triggers this test job. You can use an environment variable, such as $BUILD_JOB.",
          "isOptional": false
        },
        {
          "name": "SQHostName",
          "type": "String",
          "values": [],
          "description": "Type the hostname of the server that your SonarQube instance runs on. Do not enter a trailing slash.",
          "isOptional": false
        },
        {
          "name": "SQAuthToken",
          "type": "String",
          "values": [],
          "description": "Enter your API token that SonarQube generated for you.",
          "isOptional": false
        },
        {
          "name": "SQProjectKey",
          "type": "String",
          "values": [],
          "description": "Type the key of the SonarQube project that you wish to scan.",
          "isOptional": false
        },
        {
          "name": "additionalBuildInfo",
          "type": "Nested",
          "values": [
            "buildNumber"
          ],
          "description": "Select this check box if you want to set your own build number",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Type a name for the application that information is being uploaded for. Use this application name when you configure **DevOps Insights gates**. You can use an environment variable, such as $APP_NAME.",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "step([$class: 'PublishTest'])",
      "title": "step([$class: 'PublishTest']): Publish test result to IBM Cloud DevOps",
      "description": "",
      "parameters": [
        {
          "name": "lifecycleStage",
          "type": "String",
          "values": [],
          "description": "Select the type of test. Your tests must correspond to rules in policies.\n \n   Supported formats:\n  \n* Code coverage: Istanbul, BlanketJS\n\n  \n* Unit and functional verification tests: Mocha, xUnit, and Karma Mocha",
          "isOptional": false
        },
        {
          "name": "contents",
          "type": "String",
          "values": [],
          "description": "Enter the test result file location relative to the root directory. The result file must contain results in the format that you selected for the metric type. This field supports wildcards and environment variables. If you leave this field empty, DevOps Insights generates a simple test report that is based on job status. Mocha, KarmaMocha, Istanbul, and BlanketJS test results must be in the JSON format. xUnit test results must be in the XML format.",
          "isOptional": false
        },
        {
          "name": "toolchainName",
          "type": "String",
          "values": [],
          "description": "Select a toolchain. If you have not created a toolchain yet, create one [here](https://cloud.ibm.com/devops/create).",
          "isOptional": false
        },
        {
          "name": "buildJobName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the build job that triggers this test job. You can use an environment variable, such as $BUILD_JOB.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Select an API Key from the menu. If no API Key are in the menu, click Add to add one. Click Test Connection to verify the selected credentials. The use of Username/Password will be deprecated soon",
          "isOptional": false
        },
        {
          "name": "additionalUpload",
          "type": "Nested",
          "values": [
            "additionalLifecycleStage",
            "additionalContents"
          ],
          "description": "Optional: You can upload another test result file and select another metric type in this job.",
          "isOptional": false
        },
        {
          "name": "additionalBuildInfo",
          "type": "Nested",
          "values": [
            "buildNumber"
          ],
          "description": "Select this check box if you want to set your own build number",
          "isOptional": false
        },
        {
          "name": "additionalGate",
          "type": "Nested",
          "values": [
            "policyName",
            "willDisrupt"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testEnv",
          "type": "Nested",
          "values": [
            "value",
            "branchName",
            "envName"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Type a name for the application that information is being uploaded for. Use this application name when you configure **DevOps Insights gates**. You can use an environment variable, such as $APP_NAME.",
          "isOptional": true
        }
      ],
      "plugin": "ibm-cloud-devops"
    },
    {
      "command": "step([$class: 'Publisher'])",
      "title": "step([$class: 'Publisher']): Publish TestNG Results",
      "description": "",
      "parameters": [
        {
          "name": "escapeExceptionMsg",
          "type": "boolean",
          "values": [],
          "description": "**Escape exception messages?**\n \nIf checked, the plug-in escapes the test method's exception messages. Unchecking this allows you to use HTML tags to format the exception message e.g. embed links in the text. (Enabled by default)",
          "isOptional": true
        },
        {
          "name": "escapeTestDescp",
          "type": "boolean",
          "values": [],
          "description": "**Escape Test Description string?**\n \nIf checked, the plug-in escapes the description string associated with the test method while displaying test method details. Unchecking this allows you to use HTML tags to format the description. (Enabled by default)",
          "isOptional": true
        },
        {
          "name": "failedFails",
          "type": "int",
          "values": [],
          "description": "**Fails - Failed Threshold**\n \nA build is marked FAILURE if the number/percentage of failed tests exceeds the specified threshold.",
          "isOptional": true
        },
        {
          "name": "failedSkips",
          "type": "int",
          "values": [],
          "description": "**Skips - Failed Threshold**\n \nA build is marked FAILURE if the number/percentage of skipped tests exceeds the specified threshold.",
          "isOptional": true
        },
        {
          "name": "failureOnFailedTestConfig",
          "type": "boolean",
          "values": [],
          "description": "**Mark as failure on Failed Test Configuration Methods**\n \nAllows for a distinction between failing tests and failing configuration methods. Failing tests can be seen as an unstable build whereas failing configuration methods are a failed build. This will trump any settings in Thresholds section.",
          "isOptional": true
        },
        {
          "name": "reportFilenamePattern",
          "type": "String",
          "values": [],
          "description": "**TestNG XML report pattern**\n \nThis is a file name pattern that can be used to locate the TestNG XML report files (for example ****/target/testng-results.xml**).\n\n \nThe path is an Ant-style pattern (e.g. fileset) or a list of files and folders separated by the characters **;:,**\n\n \nTestNG must be configured to generate XML reports using **org.testng.reporters.XMLReporter** for this plug-in to function.",
          "isOptional": true
        },
        {
          "name": "showFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "**Show Failed builds in Trend Graph?**\n \nIf checked, the plug-in includes results from failed builds in the trend graph. (Disabled by default) \n\n \n**Note**: \n\n \n  \n* If this is a maven build, it is better to configure the build step with `-Dmaven.test.failure.ignore=true` option. This results in build with test failures being marked as Unstable, thus distinguishing it from build that failed because of non test related issues\n\n  \n* Even when this option is selected, failed builds with no results and aborted builds will not be displayed in graphs",
          "isOptional": true
        },
        {
          "name": "thresholdMode",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableFails",
          "type": "int",
          "values": [],
          "description": "**Fails - Unstable Threshold**\n \nA build is marked UNSTABLE if the number/percentage of failed tests exceeds the specified threshold.",
          "isOptional": true
        },
        {
          "name": "unstableSkips",
          "type": "int",
          "values": [],
          "description": "**Skips - Unstable Threshold**\n \nA build is marked UNSTABLE if the number/percentage of skipped tests exceeds the specified threshold.",
          "isOptional": true
        }
      ],
      "plugin": "testng-plugin"
    },
    {
      "command": "step([$class: 'QTM4JResultPublisher'])",
      "title": "step([$class: 'QTM4JResultPublisher']): Publish test result to QMetry for JIRA Old",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apikey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attachFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testrunname",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sprint",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "component",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apikeyserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraurlserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxyUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testrunnameserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labelsserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sprintserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "componentserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "attachFileServer",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "formatserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platformserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commentserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testrunkey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testassethierarchy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseUpdateLevel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jirafields",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testrunkeyserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testassethierarchyserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseUpdateLevelServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jirafieldsserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "disableaction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qmetry-for-jira-test-management"
    },
    {
      "command": "step([$class: 'QTMReportPublisher'])",
      "title": "step([$class: 'QTMReportPublisher']): Publish Build Result(s) to QMetry Test Management",
      "description": "",
      "parameters": [
        {
          "name": "qtmUrl",
          "type": "String",
          "values": [],
          "description": "URL to your QTM application",
          "isOptional": false
        },
        {
          "name": "qtmAutomationApiKey",
          "type": "String",
          "values": [],
          "description": "Get your Automation API Key from QTM interface.\n\n\n\n \n* Login to QTM\n\n \n* Go to Automation &gt; Automation Agent\n\n \n* Copy 'Key'",
          "isOptional": false
        },
        {
          "name": "proxyUrl",
          "type": "String",
          "values": [],
          "description": "Enter Proxy URL",
          "isOptional": false
        },
        {
          "name": "automationFramework",
          "type": "String",
          "values": [],
          "description": "Test Automation framework used in your project to produce Test Result File(s) to be uploaded to QTM. supported formats are :-\n\n\n\n \n* Json file(s) from Cucumber Tests\n\n \n* Xml file(s) from Junit Tests\n\n \n* Xml file(s) from TestNG Tests\n\n \n* Json file(s) from QAS Tests\n\n \n* XML file(s) from HP-UFT Tests\n\n \n* XML file(s) from Robot Tests",
          "isOptional": false
        },
        {
          "name": "automationHierarchy",
          "type": "String",
          "values": [],
          "description": "Hierarchy which will be used to parse test result files on QTM. supported formats are :-\n\n\n\n \n* JUnit\n  \n   \n* 1 - Use current Hierarchy in which JUnit  is treated as TestStep and  is treated as Testcase\n\n   \n* 2 - Use Junit  as Testcase and link all those (from all testsuites and all files of Junit) to one Testsuite\n\n   \n* 3 - Create Multiple Testsuites and then link their respective testcases in corresponding Testsuites\n\n   \n\n \n* TestNG\n  \n   \n* 1 - Use  as Testcase and  as TestStep\n\n   \n* 2 - Use  as Testcase\n\n   \n* 3 - Use  as TestCase and  as TestStep",
          "isOptional": false
        },
        {
          "name": "testResultFilePath",
          "type": "String",
          "values": [],
          "description": "Path to result files to be uploaded to QTM relative to your Build directory.\n \n\n Provide a path to directory to upload multiple files at once.",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "Cycle name attached to your test suite in QTM.",
          "isOptional": false
        },
        {
          "name": "testSuiteName",
          "type": "String",
          "values": [],
          "description": "Test suite Key or Id (This will upload results to existing test suite with given Id or Key)",
          "isOptional": false
        },
        {
          "name": "testSName",
          "type": "String",
          "values": [],
          "description": "Test Suite Name (This will create a new test suite with given name. It will be ignored if automation framework is JUnit and automation hierarchy is 3)",
          "isOptional": false
        },
        {
          "name": "platformName",
          "type": "String",
          "values": [],
          "description": "Name of platform linked with Test Suite",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "Target Project ID or project Key or project name",
          "isOptional": false
        },
        {
          "name": "release",
          "type": "String",
          "values": [],
          "description": "Target Release ID or Release name",
          "isOptional": false
        },
        {
          "name": "cycle",
          "type": "String",
          "values": [],
          "description": "Target Cycle Id or Cycle Name",
          "isOptional": false
        },
        {
          "name": "disableaction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testcaseFields",
          "type": "String",
          "values": [],
          "description": "Enter Test Case Fields in Json Format (add \"Field Name\" as json key in JSON object.) System defined fields supported by test-case module are description, testCaseType, testCaseState, component, priority, testcaseOwner, estimatedTime. User can also add User defined fields. Ex. testcaseFields: {\"description\":\"Automated Test case\", \"testCaseType\":\"Security\", \"testCaseState\":\"Rejected\", \"component\":[\"x\"], \"priority\":\"Blocker\", \"testcaseOwner\":\"john.deo\", \"estimatedTime\":\"143\", \"userDefinedFields\" : {\"Integrate\" : \"Custom Field Test case\"}}",
          "isOptional": false
        },
        {
          "name": "testsuiteFields",
          "type": "String",
          "values": [],
          "description": "Enter Test Suite Fields in Json Format (add \"Field Name\" as json key in JSON object.) System defined fields supported by test-suite module are description, testsuiteOwner, testSuiteState. User can also add Userdefined fields. Ex. testsuiteFields: {\"description\":\"Automated Test suite\", \"testsuiteOwner\": \"John.deo\", \"testSuiteState\": \"New\", \"userDefinedFields\": {\"Integrate\" : \"Custom Field Test suite\"}}",
          "isOptional": false
        },
        {
          "name": "skipWarning",
          "type": "String",
          "values": [],
          "description": "Skip Warning while uploading Test Result File(s) to QTM. supported values are :-\n\n\n\n \n* 0 - Test Case Import will be failed if the Test Case summary is more than 255 characters\n\n \n* 1 - Test Case will be imported by truncating the Test Case summary to 255 characters",
          "isOptional": false
        }
      ],
      "plugin": "qmetry-test-management"
    },
    {
      "command": "step([$class: 'RSpecTestReportPublisher'])",
      "title": "step([$class: 'RSpecTestReportPublisher']): Publish RSpec reports generated with handlebars",
      "description": "",
      "parameters": [
        {
          "name": "reportsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileIncludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileExcludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markAsUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "copyHTMLInWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "bootstraped-multi-test-results-report"
    },
    {
      "command": "step([$class: 'RTCGitBuilder'])",
      "title": "step([$class: 'RTCGitBuilder']): Rational Team Concert(RTC) integration for Git",
      "description": "",
      "parameters": [
        {
          "name": "serverURI",
          "type": "String",
          "values": [],
          "description": "The Jazz Repository connection URI for the Rational Team Concert (RTC) server",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Credentials to use for the build user. A user name and password credential for the Jazz Repository should be configured.",
          "isOptional": false
        },
        {
          "name": "annotateChangeLog",
          "type": "boolean",
          "values": [],
          "description": "Optionally hyperlink bug numbers that appear in git commit descriptions as links to Rational Team Concert Work Items.",
          "isOptional": false
        },
        {
          "name": "buildDefinition",
          "type": "String",
          "values": [],
          "description": "The ID of the Hudson/Jenkins build definition within the Rational Team Concert (RTC) server. The build definition should not have any Source Control option.",
          "isOptional": true
        },
        {
          "name": "jenkinsRootURI",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jenkinsRootURIOverride",
          "type": "boolean",
          "values": [],
          "description": "Optionally specify the HTTP address of the Jenkins installation, such as http://yourhost.yourdomain/jenkins/. This is necessary because the Rational Team Concert Git plugin cannot reliably detect such a URL from within itself.",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "The timeout period in seconds for Jazz repository requests made during the build.",
          "isOptional": true
        },
        {
          "name": "trackBuildWorkItem",
          "type": "String",
          "values": [],
          "description": "Specify an Id of a Work Item in Rational Team Concert. The Work Item will be updated with the execution status of the Jenkins build.",
          "isOptional": true
        },
        {
          "name": "useBuildDefinition",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useTrackBuildWorkItem",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useWorkItems",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "workItemUpdateType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "teamconcert-git"
    },
    {
      "command": "step([$class: 'RTCPostBuildDeliverPublisher'])",
      "title": "step([$class: 'RTCPostBuildDeliverPublisher']): RTC Post Build Deliver",
      "description": "Perform post build deliver for Rational Team Concert(RTC) SCM configuration in the Jenkins build. \n\n \n In a Pipeline job where RTC SCM can be called multiple times, post build deliver will be attempted for each invocation of RTC SCM. \n\n \n Currently, post build deliver is performed only if a build definition is used as the build configuration. The step uses the post build deliver configuration information from the build definition.",
      "parameters": [
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "If post build deliver operation fails, set the build's status to FAILURE.",
          "isOptional": false
        }
      ],
      "plugin": "teamconcert"
    },
    {
      "command": "step([$class: 'RadarGunPublisher'])",
      "title": "step([$class: 'RadarGunPublisher']): Report Performance Test Results (RadarGun)",
      "description": "",
      "parameters": [],
      "plugin": "radargun-reporting"
    },
    {
      "command": "step([$class: 'RawCliBuilder'])",
      "title": "step([$class: 'RawCliBuilder']): Liquibase: CLI Command",
      "description": "",
      "parameters": [
        {
          "name": "changeLogFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeLogParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commandArguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contexts",
          "type": "String",
          "values": [],
          "description": "Liquibase contexts to execute under.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Liquibase labels to execute",
          "isOptional": true
        },
        {
          "name": "liquibasePropertiesPath",
          "type": "String",
          "values": [],
          "description": "A liquibase.properties file can be used for default values. Any of the below settings will override what is in this file. This file should be relative to a directory listed in the \"Resource directories\" section.",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceDirectories",
          "type": "String",
          "values": [],
          "description": "Leave blank for workspace root. May be relative to workspace or an absolute path.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "example: jdbc:mysql://localhost:3306/sampledb. The JDBC driver must be available in the \"lib\" directory of your Liquibase installation",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "liquibase-runner"
    },
    {
      "command": "step([$class: 'RcovPublisher'])",
      "title": "step([$class: 'RcovPublisher']): Publish Rcov report",
      "description": "",
      "parameters": [
        {
          "name": "reportDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targets",
          "type": "Nested",
          "values": [
            "metric",
            "healthy",
            "unhealthy",
            "unstable"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "rubymetrics"
    },
    {
      "command": "step([$class: 'Reconfigure'])",
      "title": "step([$class: 'Reconfigure']): Reconfigure VM",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM or template to reconfigure.",
          "isOptional": false
        },
        {
          "name": "reconfigureSteps",
          "type": "Nested",
          "values": [
            "$class: 'ReconfigureAnnotation'",
            "$class: 'ReconfigureCpu'",
            "$class: 'ReconfigureDisk'",
            "$class: 'ReconfigureMemory'",
            "$class: 'ReconfigureNetworkAdapters'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'RemoteBuildConfiguration'])",
      "title": "step([$class: 'RemoteBuildConfiguration']): Trigger a remote parameterized job",
      "description": "",
      "parameters": [
        {
          "name": "abortTriggeredJob",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "auth2",
          "type": "Nested",
          "values": [
            "BearerTokenAuth",
            "CredentialsAuth",
            "NoneAuth",
            "NullAuth",
            "TokenAuth"
          ],
          "description": "Using this parameter you can override the authentication used to connect to the selected remote Jenkins.\n \n  \n* **Don't Override**\n\n The authentication configured in the (global) settings of the selected 'remote host' is used. \n\n  \n* **Token Authentication**\n\n The specified user id and Jenkins API token is used. \n\n  \n* **Credentials Authentication**\n\n The specified Jenkins Credentials are used. This can be either user/password or user/API Token. \n\n  \n* **No Authentication**\n\n No Authorization header will be sent, independent of the global 'remote host' settings. \n\n  \n* **Bearer Authentication**\n\n The bearer token is used. \n\n  **Note:** <i>Jenkins API Tokens</i> are recommended since, if stolen, they allow access only to a specific Jenkins while user and password typically provide access to many systems.",
          "isOptional": true
        },
        {
          "name": "blockBuildUntilComplete",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disabled",
          "type": "boolean",
          "values": [],
          "description": "Set this field to disable the job step instead of removing it from job configuration.",
          "isOptional": true
        },
        {
          "name": "enhancedLogging",
          "type": "boolean",
          "values": [],
          "description": "Enable Enhanced Logging\n \n If this option is enabled, the console output of the remote job is also logged.",
          "isOptional": true
        },
        {
          "name": "httpGetReadTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpPostReadTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Remote Job Name or full URL.\n \n The name or URL of the job on the remote Jenkins host which you would like to trigger. If the full job URL is specified the URL of the remote Jenkins host configured above will be ignored.",
          "isOptional": true
        },
        {
          "name": "loadParamsFromFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxConn",
          "type": "int",
          "values": [],
          "description": "The max concurrent connections to the remote host, default is 1, max is 5. It'll be 5 even if you set it greater than 5. **Note:** Set this field with caution, too many concurrent requests will not only fail your local jobs,\n \n\n but also block the remote server.",
          "isOptional": true
        },
        {
          "name": "overrideTrustAllCertificates",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameterFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "String",
          "values": [],
          "description": "Job Parameters\n \n Parameters which will be used when triggering the remote job.\n \n\n If no parameters are needed, then just leave this blank.\n \n\n Any line start with a pound-sign (#) will be treated as a comment.",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "preventRemoteBuildQueue",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteJenkinsName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "remoteJenkinsUrl",
          "type": "String",
          "values": [],
          "description": "It is possible to override the Remote Jenkins URL for each Job separately.",
          "isOptional": true
        },
        {
          "name": "shouldNotFailBuild",
          "type": "boolean",
          "values": [],
          "description": "Do Not Fail If Remote Fails\n \n If this option is enabled, the build will not fail even if the remote build fails.",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "Remote Job Token\n \n Security token which is defined on the job of the remote Jenkins host.\n \n\n If no job token is needed to trigger this job, then just leave it blank",
          "isOptional": true
        },
        {
          "name": "trustAllCertificates",
          "type": "boolean",
          "values": [],
          "description": "Trust all certificates\n \n\n \n It is possible to override/rewrite the 'Trust all certificate'-setting for each Job separately. Setting this checkbox to 'true' will result in accepting all certificates for the given Job. \n\n \n\n   If your remote Jenkins host has a [ self-signed certificate ](https://en.wikipedia.org/wiki/Self-signed_certificate) or its certificate is not trusted, you may want to enable this option. It will accept untrusted certificates for the given host.\n \n\n \n**This is unsafe and should only be used for testing or if you trust the host.**",
          "isOptional": true
        },
        {
          "name": "useCrumbCache",
          "type": "boolean",
          "values": [],
          "description": "Set this field to enable cache of the crumb of remote server.\n \n\n It'll be more efficient for the local job execution & more stable for remote server when massive concurrent jobs are triggered.\n \n\n This cache will be cleared every 10 minutes.",
          "isOptional": true
        },
        {
          "name": "useJobInfoCache",
          "type": "boolean",
          "values": [],
          "description": "Set this field to enable cache of the job info of remote server.\n \n\n It'll be more efficient for the local job execution & more stable for remote server when massive concurrent jobs are triggered.\n \n\n This cache will be cleared every 10 minutes.",
          "isOptional": true
        }
      ],
      "plugin": "parameterized-remote-trigger"
    },
    {
      "command": "step([$class: 'Rename'])",
      "title": "step([$class: 'Rename']): Rename VM",
      "description": "",
      "parameters": [
        {
          "name": "oldName",
          "type": "String",
          "values": [],
          "description": "The old name of the VM or template to be renamed.",
          "isOptional": false
        },
        {
          "name": "newName",
          "type": "String",
          "values": [],
          "description": "The new name of the VM or template.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'RenameSnapshot'])",
      "title": "step([$class: 'RenameSnapshot']): Rename Snapshot",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM or template.",
          "isOptional": false
        },
        {
          "name": "oldName",
          "type": "String",
          "values": [],
          "description": "The old name of the snapshot to be renamed.",
          "isOptional": false
        },
        {
          "name": "newName",
          "type": "String",
          "values": [],
          "description": "The new name of the snapshot.",
          "isOptional": false
        },
        {
          "name": "newDescription",
          "type": "String",
          "values": [],
          "description": "The new description of the snapshot.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'ReqtifyGenerateReport'])",
      "title": "step([$class: 'ReqtifyGenerateReport']): Reqtify: Generate Report",
      "description": "Creation of a report. The plugin will find a .rqtf file in the workspace and make a report. You can choose:\n \n  \n* The name of report\n\n  \n* The model of report\n\n  \n* The template of report",
      "parameters": [
        {
          "name": "reportArgumentList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nameReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "modelReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "templateReport",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reqtify"
    },
    {
      "command": "step([$class: 'RevertToSnapshot'])",
      "title": "step([$class: 'RevertToSnapshot']): Revert to Snapshot",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM.",
          "isOptional": false
        },
        {
          "name": "snapshotName",
          "type": "String",
          "values": [],
          "description": "The name of the snapshot.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'RichTextPublisher'])",
      "title": "step([$class: 'RichTextPublisher']): Publish rich text message",
      "description": "",
      "parameters": [
        {
          "name": "stableText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for stable and (if corresponding checkboxes are selected) for unstable and failed builds. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": false
        },
        {
          "name": "unstableText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build anyd job summary pages for unstable builds. This text will be used only if \"The same text for unstable builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": false
        },
        {
          "name": "failedText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for failed builds. This text will be used only if \"The same text for failed builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": false
        },
        {
          "name": "abortedText",
          "type": "String",
          "values": [],
          "description": "Specify rich text to be published on build and job summary pages for aborted builds. This text will be used only if \"The same text for aborted builds as for stable\" checkbox is not selected. Build parameters may be put in `${PARAM_NAME}` format. Global environment variable values may be put in `${ENV:VAR_NAME}` format. \n\n\n Content of specified files may be also added to summary page. Use `${FILE:path/to/file.txt}` to put entire file contents. Use `${FILE_SL:path/to/file.txt}` to put file contents as single line (all CR and LF symbols are skipped).",
          "isOptional": false
        },
        {
          "name": "unstableAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and unstable builds.",
          "isOptional": false
        },
        {
          "name": "failedAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and failed builds.",
          "isOptional": false
        },
        {
          "name": "abortedAsStable",
          "type": "boolean",
          "values": [],
          "description": "When selected, the same text block is used for stable and aborted builds.",
          "isOptional": false
        },
        {
          "name": "parserName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nullAction",
          "type": "String",
          "values": [],
          "description": "Select what happens in the case that the buildstate is null or unknown",
          "isOptional": false
        }
      ],
      "plugin": "rich-text-publisher-plugin"
    },
    {
      "command": "step([$class: 'RobotPublisher'])",
      "title": "step([$class: 'RobotPublisher']): Publish Robot Framework test results",
      "description": "Publishes [Robot Framework](http://code.google.com/p/robotframework/) test reports into Hudson user interface.\n\n \nNote that you must configure your build to produce these reports before you can publish them with this plugin.\n\n \nAll text fields support the use of environment variables available during build (e.g. ${BUILD_NUMBER}).",
      "parameters": [
        {
          "name": "archiveDirName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/output*.xml).\n\n \nSplitted files will be copied automatically. If file name is specified output.xml then all output-xxx.xml will be saved.",
          "isOptional": false
        },
        {
          "name": "disableArchiveOutput",
          "type": "boolean",
          "values": [],
          "description": "output xml files are not needed by Jenkins once the publishing step of the build is finished.\n\n \nThey are archived for traceability or reuse in some other context.\n\n \nYou might want to disable archiving of those output xml files to save disk space on the Jenkins server.",
          "isOptional": false
        },
        {
          "name": "reportFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/report*.html).\n\n \nSplitted files will be copied automatically. If file name is specified report.html then all report-xxx.html will be saved.",
          "isOptional": false
        },
        {
          "name": "logFileName",
          "type": "String",
          "values": [],
          "description": "File name relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/log*.html).\n\n \nSplitted files will be copied automatically. If file name is specified log.html then all log-xxx.html will be saved.",
          "isOptional": false
        },
        {
          "name": "passThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThreshold",
          "type": "double",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "onlyCritical",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "otherFiles",
          "type": "String",
          "values": [],
          "description": "Comma separated list of file names relative to output path. Supports [Ant GLOB](http://ant.apache.org/manual/dirtasks.html#patterns) style wildcards (e.g. **/screenshot*.jpg).\n\n \nYou can save any artifacts related to tests (e.g. Selenium screenshots) in the robot directory by configuring the filenames here. Items that are linked to the robot log files - like screenshots - have to be explicitly saved here in order to view them in the stored logs.",
          "isOptional": false
        },
        {
          "name": "enableCache",
          "type": "boolean",
          "values": [],
          "description": "Enable cache for test results (produces memory pressure)",
          "isOptional": false
        },
        {
          "name": "overwriteXAxisLabel",
          "type": "String",
          "values": [],
          "description": "Pattern to format x axis label in trend graphs. You can use $build for build number beside all letters from java class DateTimeFormatter (e.g. MM-dd HH:mm). Already created and cached images are not affected",
          "isOptional": false
        }
      ],
      "plugin": "robot"
    },
    {
      "command": "step([$class: 'RollbackBuilder'])",
      "title": "step([$class: 'RollbackBuilder']): Liquibase: Roll Back Changes",
      "description": "",
      "parameters": [
        {
          "name": "changeLogFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeLogParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contexts",
          "type": "String",
          "values": [],
          "description": "Liquibase contexts to execute under.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Liquibase labels to execute",
          "isOptional": true
        },
        {
          "name": "liquibasePropertiesPath",
          "type": "String",
          "values": [],
          "description": "A liquibase.properties file can be used for default values. Any of the below settings will override what is in this file. This file should be relative to a directory listed in the \"Resource directories\" section.",
          "isOptional": true
        },
        {
          "name": "numberOfChangesetsToRollback",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceDirectories",
          "type": "String",
          "values": [],
          "description": "Leave blank for workspace root. May be relative to workspace or an absolute path.",
          "isOptional": true
        },
        {
          "name": "rollbackLastHours",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackToDate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackToTag",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "rollbackType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "example: jdbc:mysql://localhost:3306/sampledb. The JDBC driver must be available in the \"lib\" directory of your Liquibase installation",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "liquibase-runner"
    },
    {
      "command": "step([$class: 'RunApplicationAction'])",
      "title": "step([$class: 'RunApplicationAction']): Nutanix Calm Application Action Run",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Application selection is mandatory\n\n \nSelect an existing Application in Calm or the ones provisioned in Nutanix Calm Blueprint Launch Steps.",
          "isOptional": false
        },
        {
          "name": "actionName",
          "type": "String",
          "values": [],
          "description": "Application Action selection is mandatory",
          "isOptional": false
        },
        {
          "name": "runtimeVariables",
          "type": "String",
          "values": [],
          "description": "Click on Fetch Runtime Variables to fetch all editable variables for the selected Action in JSON format. Modify the key values from the defaults as needed.The values can also reference jenkins environment variables.",
          "isOptional": false
        }
      ],
      "plugin": "nutanix-calm"
    },
    {
      "command": "step([$class: 'RunFromFileBuilder'])",
      "title": "step([$class: 'RunFromFileBuilder']): Execute Micro Focus tests from file system",
      "description": "",
      "parameters": [
        {
          "name": "fsTests",
          "type": "String",
          "values": [],
          "description": "List of tests or folders that contain tests, to run. Each line should contain a single test, folder, or MTB file.",
          "isOptional": false
        },
        {
          "name": "fileSystemTestSetModel",
          "type": "Nested",
          "values": [
            "fileSystemTestSet"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "summaryDataLogModel",
          "type": "Nested",
          "values": [
            "logVusersStates",
            "logErrorCount",
            "logTransactionStatistics",
            "pollingInterval"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scriptRTSSetModel",
          "type": "Nested",
          "values": [
            "scripts"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "isParallelRunnerEnabled",
          "type": "boolean",
          "values": [],
          "description": "**Note**: This mode is for UFT GUI test only.With it enabled, you can define multiple tests and the environments to run with.\n \n\n\n \n\n UFT will run on those environments in parallel(**at most 4 environments** simultaneously) for each test.\n \n\n\n \n\n Disabling this option will switch back to the normal view with the tests kept.",
          "isOptional": true
        },
        {
          "name": "uftSettingsModel",
          "type": "Nested",
          "values": [
            "selectedNode",
            "numberOfReruns",
            "cleanupTest",
            "onCheckFailedTest",
            "fsTestType",
            "rerunSettingsModels"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "analysisTemplate",
          "type": "String",
          "values": [],
          "description": "Apply a template for the build (path to a .tem file). Leave blank in order to use the default template.",
          "isOptional": true
        },
        {
          "name": "controllerPollingInterval",
          "type": "String",
          "values": [],
          "description": "Polling interval for checking the scenario status, in seconds. The default is 30 seconds.",
          "isOptional": true
        },
        {
          "name": "displayController",
          "type": "String",
          "values": [],
          "description": "Display the controller while the scenario is running.",
          "isOptional": true
        },
        {
          "name": "fsAutActions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsDeviceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsDevicesMetrics",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsExtraApps",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsInstrumented",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsJobId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsLaunchAppName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsManufacturerAndModel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsOs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsPassword",
          "type": "String",
          "values": [],
          "description": "The password for Mobile Center.",
          "isOptional": true
        },
        {
          "name": "fsReportPath",
          "type": "String",
          "values": [],
          "description": "The directory where the test results will be saved. If this is left empty the default directory will be used.",
          "isOptional": true
        },
        {
          "name": "fsTargetLab",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsTimeout",
          "type": "String",
          "values": [],
          "description": "Timeout value in seconds. If left empty, there is no timeout.",
          "isOptional": true
        },
        {
          "name": "fsUftRunMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsUserName",
          "type": "String",
          "values": [],
          "description": "The user name for Mobile Center.",
          "isOptional": true
        },
        {
          "name": "ignoreErrorStrings",
          "type": "String",
          "values": [],
          "description": "Ignore errors during the scenario run containing any of the strings listed below. For example: \"Error: CPU usage for this load generator has exceeded 80%\"",
          "isOptional": true
        },
        {
          "name": "mcServerName",
          "type": "String",
          "values": [],
          "description": "The Mobile Center host.",
          "isOptional": true
        },
        {
          "name": "mcTenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "perScenarioTimeOut",
          "type": "String",
          "values": [],
          "description": "The maximum time allotted for scenario execution, in minutes.",
          "isOptional": true
        },
        {
          "name": "proxySettings",
          "type": "Nested",
          "values": [
            "fsUseAuthentication",
            "fsProxyAddress",
            "fsProxyUserName",
            "fsProxyPassword"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultFileNames",
          "type": "java.util.Map<java.lang.Long, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useSSL",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'RunLoadRunnerScript'])",
      "title": "step([$class: 'RunLoadRunnerScript']): Run LoadRunner script",
      "description": "",
      "parameters": [
        {
          "name": "scriptsPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'RunMatlabCommandBuilder'])",
      "title": "step([$class: 'RunMatlabCommandBuilder']): Run MATLAB Command",
      "description": "",
      "parameters": [
        {
          "name": "matlabCommand",
          "type": "String",
          "values": [],
          "description": "Insert the MATLAB commands you want to execute in the **Command** box. If you need to specify more than one command, use a comma or semicolon to separate the commands.\n \n\n **Example: **results = runtests, assertSuccess(results);\n \n\n\n \n\n If you need to specify several MATLAB commands, consider writing a MATLAB script or function and executing this script or function instead. (To run a script or function, do not specify the file extension.)\n \n\n **Example: **myscript\n \n\n\n \n\n&nbsp;\n \n\n **Note:**\n \n  \n* The build fails if the execution of any command results in an error.\n\n  \n* If the build uses a MATLAB version prior to R2020a, MATLAB might display non-ASCII characters, specified in the **Command** box, as garbled text. If you specify non-ASCII characters in your commands, consider running your commands as a .m or .mlx file created in the same locale that MATLAB uses on the build agent",
          "isOptional": true
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "step([$class: 'RunMatlabTestsBuilder'])",
      "title": "step([$class: 'RunMatlabTestsBuilder']): Run MATLAB Tests",
      "description": "",
      "parameters": [
        {
          "name": "coberturaArtifact",
          "type": "Nested",
          "values": [
            "coberturaReportFilePath"
          ],
          "description": "Generate a code coverage report in Cobertura XML format. By default, MATLAB names the artifact **cobertura.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        },
        {
          "name": "junitArtifact",
          "type": "Nested",
          "values": [
            "junitReportFilePath"
          ],
          "description": "Generate a test report in JUnit XML format. By default, MATLAB names the artifact **junittestresults.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        },
        {
          "name": "modelCoverageArtifact",
          "type": "Nested",
          "values": [
            "modelCoverageFilePath"
          ],
          "description": "Generate a model coverage report in Cobertura XML format. This artifact includes coverage results for Simulink® models that are tested using Simulink Test™. By default, MATLAB names the artifact **coberturamodelcoverage.xml** and stores it in the **matlabTestArtifacts** folder of the project workspace.\n \n\n\n \n\n**Note:** This feature requires a **Simulink Coverage™** license and is supported only in MATLAB R2018b or a newer release.",
          "isOptional": true
        },
        {
          "name": "pdfReportArtifact",
          "type": "Nested",
          "values": [
            "pdfReportFilePath"
          ],
          "description": "Generate a test report in PDF format. By default, MATLAB names the artifact **testreport.pdf** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.\n \n\n\n \n\n Due to Jenkins Content Security Policy rules, the generated report might not open properly from within the Jenkins workspace. Consider copying the report to a location outside the workspace and opening it from there. For more information, see [Configuring Jenkins Content Security Policy](http://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy).\n \n\n\n \n\n **Note:** This feature is not currently supported on Mac platforms.",
          "isOptional": true
        },
        {
          "name": "selectByFolder",
          "type": "Nested",
          "values": [
            "testFolderPaths"
          ],
          "description": "Specify the location of folders used to select test suite elements, relative to the project root folder. To generate a test suite, the plugin uses only the tests in the specified folders and their subfolders.\n \n\n Paste the test folder path in the text box. To add more folders, click **Add folder.**",
          "isOptional": true
        },
        {
          "name": "selectByTag",
          "type": "Nested",
          "values": [
            "testTag"
          ],
          "description": "Specify the test tag used to select test suite elements. To generate a suite, the plugin uses only the test elements with the specified tag.",
          "isOptional": true
        },
        {
          "name": "sourceFolder",
          "type": "Nested",
          "values": [
            "sourceFolderPaths"
          ],
          "description": "Specify the location of folders containing source code, relative to the project root folder. The specified folders and their subfolders are added to the top of the MATLAB search path. To generate a coverage report, MATLAB uses only the source code in the specified folders and their subfolders.\n\n \nPaste the source folder path in the **Folder path** box. To add more folders, click **Add folder**.",
          "isOptional": true
        },
        {
          "name": "stmResultsArtifact",
          "type": "Nested",
          "values": [
            "stmResultsFilePath"
          ],
          "description": "Export Simulink Test™ Manager results in MLDATX format. By default, MATLAB names the artifact **simulinktestresults.mldatx** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.\n \n\n\n \n\n **Note:** This feature requires a **Simulink Test** license and is supported only in MATLAB R2019a or a newer release.",
          "isOptional": true
        },
        {
          "name": "tapArtifact",
          "type": "Nested",
          "values": [
            "tapReportFilePath"
          ],
          "description": "Generate a test report in TAP format. By default, MATLAB names the artifact **taptestresults.tap** and stores it in the **matlabTestArtifacts** folder of the project workspace. To override the default artifact name and location, specify a path relative to the project folder in the **File path** box. If the text box is empty, MATLAB does not generate an artifact.",
          "isOptional": true
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "step([$class: 'RunPcTestBuildStep'])",
      "title": "step([$class: 'RunPcTestBuildStep']): Bumblebee HP PC Test Runner",
      "description": "",
      "parameters": [
        {
          "name": "almPassword",
          "type": "String",
          "values": [],
          "description": "HP ALM user's password. If set, this value overrides the value from Bumblebee Global Configuration.\n \n\nIf empty, value from Bumblebee Global Configuration will be used",
          "isOptional": true
        },
        {
          "name": "almUser",
          "type": "String",
          "values": [],
          "description": "HP ALM user. If set, this value overrides the value from Bumblebee Global Configuration.\n \n\nIf empty, value from Bumblebee Global Configuration will be used",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "HP ALM Domain.",
          "isOptional": true
        },
        {
          "name": "failIfTaskFails",
          "type": "boolean",
          "values": [],
          "description": "If task shall fail the build in case it fails.",
          "isOptional": true
        },
        {
          "name": "outputDir",
          "type": "String",
          "values": [],
          "description": "Directory where Performance Center reports will be placed. Relative to the workspace root. If it does not exist, it will be created.",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "int",
          "values": [],
          "description": "Test status polling interval in seconds.",
          "isOptional": true
        },
        {
          "name": "postRunActionString",
          "type": "String",
          "values": [],
          "description": "Performance Center Post Run Action.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "HP ALM Project name.",
          "isOptional": true
        },
        {
          "name": "retryCollateAndAnalysisAttempts",
          "type": "int",
          "values": [],
          "description": "Defines how many times it will retry Collate or Analyze phase if they failed, before task completely fails.",
          "isOptional": true
        },
        {
          "name": "retryCollateAndAnalysisFlag",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "retryCollateAndAnalysisInterval",
          "type": "int",
          "values": [],
          "description": "Number of seconds to wait between retry attempts.",
          "isOptional": true
        },
        {
          "name": "retryCount",
          "type": "int",
          "values": [],
          "description": "Number of retry attempts, before task completely fails.",
          "isOptional": true
        },
        {
          "name": "retryInterval",
          "type": "int",
          "values": [],
          "description": "Number of seconds to wait between retry attempts.",
          "isOptional": true
        },
        {
          "name": "retryIntervalMultiplier",
          "type": "double",
          "values": [],
          "description": "Increase factor for retry interval. E.g. if it is set to 2, then each subsequent wait interval between attempts will be twice bigger than the previous one.",
          "isOptional": true
        },
        {
          "name": "testLabPath",
          "type": "String",
          "values": [],
          "description": "Path to a test set in HP ALM TestLab. Must start with Root\\, e.g. Root\\folder1\\testSet1, where Root\\folder1 is a path to test lab folder and testSet1 is the name of a test set. Test set will be created if it does not exist.",
          "isOptional": true
        },
        {
          "name": "testPlanPath",
          "type": "String",
          "values": [],
          "description": "Path to a test in HP ALM TestPlan. Must start with Subject\\, e.g. Subject\\folder1\\test1, where Subject\\folder1 is a path to test folder and test1 is the name of a test.",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "The number of minutes to wait for the Performance Center test to finish. 0 means wait indefinitely.",
          "isOptional": true
        },
        {
          "name": "timeslotDuration",
          "type": "int",
          "values": [],
          "description": "Time Slot Duration in minutes.",
          "isOptional": true
        },
        {
          "name": "vudsMode",
          "type": "boolean",
          "values": [],
          "description": "If true, the test consumes Virtual User Day (VUD) licenses.",
          "isOptional": true
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'RunResultRecorder'])",
      "title": "step([$class: 'RunResultRecorder']): Publish Micro Focus tests result",
      "description": "",
      "parameters": [
        {
          "name": "archiveTestResultsMode",
          "type": "String",
          "values": [],
          "description": "To view the run results, do one of the following:\n \n\n 1) In the left pane, click the **Report and Summary** link to display the report link and the link to the report folder. From this link, you can open the run results directly in your browser or open the artifacts\n \n\n 2) From the **Build Artifacts:**\n \n\n • Open the run_results.html to view the run results.\n \n\n • Download the zipped report to your desired location and unzip it. In the **Run Results Viewer**, select the Results.xml file found inside the unzipped folder.\n \n\n Note that this option is valid only when using the “Execute test from file system” build step.",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'RunTestSetBuildStep'])",
      "title": "step([$class: 'RunTestSetBuildStep']): Bumblebee HP ALM Test Set Runner",
      "description": "",
      "parameters": [
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "HP ALM Domain",
          "isOptional": false
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "HP ALM Project name",
          "isOptional": false
        },
        {
          "name": "runMode",
          "type": "String",
          "values": [],
          "description": "Where to run test sets: locally, on scheduled host or remotely",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "Host on which test sets will be executed",
          "isOptional": false
        },
        {
          "name": "testSets",
          "type": "String",
          "values": [],
          "description": "A list of test set paths to be executed. Each test set starts from a new line. Example: Root\\Release\\2.0",
          "isOptional": false
        },
        {
          "name": "outputDirPath",
          "type": "String",
          "values": [],
          "description": "Path to the directory where to put JUnit-like execution results. Basedir of the fileset is the workspace root. If directory does not exist, it will be created",
          "isOptional": false
        },
        {
          "name": "timeOut",
          "type": "int",
          "values": [],
          "description": "The number of minutes to wait for test sets execution. 0 means wait indefinitely",
          "isOptional": false
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'RunUftTestBuildStep'])",
      "title": "step([$class: 'RunUftTestBuildStep']): Bumblebee Local UFT Test Runner",
      "description": "",
      "parameters": [
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "Path to a test folder or test batch file (.mtb) which shall be executed",
          "isOptional": false
        },
        {
          "name": "outputDirPath",
          "type": "String",
          "values": [],
          "description": "Path to the directory where to put JUnit-like execution results. Basedir of the fileset is the workspace root. If directory does not exist, it will be created",
          "isOptional": false
        }
      ],
      "plugin": "bumblebee"
    },
    {
      "command": "step([$class: 'RundeckNotifier'])",
      "title": "step([$class: 'RundeckNotifier']): Rundeck",
      "description": "",
      "parameters": [
        {
          "name": "rundeckInstance",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "This is the list of options for the Rundeck job you want to execute. It should be in the Java-Properties format, 1 option per line : **key=value**. \n\n \n You can use Jenkins environment variables ($BUILD_NUMBER, $BUILD_ID, $JOB_NAME, $WORKSPACE, etc) or System environment variables ($HOME, $PATH, etc) in your options, and we will expand them when notifying Rundeck. \n\n \n We will also expand the special token \"$ARTIFACT_NAME{regex}\" (where \"regex\" is a java-regex) to the name of the first matching artifact found.\n\n For example, $ARTIFACT_NAME{.*\\.war} will matches your WAR artifact, while $ARTIFACT_NAME{.*-sources\\.jar} will matches your sources artifact.",
          "isOptional": false
        },
        {
          "name": "nodeFilters",
          "type": "String",
          "values": [],
          "description": "This is a list of filters to optionally **filter the nodes** on which your Rundeck will run.\n\n You can specify which node to **include** using a single value, a list of values, or a regular expression (for example the .* pattern will match any text) as the argument to the following options. \n\n \n **Inclusion filters** \n\n \n  \n* **hostname** : hostname of the node\n\n  \n* **name** : resource name of the node, which may be different than hostname\n\n  \n* **type** : type name of the node, typically \"Node\"\n\n  \n* **tags** : a set of user defined tags. If you have multiple tags, the separator is either the comma \",\" for an OR between them, or a plus \"+\" for an AND between them. Example : \"web,prod\" (either \"web\" or \"prod\"), \"web+prod\" (both \"web\" and \"prod\").\n\n  \n* **os-name** : operating system name, e.g. \"Linux\", \"Macintosh OS X\"\n\n  \n* **os-family** : operating system family, e.g. \"windows\",\"unix\"\n\n  \n* **os-arch** : operating system CPU architecture, e.g. \"x86\", \"x386\"\n\n  \n* **os-version** : operating system version number\n\n \n \n\n\n \n This field should be written in the **Java-Properties format**, 1 option per line : **key=value**.\n\n You can use Jenkins environment variables ($JOB_NAME, $WORKSPACE, etc) or System environment variables ($OSTYPE, $USER, etc) in your values, and we will expand them when notifying Rundeck. \n\n \n Example : \n\n \n\n \n```groovy\n            name = .*\n            tags = web+prod\n            exclude-os-family = windows\n        \n```",
          "isOptional": false
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "shouldWaitForRundeckJob",
          "type": "boolean",
          "values": [],
          "description": "If checked, then Jenkins builds will wait for Rundeck job executions to finish. Otherwise, we will just trigger the execution of a Rundeck job, and move on. Also, if the build does not wait for the RunDeck job, the RunDeck job logging will not be tailed into the Jenkins job log.",
          "isOptional": false
        },
        {
          "name": "shouldFailTheBuild",
          "type": "boolean",
          "values": [],
          "description": "If checked, then a failure to schedule the job execution on Rundeck will fail the Jenkins build. Otherwise, the Rundeck integration won't interact with the result of your Jenkins build (even if Rundeck is down).",
          "isOptional": false
        },
        {
          "name": "notifyOnAllStatus",
          "type": "boolean",
          "values": [],
          "description": "Normally, Rundeck will only be notified on a SUCCESS status. If checked, Rundeck will be notifed regardless of status. This can be especially useful in post.",
          "isOptional": false
        },
        {
          "name": "includeRundeckLogs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then Jenkins builds will include the rundeck job output. shouldWaitForRundeckJob is required.",
          "isOptional": false
        },
        {
          "name": "tailLog",
          "type": "boolean",
          "values": [],
          "description": "If checked, the RunDeck job logging be tailed into the Jenkins job log. Note that RunDeck job logging is never tailed if <em>Wait for RunDeck job to finish ?</em> checkbox is not checked.",
          "isOptional": false
        },
        {
          "name": "jobUser",
          "type": "String",
          "values": [],
          "description": "This is an alternative rundeck userid, which should be used instead of the global configured id. 'User password' is mandatory with 'job user', also a token can be used for authentication.",
          "isOptional": false
        },
        {
          "name": "jobPassword",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "rundeck"
    },
    {
      "command": "step([$class: 'SQLPlusRunnerBuilder'])",
      "title": "step([$class: 'SQLPlusRunnerBuilder']): SQLPlus Script Runner",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "instance",
          "type": "String",
          "values": [],
          "description": "Inform instance information (example: <i>ORCL</i>). You can use global variable like <i>${INSTANCE}</i>.",
          "isOptional": false
        },
        {
          "name": "scriptType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "This is the name of SQL script, expected at <i>src/main/resources</i> folder.\n \n\n Example:\n \n\n **update.sql** or **sql/update.sql**",
          "isOptional": false
        },
        {
          "name": "scriptContent",
          "type": "String",
          "values": [],
          "description": "This is a custom SQL script.\n \n\n Example:\n \n\n\n <table>\n  <tbody>\n   <tr>\n <td> &nbsp;SELECT sysdate from dual;&nbsp;\n\n &nbsp;show user;&nbsp; </td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": false
        },
        {
          "name": "customNLSLang",
          "type": "String",
          "values": [],
          "description": "NLS_LANG is an environment variable used to define language, territory and character set properties. Example: <i>AMERICAN_AMERICA.US7ASCII</i> or <i>FRENCH_CANADA.WE8ISO8859P1</i> [Source: ORAFAQ](https://www.orafaq.com/wiki/NLS_LANG)",
          "isOptional": true
        },
        {
          "name": "customOracleHome",
          "type": "String",
          "values": [],
          "description": "Using custom ORACLE_HOME will override global ORACLE_HOME. Leave this field blank to use global ORACLE_HOME. ORACLE_HOME refers to either a directory where the Oracle software is installed or an environment variable pointing to the directory where the Oracle software is installed. [Source: ORAFAQ](http://www.orafaq.com/wiki/ORACLE_HOME)",
          "isOptional": true
        },
        {
          "name": "customSQLPath",
          "type": "String",
          "values": [],
          "description": "SQLPATH contains the name of your directory for your SQL script collection. Example: <i>c:\\u01\\app\\sql_scripts</i> or <i>/oracle/app/sql</i> [Source: DBA Oracle](http://www.dba-oracle.com/t_windows_SQLPATH_environment_variable.htm)",
          "isOptional": true
        },
        {
          "name": "customSQLPlusHome",
          "type": "String",
          "values": [],
          "description": "Using custom SQL*Plus will help find SQL*Plus executable file, this helps if you are working with Jenkins slave machines. Example: <i>C:\\Oracle\\App\\Server\\Oracle\\bin\\sqlplus.exe</i> or <i>/oracle/app/oracle/product/12.1.0/dbhome_1/bin/sqlplus</i> [Learn more about distributed builds](https://wiki.jenkins.io/display/JENKINS/Distributed+builds)",
          "isOptional": true
        },
        {
          "name": "customTNSAdmin",
          "type": "String",
          "values": [],
          "description": "Using custom TNS_ADMIN refers to a directory where the Oracle SQL*Net configuration files (like sqlnet.ora and tnsnames.ora) are located. Example: <i>C:\\Oracle\\App\\Server\\Oracle\\network\\admin</i> or <i>/oracle/app/oracle/product/12.1.0/dbhome_1/network/admin</i> [Source: ORAFAQ](http://www.orafaq.com/wiki/TNS_ADMIN)",
          "isOptional": true
        }
      ],
      "plugin": "sqlplus-script-runner"
    },
    {
      "command": "step([$class: 'SaltAPIBuilder'])",
      "title": "step([$class: 'SaltAPIBuilder']): Send a message to Salt API",
      "description": "",
      "parameters": [
        {
          "name": "authtype",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "clientInterface",
          "type": "Nested",
          "values": [
            "hook",
            "batch",
            "local",
            "subset",
            "runner"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "servername",
          "type": "String",
          "values": [],
          "description": "Salt servername. In the form: https://host.domain:8000\n \n\n The Test Connection process is run from the Jenkins master. If the build is localized to an agent, and the servername is specific to that agent, then Test Connection will likely fail, while the actual build may succeed.",
          "isOptional": true
        },
        {
          "name": "saveEnvVar",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "skipValidation",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "saltstack"
    },
    {
      "command": "step([$class: 'ScoveragePublisher'])",
      "title": "step([$class: 'ScoveragePublisher']): Publish Scoverage Report",
      "description": "",
      "parameters": [
        {
          "name": "reportDir",
          "type": "String",
          "values": [],
          "description": "e.g. target/scala-2.10/scoverage-report",
          "isOptional": false
        },
        {
          "name": "reportFile",
          "type": "String",
          "values": [],
          "description": "e.g. scoverage.xml",
          "isOptional": false
        }
      ],
      "plugin": "scoverage"
    },
    {
      "command": "step([$class: 'ScriptBuilder'])",
      "title": "step([$class: 'ScriptBuilder']): Execute script with Toad DevOps Toolkit",
      "description": "",
      "parameters": [
        {
          "name": "connection",
          "type": "String",
          "values": [],
          "description": "An Oracle connection string used for connecting to the database.\n`user/password@host:port/service`",
          "isOptional": false
        },
        {
          "name": "script",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "The full file path including name and extension of the SQL file to execute. Please note that this is relative to the machine running the job.",
          "isOptional": false
        },
        {
          "name": "sourceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "limitMaxRows",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "maxRows",
          "type": "int",
          "values": [],
          "description": "The maximum number of returned rows if any rows are to be returned.",
          "isOptional": false
        }
      ],
      "plugin": "ci-with-toad-devops-toolkit"
    },
    {
      "command": "step([$class: 'SeleniumHtmlReportPublisher'])",
      "title": "step([$class: 'SeleniumHtmlReportPublisher']): Publish Selenium Html Report",
      "description": "",
      "parameters": [
        {
          "name": "failureIfExceptionOnParsingResultFiles",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testResultsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "seleniumhtmlreport"
    },
    {
      "command": "step([$class: 'SelfServiceBookmarkBuilder'])",
      "title": "step([$class: 'SelfServiceBookmarkBuilder']): Delphix - Self Service Bookmark",
      "description": "",
      "parameters": [
        {
          "name": "delphixEngine",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "delphixBookmark",
          "type": "String",
          "values": [],
          "description": "Self Service Bookmark that will be used for the Delete, Share, and Unshare operations.",
          "isOptional": false
        },
        {
          "name": "delphixOperation",
          "type": "String",
          "values": [],
          "description": "Create - Create a new Self Service Bookmark. Requires a Self Service Container.\n \n\n Delete - Delete a Self Service Bookmark. Requires a Self Service Bookmark.\n \n\n Share - Share a Self Service Bookmark. Requires a Self Service Bookmark.\n \n\n Unshare - Unshare a Self Service Bookmark. Requires a Self Service Bookmark.",
          "isOptional": false
        },
        {
          "name": "delphixContainer",
          "type": "String",
          "values": [],
          "description": "Self Service Container that will be used to Create a new Self Service Bookmark. This setting is not used for the Delete, Share, and Unshare operations.",
          "isOptional": false
        },
        {
          "name": "loadFromProps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveToProps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "delphix"
    },
    {
      "command": "step([$class: 'SelfServiceContainerBuilder'])",
      "title": "step([$class: 'SelfServiceContainerBuilder']): Delphix - Self Service Container",
      "description": "",
      "parameters": [
        {
          "name": "delphixEngine",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "delphixEnvironment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "delphixOperation",
          "type": "String",
          "values": [],
          "description": "Refresh - Refresh a Self Service Container.\n \n\n Restore - Restore a Self Service Container. Requires a Self Service Bookmark for reference.\n \n\n Enable - Enable a Self Service Container that has been disabled.\n \n\n Disable - Disable a Self Service Container.\n \n\n Recover - Recover a Self Service Container from the INCONSISTENT state.\n \n\n Reset - Reset a Self Service Container.\n \n\n Undo - Undo the last operation for a Self Service Container.\n \n\n Lock - Lock a Self Service Container to the current logged in user.\n \n\n Unlock - Unlock a Self Service Container.",
          "isOptional": false
        },
        {
          "name": "delphixBookmark",
          "type": "String",
          "values": [],
          "description": "Self Service Bookmark that will be used for the Restore operation.",
          "isOptional": false
        },
        {
          "name": "loadFromProps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "saveToProps",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "delphix"
    },
    {
      "command": "step([$class: 'SendMessageBuildStep'])",
      "title": "step([$class: 'SendMessageBuildStep']): Send message to ICQ or MyTeam",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filepath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "recipients",
          "type": "Nested",
          "values": [
            "id"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "icq-notification"
    },
    {
      "command": "step([$class: 'ServiceFabricPublisher'])",
      "title": "step([$class: 'ServiceFabricPublisher']): Deploy Service Fabric Project",
      "description": "",
      "parameters": [
        {
          "name": "publishStep",
          "type": "Nested",
          "values": [
            "applicationName",
            "applicationType",
            "azureCredentialsId",
            "clientCert",
            "clientKey",
            "configureType",
            "managementHost",
            "manifestPath",
            "resourceGroup",
            "serviceFabric"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "service-fabric"
    },
    {
      "command": "step([$class: 'SideeX'])",
      "title": "step([$class: 'SideeX']): Execute SideeX Web Testing",
      "description": "",
      "parameters": [
        {
          "name": "protocolMenu",
          "type": "Nested",
          "values": [
            "$class: 'HTTPItem'",
            "$class: 'HTTPSDisableItem'",
            "$class: 'HTTPSEnableItem'"
          ],
          "description": "The default protocol is \"HTTP\".\n\n \nUse \"HTTPS (Disable certificate checking)\" to disable certificate checking.\n\n \nUse \"HTTPS (Enable certificate checking)\" to enable certificate checking.",
          "isOptional": false
        },
        {
          "name": "stateTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseFilePath",
          "type": "String",
          "values": [],
          "description": "Your test case's file path (path to your folder or to your .zip file)",
          "isOptional": false
        }
      ],
      "plugin": "sideex"
    },
    {
      "command": "step([$class: 'SloccountPublisher'])",
      "title": "step([$class: 'SloccountPublisher']): Publish SLOCCount analysis results",
      "description": "",
      "parameters": [
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "[Fileset 'includes'](http://ant.apache.org/manual/Types/fileset.html) setting that specifies the generated raw [SLOCCount](http://www.dwheeler.com/sloccount/) or [cloc](http://cloc.sourceforge.net/) report files, such as '**/sloccount.sc' or '**/cloc.xml'. Basedir of the fileset is <a rel=\"nofollow\">the workspace root</a>. If no value is set, then the default '**/sloccount.sc' is used. Be sure not to include any non-report files into this pattern. \n\n\n The report files must have been generated by sloccount tool using the \"--wide --details\" options, e.g. \n\n\n```groovy\n    sloccount --duplicates --wide --details SOURCE_DIRECTORY &gt; sloccount.sc\n\n```\n\n\n or by cloc tool using the \"--by-file --xml\" options, e.g. \n\n\n```groovy\n    cloc --by-file --xml --out=cloc.xml SOURCE_DIRECTORY\n\n```\n\n\n If you are not sure which type to use, prefer <em>cloc</em>. It is able to detect more programming languages than SLOCCount (Scala, Ant, CSS, ...) and is able to count also lines with comments that often contain Javadoc or Doxygen documentation. Cloc is also better portable, SLOCCount requires [cygwin](https://www.cygwin.com/) or similar environment under MS Windows. \n\n\n **Never switch between SLOCCount and cloc inside one job.** You would end up with messy trend graph because they name programming languages differently. Delete all affected builds and rebuild the job in such case to fix the issue.",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "The character encoding of SLOCCount result files. If no value is set, default 'UTF-8' will be used. This option is considered only in the SLOCCount report parser and is ignored in the cloc one.",
          "isOptional": false
        },
        {
          "name": "commentIsCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "numBuildsInGraph",
          "type": "int",
          "values": [],
          "description": "Maximal number of last successful builds, that are displayed in the trend graphs. Use 1 or less for unlimited.",
          "isOptional": false
        },
        {
          "name": "ignoreBuildFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "sloccount"
    },
    {
      "command": "step([$class: 'SparkNotifier'])",
      "title": "step([$class: 'SparkNotifier']): Cisco Spark Notification",
      "description": "",
      "parameters": [
        {
          "name": "disable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notnotifyifsuccess",
          "type": "boolean",
          "values": [],
          "description": "when build status is success, don't publish message to spark room.",
          "isOptional": false
        },
        {
          "name": "sparkRoomName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishContentPrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishContent",
          "type": "String",
          "values": [],
          "description": "support [environment vars](https://ci.jenkins-ci.org/env-vars.html/?) and some customized vars, such as ${BUILD_STATUS}. if the content contain ${DEFAULT_CONTENT}, it will be replaced with \"${BUILD_STATUS}:${BUILD_URL}\".",
          "isOptional": false
        },
        {
          "name": "invitetoroom",
          "type": "boolean",
          "values": [],
          "description": "when build status is fail, invite committers since last success build to spark room.",
          "isOptional": false
        },
        {
          "name": "attachtestresult",
          "type": "boolean",
          "values": [],
          "description": "Maven job with test result can use this function. Not all builds can support it. so if checked, the published message will contain test result such as:\n \n```groovy\n[test results]\n          total:5, failed:0, skiped:0\n\n```",
          "isOptional": false
        },
        {
          "name": "attachcodechange",
          "type": "boolean",
          "values": [],
          "description": "not all builds need to checkout from SCM. so if checked, the published message will contain code changes such as:\n \n```groovy\n[changes]\n          fujian1115:[job_config.jpg]\n          fujian1115:[sample.jpg]\n\n```",
          "isOptional": false
        }
      ],
      "plugin": "cisco-spark"
    },
    {
      "command": "step([$class: 'SplunkArtifactNotifier'])",
      "title": "step([$class: 'SplunkArtifactNotifier']): Send files to Splunk",
      "description": "",
      "parameters": [
        {
          "name": "includeFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludeFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishFromSlave",
          "type": "boolean",
          "values": [],
          "description": "Publish log files directly from the agent, instead of proxy for the process to the master. When publish from agent is selected, Jenkins master will transfer the plugin and its dependence to agent and initiate the publishing process from the agent. Take below into consideration:\n \n  \n* agent and master load \n\n  \n*  log file size \n\n  \n*  agent type, long lived agent or one time use agent \n\n  Rule of thumb for selecting publish type:\n \n  \n*  a. if log files size is less than 5MB, publish from master is preferred.\n\n  \n*  b. if Splunk instance is in an isolated network which is not reachable from agent, you need publish from master.",
          "isOptional": false
        },
        {
          "name": "skipGlobalSplunkArchive",
          "type": "boolean",
          "values": [],
          "description": "To skip the global post job archiving DSL e.g. ` archive(\"**/*.log\") ` when the DSL does not fit for specific set of job.",
          "isOptional": false
        },
        {
          "name": "sizeLimit",
          "type": "String",
          "values": [],
          "description": "Limit the single file size to prevent publishing the whole huge log file generated accidentally by some program and uses up your Splunk daily volume license. The plugin will log a \"file truncated to size:xx\" event in Splunk when size limit is reached and will stop publishing the remaining content.",
          "isOptional": false
        }
      ],
      "plugin": "splunk-devops"
    },
    {
      "command": "step([$class: 'SquashTMPublisher'])",
      "title": "step([$class: 'SquashTMPublisher']): Publish your tests results on Squash TM",
      "description": "",
      "parameters": [
        {
          "name": "selectedServers",
          "type": "Nested",
          "values": [
            "identifier",
            "selected"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "squashtm-publisher"
    },
    {
      "command": "step([$class: 'StaticAssessmentBuildStep'])",
      "title": "step([$class: 'StaticAssessmentBuildStep']): Fortify on Demand Static Assessment",
      "description": "",
      "parameters": [
        {
          "name": "releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bsiToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideGlobalConfig",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "personalAccessToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "purchaseEntitlements",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "entitlementPreference",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "srcLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "remediationScanPreferenceType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inProgressScanActionType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inProgressBuildResultType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "fortify-on-demand-uploader"
    },
    {
      "command": "step([$class: 'StoplightReportPublisher'])",
      "title": "step([$class: 'StoplightReportPublisher']): Publish Stoplight Report",
      "description": "",
      "parameters": [
        {
          "name": "consoleOrFile",
          "type": "String",
          "values": [],
          "description": "Choose here if the plugin should parse either the standard output of Jenkins or another file.",
          "isOptional": false
        },
        {
          "name": "resultFile",
          "type": "String",
          "values": [],
          "description": "Points to the result file of Stoplight/Scenario.",
          "isOptional": false
        }
      ],
      "plugin": "stoplightio-report"
    },
    {
      "command": "step([$class: 'SumoBuildNotifier'])",
      "title": "step([$class: 'SumoBuildNotifier']): Sumo Logic build logger",
      "description": "",
      "parameters": [],
      "plugin": "sumologic-publisher"
    },
    {
      "command": "step([$class: 'SuspendVm'])",
      "title": "step([$class: 'SuspendVm']): Suspend VM",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM to suspend.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'SvChangeModeBuilder'])",
      "title": "step([$class: 'SvChangeModeBuilder']): SV: Change Mode of Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "If set, service will be modified regardless it is locked by another user.",
          "isOptional": false
        },
        {
          "name": "mode",
          "type": "Enum",
          "values": [
            "OFFLINE",
            "SIMULATING",
            "STAND_BY",
            "LEARNING"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dataModel",
          "type": "Nested",
          "values": [
            "selectionType",
            "dataModel"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "performanceModel",
          "type": "Nested",
          "values": [
            "selectionType",
            "performanceModel"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'SvDeployBuilder'])",
      "title": "step([$class: 'SvDeployBuilder']): SV: Deploy Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "If set, service will be redeployed regardless it is locked by another user.",
          "isOptional": false
        },
        {
          "name": "service",
          "type": "String",
          "values": [],
          "description": "Name or ID of service to be deployed. All services from project are deployed if no service is specified.",
          "isOptional": false
        },
        {
          "name": "projectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "firstAgentFallback",
          "type": "boolean",
          "values": [],
          "description": "Use first agent of the same type if no agent with id referenced from virtual service exists on target server.",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'SvExportBuilder'])",
      "title": "step([$class: 'SvExportBuilder']): SV: Export Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "If set, service will be modified regardless it is locked by another user.",
          "isOptional": false
        },
        {
          "name": "targetDirectory",
          "type": "String",
          "values": [],
          "description": "Directory where exported services will be written.",
          "isOptional": false
        },
        {
          "name": "cleanTargetDirectory",
          "type": "boolean",
          "values": [],
          "description": "If checked, all direct subfolders of target directory containing a project file (*.vproj) will be deleted before export.",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "switchToStandByFirst",
          "type": "boolean",
          "values": [],
          "description": "Switch service to Stand-By mode to finish current learning before exporting learned data.",
          "isOptional": false
        },
        {
          "name": "archive",
          "type": "boolean",
          "values": [],
          "description": "If set, Export service(s) as project archive(s) (.vproja).",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'SvUndeployBuilder'])",
      "title": "step([$class: 'SvUndeployBuilder']): SV: Undeploy Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueIfNotDeployed",
          "type": "boolean",
          "values": [],
          "description": "Don't fail if any service marked to be undeployed is not deployed on server.",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "If set, service will be undeployed regardless it is locked by another user.",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "step([$class: 'SwampPostBuild'])",
      "title": "step([$class: 'SwampPostBuild']): SWAMP Assessment",
      "description": "",
      "parameters": [
        {
          "name": "projectUUID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "assessmentInfo",
          "type": "Nested",
          "values": [
            "toolUUID",
            "platformUUID"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "packageName",
          "type": "String",
          "values": [],
          "description": "Enter the name of your package here. This should be the name of your program.\n \n\n Use a consistant name for better sorting of packages.",
          "isOptional": false
        },
        {
          "name": "packageVersion",
          "type": "String",
          "values": [],
          "description": "Enter the version string of your package.\n \n\n Every build should have a unique version String.\n \n\n You can use _$build_ anywhere in the string to get the unique Jenkins build id.\n \n\n You can also use _$date_ to get the current date.\n \n\n You can also use _$git_ to get the most recent git commit.\n \n\n You can also use _$svn_ to get the most recent svn commit.\n \n\n If you do not update the version number each build (either using any of the above options or manually updating the version) then submissions will have the same version and be difficult to destinguish in the user interface.",
          "isOptional": false
        },
        {
          "name": "packageDir",
          "type": "String",
          "values": [],
          "description": "Enter the directory of your package from the workspace. Leave blank if your package is located in the workspace folder.",
          "isOptional": false
        },
        {
          "name": "packageLanguage",
          "type": "String",
          "values": [],
          "description": "The language that your package uses.\n \n\n Your language will be validated to assure you are using an available language.",
          "isOptional": false
        },
        {
          "name": "packageLanguageVersion",
          "type": "String",
          "values": [],
          "description": "The version of the language that your package uses.\n \n\n For the default (most recent) version of your language, leave this field blank.",
          "isOptional": false
        },
        {
          "name": "buildSystem",
          "type": "String",
          "values": [],
          "description": "Select the build system your project uses.\n \n\n Select **no-build** if you are not using a build or just want to analyze the source code.",
          "isOptional": false
        },
        {
          "name": "buildDirectory",
          "type": "String",
          "values": [],
          "description": "Enter the directory of your build file from the workspace. Leave blank if the build file is located in your workspace directory.",
          "isOptional": false
        },
        {
          "name": "buildFile",
          "type": "String",
          "values": [],
          "description": "Enter the build file for your project.\n \n\n The default (if left blank) will use the default build file for your build system\n \n\n (ie. <i>build.xml</i> for ant, <i>pom.xml</i> for Maven, etc.)",
          "isOptional": false
        },
        {
          "name": "buildTarget",
          "type": "String",
          "values": [],
          "description": "Enter the build target for your package from the workspace.\n \n\n The default (if left blank) is <i>target</i>.",
          "isOptional": false
        },
        {
          "name": "buildCommand",
          "type": "String",
          "values": [],
          "description": "Enter the build command for your package.",
          "isOptional": false
        },
        {
          "name": "buildOptions",
          "type": "String",
          "values": [],
          "description": "Enter the build options for your package. (e.g. \"--verbose --setInt 1\")\n \n\n Add multiple options separated by spaces as usual.\n \n\n The default (if left blank) will have no options.",
          "isOptional": false
        },
        {
          "name": "configCommand",
          "type": "String",
          "values": [],
          "description": "Enter the configuration command for your package.",
          "isOptional": false
        },
        {
          "name": "configOptions",
          "type": "String",
          "values": [],
          "description": "Enter the configuration options for your package. (e.g. \"--verbose --setInt 1\")\n \n\n Add multiple options separated by spaces as usual.\n \n\n The default (if left blank) will have no options.",
          "isOptional": false
        },
        {
          "name": "configDirectory",
          "type": "String",
          "values": [],
          "description": "Enter the directory of your config file from the workspace. Leave blank if the config file is located in your workspace directory.",
          "isOptional": false
        },
        {
          "name": "outputDir",
          "type": "String",
          "values": [],
          "description": "Enter the output directory from the workspace for the results of the test.\n \n\n If the directory does not exist within the workspace, it will be created.",
          "isOptional": false
        },
        {
          "name": "cleanCommand",
          "type": "String",
          "values": [],
          "description": "Enter the command to clean your build.\n \n\n Leave blank for \"[build-system] clean\"",
          "isOptional": false
        },
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "swamp"
    },
    {
      "command": "step([$class: 'TAReportingRecorder'])",
      "title": "step([$class: 'TAReportingRecorder']): Dynatrace AppMon - Finish Registered Tests Runs and Publish Results",
      "description": "This plugin fetches analysis data from the [Dynatrace Server](http://www.dynatrace.com) (Test Center Edition) REST interface. It displays a chart with a trend on passed/degraded/failing/... etc. tests, and also provides a detailed view for each test case showing the metrics recorded by Dynatrace Application Monitoring.",
      "parameters": [
        {
          "name": "modifyStatusIfDegraded",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "modifyStatusIfVolatile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusNameIfDegraded",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "statusNameIfVolatile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "printXmlReportForDebug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "dynatrace-dashboard"
    },
    {
      "command": "step([$class: 'TATestRunRegistrationBuildStep'])",
      "title": "step([$class: 'TATestRunRegistrationBuildStep']): Dynatrace AppMon - Register Test Run",
      "description": "This step registers new test run with given category and sets the <i>'dtTestrunID'</i> build variable.",
      "parameters": [
        {
          "name": "category",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "dynatrace-dashboard"
    },
    {
      "command": "step([$class: 'TagBuilder'])",
      "title": "step([$class: 'TagBuilder']): Liquibase: Tag Database",
      "description": "",
      "parameters": [
        {
          "name": "changeLogFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeLogParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contexts",
          "type": "String",
          "values": [],
          "description": "Liquibase contexts to execute under.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Liquibase labels to execute",
          "isOptional": true
        },
        {
          "name": "liquibasePropertiesPath",
          "type": "String",
          "values": [],
          "description": "A liquibase.properties file can be used for default values. Any of the below settings will override what is in this file. This file should be relative to a directory listed in the \"Resource directories\" section.",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceDirectories",
          "type": "String",
          "values": [],
          "description": "Leave blank for workspace root. May be relative to workspace or an absolute path.",
          "isOptional": true
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "The tag to apply to the database. If the tag already exists, it will be moved the current datatabase state.\n\n\n\n\n\n If left empty, an auto-generated tag based on the build number will be applied",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "example: jdbc:mysql://localhost:3306/sampledb. The JDBC driver must be available in the \"lib\" directory of your Liquibase installation",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "liquibase-runner"
    },
    {
      "command": "step([$class: 'TakeSnapshot'])",
      "title": "step([$class: 'TakeSnapshot']): Take Snapshot",
      "description": "",
      "parameters": [
        {
          "name": "vm",
          "type": "String",
          "values": [],
          "description": "The name of the VM you'd like to take a snapshot of.",
          "isOptional": false
        },
        {
          "name": "snapshotName",
          "type": "String",
          "values": [],
          "description": "The name of the snapshot.",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "The description to be saved with the snapshot.",
          "isOptional": false
        },
        {
          "name": "includeMemory",
          "type": "boolean",
          "values": [],
          "description": "Would you like to save the active memory in the snapshot?",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'TapPublisher'])",
      "title": "step([$class: 'TapPublisher']): Publish TAP Results",
      "description": "",
      "parameters": [
        {
          "name": "testResults",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failIfNoResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failedTestsMarkBuildAsFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputTapToConsole",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "enableSubtests",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "discardOldReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "todoIsFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "includeCommentDiagnostics",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "validateNumberOfTests",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "planRequired",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verbose",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "showOnlyFailures",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stripSingleParents",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "flattenTapResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "removeYamlIfCorrupted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "skipIfBuildNotOk",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tap"
    },
    {
      "command": "step([$class: 'TargetPlatformPublisher'])",
      "title": "step([$class: 'TargetPlatformPublisher']): Archive and publish an Eclipse Target Platform",
      "description": "Archives the build artifacts (for example, distribution zip files or jar files) so that they can be downloaded later. Archived files will be accessible from the Jenkins webpage.\n \n\n Normally, Jenkins keeps artifacts for a build as long as a build log itself is kept, but if you don't need old artifacts and would rather save disk space, you can do so.\n\n\n\n\n\n\n\n  Note that the Maven job type automatically archives any produced Maven artifacts. Any artifacts configured here will be archived on top of that. Automatic artifact archiving can be disabled under the advanced Maven options.",
      "parameters": [
        {
          "name": "artifacts",
          "type": "String",
          "values": [],
          "description": "You can use wildcards like 'module/dist/**/*.zip'. See [ the includes attribute of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format -- except that \",\" (<em>comma</em>) is the only supported separator. The base directory is <a rel=\"nofollow\">the workspace</a>. You can only archive files that are located in your workspace.",
          "isOptional": false
        },
        {
          "name": "latestOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetPlatformName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optionally specify the 'excludes' pattern, such as \"foo/bar/**/*\". Use \",\" to set a list of patterns. A file that matches this mask will not be archived even if it matches the mask specified in 'files to archive' section.",
          "isOptional": true
        },
        {
          "name": "allowEmptyArchive",
          "type": "boolean",
          "values": [],
          "description": "Normally, a build fails if archiving returns zero artifacts. This option allows the archiving process to return nothing without failing the build. Instead, the build will simply throw a warning.",
          "isOptional": true
        },
        {
          "name": "caseSensitive",
          "type": "boolean",
          "values": [],
          "description": "Artifact archiver uses Ant `org.apache.tools.ant.DirectoryScanner` which by default is case sensitive. For instance, if the job produces *.hpi files, pattern \"**/*.HPI\" will fail to find them.\n \n\n\n \n\n This option can be used to disable case sensitivity. When it's unchecked, pattern \"**/*.HPI\" will match any *.hpi files, or pattern \"**/cAsEsEnSiTiVe.jar\" will match a file called caseSensitive.jar.",
          "isOptional": true
        },
        {
          "name": "defaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fingerprint",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "followSymlinks",
          "type": "boolean",
          "values": [],
          "description": "By disabling this option all symbolic links found in the workspace will be ignored.",
          "isOptional": true
        },
        {
          "name": "onlyIfSuccessful",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "buckminster"
    },
    {
      "command": "step([$class: 'TeamCollectResultsPostBuildAction'])",
      "title": "step([$class: 'TeamCollectResultsPostBuildAction']): Collect results for TFS/Team Services",
      "description": "At the end of the build, files matching each of the requested result types will be archived for retrieval by TFS/Team Services.",
      "parameters": [
        {
          "name": "requestedResults",
          "type": "Nested",
          "values": [
            "teamResultType",
            "includes"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "tfs"
    },
    {
      "command": "step([$class: 'TeamCompletedStatusPostBuildAction'])",
      "title": "step([$class: 'TeamCompletedStatusPostBuildAction']): Set build completion status in TFS/Team Services",
      "description": "At the end of the build, the status of the associated pull request and/or commit will be updated in TFS/Team Services with the results of the build, including a link back to the Jenkins build.",
      "parameters": [],
      "plugin": "tfs"
    },
    {
      "command": "step([$class: 'TeamPendingStatusBuildStep'])",
      "title": "step([$class: 'TeamPendingStatusBuildStep']): Set build pending status in TFS/Team Services",
      "description": "The status of the associated pull request and/or commit will be updated in TFS/Team Services as \"pending\", including a link back to the Jenkins build.",
      "parameters": [],
      "plugin": "tfs"
    },
    {
      "command": "step([$class: 'TeamUpdateWorkItemPostBuildAction'])",
      "title": "step([$class: 'TeamUpdateWorkItemPostBuildAction']): Add link to associated work items in TFS/Team Services",
      "description": "At the end of the build, if any work items in TFS/Team Services have been found to be associated with the Jenkins build, a hyperlink back to the Jenkins build will be added to the affected work items.",
      "parameters": [],
      "plugin": "tfs"
    },
    {
      "command": "step([$class: 'TelegramBotBuilder'])",
      "title": "step([$class: 'TelegramBotBuilder']): TelegramBot",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "telegram-notifications"
    },
    {
      "command": "step([$class: 'TelegramBotPublisher'])",
      "title": "step([$class: 'TelegramBotPublisher']): TelegramBot",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "whenSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "whenUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "whenFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "whenAborted",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "telegram-notifications"
    },
    {
      "command": "step([$class: 'TestNGTestReportPublisher'])",
      "title": "step([$class: 'TestNGTestReportPublisher']): Publish TestNG reports generated with handlebars",
      "description": "",
      "parameters": [
        {
          "name": "reportsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileIncludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileExcludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "markAsUnstable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "copyHTMLInWorkspace",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "bootstraped-multi-test-results-report"
    },
    {
      "command": "step([$class: 'TestReportDeployPublisher'])",
      "title": "step([$class: 'TestReportDeployPublisher']): Publish results to QMetry for Jira version 3.X below",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apikey",
          "type": "String",
          "values": [],
          "description": "** API Key is unique for a specific user in a single project **. The result will be imported for the project associated with the given API Key.",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "**Path of the result file/directory relative to build directory.**",
          "isOptional": false
        },
        {
          "name": "attachFile",
          "type": "boolean",
          "values": [],
          "description": "Check for upload attachments in execution. Default value: false.",
          "isOptional": false
        },
        {
          "name": "testrunname",
          "type": "String",
          "values": [],
          "description": "Name of the test run to be created. For example:** Test Run **",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 **",
          "isOptional": false
        },
        {
          "name": "sprint",
          "type": "String",
          "values": [],
          "description": "Name of Sprint to be added to the test run. For example: **Final sprint**",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "Comma separated names of versions to be added to the test run. For example: **version1, version2**",
          "isOptional": false
        },
        {
          "name": "component",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2**",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "Name of Platform on which test run to be executed. For example: **IOS**",
          "isOptional": false
        },
        {
          "name": "comment",
          "type": "String",
          "values": [],
          "description": "Comment to be added to the test run.",
          "isOptional": false
        },
        {
          "name": "apikeyserver",
          "type": "String",
          "values": [],
          "description": "** API Key is unique for a specific user in a single project **. The result will be imported for the project associated with the given API Key.",
          "isOptional": false
        },
        {
          "name": "jiraurlserver",
          "type": "String",
          "values": [],
          "description": "Your JIRA url. Example:https://qmetryjiraeval.qmetry.com/rest/qtm/latest/automation/importresults",
          "isOptional": false
        },
        {
          "name": "proxyUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "** Password for your account.**",
          "isOptional": false
        },
        {
          "name": "testrunnameserver",
          "type": "String",
          "values": [],
          "description": "Name of the test run to be created. For example:** Test Run **",
          "isOptional": false
        },
        {
          "name": "labelsserver",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 **",
          "isOptional": false
        },
        {
          "name": "sprintserver",
          "type": "String",
          "values": [],
          "description": "Name of Sprint to be added to the test run. For example: **Final sprint**",
          "isOptional": false
        },
        {
          "name": "versionserver",
          "type": "String",
          "values": [],
          "description": "Comma separated names of versions to be added to the test run. For example: **version1, version2**",
          "isOptional": false
        },
        {
          "name": "componentserver",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2**",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "**Username for your account.**",
          "isOptional": false
        },
        {
          "name": "fileserver",
          "type": "String",
          "values": [],
          "description": "**Path of the result file/directory relative to build directory**",
          "isOptional": false
        },
        {
          "name": "attachFileServer",
          "type": "boolean",
          "values": [],
          "description": "Check for upload attachments in execution. Default value: false.",
          "isOptional": false
        },
        {
          "name": "formatserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "platformserver",
          "type": "String",
          "values": [],
          "description": "Name of Platform on which test run to be executed. For example: **IOS**",
          "isOptional": false
        },
        {
          "name": "commentserver",
          "type": "String",
          "values": [],
          "description": "Comment to be added to the test run.",
          "isOptional": false
        },
        {
          "name": "testToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testrunkey",
          "type": "String",
          "values": [],
          "description": "Provide Test Run key to append new results to existing Test Run.",
          "isOptional": false
        },
        {
          "name": "testassethierarchy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseUpdateLevel",
          "type": "String",
          "values": [],
          "description": "Test Case update level while reusing test case, starts from 0 to 2. (This is only applicable when you use TestCase-TestStep Hierarchy option) Default :- No change in test steps while reusing Test Case.",
          "isOptional": false
        },
        {
          "name": "jirafields",
          "type": "String",
          "values": [],
          "description": "Provide JSON array of custom jirafields.",
          "isOptional": false
        },
        {
          "name": "testrunkeyserver",
          "type": "String",
          "values": [],
          "description": "Provide Test Run key to append new results to existing Test Run.",
          "isOptional": false
        },
        {
          "name": "testassethierarchyserver",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseUpdateLevelServer",
          "type": "String",
          "values": [],
          "description": "Test Case update level while reusing test case, starts from 0 to 2. (This is only applicable when you use TestCase-TestStep Hierarchy option) Default :- No change in test steps while reusing Test Case.",
          "isOptional": false
        },
        {
          "name": "jirafieldsserver",
          "type": "String",
          "values": [],
          "description": "Provide JSON array of custom jirafields.",
          "isOptional": false
        },
        {
          "name": "disableaction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qmetry-for-jira-test-management"
    },
    {
      "command": "step([$class: 'TestReportDeployPublisherCloudV4'])",
      "title": "step([$class: 'TestReportDeployPublisherCloudV4']): Publish results to QMetry for Jira version 4.X above",
      "description": "",
      "parameters": [
        {
          "name": "testToRun",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "apikey",
          "type": "String",
          "values": [],
          "description": "** API Key is unique for a specific user in a single project **. The result will be imported for the project associated with the given API Key.",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "**Path of the result file/directory relative to build directory.**",
          "isOptional": false
        },
        {
          "name": "attachFile",
          "type": "boolean",
          "values": [],
          "description": "Pass true to upload attachments in execution. Default value: false. For more details, Refer automation help documents.",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "disableaction",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCycleToReuse",
          "type": "String",
          "values": [],
          "description": "Issue Key of the test cycle to be reused. If issue key of test cycle is not provided it will create new Cycle.",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "Name of the environment on which test cycle has to be executed. Default Value is \"No Environment\".",
          "isOptional": false
        },
        {
          "name": "build",
          "type": "String",
          "values": [],
          "description": "Name of the build for test cycle execution",
          "isOptional": false
        },
        {
          "name": "testCycleLabels",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 ** To get values check under: Qmetry &gt; Configuration &gt; Labels",
          "isOptional": false
        },
        {
          "name": "testCycleComponents",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2** To get values check under: Qmetry &gt; Configuration &gt; Component",
          "isOptional": false
        },
        {
          "name": "testCyclePriority",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [High,Blocker,Low,Medium]. To get other values check under Qmetry &gt; Configuration &gt; Priority",
          "isOptional": false
        },
        {
          "name": "testCycleStatus",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [Done,In Progress,To Do]. To get other values check under Qmetry &gt; Configuration &gt; Statuses &gt; Test Cycle",
          "isOptional": false
        },
        {
          "name": "testCycleSprintId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCycleFixVersionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCycleSummary",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseLabels",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 ** To get values check under: Qmetry &gt; Configuration &gt; Labels",
          "isOptional": false
        },
        {
          "name": "testCaseComponents",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2** To get values check under: Qmetry &gt; Configuration &gt; Component",
          "isOptional": false
        },
        {
          "name": "testCasePriority",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [High,Blocker,Low,Medium]. To get other values check under Qmetry &gt; Configuration &gt; Priority",
          "isOptional": false
        },
        {
          "name": "testCaseStatus",
          "type": "String",
          "values": [],
          "description": "Default value for Status [Done,In Progress,To Do]. To get other values check under Qmetry &gt; Configuration &gt; Statuses &gt; Test Case",
          "isOptional": false
        },
        {
          "name": "testCaseSprintId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseFixVersionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraUrlServer",
          "type": "String",
          "values": [],
          "description": "Your JIRA url. Example:http://qtm4j.qmetry.com:8080/rest/qtm4j/automation/latest/importresult",
          "isOptional": false
        },
        {
          "name": "proxyUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "**Username for your account.**",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "** Password for your account.**",
          "isOptional": false
        },
        {
          "name": "apikeyServer",
          "type": "String",
          "values": [],
          "description": "** API Key is unique for a specific user in a single project **. The result will be imported for the project associated with the given API Key.",
          "isOptional": false
        },
        {
          "name": "formatServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fileServer",
          "type": "String",
          "values": [],
          "description": "**Path of the result file/directory relative to build directory.**",
          "isOptional": false
        },
        {
          "name": "testCycleToReuseServer",
          "type": "String",
          "values": [],
          "description": "Issue Key of the test cycle to be reused. If issue key of test cycle is not provided it will create new Cycle.",
          "isOptional": false
        },
        {
          "name": "environmentServer",
          "type": "String",
          "values": [],
          "description": "Name of the environment on which test cycle has to be executed. Default Value is \"No Environment\".",
          "isOptional": false
        },
        {
          "name": "buildServer",
          "type": "String",
          "values": [],
          "description": "Name of the build for test cycle execution",
          "isOptional": false
        },
        {
          "name": "attachFileServer",
          "type": "boolean",
          "values": [],
          "description": "Pass true to upload attachments in execution. Default value: false. For more details, Refer automation help documents.",
          "isOptional": false
        },
        {
          "name": "testCycleLabelsServer",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 ** To get values check under: Qmetry &gt; Configuration &gt; Labels",
          "isOptional": false
        },
        {
          "name": "testCycleComponentsServer",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2** To get values check under: Qmetry &gt; Configuration &gt; Component",
          "isOptional": false
        },
        {
          "name": "testCyclePriorityServer",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [High,Blocker,Low,Medium]. To get other values check under Qmetry &gt; Configuration &gt; Priority",
          "isOptional": false
        },
        {
          "name": "testCycleStatusServer",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [Done,In Progress,To Do]. To get other values check under Qmetry &gt; Configuration &gt; Statuses &gt; Test Cycle",
          "isOptional": false
        },
        {
          "name": "testCycleSprintIdServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCycleFixVersionIdServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCycleSummaryServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseLabelsServer",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Labels to be added to the test run. For example: ** label1, label2 ** To get values check under: Qmetry &gt; Configuration &gt; Labels",
          "isOptional": false
        },
        {
          "name": "testCaseComponentsServer",
          "type": "String",
          "values": [],
          "description": "Comma separated names of Components to be added to the test run. For example: **component1, component2** To get values check under: Qmetry &gt; Configuration &gt; Component",
          "isOptional": false
        },
        {
          "name": "testCasePriorityServer",
          "type": "String",
          "values": [],
          "description": "Default value for Priority [High,Blocker,Low,Medium]. To get other values check under Qmetry &gt; Configuration &gt; Priority",
          "isOptional": false
        },
        {
          "name": "testCaseStatusServer",
          "type": "String",
          "values": [],
          "description": "Default value for Status [Done,In Progress,To Do]. To get other values check under Qmetry &gt; Configuration &gt; Statuses &gt; Test Case",
          "isOptional": false
        },
        {
          "name": "testCaseSprintIdServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseFixVersionIdServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qmetry-for-jira-test-management"
    },
    {
      "command": "step([$class: 'TestResultSenderBuildStep'])",
      "title": "step([$class: 'TestResultSenderBuildStep']): TestFLO Automation test results publisher",
      "description": "",
      "parameters": [
        {
          "name": "jiraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraUserName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jiraPassword",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testResultsDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "missingTestPlanKeyStrategy",
          "type": "Enum",
          "values": [
            "FAIL_TASK",
            "SKIP_TASK"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "testflo-for-jira-test-management-automation"
    },
    {
      "command": "step([$class: 'TestStudioAPITestBuilder'])",
      "title": "step([$class: 'TestStudioAPITestBuilder']): Test Studio for API runner configuration",
      "description": "Jenkins plugin for execution of Progress Test Studio for API tests.",
      "parameters": [
        {
          "name": "apiRunnerPath",
          "type": "String",
          "values": [],
          "description": "Full path to Test Studio for API Runner executable.",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "The path to the project folder.",
          "isOptional": true
        },
        {
          "name": "test",
          "type": "String",
          "values": [],
          "description": "Specify test/tests to run, one per line.\n\n\n\n\n\n\n\n  Example:\n \n\n .\\CRUD Tests\\Get All Users\n \n\n .\\Get User Id By Its Username",
          "isOptional": true
        },
        {
          "name": "startFrom",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stopAfter",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "variable",
          "type": "String",
          "values": [],
          "description": "Specify test parameters in key=value pairs, one pair per line.\n\n\n\n\n\n\n\n  Example:\n \n\n url=http://localhost:5000\n \n\n user-name=\"John Smith\"",
          "isOptional": true
        },
        {
          "name": "dontSaveContexts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testAsUnit",
          "type": "boolean",
          "values": [],
          "description": "If checked Test Studio for API test will be converted to JUnit test, else test will be converted to testsuite and test steps will be converted to JUnit test.",
          "isOptional": true
        }
      ],
      "plugin": "teststudioapitesting"
    },
    {
      "command": "step([$class: 'TestStudioTestBuilder'])",
      "title": "step([$class: 'TestStudioTestBuilder']): Test Studio runner configuration",
      "description": "Jenkins plugin for execution of Progress Test Studio tests.",
      "parameters": [
        {
          "name": "artOfTestRunnerPath",
          "type": "String",
          "values": [],
          "description": "Full path to TestStudio Runner executable.",
          "isOptional": false
        },
        {
          "name": "testPath",
          "type": "String",
          "values": [],
          "description": "The full path to the .tstest test or .aiilist (test list) to run.",
          "isOptional": false
        },
        {
          "name": "settingsPath",
          "type": "String",
          "values": [],
          "description": "The path to a XML file containing the custom params and/or settings for the run.",
          "isOptional": false
        },
        {
          "name": "dateFormat",
          "type": "String",
          "values": [],
          "description": "Date and time format used in StartTime and EndTime result fields. If empty default format \"yyyy-mm-dd'T'HH:mm:ss\" is used.\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n <th>Letter</th>\n <th>Date or Time Component</th>\n <th>Presentation</th>\n <th>Examples</th>\n   </tr>\n   <tr>\n <td>G</td>\n <td>Era designator</td>\n <td>Text</td>\n <td>AD</td>\n   </tr>\n   <tr>\n <td>y</td>\n <td>Year</td>\n <td>Year</td>\n <td>1996; 96</td>\n   </tr>\n   <tr>\n <td>Y</td>\n <td>Week year</td>\n <td>Year</td>\n <td>2009; 09</td>\n   </tr>\n   <tr>\n <td>M/L</td>\n <td>Month in year</td>\n <td>Month</td>\n <td>July; Jul; 07</td>\n   </tr>\n   <tr>\n <td>w</td>\n <td>Week in year</td>\n <td>Number</td>\n <td>27</td>\n   </tr>\n   <tr>\n <td>W</td>\n <td>Week in month</td>\n <td>Number</td>\n <td>2</td>\n   </tr>\n   <tr>\n <td>D</td>\n <td>Day in year</td>\n <td>Number</td>\n <td>189</td>\n   </tr>\n   <tr>\n <td>d</td>\n <td>Day in month</td>\n <td>Number</td>\n <td>10</td>\n   </tr>\n   <tr>\n <td>F</td>\n <td>Day of week in month</td>\n <td>Number</td>\n <td>2</td>\n   </tr>\n   <tr>\n <td>E</td>\n <td>Day in week</td>\n <td>Text</td>\n <td>Tuesday; Tue</td>\n   </tr>\n   <tr>\n <td>u</td>\n <td>Day number of week</td>\n <td>Number</td>\n <td>1</td>\n   </tr>\n   <tr>\n <td>a</td>\n <td>Am/pm marker</td>\n <td>Text</td>\n <td>PM</td>\n   </tr>\n   <tr>\n <td>H</td>\n <td>Hour in day (0-23)</td>\n <td>Number</td>\n <td>0</td>\n   </tr>\n   <tr>\n <td>k</td>\n <td>Hour in day (1-24)</td>\n <td>Number</td>\n <td>24</td>\n   </tr>\n   <tr>\n <td>K</td>\n <td>Hour in am/pm (0-11)</td>\n <td>Number</td>\n <td>0</td>\n   </tr>\n   <tr>\n <td>h</td>\n <td>Hour in am/pm (1-12)</td>\n <td>Number</td>\n <td>12</td>\n   </tr>\n   <tr>\n <td>m</td>\n <td>Minute in hour</td>\n <td>Number</td>\n <td>30</td>\n   </tr>\n   <tr>\n <td>s</td>\n <td>Second in minute</td>\n <td>Number</td>\n <td>55</td>\n   </tr>\n   <tr>\n <td>S</td>\n <td>Millisecond</td>\n <td>Number</td>\n <td>978</td>\n   </tr>\n   <tr>\n <td>z</td>\n <td>Time zone</td>\n <td>General time zone</td>\n <td>Pacific Standard Time; PST; GMT-08:00</td>\n   </tr>\n   <tr>\n <td>Z</td>\n <td>Time zone</td>\n <td>RFC 822 time zone</td>\n <td>-0800</td>\n   </tr>\n   <tr>\n <td>X</td>\n <td>Time zone</td>\n <td>ISO 8601 time zone</td>\n <td>-08; -0800; -08:00</td>\n   </tr>\n  </tbody>\n </table>\n\n\n\n\n\n\n\n <table>\n  <tbody>\n   <tr>\n <th>Input string</th>\n <th>Pattern</th>\n   </tr>\n   <tr>\n <td>2001.07.04 AD at 12:08:56 PDT</td>\n <td>yyyy.MM.dd G 'at' HH:mm:ss z</td>\n   </tr>\n   <tr>\n <td>Wed, Jul 4, '01</td>\n <td>EEE, MMM d, ''yy</td>\n   </tr>\n   <tr>\n <td>12:08 PM</td>\n <td>h:mm a</td>\n   </tr>\n   <tr>\n <td>12 o'clock PM, Pacific Daylight Time</td>\n <td>hh 'o''clock' a, zzzz</td>\n   </tr>\n   <tr>\n <td>0:08 PM, PDT</td>\n <td>K:mm a, z</td>\n   </tr>\n   <tr>\n <td>02001.July.04 AD 12:08 PM</td>\n <td>yyyyy.MMMM.dd GGG hh:mm aaa</td>\n   </tr>\n   <tr>\n <td>Wed, 4 Jul 2001 12:08:56 -0700</td>\n <td>EEE, d MMM yyyy HH:mm:ss Z</td>\n   </tr>\n   <tr>\n <td>010704120856-0700</td>\n <td>yyMMddHHmmssZ</td>\n   </tr>\n   <tr>\n <td>2001-07-04T12:08:56.235-0700</td>\n <td>yyyy-MM-dd'T'HH:mm:ss.SSSZ</td>\n   </tr>\n   <tr>\n <td>2001-07-04T12:08:56.235-07:00</td>\n <td>yyyy-MM-dd'T'HH:mm:ss.SSSXXX</td>\n   </tr>\n   <tr>\n <td>2001-W27-3</td>\n <td>YYYY-'W'ww-u</td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": false
        },
        {
          "name": "projectRoot",
          "type": "String",
          "values": [],
          "description": "The path to the project root folder.",
          "isOptional": true
        },
        {
          "name": "testAsUnit",
          "type": "boolean",
          "values": [],
          "description": "If checked TestStudio test will be converted to JUnit test, else test steps will be converted.",
          "isOptional": true
        },
        {
          "name": "outputPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "teststudio"
    },
    {
      "command": "step([$class: 'TesteinRunBuilder'])",
      "title": "step([$class: 'TesteinRunBuilder']): Run Testein test/suite/application",
      "description": "",
      "parameters": [
        {
          "name": "targetType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetId",
          "type": "String",
          "values": [],
          "description": "Id of the target, that you want to run. Could be found on the target's detail page",
          "isOptional": false
        },
        {
          "name": "downloadReport",
          "type": "boolean",
          "values": [],
          "description": "If checked, execution report will be downloaded in format Testein-Report-{runId}.html",
          "isOptional": false
        },
        {
          "name": "downloadLogs",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "testein"
    },
    {
      "command": "step([$class: 'TesteinUploadStepBuilder'])",
      "title": "step([$class: 'TesteinUploadStepBuilder']): Upload Testein custom test steps",
      "description": "",
      "parameters": [
        {
          "name": "enableJs",
          "type": "Nested",
          "values": [
            "jsFilePath",
            "jsonFilePath"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "enableJar",
          "type": "Nested",
          "values": [
            "jarFilePath"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overwrite",
          "type": "boolean",
          "values": [],
          "description": "If checked, upload will overwrite existing test step. If not checked and test step already exists - an error will be generated",
          "isOptional": false
        }
      ],
      "plugin": "testein"
    },
    {
      "command": "step([$class: 'TestiniumPlugin'])",
      "title": "step([$class: 'TestiniumPlugin']): Testinium Execution",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "int",
          "values": [],
          "description": "Project of the plan to run",
          "isOptional": true
        },
        {
          "name": "planId",
          "type": "int",
          "values": [],
          "description": "Testinium plan to run",
          "isOptional": true
        },
        {
          "name": "abortOnError",
          "type": "boolean",
          "values": [],
          "description": "If checked fails the current build if at least one of the tests encounter an error",
          "isOptional": true
        },
        {
          "name": "abortOnFailed",
          "type": "boolean",
          "values": [],
          "description": "If checked fails the current build if at least one of the tests is unsuccessful",
          "isOptional": true
        },
        {
          "name": "failOnTimeout",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreInactive",
          "type": "boolean",
          "values": [],
          "description": "If checked jenkins won't raise error if selected plan is deactivated from Testinium.",
          "isOptional": true
        },
        {
          "name": "timeoutSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testinium"
    },
    {
      "command": "step([$class: 'ThreadFixPublisher'])",
      "title": "step([$class: 'ThreadFixPublisher']): Publish ThreadFix Scan",
      "description": "",
      "parameters": [
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "scanFiles",
          "type": "Nested",
          "values": [
            "path"
          ],
          "description": "The application scan artifacts to upload to the ThreadFix server.",
          "isOptional": false
        }
      ],
      "plugin": "threadfix"
    },
    {
      "command": "step([$class: 'TicsAnalyzer'])",
      "title": "step([$class: 'TicsAnalyzer']): Run TICS",
      "description": "",
      "parameters": [
        {
          "name": "ticsPath",
          "type": "String",
          "values": [],
          "description": "The fully qualified directory where TICS is located, e.g. `C:\\Program Files (x86)\\TIOBE\\TICS\\BuildServer`. This directory should contain the `TICSQServer` and `TICSMaintenance` executables. You can leave this field empty if these executables can be found on the PATH environment variable of the Jenkins slave user.",
          "isOptional": false
        },
        {
          "name": "ticsConfiguration",
          "type": "String",
          "values": [],
          "description": "The directory of the TICS configuration that should be used, e.g. `C:\\Program Files (x86)\\TIOBE\\TICS\\FileServer\\cfg`. The TICS configuration directory contains the `SERVER.txt` and `PROJECTS.txt` configuration files, among others. This setting sets the `TICS` environment variable before executing `TICSQServer`. You can leave this field empty if this variable is already set on the Jenkins slave.",
          "isOptional": false
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "The name of the project for which this run should be performed. This project should already exist in the TICS Configuration as you cannot create a new project using this plugin. You can create a new project by using the Build Configuration page of the Viewer or by using `TICSMaintenance` from the command line. Note that you can use Jenkins environment variables such as `$JOB_NAME` here.",
          "isOptional": false
        },
        {
          "name": "branchName",
          "type": "String",
          "values": [],
          "description": "The name of the branch for which the run should be performed. Although most projects only have one branch (named \"trunk\", \"main\", or \"master\"), you still need to specify the branch name here because more branches might be added later. To find out the branches of a project you can use the Build Configuration page of the TICS Viewer.",
          "isOptional": false
        },
        {
          "name": "branchDirectory",
          "type": "String",
          "values": [],
          "description": "The branch directory is the root directory of the source files for the branch. If this setting is provided, the branch directory will be updated prior to each TICSQServer run by invoking `TICSMaintenance -branchdir`. Note that you can use Jenkins variables (such as `$WORKSPACE`) here.",
          "isOptional": false
        },
        {
          "name": "environmentVariables",
          "type": "String",
          "values": [],
          "description": "A new-line separated list of environment variables that will be set before invoking TICSQServer. Some TICS modules and code checkers might need configuration using environment variables. Note that you can use environment variables such as `$WORKSPACE` here. Example:\n \n \n\n \n```groovy\nTICS_M2_OPTS=-s C:\\Tools\\apache-maven\\conf\\settings.xml\nTICS_COVERITY_URL=http://localhost:8080\nQACBIN=C:/QAC/common/bin\nPATH=C:\\Tools\\bin;$PATH\n\n```",
          "isOptional": false
        },
        {
          "name": "createTmpdir",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tmpdir",
          "type": "String",
          "values": [],
          "description": "TICSQServer will create a directory named \"ticstmpdir\" in this directory. This tmpdir will contain log files useful for debugging problems encountered during the TICSQServer analysis. You can use Jenkins variables here. Example: `C:/temp/$JOB_NAME`.",
          "isOptional": false
        },
        {
          "name": "extraArguments",
          "type": "String",
          "values": [],
          "description": "Extra arguments to pass to the TICSQServer invocation.",
          "isOptional": false
        },
        {
          "name": "calc",
          "type": "Nested",
          "values": [
            "ABSTRACTINTERPRETATION",
            "ACCUCHANGERATE",
            "ACCUFIXRATE",
            "ACCULINESADDED",
            "ACCULINESCHANGED",
            "ACCULINESDELETED",
            "ALL",
            "AVGCYCLOMATICCOMPLEXITY",
            "BUILDRELATIONS",
            "CHANGEDFILES",
            "CHANGERATE",
            "CODINGSTANDARD",
            "COMPILERWARNING",
            "DEADCODE",
            "DUPLICATEDCODE",
            "ELOC",
            "FANOUT",
            "FINALIZE",
            "FIXRATE",
            "GLOC",
            "INCLUDERELATIONS",
            "INTEGRATIONTESTCOVERAGE",
            "LINESADDED",
            "LINESCHANGED",
            "LINESDELETED",
            "LOC",
            "MAXCYCLOMATICCOMPLEXITY",
            "PREPARE",
            "SECURITY",
            "SYSTEMTESTCOVERAGE",
            "TOTALTESTCOVERAGE",
            "UNITTESTCOVERAGE"
          ],
          "description": "Check one or more metrics to have TICSQServer only calculate these metrics (for changed files). If nothing is checked, all metrics will be calculated.",
          "isOptional": false
        },
        {
          "name": "recalc",
          "type": "Nested",
          "values": [
            "ABSTRACTINTERPRETATION",
            "ACCUCHANGERATE",
            "ACCUFIXRATE",
            "ACCULINESADDED",
            "ACCULINESCHANGED",
            "ACCULINESDELETED",
            "ALL",
            "AVGCYCLOMATICCOMPLEXITY",
            "BUILDRELATIONS",
            "CHANGEDFILES",
            "CHANGERATE",
            "CODINGSTANDARD",
            "COMPILERWARNING",
            "DEADCODE",
            "DUPLICATEDCODE",
            "ELOC",
            "FANOUT",
            "FINALIZE",
            "FIXRATE",
            "GLOC",
            "INCLUDERELATIONS",
            "INTEGRATIONTESTCOVERAGE",
            "LINESADDED",
            "LINESCHANGED",
            "LINESDELETED",
            "LOC",
            "MAXCYCLOMATICCOMPLEXITY",
            "PREPARE",
            "SECURITY",
            "SYSTEMTESTCOVERAGE",
            "TOTALTESTCOVERAGE",
            "UNITTESTCOVERAGE"
          ],
          "description": "Check one or more metrics to have TICSQServer recalculate these metrics, even for unchanged files. If nothing is checked, TICSQServer does not force recalculation of metrics for unchanged files.",
          "isOptional": false
        }
      ],
      "plugin": "tics"
    },
    {
      "command": "step([$class: 'TicsPublisher'])",
      "title": "step([$class: 'TicsPublisher']): Publish TICS results",
      "description": "",
      "parameters": [
        {
          "name": "viewerUrl",
          "type": "String",
          "values": [],
          "description": "URL where the TICS Viewer can be found, including the section name. Example: `http://192.168.1.1:8080/tiobeweb/TICS`. To determine this URL, open your TICS Viewer, and copy and paste the first part of the URL from your browser's address bar here. The URL should include the name of the <i>section</i>, which in this case is `TICS`.\n \n\n\n \n\n If you have configured this URL in the global settings, you can leave it empty here.",
          "isOptional": false
        },
        {
          "name": "ticsPath",
          "type": "String",
          "values": [],
          "description": "Fully qualified path to a branch. The path should be of the form `HIE://PROJECT/BRANCH`, where `PROJECT` should be substituted by the actual name of the project and `BRANCH` by the branch name for which you want to get the results. The name of the project and the name of the default branch can be found in the top part of the TIOBE Quality Indicator Label on the TQI Dashboard, when you select the project. Note that you can use the variable $JOB_NAME here.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkQualityGate",
          "type": "boolean",
          "values": [],
          "description": "Enabling Quality Gate will perform the configured quality gate checks. If no quality gate is configured, no check will be performed. The configuration can be done in the Viewer through the Administration pages.",
          "isOptional": false
        },
        {
          "name": "failIfQualityGateFails",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tics"
    },
    {
      "command": "step([$class: 'UnitTestBuilder'])",
      "title": "step([$class: 'UnitTestBuilder']): Run unit tests with Toad DevOps Toolkit",
      "description": "",
      "parameters": [
        {
          "name": "connection",
          "type": "String",
          "values": [],
          "description": "An Oracle connection string used for connecting to the database.\n`user/password@host:port/service`",
          "isOptional": false
        },
        {
          "name": "objects",
          "type": "Nested",
          "values": [
            "name",
            "owner"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "txt",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "xml",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ci-with-toad-devops-toolkit"
    },
    {
      "command": "step([$class: 'UpdateBuilder'])",
      "title": "step([$class: 'UpdateBuilder']): Liquibase: Update Database",
      "description": "",
      "parameters": [
        {
          "name": "changeLogFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "changeLogParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contexts",
          "type": "String",
          "values": [],
          "description": "Liquibase contexts to execute under.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "labels",
          "type": "String",
          "values": [],
          "description": "Liquibase labels to execute",
          "isOptional": true
        },
        {
          "name": "liquibasePropertiesPath",
          "type": "String",
          "values": [],
          "description": "A liquibase.properties file can be used for default values. Any of the below settings will override what is in this file. This file should be relative to a directory listed in the \"Resource directories\" section.",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceDirectories",
          "type": "String",
          "values": [],
          "description": "Leave blank for workspace root. May be relative to workspace or an absolute path.",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "example: jdbc:mysql://localhost:3306/sampledb. The JDBC driver must be available in the \"lib\" directory of your Liquibase installation",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "liquibase-runner"
    },
    {
      "command": "step([$class: 'UpdaterPublisher'])",
      "title": "step([$class: 'UpdaterPublisher']): Publish Maven Artifacts",
      "description": "",
      "parameters": [],
      "plugin": "repository"
    },
    {
      "command": "step([$class: 'UploadBuild'])",
      "title": "step([$class: 'UploadBuild']): UCV - Upload Build to UrbanCode Velocity",
      "description": "",
      "parameters": [
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "requestor",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "One of start, in_progress, success, or failure.",
          "isOptional": false
        },
        {
          "name": "startTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "endTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appExtId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fatal",
          "type": "boolean",
          "values": [],
          "description": "Fail build on failed upload (rather than just making build unstable).",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'UploadDeployment'])",
      "title": "step([$class: 'UploadDeployment']): UCV - Upload Deployment to UrbanCode Velocity",
      "description": "",
      "parameters": [
        {
          "name": "id",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "result",
          "type": "String",
          "values": [],
          "description": "One of start, in_progress, success, or failure.",
          "isOptional": false
        },
        {
          "name": "initiator",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionExtId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "startTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "endTime",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appExtId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fatal",
          "type": "boolean",
          "values": [],
          "description": "Fail build on failed upload (rather than just making build unstable).",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'UploadJUnitTestResult'])",
      "title": "step([$class: 'UploadJUnitTestResult']): UCV - Upload JUnit Results to UrbanCode Velocity",
      "description": "",
      "parameters": [
        {
          "name": "properties",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'UploadMetricsFile'])",
      "title": "step([$class: 'UploadMetricsFile']): UCV - Upload Metrics File to UrbanCode Velocity",
      "description": "",
      "parameters": [
        {
          "name": "tenantId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testSetName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environment",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "combineTestSuites",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fatal",
          "type": "boolean",
          "values": [],
          "description": "Fail build on failed test upload (rather than just making build unstable).",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pluginType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dataFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "recordName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metricDefinitionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metricsRecordUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appExtId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "urbancode-velocity"
    },
    {
      "command": "step([$class: 'VSphereBuildStepContainer'])",
      "title": "step([$class: 'VSphereBuildStepContainer']): vSphere Build Step",
      "description": "",
      "parameters": [
        {
          "name": "buildStep",
          "type": "Nested",
          "values": [
            "$class: 'Clone'",
            "$class: 'ConvertToTemplate'",
            "$class: 'ConvertToVm'",
            "$class: 'Delete'",
            "$class: 'DeleteSnapshot'",
            "$class: 'Deploy'",
            "$class: 'ExposeGuestInfo'",
            "$class: 'PowerOff'",
            "$class: 'PowerOn'",
            "$class: 'Reconfigure'",
            "$class: 'Rename'",
            "$class: 'RenameSnapshot'",
            "$class: 'RevertToSnapshot'",
            "$class: 'SuspendVm'",
            "$class: 'TakeSnapshot'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "The vSphere configuration to use. Use ${VSPHERE_CLOUD_NAME} and create a vsphere selection parameter if you want to dynamically select the vSphere configuration.\n \n\n A vsphere selection parameter is the same as a string parameter named VSPHERE_CLOUD_NAME but allows easy selection of a vsphere cloud.",
          "isOptional": false
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "step([$class: 'ValgrindBuilder'])",
      "title": "step([$class: 'ValgrindBuilder']): Run Valgrind",
      "description": "",
      "parameters": [
        {
          "name": "valgrindExecutable",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "workingDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "includePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "excludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "outputFileEnding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "programOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tool",
          "type": "Nested",
          "values": [
            "$class: 'ValgrindToolHelgrind'",
            "$class: 'ValgrindToolMemcheck'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "valgrindOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignoreExitCode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "traceChildren",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "childSilentAfterFork",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "generateSuppressions",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "suppressionFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "removeOldReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "valgrind"
    },
    {
      "command": "step([$class: 'ValgrindPublisher'])",
      "title": "step([$class: 'ValgrindPublisher']): Publish Valgrind results",
      "description": "",
      "parameters": [
        {
          "name": "pattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdInvalidReadWrite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdDefinitelyLost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failThresholdTotal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdInvalidReadWrite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdDefinitelyLost",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unstableThresholdTotal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceSubstitutionPaths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishResultsForAbortedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "publishResultsForFailedBuilds",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnMissingReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuildOnInvalidReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "valgrind"
    },
    {
      "command": "step([$class: 'VectorCASTCommand'])",
      "title": "step([$class: 'VectorCASTCommand']): VectorCAST Command",
      "description": "",
      "parameters": [
        {
          "name": "winCommand",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unixCommand",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vectorcast-execution"
    },
    {
      "command": "step([$class: 'VectorCASTPublisher'])",
      "title": "step([$class: 'VectorCASTPublisher']): Record VectorCAST Coverage Information",
      "description": "",
      "parameters": [
        {
          "name": "includes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useThreshold",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "healthyTarget",
          "type": "Nested",
          "values": [
            "minStatement",
            "maxStatement",
            "minBranch",
            "maxBranch",
            "minBasisPath",
            "maxBasisPath",
            "minMCDC",
            "maxMCDC",
            "minFunction",
            "maxFunction",
            "minFunctionCall",
            "maxFunctionCall"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unhealthyTarget",
          "type": "Nested",
          "values": [
            "minStatement",
            "maxStatement",
            "minBranch",
            "maxBranch",
            "minBasisPath",
            "maxBasisPath",
            "minMCDC",
            "maxMCDC",
            "minFunction",
            "maxFunction",
            "minFunctionCall",
            "maxFunctionCall"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vectorcast-coverage"
    },
    {
      "command": "step([$class: 'VectorCASTSetup'])",
      "title": "step([$class: 'VectorCASTSetup']): VectorCAST Setup",
      "description": "",
      "parameters": [
        {
          "name": "environmentSetupWin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentSetupUnix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executePreambleWin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executePreambleUnix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentTeardownWin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentTeardownUnix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optionUseReporting",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optionErrorLevel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optionHtmlBuildDesc",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optionExecutionReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "optionClean",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitLoops",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "manageProjectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nodeLabel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vectorcast-execution"
    },
    {
      "command": "step([$class: 'ViewCloner'])",
      "title": "step([$class: 'ViewCloner']): View clone",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "Absolute url to the view you want to clone",
          "isOptional": false
        },
        {
          "name": "replacePatternString",
          "type": "String",
          "values": [],
          "description": "Comma separated list of oldValue=newValue\n\n\n Example:\n\n\n 1.1-SNAPSHOT=1.2-SNAPSHOT, slave1=slave2",
          "isOptional": false
        },
        {
          "name": "niewViewName",
          "type": "String",
          "values": [],
          "description": "Name of the view that will be created",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "Password for the user",
          "isOptional": false
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "User to authenticate with",
          "isOptional": false
        }
      ],
      "plugin": "view-cloner"
    },
    {
      "command": "step([$class: 'WASScanNotifier'])",
      "title": "step([$class: 'WASScanNotifier']): Scan web applications with Qualys WAS",
      "description": "",
      "parameters": [
        {
          "name": "apiServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authRecord",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "authRecordId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cancelHours",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "cancelOptions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnScanError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isFailOnQidFound",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev1Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev2Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev3Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev4Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isSev5Vulns",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "optionProfileId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollingInterval",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyPort",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "proxyServer",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "qidList",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity1Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity2Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity3Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity4Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "severity5Limit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vulnsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webAppId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "qualys-was"
    },
    {
      "command": "step([$class: 'WTBuildNotifier'])",
      "title": "step([$class: 'WTBuildNotifier']): Worktile: create build record",
      "description": "",
      "parameters": [
        {
          "name": "overview",
          "type": "String",
          "values": [],
          "description": "A regular expression is used to match the result summary in the build output for display in PingCode.\n \n\n\n \n\n For example: The following is part of the build output in Jenkins:\n \n\n\n \n\n ` ...\n\n # utilities ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 40, true \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 39, false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 41, false \n\n ✓ #PLM-1239 isSha, input ' ' + '0-9a-fA-F' * 39, false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 39 + ' ', false \n\n ✓ #PLM-1239 isSha, input '0-9a-fA-F' * 1 + '0-9a-fA-F ' * + '0-9a-fA-F' * 1, true \n\n \n\n 720 passing (10s) `\n \n If you want to display the line **720 passing (10s)** on PingCode Agile Project, you need to enter **^.*passing** in the input box. PingCode jenkins plugin will match this line from the build result according to your input regular expression and send it to PingCode.",
          "isOptional": true
        },
        {
          "name": "defaultSummary",
          "type": "String",
          "values": [],
          "description": "If no information can be matched from the result logs, this value will be sent by default.",
          "isOptional": true
        },
        {
          "name": "resultURL",
          "type": "String",
          "values": [],
          "description": "A url of result for display in pingcode. if empty, the jenkins console result url will be used.\n \n\n You can use environment variables for dynamic variable substitution in the url.\n \n\n For example: http://jenkins-host/result-${BUILD_ID}, which means that the url is dynamically generated using the BUILD_ID. All environment variables injected by the plugin can be used. If the environment variable does not exist, the source character will be retained.",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "step([$class: 'WTDeployNotifier'])",
      "title": "step([$class: 'WTDeployNotifier']): Worktile: create deploy record",
      "description": "",
      "parameters": [
        {
          "name": "tagged",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "The name of the release. You can use environment variables for dynamic variable substitution in the name.\n \n\n For example: release-${BUILD_ID}, which means that the release name is dynamically generated using the BUILD_ID. All environment variables injected by the plugin can be used. If the environment variable does not exist, the source character will be retained.",
          "isOptional": true
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "The name of environment that the code will be deployed to. If the environment does not exist, the plugin will automatically create.",
          "isOptional": true
        },
        {
          "name": "releaseUrl",
          "type": "String",
          "values": [],
          "description": "Optional. A URL that can view the detail deployment results. If it is empty, no related links are displayed in PingCode.",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "step([$class: 'WallarmFastBuilder'])",
      "title": "step([$class: 'WallarmFastBuilder']): WallarmFastBuilder",
      "description": "",
      "parameters": [
        {
          "name": "appHost",
          "type": "String",
          "values": [],
          "description": "A URI of the target application.The IP address of the target application may change during the CI/CD process, so it's better to use the application URI.",
          "isOptional": false
        },
        {
          "name": "appPort",
          "type": "String",
          "values": [],
          "description": "The port of the target application. Combines with the appHost field.",
          "isOptional": false
        },
        {
          "name": "fastPort",
          "type": "String",
          "values": [],
          "description": "FAST open port for recieving proxy requests. Any port value may be used. This parameter is only used in recording mode.",
          "isOptional": false
        },
        {
          "name": "fastName",
          "type": "String",
          "values": [],
          "description": "A unique name for the Wallarm FAST docker. Although none is required for FAST to function, it may be easier to identify different dockers when a known handle is used.",
          "isOptional": false
        },
        {
          "name": "policyId",
          "type": "int",
          "values": [],
          "description": "The identifier of the test policy. If the parameter is missing, then the default policy takes action.",
          "isOptional": false
        },
        {
          "name": "testRecordId",
          "type": "int",
          "values": [],
          "description": "Identifier of a test record. When no test record id is supplied, the last created test record is used Default: empty value.",
          "isOptional": false
        },
        {
          "name": "wallarmApiHost",
          "type": "String",
          "values": [],
          "description": "The domain name of the Wallarm API server to use. Allowed values: us1.api.wallarm.com for use with the US cloud; api.wallarm.com for use with the EU cloud.",
          "isOptional": false
        },
        {
          "name": "testRunName",
          "type": "String",
          "values": [],
          "description": "The name of the test run. Default value is in the following format: “TestRun Sep 24 12:31 UTC”.",
          "isOptional": false
        },
        {
          "name": "testRunDesc",
          "type": "String",
          "values": [],
          "description": "The description of the test run. Default value: empty string.",
          "isOptional": false
        },
        {
          "name": "record",
          "type": "boolean",
          "values": [],
          "description": "The Wallarm FAST plugin has 2 modes of operation: recording and testing. In recording mode, the FAST application will act as a proxy. Any traffic sent through FAST will be recorded as a baseline and saved to a TestRecord for later use. In Playback mode, the FAST application will use an existing TestRecord to generate a TestRun.",
          "isOptional": false
        },
        {
          "name": "stopOnFirstFail",
          "type": "boolean",
          "values": [],
          "description": "This parameter specifies FAST’s behavior when a vulnerability is detected: true: stop the execution of the test run on the first detected vulnerability. false: process all the baseline requests regardless of whether any vulnerability is detected. Default value: false.",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "If checked, will allow the plugin to fail the current build if any vulnerabilities are found, thereby preventing further exectution of the pipline. Otherwise only a warning text will be outputted, informing of any found vulnerabilities, but normal execution will continue.",
          "isOptional": false
        },
        {
          "name": "withoutSudo",
          "type": "boolean",
          "values": [],
          "description": "When checked, calls docker without sudo. By default, docker cannot be called this way.",
          "isOptional": false
        },
        {
          "name": "localDockerNetwork",
          "type": "String",
          "values": [],
          "description": "If FAST is required to operate from within an existing docker network, you may specify the network name here. This will simply append '--net your_network' to the docker launch command.",
          "isOptional": false
        },
        {
          "name": "localDockerIp",
          "type": "String",
          "values": [],
          "description": "Used when FAST is required to be directly addressable from a docker network. Simply appends '--ip your_ip' to the launch command",
          "isOptional": false
        },
        {
          "name": "wallarmVersion",
          "type": "String",
          "values": [],
          "description": "The version of FAST to use. You may specify any version found on https://hub.docker.com/r/wallarm/fast. Default: latest",
          "isOptional": false
        },
        {
          "name": "fileExtensionsToExclude",
          "type": "String",
          "values": [],
          "description": "Static files found by FAST often do not contain vulnerabilities and to not react to payloads, however it is impossible to dynamically determine if the page is invulnerable to the used payloads or just doesn't proccess payloads at all. Excluding payloads from the scanning will speed up the testing proccess significantly. Leave this field blank to scan all files found. Default: \"js|jpeg|jpg|gif|png|css\"",
          "isOptional": false
        },
        {
          "name": "inactivityTimeout",
          "type": "int",
          "values": [],
          "description": "If no baseline requests arrive to the FAST node within the INACTIVITY_TIMEOUT interval, then the recording process is stopped along with the FAST node. Allowed value range: from 0 to 691200 seconds (1 week) Default value: 600 seconds (10 minutes)",
          "isOptional": false
        },
        {
          "name": "testRunRps",
          "type": "int",
          "values": [],
          "description": "The parameter specifies a limit on the number of test requests (RPS, requests per second) to be sent to the target application during test run execution. Allowed value range: from 1 to 1000 (requests per second) Default value: unlimited ( =0 ).",
          "isOptional": false
        },
        {
          "name": "wallarmApiToken",
          "type": "String",
          "values": [],
          "description": "Your Wallarm node token. Can be found at \"https://us1.my.wallarm.com/nodes\" for North America or \"https://my.wallarm.com/nodes\" for Europe",
          "isOptional": true
        }
      ],
      "plugin": "wallarm-fast"
    },
    {
      "command": "step([$class: 'WaptPro'])",
      "title": "step([$class: 'WaptPro']): Publish WAPT Pro reports",
      "description": "",
      "parameters": [
        {
          "name": "reportsFolder",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkTestResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "waptpro"
    },
    {
      "command": "step([$class: 'WarriorPluginBuilder'])",
      "title": "step([$class: 'WarriorPluginBuilder']): Warrior Framework Plugin",
      "description": "",
      "parameters": [
        {
          "name": "configType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitConfigUrl",
          "type": "String",
          "values": [],
          "description": "Provide GIT URL of the repository which has warhorn configuration file.",
          "isOptional": false
        },
        {
          "name": "gitConfigCredentials",
          "type": "boolean",
          "values": [],
          "description": "Choose to provide credentials to clone GIT repository.",
          "isOptional": false
        },
        {
          "name": "gitConfigTagValue",
          "type": "String",
          "values": [],
          "description": "Provide branch/commit ID/tag name of GIT repository(leave blank to use master).",
          "isOptional": false
        },
        {
          "name": "gitConfigCloneType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "gitConfigUname",
          "type": "String",
          "values": [],
          "description": "Provide user name to access GIT repository.",
          "isOptional": false
        },
        {
          "name": "gitConfigPwd",
          "type": "String",
          "values": [],
          "description": "Provide password to access GIT repository.",
          "isOptional": false
        },
        {
          "name": "gitConfigFile",
          "type": "String",
          "values": [],
          "description": "Provide path of configuration file.\n \n\n Example with sample directory structure:\n \n\n  - root_dir\n \n\n   - dir1\n \n\n    - file1.xml\n \n\n    - sub_dir1\n \n\n     - file2.xml\n \n\n To add file2.xml as configuration file, use \"dir1/sub_dir1/file2.xml\"(exclude root directory from file path).",
          "isOptional": false
        },
        {
          "name": "sftpConfigIp",
          "type": "String",
          "values": [],
          "description": "Provide Name/IP of SFTP server.",
          "isOptional": false
        },
        {
          "name": "sftpConfigUname",
          "type": "String",
          "values": [],
          "description": "Provide username for SFTP server.",
          "isOptional": false
        },
        {
          "name": "sftpConfigPwd",
          "type": "String",
          "values": [],
          "description": "Provide password for SFTP server.",
          "isOptional": false
        },
        {
          "name": "sftpConfigFile",
          "type": "String",
          "values": [],
          "description": "Provide absolute or relative-to-home path of configuration file.\n \n\n  1. Absolute path - /home/username/dir1/warhorn_config.xml\n \n\n  2. Relative-to-home path - dir1/warhorn_config.xml",
          "isOptional": false
        },
        {
          "name": "pythonPath",
          "type": "String",
          "values": [],
          "description": "(optional)Provide absolute path of Python executable.\n \n\n Leave blank to use default Python for execution.",
          "isOptional": false
        },
        {
          "name": "uploadExecLog",
          "type": "boolean",
          "values": [],
          "description": "Choose to upload Warrior execution folder as zip file to any server via FTP/SFTP/SCP.\n \n\n Format - Execution_jenkins-&lt;job_name&gt;-&lt;build_number&gt;.zip\n \n\n Example - Execution_jenkins-Test_Job_Warrior_Plugin-48.zip",
          "isOptional": false
        },
        {
          "name": "uploadServerIp",
          "type": "String",
          "values": [],
          "description": "Provide Name/IP of remote server.",
          "isOptional": false
        },
        {
          "name": "uploadServerUname",
          "type": "String",
          "values": [],
          "description": "Provide username for remote server.",
          "isOptional": false
        },
        {
          "name": "uploadServerPwd",
          "type": "String",
          "values": [],
          "description": "Provide password for remote server.",
          "isOptional": false
        },
        {
          "name": "uploadServerType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "uploadServerDir",
          "type": "String",
          "values": [],
          "description": "(optional)Provide absolute or relative-to-home path of destination directory in remote server.\n \n\n Leave empty to copy warrior execution folder(as a zip file) in user's home directory.",
          "isOptional": false
        },
        {
          "name": "runFiles",
          "type": "Nested",
          "values": [
            "runFile"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "warrior"
    },
    {
      "command": "step([$class: 'WhiteSourcePublisher'])",
      "title": "step([$class: 'WhiteSourcePublisher']): White Source Publisher",
      "description": "",
      "parameters": [
        {
          "name": "jobCheckPolicies",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobForceUpdate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobApiToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobUserKey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "product",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "productVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "libIncludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "libExcludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "mavenProjectToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "requesterEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "moduleTokens",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "modulesToInclude",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "modulesToExclude",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "ignorePomModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "whitesource"
    },
    {
      "command": "step([$class: 'WinDocksBuilder'])",
      "title": "step([$class: 'WinDocksBuilder']): Setup Docker Container",
      "description": "",
      "parameters": [
        {
          "name": "ipaddress",
          "type": "String",
          "values": [],
          "description": "Specify the IP Address of the Docker server you wish to create a container in.",
          "isOptional": false
        },
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "windocks-start-container"
    },
    {
      "command": "step([$class: 'XFramiumBuilder'])",
      "title": "step([$class: 'XFramiumBuilder']): XFramium Script Execution",
      "description": "",
      "parameters": [
        {
          "name": "configFile",
          "type": "String",
          "values": [],
          "description": "The location of an XFramium [driver configuration](https://www.xframium.org/configuration.html) file in either TEXT or XML format.",
          "isOptional": false
        },
        {
          "name": "suiteName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testNames",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "tagNames",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "stepTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deviceTags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "defaultCloud",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrideDefaults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "xframium"
    },
    {
      "command": "step([$class: 'XLRVarSetterBuilder'])",
      "title": "step([$class: 'XLRVarSetterBuilder']): XL-Release Var Setter",
      "description": "",
      "parameters": [
        {
          "name": "XLR_releaseId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "XLR_varName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "JKS_varName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "xlrelease-var-setter"
    },
    {
      "command": "step([$class: 'XUnitPublisher'])",
      "title": "step([$class: 'XUnitPublisher']): Publish xUnit test result report",
      "description": "",
      "parameters": [
        {
          "name": "tools",
          "type": "Nested",
          "values": [
            "AUnit",
            "BoostTest",
            "CTest",
            "CUnit",
            "Check",
            "CppTest",
            "CppUnit",
            "$class: 'CpptestPluginType'",
            "Custom",
            "embUnit",
            "FPCUnit",
            "gtester",
            "$class: 'GallioPluginType'",
            "GoogleTest",
            "$class: 'JSUnitPluginType'",
            "JUnit",
            "MSTest",
            "MbUnit",
            "NUnit3",
            "NUnit2",
            "PHPUnit",
            "$class: 'ParasoftSOAtest9xType'",
            "$class: 'ParasoftType'",
            "QtTest",
            "$class: 'SCTMTestType'",
            "UnitTest",
            "Valgrind",
            "xUnitDotNet",
            "$class: 'hudson.plugins.testcomplete.TestCompleteTestType'",
            "$class: 'jenkins.plugins.xunit.tc11.TestCompleteTestType'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "thresholds",
          "type": "Nested",
          "values": [
            "failed",
            "passed",
            "skipped"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "thresholdMode",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testTimeMargin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "followSymlink",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reduceLog",
          "type": "boolean",
          "values": [],
          "description": "Cuts the standard output and error of reports to a reasonable size.\n \n This reduce usage of memory when Jenkins parse the aggregate report when hundred test failure with a huge logs.",
          "isOptional": true
        },
        {
          "name": "sleepTime",
          "type": "long",
          "values": [],
          "description": "The time in ms for which the conversion process will be suspended before starting to process the next block of reports.\n \n Conversion is a CPU intensive work. May happens the ping thread on slave nodes to be killed. Increases this value to allow CPU be available to other thread.",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xunit"
    },
    {
      "command": "step([$class: 'XrayExportBuilder'])",
      "title": "step([$class: 'XrayExportBuilder']): Xray: Cucumber Features Export Task",
      "description": "",
      "parameters": [
        {
          "name": "serverInstance",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "issues",
          "type": "String",
          "values": [],
          "description": "Please fill this field with the issue keys separated by \";\".",
          "isOptional": false
        },
        {
          "name": "filter",
          "type": "String",
          "values": [],
          "description": "Please fill this field with the filter id.",
          "isOptional": false
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "The default value is \"/features\"",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fields",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xrayInstance",
          "type": "Nested",
          "values": [
            "configID",
            "alias",
            "hosting",
            "serverAddress",
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xray-connector"
    },
    {
      "command": "step([$class: 'XrayImportBuilder'])",
      "title": "step([$class: 'XrayImportBuilder']): Xray: Results Import Task",
      "description": "",
      "parameters": [
        {
          "name": "serverInstance",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "endpointName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testEnvironments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testPlanKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fixVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "importFilePath",
          "type": "String",
          "values": [],
          "description": "The default value is \"/features/result.json\". Either specify the path and name to the new file or rename the json file to \"result.json\" and move it inside the features folder.",
          "isOptional": false
        },
        {
          "name": "testExecKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "importInfo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testImportInfo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inputInfoSwitcher",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "inputTestInfoSwitcher",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "importToSameExecution",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "importInParallel",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dynamicFields",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "endpoint",
          "type": "Enum",
          "values": [
            "XRAY",
            "XRAY_MULTIPART",
            "CUCUMBER",
            "CUCUMBER_MULTIPART",
            "BEHAVE",
            "BEHAVE_MULTIPART",
            "JUNIT",
            "JUNIT_MULTIPART",
            "NUNIT",
            "NUNIT_MULTIPART",
            "ROBOT",
            "ROBOT_MULTIPART",
            "BUNDLE",
            "TESTNG",
            "TESTNG_MULTIPART",
            "XUNIT",
            "XUNIT_MULTIPART"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xrayInstance",
          "type": "Nested",
          "values": [
            "configID",
            "alias",
            "hosting",
            "serverAddress",
            "credentialId"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xray-connector"
    },
    {
      "command": "step([$class: 'XrayImportFeatureBuilder'])",
      "title": "step([$class: 'XrayImportFeatureBuilder']): Xray: Cucumber Features Import Task",
      "description": "This Build Step can be used to import existing Cucumber Tests into Xray Tests.",
      "parameters": [
        {
          "name": "serverInstance",
          "type": "String",
          "values": [],
          "description": "Select the configured Jira instance where the Tests will be imported.",
          "isOptional": false
        },
        {
          "name": "folderPath",
          "type": "String",
          "values": [],
          "description": "This is the directory containing your feature files. All the files in this directory and sub directories will be imported.",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "This is the project where the Tests and Pre-Conditions will be created/updated.",
          "isOptional": false
        },
        {
          "name": "testInfo",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "preconditions",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "lastModified",
          "type": "String",
          "values": [],
          "description": "By entering an integer <i>n</i> here, only files that where modified in the last <i>n</i> hours will be imported.\n \n\nLeave empty if you do not want to use this parameter.",
          "isOptional": true
        }
      ],
      "plugin": "xray-connector"
    },
    {
      "command": "step([$class: 'ZOSJobSubmitter'])",
      "title": "step([$class: 'ZOSJobSubmitter']): Submit z/OS job",
      "description": "",
      "parameters": [
        {
          "name": "server",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "wait",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "waitTime",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "deleteJobFromSpool",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobLogToConsole",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jobFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "MaxCC",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "JESINTERFACELEVEL1",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "FTPActiveMode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zos-connector"
    },
    {
      "command": "step([$class: 'ZanataCliBuilder'])",
      "title": "step([$class: 'ZanataCliBuilder']): Zanata Sync via CLI",
      "description": "**Experimental feature** - this is experimental and subject to change without notice.",
      "parameters": [
        {
          "name": "projFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "syncG2zanata",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "syncZ2git",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "zanataCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "extraPathEntries",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "zanata"
    },
    {
      "command": "step([$class: 'ZanataSyncStep'])",
      "title": "step([$class: 'ZanataSyncStep']): Zanata Sync",
      "description": "Use this build step to perform standard Zanata push and pull. If you need to use advanced Zanata CLI options, Jenkins admin can configure Zanata CLI installation under global tools. Then select the installation in the job configuration. You can then use it in shell.",
      "parameters": [
        {
          "name": "zanataCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pullFromZanata",
          "type": "boolean",
          "values": [],
          "description": "This will pull translation from Zanata server and commit if there is changes in it. Right now it only support commit for Git SCM. If you use other SCM, you will need to use other build step to do the commit. **Note:** You still need to configure a post build step to do git push or equivalent (e.g. git publisher) to push your commit to your remote repo.",
          "isOptional": true
        },
        {
          "name": "pushToZanata",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "syncOption",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "zanataLocaleIds",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "zanataProjectConfigs",
          "type": "String",
          "values": [],
          "description": "If you have multiple zanata.xml in your Git repo and you want to restrict this job to certain ones, use this field and define the relative path to those files separated by comma.",
          "isOptional": true
        },
        {
          "name": "zanataURL",
          "type": "String",
          "values": [],
          "description": "Leave blank to use the URL defined in your zanata.xml. If you specify a value here, it will override whats in zanata.xml.",
          "isOptional": true
        }
      ],
      "plugin": "zanata"
    },
    {
      "command": "stepcounter",
      "title": "stepcounter: Count steps",
      "description": "Specify the file which measures the number of steps.\n \n\n And specify these encoding and the category of a total unit.\n \n\n If result output to file, specify file path and file format.",
      "parameters": [
        {
          "name": "outputFile",
          "type": "String",
          "values": [],
          "description": "If result output to file, specify file path and file format. (example 'dist/result.xls')。\n \n\n The directory used as root is <a rel=\"nofollow\">work space</a>.",
          "isOptional": true
        },
        {
          "name": "outputFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "settings",
          "type": "Nested",
          "values": [
            "encoding",
            "filePattern",
            "filePatternExclude",
            "key"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "stepcounter"
    },
    {
      "command": "stopET",
      "title": "stopET: [TT] Stop ECU-TEST",
      "description": "Shutdown ECU-TEST.\n **Pipelines usage:**\n \n  Signatures:\n  \n   \n```groovy\nstopET(String toolName) : void\n            \n```\n\n   \n```groovy\nstopET(String toolName, int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.stop() : void\n            \n```\n\n   \n```groovy\nETInstance.stop(int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.stop(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nstopET('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\nstopET installation: instance.installation\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.stop()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.stop timeout: 60\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "stopSandbox",
      "title": "stopSandbox: Stops a CloudShell Sandbox",
      "description": "Stop a sandbox in cloudshell.",
      "parameters": [
        {
          "name": "sandboxId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "teardownTimeout",
          "type": "int",
          "values": [],
          "description": "Enter the number of minutes to wait for the sandbox teardown to complete",
          "isOptional": true
        }
      ],
      "plugin": "cloudshell-sandbox"
    },
    {
      "command": "stopSession",
      "title": "stopSession: Stop Dynatrace session recording",
      "description": "",
      "parameters": [
        {
          "name": "dynatraceProfile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "performance-signature-dynatrace"
    },
    {
      "command": "stopTS",
      "title": "stopTS: [TT] Stop Tool-Server",
      "description": "Shutdown Tool-Server.\n **Pipelines usage:**\n \n  Signatures:\n  \n   \n```groovy\nstopTS(String toolName) : void\n            \n```\n\n   \n```groovy\nstopTS(String toolName, int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.stopTS() : void\n            \n```\n\n   \n```groovy\nETInstance.stopTS(int timeout) : void\n            \n```\n\n   \n```groovy\nETInstance.stopTS(Map&lt;String, Object&gt; settings) : void\n            \n```\n\n  \n \n \n  Examples:\n  \n   \n```groovy\nstopTS('ECU-TEST')\n            \n```\n\n   \n```groovy\ndef instance = ET.installation('ECU-TEST')\nstopTS installation: instance.installation\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation('ECU-TEST', 'C:\\\\Program Files\\\\ECU-TEST 8.0')\ninstance.stopTS()\n            \n```\n\n   \n```groovy\ndef instance = ET.newInstallation toolName: 'ECU-TEST', installPath: C:\\\\Program Files\\\\ECU-TEST 8.0'\ninstance.stopTS timeout: 60\n            \n```",
      "parameters": [
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "installation",
          "type": "Nested",
          "values": [
            "name",
            "home",
            "properties"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "strobeMeasurement",
      "title": "strobeMeasurement: Compuware Strobe Measurement",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "Required. This field specifies the host connection to use to submit a measurement.\n \n\n Host connections can be configured in the Jenkins system configuration (Manage Jenkins -&gt; Configure System).",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Required. The available CES secret token to perform ISPW actions for Rest API call.",
          "isOptional": false
        },
        {
          "name": "requestType",
          "type": "String",
          "values": [],
          "description": "Required. What type of request you want for the measurement. Select active if the job is currently running or Queued if the job will be running later.",
          "isOptional": false
        },
        {
          "name": "jobName",
          "type": "String",
          "values": [],
          "description": "Required. Name of the job you want to measure.",
          "isOptional": false
        },
        {
          "name": "body",
          "type": "String",
          "values": [],
          "description": "The body of the callback. Can leave blank if no body is needed. For example, a JSON body would be entered like { \"key1\" : \"value1\", \"key2\" : \"value2\", \"key3\" : \"value3\", ... \"key10\" : \"value10\" } If you would like to receive the completed profile's ID back as part of the json body, set the value of one of your keys to $$$profileId$$$ like {\"profileId\" : $$$profileId$$$}",
          "isOptional": true
        },
        {
          "name": "duration",
          "type": "String",
          "values": [],
          "description": "Optional. Estimated minimum measurement time in minutes. Acceptable values 1 to 1440.",
          "isOptional": true
        },
        {
          "name": "emailto",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "finalAction",
          "type": "String",
          "values": [],
          "description": "Optional. Controls the measurement session when the final dataset has been completed. The value can be either Quit, Stop, or Continue. See the Strobe User Guide for details. NOLIMIT is created from the limit = 1 and Continue.",
          "isOptional": true
        },
        {
          "name": "headers",
          "type": "String",
          "values": [],
          "description": "The HTTP headers of the callback. Should be colon and semicolon separated like for example, k1:v1;k2:v2;k3:v3",
          "isOptional": true
        },
        {
          "name": "hlq",
          "type": "String",
          "values": [],
          "description": "Optional. High Level Qualifier. DSNAME High level qualifier - Temporary dataset prefix.",
          "isOptional": true
        },
        {
          "name": "limit",
          "type": "String",
          "values": [],
          "description": "Optional. Suspends sampling when the target number of samples is reached. Acceptable values 1 to 99. Must be 1 when using Final Action of Continue.",
          "isOptional": true
        },
        {
          "name": "method",
          "type": "String",
          "values": [],
          "description": "Type of HTTP request to make. POST/GET/PUT/DELETE",
          "isOptional": true
        },
        {
          "name": "profileName",
          "type": "String",
          "values": [],
          "description": "Optional. The name of the profile. It defaults to the job name.",
          "isOptional": true
        },
        {
          "name": "samples",
          "type": "String",
          "values": [],
          "description": "Optional. The target number of samples to take during the measurement session. Acceptable values 1000 to 150000.",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "Optional. Tags to be assigned to profile",
          "isOptional": true
        },
        {
          "name": "transactionId",
          "type": "String",
          "values": [],
          "description": "Optional. May occur up to 5 times. Used for transaction profiling, the tranids are transaction ID masks used to specify the transactions to be measured. Length is limited to 4 characters. You can use a wildcard character (*) after a string of one or more characters in the Detail by Transaction field to measure transactions that meet the specified search criteria. * For Queue the additional elements are available: step � Optional, program � Optional, stringData � Optional",
          "isOptional": true
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "URL for the HTTP request. Leave blank if you do not want to do an HTTP callback.",
          "isOptional": true
        }
      ],
      "plugin": "compuware-strobe-measurement"
    },
    {
      "command": "submitJUnitTestResultsToqTest",
      "title": "submitJUnitTestResultsToqTest: Submit jUnit test result to qTest",
      "description": "",
      "parameters": [
        {
          "name": "pipeConfiguration",
          "type": "Nested",
          "values": [
            "qtestURL",
            "apiKey",
            "projectID",
            "containerID",
            "containerType",
            "overwriteExistingTestSteps",
            "parseTestResultsFromTestingTools",
            "createTestCaseForEachJUnitTestClass",
            "submitToExistingContainer",
            "submitToAReleaseAsSettingFromQtest",
            "utilizeTestResultsFromCITool",
            "createTestCaseForEachJUnitTestMethod",
            "createNewTestRunsEveryBuildDate",
            "environmentID",
            "executeExternalTool",
            "parseTestResultsPattern"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "qtest"
    },
    {
      "command": "submitModuleBuildRequest",
      "title": "submitModuleBuildRequest: Submit Module Build Request",
      "description": "",
      "parameters": [
        {
          "name": "moduleName",
          "type": "String",
          "values": [],
          "description": "Name of the module to build.",
          "isOptional": true
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "Revision of the module to build.",
          "isOptional": true
        },
        {
          "name": "branch",
          "type": "String",
          "values": [],
          "description": "Branch of the module to build.",
          "isOptional": true
        },
        {
          "name": "mbsUrl",
          "type": "String",
          "values": [],
          "description": "Base URL of MBS system. This should usually be https://mbs.fedoraproject.org/",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "Password to use to connect to MBS. Note: it is recommended to use withCredentials for this.",
          "isOptional": true
        },
        {
          "name": "user",
          "type": "String",
          "values": [],
          "description": "User name to use to connect to MBS",
          "isOptional": true
        }
      ],
      "plugin": "fedora-module-build-system"
    },
    {
      "command": "svChangeModeStep",
      "title": "svChangeModeStep: SV: Change Mode of Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "mode",
          "type": "Enum",
          "values": [
            "OFFLINE",
            "SIMULATING",
            "STAND_BY",
            "LEARNING"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "dataModel",
          "type": "Nested",
          "values": [
            "selectionType",
            "dataModel"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "performanceModel",
          "type": "Nested",
          "values": [
            "selectionType",
            "performanceModel"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "svDeployStep",
      "title": "svDeployStep: SV: Deploy Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "service",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "firstAgentFallback",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "svDeployTest",
      "title": "svDeployTest: CA Service Virtualization - Deploy Test",
      "description": "Deploys and starts CA DevTest test or test suite provided as a .mar file. \n\n \n Throws exception if .mar file is incorrect, authorization to CA DevTest fails or connection to CA DevTest cannot be established.",
      "parameters": [
        {
          "name": "useCustomRegistry",
          "type": "boolean",
          "values": [],
          "description": "Set to true to override the default global connection setting to CA DevTest registry for the particular project",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "The correct hostname or registry name needs to be entered",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "String",
          "values": [],
          "description": "Enter the port on which the registry is running. The default port is 1505. If you changed it, you can find the port in the LISA properties file as lisa.webserver.port followed by the port number",
          "isOptional": false
        },
        {
          "name": "marFilePath",
          "type": "String",
          "values": [],
          "description": "Path to MAR file that will be uploaded to the VSE. Needs to be relative path to MAR file in job workspace.",
          "isOptional": false
        },
        {
          "name": "testType",
          "type": "String",
          "values": [],
          "description": "Choose whether mar file contains test or test suite.",
          "isOptional": false
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to connect to Registry endpoint. The \"Kind\" of the credential must be \"Username with password\".",
          "isOptional": false
        },
        {
          "name": "secured",
          "type": "boolean",
          "values": [],
          "description": "Set to true if the CA DevTest API are set to accept only https connections",
          "isOptional": false
        }
      ],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svDeployVirtualService",
      "title": "svDeployVirtualService: CA Service Virtualization - Deploy Virtual Service",
      "description": "Deploys and starts virtual service provided as a .mar file to target VSE. More services could be provided using comma or newline separator. \n\n \n Throws exception if .mar file is incorrect, virtual service is already deployed, authorization to CA DevTest fails or connection to CA DevTest cannot be established.",
      "parameters": [
        {
          "name": "useCustomRegistry",
          "type": "boolean",
          "values": [],
          "description": "Set to true to override the default global connection setting to CA DevTest registry for the particular project",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "The correct hostname or registry name needs to be entered",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "String",
          "values": [],
          "description": "Enter the port on which the registry is running. The default port is 1505. If you changed it, you can find the port in the LISA properties file as lisa.webserver.port followed by the port number",
          "isOptional": false
        },
        {
          "name": "vseName",
          "type": "String",
          "values": [],
          "description": "Use the name of the VSE to which you want this build step to apply",
          "isOptional": false
        },
        {
          "name": "marFilesPaths",
          "type": "String",
          "values": [],
          "description": "Path to MAR file that will be uploaded to the VSE. The field supports multiple strings delimited by a separate line or comma.\n \n\n Possibilities:\n \nfor files in **job workspace** you can specify:\n\n \n  \n* relative path to MAR file in job workspace (<em>example: dir/test.mar</em>)\n\n  \n* path to MAR files using ant glob syntax (<em>example: **/*.mar</em>)\n\n \n \nfor files on the **DevTest machine** you can specify:\n\n \n  \n* absolute path to file (<em>example: file:///C:/something/test.mar</em>)\n\n  \n* **http** location of MAR file (<em>example: http://something/test.mar</em>)",
          "isOptional": false
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to connect to Registry endpoint. The \"Kind\" of the credential must be \"Username with password\".",
          "isOptional": false
        },
        {
          "name": "secured",
          "type": "boolean",
          "values": [],
          "description": "Set to true if the CA DevTest API are set to accept only https connections",
          "isOptional": false
        }
      ],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svExportStep",
      "title": "svExportStep: SV: Export Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "targetDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "cleanTargetDirectory",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "switchToStandByFirst",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archive",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "svPublishTestReport",
      "title": "svPublishTestReport: CA Service Virtualization Report Publisher",
      "description": "Generates simple test or test suite report that is available as a part of project run.",
      "parameters": [],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svStartVirtualService",
      "title": "svStartVirtualService: CA Service Virtualization - Start Virtual Service",
      "description": "Starts virtual service that is already deployed on target VSE. More services could be started using comma or newline separator. \n\n \nThrows exception if virtual service does not exist on specified VSE, authorization to CA DevTest fails or connection to CA DevTest cannot be established.",
      "parameters": [
        {
          "name": "useCustomRegistry",
          "type": "boolean",
          "values": [],
          "description": "Set to true to override the default global connection setting to CA DevTest registry for the particular project",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "The correct hostname or registry name needs to be entered",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "String",
          "values": [],
          "description": "Enter the port on which the registry is running. The default port is 1505. If you changed it, you can find the port in the LISA properties file as lisa.webserver.port followed by the port number",
          "isOptional": false
        },
        {
          "name": "vseName",
          "type": "String",
          "values": [],
          "description": "Use the name of the VSE to which you want this build step to apply",
          "isOptional": false
        },
        {
          "name": "vsNames",
          "type": "String",
          "values": [],
          "description": "Names of Virtual Services existing on provided VSE delimited by a separate line or comma.",
          "isOptional": false
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to connect to Registry endpoint. The \"Kind\" of the credential must be \"Username with password\".",
          "isOptional": false
        },
        {
          "name": "secured",
          "type": "boolean",
          "values": [],
          "description": "Set to true if the CA DevTest API are set to accept only https connections",
          "isOptional": false
        }
      ],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svStopVirtualService",
      "title": "svStopVirtualService: CA Service Virtualization - Stop Virtual Service",
      "description": "Stops virtual service that is running on target VSE. More services could be stopped using comma or newline separator. \n\n \n Throws exception if virtual service is not running on specified VSE, authorization to CA DevTest fails or connection to CA DevTest cannot be established.",
      "parameters": [
        {
          "name": "useCustomRegistry",
          "type": "boolean",
          "values": [],
          "description": "Set to true to override the default global connection setting to CA DevTest registry for the particular project",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "The correct hostname or registry name needs to be entered",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "String",
          "values": [],
          "description": "Enter the port on which the registry is running. The default port is 1505. If you changed it, you can find the port in the LISA properties file as lisa.webserver.port followed by the port number",
          "isOptional": false
        },
        {
          "name": "vseName",
          "type": "String",
          "values": [],
          "description": "Use the name of the VSE to which you want this build step to apply",
          "isOptional": false
        },
        {
          "name": "vsNames",
          "type": "String",
          "values": [],
          "description": "Names of Virtual Services existing on provided VSE delimited by a separate line or comma.",
          "isOptional": false
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to connect to Registry endpoint. The \"Kind\" of the credential must be \"Username with password\".",
          "isOptional": false
        },
        {
          "name": "secured",
          "type": "boolean",
          "values": [],
          "description": "Set to true if the CA DevTest API are set to accept only https connections",
          "isOptional": false
        }
      ],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svUndeployStep",
      "title": "svUndeployStep: SV: Undeploy Virtual Service",
      "description": "",
      "parameters": [
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "continueIfNotDeployed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceSelection",
          "type": "Nested",
          "values": [
            "selectionType",
            "service",
            "projectPath",
            "projectPassword"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "svUndeployVirtualService",
      "title": "svUndeployVirtualService: CA Service Virtualization - Undeploy  Virtual Service",
      "description": "Undeploys (removes) virtual service from specified VSE. More services could be provided using comma or newline separator. \n\n \n Throws exception if virtual service does not exist on specified VSE, authorization to CA DevTest fails or connection to CA DevTest cannot be established",
      "parameters": [
        {
          "name": "useCustomRegistry",
          "type": "boolean",
          "values": [],
          "description": "Set to true to override the default global connection setting to CA DevTest registry for the particular project",
          "isOptional": false
        },
        {
          "name": "host",
          "type": "String",
          "values": [],
          "description": "The correct hostname or registry name needs to be entered",
          "isOptional": false
        },
        {
          "name": "port",
          "type": "String",
          "values": [],
          "description": "Enter the port on which the registry is running. The default port is 1505. If you changed it, you can find the port in the LISA properties file as lisa.webserver.port followed by the port number",
          "isOptional": false
        },
        {
          "name": "vseName",
          "type": "String",
          "values": [],
          "description": "Use the name of the VSE to which you want this build step to apply",
          "isOptional": false
        },
        {
          "name": "vsNames",
          "type": "String",
          "values": [],
          "description": "Names of Virtual Services existing on provided VSE delimited by a separate line or comma.",
          "isOptional": false
        },
        {
          "name": "tokenCredentialId",
          "type": "String",
          "values": [],
          "description": "The ID for the integration token from the Credentials plugin to be used to connect to Registry endpoint. The \"Kind\" of the credential must be \"Username with password\".",
          "isOptional": false
        },
        {
          "name": "secured",
          "type": "boolean",
          "values": [],
          "description": "Set to true if the CA DevTest API are set to accept only https connections",
          "isOptional": false
        }
      ],
      "plugin": "ca-service-virtualization"
    },
    {
      "command": "svn",
      "title": "svn: Subversion",
      "description": "SVN step. It performs a checkout from the specified repository. \n\n \n Note that this step is shorthand for the generic SCM step:\n\n \n```groovy\ncheckout([$class: 'SubversionSCM', remote: 'http://sv-server/repository/trunk']]])\n    \n```",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "subversion"
    },
    {
      "command": "synopsys_detect",
      "title": "synopsys_detect: Synopsys Detect",
      "description": "",
      "parameters": [
        {
          "name": "detectProperties",
          "type": "String",
          "values": [],
          "description": "The command line options to pass to Synopsys Detect",
          "isOptional": false
        },
        {
          "name": "downloadStrategyOverride",
          "type": "Nested",
          "values": [
            "$class: 'AirGapDownloadStrategy'",
            "$class: 'InheritFromGlobalDownloadStrategy'",
            "$class: 'ScriptOrJarDownloadStrategy'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "returnStatus",
          "type": "boolean",
          "values": [],
          "description": "If true (checked), returns the status code of the Detect run instead of throwing an exception",
          "isOptional": true
        }
      ],
      "plugin": "blackduck-detect"
    },
    {
      "command": "sysdig",
      "title": "sysdig: Sysdig Secure Container Image Scanner",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bailOnFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "bailOnPluginFail",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineCredentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineurl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineverify",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "forceScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inlineScanning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sysdig-secure"
    },
    {
      "command": "tagImage",
      "title": "tagImage: Tags a Docker Image",
      "description": "Tags a docker image.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The  The name of the docker image.",
          "isOptional": false
        },
        {
          "name": "tag",
          "type": "String",
          "values": [],
          "description": "The  The tag.",
          "isOptional": false
        },
        {
          "name": "email",
          "type": "String",
          "values": [],
          "description": "This email will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "force",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "The  This password will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        },
        {
          "name": "repo",
          "type": "String",
          "values": [],
          "description": "The  The image repository in which the tag will be created.",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "The  This username will be used in the fallback docker auth config object, that will be used if matching configuration is found for the registry.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-pipeline-steps"
    },
    {
      "command": "tanaguru",
      "title": "tanaguru: Jenkins Tanaguru Plugin",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of audit or the scenario audit to be performed.",
          "isOptional": false
        },
        {
          "name": "scenario",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "urlToAudit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "urlTanaguruWebService",
          "type": "String",
          "values": [],
          "description": "The URI to the Tanaguru REST app. By default something like: http://localhost:8080/rest/service",
          "isOptional": false
        },
        {
          "name": "performanceUnstableMark",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "performanceFailedMark",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxy_uri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxy_username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "proxy_password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tanaguru"
    },
    {
      "command": "task",
      "title": "task: Task",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "delivery-pipeline-plugin"
    },
    {
      "command": "teamconcert",
      "title": "teamconcert: Team Concert",
      "description": "",
      "parameters": [
        {
          "name": "buildType",
          "type": "Nested",
          "values": [
            "value",
            "buildDefinition",
            "buildWorkspace",
            "buildSnapshot",
            "buildStream",
            "acceptBeforeLoad",
            "addLinksToWorkItems",
            "buildSnapshotContext",
            "clearLoadDirectory",
            "componentLoadConfig",
            "componentsToExclude",
            "createFoldersForComponents",
            "currentSnapshotOwnerType",
            "customizedSnapshotName",
            "generateChangelogWithGoodBuild",
            "loadDirectory",
            "loadPolicy",
            "overrideDefaultSnapshotName",
            "pathToLoadRuleFile",
            "processArea",
            "useDynamicLoadRules"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "changelog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overrideConfig",
          "type": "Nested",
          "values": [
            "serverURI",
            "credentialsId",
            "buildTool",
            "avoidUsingToolkit",
            "serverUri",
            "timeout"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "poll",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "teamconcert"
    },
    {
      "command": "teamscale",
      "title": "teamscale: Teamscale Upload",
      "description": "Plugin for uploading [external reports](https://docs.teamscale.com/reference/upload-formats-and-samples/#supported-formats-for-upload) to your Teamscale server.",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "URL to the Teamscale server.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "Uses \"username + password\" of global jenkins credentials.\n \n\n Credentials-ID = Important for plugin usage in pipelines.\n \n\n Username = Teamscale username.\n \n\n Password = [Access-key](https://docs.teamscale.com/glossary/#access-key)",
          "isOptional": false
        },
        {
          "name": "teamscaleProject",
          "type": "String",
          "values": [],
          "description": "The teamscale [project](https://docs.teamscale.com/howto/creating-a-project/#summary) to upload data to.",
          "isOptional": false
        },
        {
          "name": "partition",
          "type": "String",
          "values": [],
          "description": "The [partition](https://docs.teamscale.com/glossary/#partition) to which to upload the external reports.",
          "isOptional": false
        },
        {
          "name": "uploadMessage",
          "type": "String",
          "values": [],
          "description": "The upload message for the Teamscale server.",
          "isOptional": false
        },
        {
          "name": "includePattern",
          "type": "String",
          "values": [],
          "description": "Include pattern (ant-style) to select files to upload.",
          "isOptional": false
        },
        {
          "name": "reportFormatId",
          "type": "String",
          "values": [],
          "description": "One of our [supported report formats](https://docs.teamscale.com/reference/upload-formats-and-samples/#supported-formats-for-upload).",
          "isOptional": false
        },
        {
          "name": "revision",
          "type": "String",
          "values": [],
          "description": "Required in piplines because the environment variables containing the SCM revisions are not set in these builds.",
          "isOptional": true
        }
      ],
      "plugin": "teamscale-upload"
    },
    {
      "command": "tee",
      "title": "tee: Tee output to file",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "telegramSend",
      "title": "telegramSend: TelegramBot",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "chatId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "telegram-notifications"
    },
    {
      "command": "testFolder",
      "title": "testFolder: [TT] Run Test Folder",
      "description": "Execute a test folder.",
      "parameters": [
        {
          "name": "testFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executionConfig",
          "type": "Nested",
          "values": [
            "timeout",
            "stopOnError",
            "checkTestFile",
            "recordWarnings"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failFast",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "packageConfig",
          "type": "Nested",
          "values": [
            "runTest",
            "runTraceAnalysis",
            "parameters",
            "outputParameters"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectConfig",
          "type": "Nested",
          "values": [
            "execInCurrentPkgDir",
            "filterExpression",
            "jobExecMode"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recursiveScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "scanMode",
          "type": "Enum",
          "values": [
            "PACKAGES_ONLY",
            "PROJECTS_ONLY",
            "PACKAGES_AND_PROJECTS"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testConfig",
          "type": "Nested",
          "values": [
            "tbcFile",
            "tcfFile",
            "forceReload",
            "loadOnly",
            "keepConfig",
            "constants"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "testPackage",
      "title": "testPackage: [TT] Run Package",
      "description": "Execute a ECU-TEST package.",
      "parameters": [
        {
          "name": "testFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executionConfig",
          "type": "Nested",
          "values": [
            "timeout",
            "stopOnError",
            "checkTestFile",
            "recordWarnings"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "packageConfig",
          "type": "Nested",
          "values": [
            "runTest",
            "runTraceAnalysis",
            "parameters",
            "outputParameters"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testConfig",
          "type": "Nested",
          "values": [
            "tbcFile",
            "tcfFile",
            "forceReload",
            "loadOnly",
            "keepConfig",
            "constants"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "testProject",
      "title": "testProject: [TT] Run Project",
      "description": "Execute a ECU-TEST project.",
      "parameters": [
        {
          "name": "testFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "executionConfig",
          "type": "Nested",
          "values": [
            "timeout",
            "stopOnError",
            "checkTestFile",
            "recordWarnings"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectConfig",
          "type": "Nested",
          "values": [
            "execInCurrentPkgDir",
            "filterExpression",
            "jobExecMode"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testConfig",
          "type": "Nested",
          "values": [
            "tbcFile",
            "tcfFile",
            "forceReload",
            "loadOnly",
            "keepConfig",
            "constants"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "ecutest"
    },
    {
      "command": "testcompletetest",
      "title": "testcompletetest: TestComplete Test",
      "description": "",
      "parameters": [
        {
          "name": "suite",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "actionOnErrors",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "actionOnWarnings",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "commandLineArguments",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executorType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executorVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generateMHT",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "launchConfig",
          "type": "Nested",
          "values": [
            "project",
            "routine",
            "tags",
            "test",
            "unit",
            "value"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "launchType",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "project",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publishJUnitReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "routine",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sessionScreenResolution",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "tags",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "test",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useActiveSession",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useTCService",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useTimeout",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "userPassword",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testcomplete"
    },
    {
      "command": "testingbot",
      "title": "testingbot: TestingBot",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "testingbot"
    },
    {
      "command": "testingbotPublisher",
      "title": "testingbotPublisher: Run TestingBot Test Publisher",
      "description": "",
      "parameters": [
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testingbot"
    },
    {
      "command": "testingbotTunnel",
      "title": "testingbotTunnel: TestingBotTunnel",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "options",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testingbot"
    },
    {
      "command": "testiniumExecution",
      "title": "testiniumExecution: Start Testinium Execution",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "int",
          "values": [],
          "description": "Project of the plan to run",
          "isOptional": false
        },
        {
          "name": "planId",
          "type": "int",
          "values": [],
          "description": "Testinium plan to run",
          "isOptional": false
        },
        {
          "name": "abortOnError",
          "type": "boolean",
          "values": [],
          "description": "If checked fails the current build if at least one of the tests encounter an error",
          "isOptional": true
        },
        {
          "name": "abortOnFailed",
          "type": "boolean",
          "values": [],
          "description": "If checked fails the current build if at least one of the tests is unsuccessful",
          "isOptional": true
        },
        {
          "name": "failOnTimeout",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ignoreInactive",
          "type": "boolean",
          "values": [],
          "description": "If checked jenkins won't raise error if selected plan is deactivated from Testinium.",
          "isOptional": true
        },
        {
          "name": "timeoutSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testinium"
    },
    {
      "command": "testweaver",
      "title": "testweaver: TestWeaver",
      "description": "",
      "parameters": [
        {
          "name": "projectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "experimentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jUnitReportDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "acceptInconclusiveWatchers",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvDecimalSeparator",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvNoQuote",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvQuote",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvReports",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "exportAsCsvSeparator",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "htmlReportDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "instrumentView",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespacePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameterValues",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runScenarioLimit",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runTimeLimit",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "silverParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testweaver"
    },
    {
      "command": "themisRefresh",
      "title": "themisRefresh: Refresh Themis Project",
      "description": "",
      "parameters": [
        {
          "name": "instanceName",
          "type": "String",
          "values": [],
          "description": "The instance where the project to refresh is located.",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "The key of the project to refresh. You can find it in the project administration page of Themis.",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "onlyOnSuccess",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "themis"
    },
    {
      "command": "themisReport",
      "title": "themisReport: Send report files to Themis",
      "description": "",
      "parameters": [
        {
          "name": "instanceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "sourceKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reports",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "themis"
    },
    {
      "command": "throttle",
      "title": "throttle: Throttle execution of node blocks within this body",
      "description": "",
      "parameters": [
        {
          "name": "categories",
          "type": "String",
          "values": [],
          "description": "One or more throttle categories in a list.",
          "isOptional": false
        }
      ],
      "plugin": "throttle-concurrents"
    },
    {
      "command": "time",
      "title": "time: TimeStep",
      "description": "Put formatted time string to env.",
      "parameters": [
        {
          "name": "format",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "value",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "timeout",
      "title": "timeout: Enforce time limit",
      "description": "Executes the code inside the block with a determined time out limit. If the time limit is reached, an exception (org.jenkinsci.plugins.workflow.steps.FlowInterruptedException) is thrown, which leads to aborting the build (unless it is caught and processed somehow).",
      "parameters": [
        {
          "name": "time",
          "type": "int",
          "values": [],
          "description": "The length of time for which this step will wait before cancelling the nested block.",
          "isOptional": false
        },
        {
          "name": "activity",
          "type": "boolean",
          "values": [],
          "description": "Timeout after no activity in logs for this block instead of absolute duration.",
          "isOptional": true
        },
        {
          "name": "unit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "The unit of the time parameter. Defaults to 'MINUTES' if not specified.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "timestamps",
      "title": "timestamps: Timestamps",
      "description": "",
      "parameters": [],
      "plugin": "timestamper"
    },
    {
      "command": "tm",
      "title": "tm: Expand a string containing macros",
      "description": "",
      "parameters": [
        {
          "name": "stringWithMacro",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "token-macro"
    },
    {
      "command": "tool",
      "title": "tool: Use a tool from a predefined Tool Installation",
      "description": "Binds a tool installation to a variable (the tool home directory is returned). Only tools already configured in `Configure System` are available here. If the original tool installer has the auto-provision feature, then the tool will be installed as required.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "topazSubmitFreeFormJcl",
      "title": "topazSubmitFreeFormJcl: Topaz submit free-form JCL",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "maxConditionCode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jcl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "compuware-topaz-utilities"
    },
    {
      "command": "topazSubmitJclMembers",
      "title": "topazSubmitJclMembers: Topaz submit JCL members",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "maxConditionCode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jclMember",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "compuware-topaz-utilities"
    },
    {
      "command": "totaltest",
      "title": "totaltest: Topaz for Total Test - Execute Total Test scenarios.",
      "description": "",
      "parameters": [
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "Environment ID of the environment defined in the Total Test repository server or local TotalTestConfiguration directory where tests are executed.",
          "isOptional": false
        },
        {
          "name": "folderPath",
          "type": "String",
          "values": [],
          "description": "* Folder path to the test scenario or context file(s) to execute (.xactx or .xaunit)\n\n  \n* A relative path or an empty string will set the folder path relative to the Jenkins workspace directory\n\n  \n* An absolute path can also be used to specify Test folder path",
          "isOptional": false
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "This field specifies the CES URL where the Total Test repository server is published on.\n \n\n The CES URL can be configured in Jenkins system configuration (Manage Jenkins -&gt; Configure System -&gt; Compuware Configurations -&gt; Host Connections).",
          "isOptional": false
        },
        {
          "name": "serverCredentialsId",
          "type": "String",
          "values": [],
          "description": "The available credentials to use for logging onto CES (used only when using the Total Test repository server). Alternatively, click **Add** to add credentials using the Credentials Plugin. Refer to the Jenkins documentation for the Credentials Plugin.",
          "isOptional": false
        },
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "This field specifies the host connection to use to execute on.\n \n\n Host connections can be configured in the Jenkins system configuration (Manage Jenkins -&gt; Configure System).",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The available credentials to use for logging onto the host. Alternatively, click **Add** to add credentials using the Credentials Plugin. Refer to the Jenkins documentation for the Credentials Plugin.",
          "isOptional": false
        },
        {
          "name": "sonarVersion",
          "type": "String",
          "values": [],
          "description": "SonarQube version 5 or 6",
          "isOptional": true
        },
        {
          "name": "logLevel",
          "type": "String",
          "values": [],
          "description": "Set the logging level to be used when executing the test.",
          "isOptional": true
        },
        {
          "name": "accountInfo",
          "type": "String",
          "values": [],
          "description": "Optional job account information.\n \n Use the accounting information field to enter an account number and any other accounting information that your installation requires.\n\n The accounting information must be entered, just as it would be on the job card. Currently only 52 characters are allowed for the accounting information.",
          "isOptional": true
        },
        {
          "name": "ccThreshold",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "clearCodeCoverage",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectCCRepository",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectCCSystem",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectCCTestID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "collectCodeCoverage",
          "type": "boolean",
          "values": [],
          "description": "Select this option to collect Code Coverage information during test execution.",
          "isOptional": true
        },
        {
          "name": "compareJUnits",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "contextVariables",
          "type": "String",
          "values": [],
          "description": "Execution context variable in the format \"field1=value1,field2=value2\".",
          "isOptional": true
        },
        {
          "name": "createJUnitReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createSonarReport",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "customerId",
          "type": "String",
          "values": [],
          "description": "Compuware customer id for use on the Compuware cloud license server.\n \n\n This is required for obtaining a license from the Compuware license server.",
          "isOptional": true
        },
        {
          "name": "enterpriseDataHostPort",
          "type": "String",
          "values": [],
          "description": "This field allows you to specify the host and port of the Enterprise Data Communication Manager to connect to. The host and port must be separated by a ':' character.",
          "isOptional": true
        },
        {
          "name": "enterpriseDataWorkspace",
          "type": "String",
          "values": [],
          "description": "The Topaz for Enterprise Data Communication Manager's workspace.",
          "isOptional": true
        },
        {
          "name": "haltAtFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "haltPipelineOnFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jclPath",
          "type": "String",
          "values": [],
          "description": "The path to the JCL file to use when executing '.testscenario' files.",
          "isOptional": true
        },
        {
          "name": "jsonFile",
          "type": "String",
          "values": [],
          "description": "Optional JSON file containing tests to execute.\n \n Use the JSON file field to enter a JSON file containing the tests to execute.\n\n **Note: This field is only used for Total Test CLI version 20.04.01 and later**",
          "isOptional": true
        },
        {
          "name": "localConfig",
          "type": "boolean",
          "values": [],
          "description": "When selected use the defined local TotalTestConfiguration directory. Otherwise use the Total Test repository server running on the CES server.",
          "isOptional": true
        },
        {
          "name": "localConfigLocation",
          "type": "String",
          "values": [],
          "description": "Optional location of TotalTestConfiguration directory.",
          "isOptional": true
        },
        {
          "name": "programList",
          "type": "String",
          "values": [],
          "description": "Optional comma separated list of tests tests to execute.\n \n Use the Test list field to enter a comma separated list of program names to be tested. Will only include test scenarios that have component under test defined as one of these\n\n **Note: This field is only used for Total Test CLI version 20.04.01 and later**",
          "isOptional": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "values": [],
          "description": "Should test scenarios be found recursively in the folder",
          "isOptional": true
        },
        {
          "name": "reportFolder",
          "type": "String",
          "values": [],
          "description": "The folder path containing produced test results vary depending on the Total Test CLI version.\n \n  \n* Total Test CLI version 20.03.01 and later\n\n  \n   \n* The Report Folder field will be ignored.\n\n   \n* The produced test result will be contained in the Output directory relative to the Test folder path.\n\n   \n* Junit and Sonar report files are copied to TTTUnit and TTTSonar folders in the Jenkins workspace.\n\n  \n  \n* Total Test CLI version prior to 20.03.01\n\n  \n   \n* The produced test results will be contained in this folder path.\n\n   \n* Default folder path is TTTReport.\n\n   \n* Relative folder paths are relative to the Jenkins workspace.\n\n   \n* An absolute path can also be used to specify Report folder.\n\n  \n  **Note: This field is only used for Total Test CLI version prior to 20.03.01**",
          "isOptional": true
        },
        {
          "name": "selectEnvironmentRadio",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selectProgramsOption",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "selectProgramsRadio",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "siteId",
          "type": "String",
          "values": [],
          "description": "Compuware customer's site id for use on the Compuware cloud license server.\n \n\n This is required for obtaining a license from the Compuware license server.",
          "isOptional": true
        },
        {
          "name": "sourceFolder",
          "type": "String",
          "values": [],
          "description": "Optional file path to a folder that contains source code of tested programs.\n \n\n Default is COBOL.\n \n\n It is only used to set the source path.",
          "isOptional": true
        },
        {
          "name": "stopIfTestFailsOrThresholdReached",
          "type": "boolean",
          "values": [],
          "description": "Stop if test fails or threshold is reached (default is true)",
          "isOptional": true
        },
        {
          "name": "uploadToServer",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useEnterpriseData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useScenarios",
          "type": "boolean",
          "values": [],
          "description": "Should .scenarios files be used instead of .context files",
          "isOptional": true
        }
      ],
      "plugin": "compuware-topaz-for-total-test"
    },
    {
      "command": "totaltestUT",
      "title": "totaltestUT: Topaz for Total Test - Execute unit tests",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "This field specifies the host connection to use to execute on.\n \n\n Host connections can be configured in the Jenkins system configuration (Manage Jenkins -&gt; Configure System).",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The available credentials to use for logging onto the host. Alternatively, click **Add** to add credentials using the Credentials Plugin. Refer to the Jenkins documentation for the Credentials Plugin.",
          "isOptional": false
        },
        {
          "name": "projectFolder",
          "type": "String",
          "values": [],
          "description": "The path to the Topaz for Total Test project folder containing the test scenario or test suite to run.",
          "isOptional": false
        },
        {
          "name": "testSuite",
          "type": "String",
          "values": [],
          "description": "A comma separated list of Topaz for Total Test test scenarios/suites names. On Windows the names are case-insensitive.\n \n Wild carding of test scenarios/suites names can be done using '*' for any characters and '?' for a single character. 'All_Scenarios' can be used to run all test scenarios or 'All_Suites' can be used to run all test suites.",
          "isOptional": false
        },
        {
          "name": "jcl",
          "type": "String",
          "values": [],
          "description": "The name of the JCL file to run the Topaz for Total Test test scenario or test suite.",
          "isOptional": false
        },
        {
          "name": "ccClearStats",
          "type": "boolean",
          "values": [],
          "description": "Indicates if the Code Coverage repository statistics should be cleared before running the test.",
          "isOptional": true
        },
        {
          "name": "ccDB2",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ccPgmType",
          "type": "String",
          "values": [],
          "description": "The type of the program specified on the EXEC statement, in the JCL, for the Total Test step. If PGM=IKJEFT01 was specified, select \"Live DB2\". When PGM=DFSRRC00 was specified select \"Live IMS\", otherwise select TotalTest.",
          "isOptional": true
        },
        {
          "name": "ccRepo",
          "type": "String",
          "values": [],
          "description": "The dataset where Topaz for Total Test will write coverage information. This dataset will later be fed into the Code Coverage reporting system. Members with like systems, names, and compile date and times will automatically be merged together.",
          "isOptional": true
        },
        {
          "name": "ccSystem",
          "type": "String",
          "values": [],
          "description": "A system name for this test. Code Coverage keeps statistics by programs separate by system name. This name can be any-specified name. The name must be 16 characters or less and will be converted to upper-case when the test is run.s. If not specified defaults to the test scenario/suite name.",
          "isOptional": true
        },
        {
          "name": "ccTestId",
          "type": "String",
          "values": [],
          "description": "A test identification to be added to the Code Coverage test. This information can be useful when reviewing test reports from Code Coverage. This test identification can be any-specified string. The test identification must be 16 characters or less and will be converted to upper-case when the test is run. If not specified defaults to the test scenario/suite name.",
          "isOptional": true
        },
        {
          "name": "deleteTemp",
          "type": "boolean",
          "values": [],
          "description": "Delete temporary files after test run. The default is to delete temporary files.",
          "isOptional": true
        },
        {
          "name": "hlq",
          "type": "String",
          "values": [],
          "description": "Optional high level qualifier to be used when allocating datasets.",
          "isOptional": true
        },
        {
          "name": "hostPort",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "values": [],
          "description": "Indicates if the test runner should recursively check for Total Test Unit Test projects. The default is not to recursively check for Total Test Unit Test projects..",
          "isOptional": true
        },
        {
          "name": "useStubs",
          "type": "boolean",
          "values": [],
          "description": "Indicates if stubs should be used when running the test scenario or test suite. The default is to use stubs.",
          "isOptional": true
        }
      ],
      "plugin": "compuware-topaz-for-total-test"
    },
    {
      "command": "touch",
      "title": "touch: Create a file (if not already exist) in the workspace, and set the timestamp",
      "description": "Creates a file if it does not already exist, and updates the timestamp.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "The path to the file to touch.",
          "isOptional": false
        },
        {
          "name": "timestamp",
          "type": "long",
          "values": [],
          "description": "The timestamp to set (number of ms since the epoc), leave empty for current system time.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "tpAgentConfig",
      "title": "tpAgentConfig: Generate TestProject Agent Configuration",
      "description": "",
      "parameters": [
        {
          "name": "alias",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpAppUpdateFile",
      "title": "tpAppUpdateFile: Update TestProject Mobile Application",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpAppUpdateURL",
      "title": "tpAppUpdateURL: Update TestProject Web Application",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "applicationUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpDataSourceUpdate",
      "title": "tpDataSourceUpdate: Update TestProject Data Source",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dataSourceId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpJobRun",
      "title": "tpJobRun: Run TestProject Job",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "agentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitJobFinishSeconds",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "executionParameters",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "junitResultsFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpProjectParamUpdate",
      "title": "tpProjectParamUpdate: Update TestProject Project Parameter",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameterId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameterValue",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tpTestPackageUpdate",
      "title": "tpTestPackageUpdate: Update TestProject Test Package",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testPackageId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "filePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resolveConflicts",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "testproject"
    },
    {
      "command": "tricentisCI",
      "title": "tricentisCI: Tricentis Continuous Integration",
      "description": "",
      "parameters": [
        {
          "name": "newTricentisClientPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "newEndpoint",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "configurationFilePath",
          "type": "String",
          "values": [],
          "description": "Specify the path to the Tricentis CI [test execution configuration XML file](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=continuous_integration/configure_execution_command.htm#CreatetheXMLfile). The test configuration file includes more details about which items you would like to execute.\n\n \n\n \n If you use this setting, leave the TestEvents setting of this page empty. Otherwise, this build step fails.",
          "isOptional": true
        },
        {
          "name": "endpoint",
          "type": "String",
          "values": [],
          "description": "Specify the address of the webservice. This component triggers the test execution. \n\n \n If you execute your tests via [Tosca Remote Service](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=continuous_integration/set_up_ci_remote.htm), the endpoint needs to point to the TOSCARemoteExecutionService (e.g.&nbsp;<span>http://servername:8732/TOSCARemoteExecutionService/). </span>\n\n \n If you execute your tests via [Tosca Distributed Execution](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=continuous_integration/set_up_ci_dex.htm),&nbsp;the endpoint needs to point to the Manager Service of the Tosca Distribution Server (e.g. <span>http://servername:8732/DistributionServerService/ManagerService.svc). </span>",
          "isOptional": true
        },
        {
          "name": "testEvents",
          "type": "String",
          "values": [],
          "description": "Input the [TestEvents](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=tosca_commander/creating_events.htm) that you want to execute, separated by semicolons. You can identify the TestEvents with their name or their [system ID](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=continuous_integration/configure_execution_command_dex.htm). \n\n \n This field is optional. It can only be used if you execute your tests via Tosca Distributed Execution. \n\n \n If you use this setting, leave the Configuration File setting of this page empty. Otherwise, this build step fails.",
          "isOptional": true
        },
        {
          "name": "tricentisClientPath",
          "type": "String",
          "values": [],
          "description": "Specify the path to the Tricentis CI [test execution configuration XML file](https://support.tricentis.com/community/manuals_detail.do?lang=en&url=continuous_integration/configure_execution_command.htm#CreatetheXMLfile). The test configuration file includes more details about which items you would like to execute.\n\n \n\n \n If you use this setting, leave the TestEvents setting of this page empty. Otherwise, this build step fails.",
          "isOptional": true
        }
      ],
      "plugin": "tricentis-ci"
    },
    {
      "command": "triggerInputStep",
      "title": "triggerInputStep: trigger input step remotely",
      "description": "",
      "parameters": [
        {
          "name": "triggerId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "handle",
          "type": "class org.jenkinsci.plugins.ParameterizedRemoteTrigger.pipeline.Handle",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "performance-signature-viewer"
    },
    {
      "command": "triggerRemoteJob",
      "title": "triggerRemoteJob: Trigger Remote Job",
      "description": "The triggerRemoteJob pipeline step triggers a job on a remote Jenkins.\n \n\n **The full documentation is [available in GitHub](https://github.com/jenkinsci/parameterized-remote-trigger-plugin).**\n \n\n\n \n\n Example:\n \n```groovy\n//Trigger remote job\ndef handle = triggerRemoteJob(remoteJenkinsName: 'remoteJenkins', job: 'RemoteJob')\n\n//Get information from the handle\ndef status = handle.getBuildStatus()\ndef buildUrl = handle.getBuildUrl()\necho buildUrl.toString() + \" finished with \" + status.toString()\n\n//Download and parse the archived \"build-results.json\" (if generated and archived by remote build)\ndef results = handle.readJsonFileFromBuildArchive('build-results.json')\necho results.urlToTestResults //only example\n\n\n//List other available methods\necho handle.help()\n\n```",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Remote Job Name or full URL.\n \n The name or URL of the job on the remote Jenkins host which you would like to trigger. If the full job URL is specified the URL of the remote Jenkins host configured above will be ignored.\n \n mandatory: yes",
          "isOptional": false
        },
        {
          "name": "abortTriggeredJob",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "auth",
          "type": "Nested",
          "values": [
            "BearerTokenAuth",
            "CredentialsAuth",
            "NoneAuth",
            "NullAuth",
            "TokenAuth"
          ],
          "description": "Using this parameter you can override the authentication used to connect to the selected remote Jenkins.\n \n\n\n \n  \n* **Don't Override**\n\n The authentication configured in the (global) settings of the selected 'remote host' is used. \n\n  \n* **Token Authentication**\n\n The specified user id and Jenkins API token is used. \n\n  \n* **Credentials Authentication**\n\n The specified Jenkins Credentials are used. This can be either user/password or user/API Token. \n\n  \n* **No Authentication**\n\n No Authorization header will be sent, independent of the global 'remote host' settings. \n\n  **Note:** <i>Jenkins API Tokens</i> are recommended since, if stolen, they allow access only to a specific Jenkins while user and password typically provide access to many systems.",
          "isOptional": true
        },
        {
          "name": "blockBuildUntilComplete",
          "type": "boolean",
          "values": [],
          "description": "Wait/Block Until Remote Build Complete\n \n If enabled the remote job is called synchronously and the plugin waits until the remote job finished.\n \n\n If disabled the plugin triggers the remote job and returns.\n \n\n\n \n\n In both cases a `handle` is returned for further tracking the remote job or getting the results (see plugin main help page).\n \n mandatory: no\n\n default: true",
          "isOptional": true
        },
        {
          "name": "disabled",
          "type": "boolean",
          "values": [],
          "description": "Set this field to disable the job step instead of removing it from job configuration.",
          "isOptional": true
        },
        {
          "name": "enhancedLogging",
          "type": "boolean",
          "values": [],
          "description": "Enable Enhanced Logging\n \n If this option is enabled, the console output of the remote job is also logged.\n \n mandatory: no\n\n default: false",
          "isOptional": true
        },
        {
          "name": "httpGetReadTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "httpPostReadTimeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "loadParamsFromFile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxConn",
          "type": "int",
          "values": [],
          "description": "The max concurrent connections to the remote host, default is 1, max is 5. It'll be 5 even if you set it greater than 5. **Note:** Set this field with caution, too many concurrent requests will not only fail your local jobs,\n \n\n but also block the remote server.",
          "isOptional": true
        },
        {
          "name": "overrideTrustAllCertificates",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameterFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parameters",
          "type": "String",
          "values": [],
          "description": "Job Parameters\n \n Parameters which will be used when triggering the remote job.\n \n\n If no parameters are needed, then just leave this blank.\n \n\n Any line start with a pound-sign (#) will be treated as a comment.",
          "isOptional": true
        },
        {
          "name": "pollInterval",
          "type": "int",
          "values": [],
          "description": "Polling Interval\n \n The plugin identifies the status of the remote build by polling. Here you can specify how often the plugin shall poll the remote status.\n \n\n Be aware that polling too often might cause an increased load on the remote Jenkins.\n \n mandatory: no\n\n default: 10",
          "isOptional": true
        },
        {
          "name": "preventRemoteBuildQueue",
          "type": "boolean",
          "values": [],
          "description": "Prevent Remote Build Queue\n \n Wait to trigger remote builds until no other builds are running.\n \n mandatory: no\n\n default: false",
          "isOptional": true
        },
        {
          "name": "remoteJenkinsName",
          "type": "String",
          "values": [],
          "description": "Remote Jenkins Name\n \n The name of the remote Jenkins as configured in the Jenkins global configuration (Manage Jenkins &gt; Configure System &gt; Parameterized Remote Trigger Configuration &gt; Remote Hosts).\n \n mandatory: yes",
          "isOptional": true
        },
        {
          "name": "remoteJenkinsUrl",
          "type": "String",
          "values": [],
          "description": "It is possible to override the Remote Jenkins URL for each Pipeline separately.\n \n mandatory: no",
          "isOptional": true
        },
        {
          "name": "shouldNotFailBuild",
          "type": "boolean",
          "values": [],
          "description": "Do Not Fail If Remote Fails\n \n If this option is enabled, the build will not fail even if the remote build fails.\n \n mandatory: no\n\n default: false",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "Remote Job Token\n \n Security token which is defined on the job of the remote Jenkins host.\n \n\n If no job token is needed to trigger this job, then just leave it blank\n \n mandatory: no\n\n default: \"\"",
          "isOptional": true
        },
        {
          "name": "trustAllCertificates",
          "type": "boolean",
          "values": [],
          "description": "Trust all certificates\n \n\n \n It is possible to override/rewrite the 'Trust all certificate'-setting for each Job separately. Setting this checkbox to 'true' will result in accepting all certificates for the given Job. \n\n \n\n   If your remote Jenkins host has a [ self-signed certificate ](https://en.wikipedia.org/wiki/Self-signed_certificate) or its certificate is not trusted, you may want to enable this option. It will accept untrusted certificates for the given host.\n \n\n \n**This is unsafe and should only be used for testing or if you trust the host.**",
          "isOptional": true
        },
        {
          "name": "useCrumbCache",
          "type": "boolean",
          "values": [],
          "description": "Set this field to enable cache of the crumb of remote server.\n \n\n It'll be more efficient for the local job execution & more stable for remote server when massive concurrent jobs are triggered.\n \n\n This cache will be cleared every 10 minutes.",
          "isOptional": true
        },
        {
          "name": "useJobInfoCache",
          "type": "boolean",
          "values": [],
          "description": "Set this field to enable cache of the job info of remote server.\n \n\n It'll be more efficient for the local job execution & more stable for remote server when massive concurrent jobs are triggered.\n \n\n This cache will be cleared every 10 minutes.",
          "isOptional": true
        }
      ],
      "plugin": "parameterized-remote-trigger"
    },
    {
      "command": "tuleapNotifyCommitStatus",
      "title": "tuleapNotifyCommitStatus: Update the build status of the commit in Tuleap",
      "description": "",
      "parameters": [
        {
          "name": "status",
          "type": "Enum",
          "values": [
            "failure",
            "success"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "repositoryId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tuleap-api"
    },
    {
      "command": "tuleapSendTTMResults",
      "title": "tuleapSendTTMResults: Send Tuleap Test Management Results",
      "description": "",
      "parameters": [
        {
          "name": "filesPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "campaignId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "tuleap-api"
    },
    {
      "command": "typetalkSend",
      "title": "typetalkSend: Notify Typetalk when the build fails",
      "description": "Use 'catchError' step in order to notify a build error certainly. An example is the following below.\n \n\n\n \n```groovy\ncatchError {\n    sh 'compile'\n    sh 'test'\n    sh 'package'\n    sh 'deploy'\n}\ntypetalkSend name: 'demo', topicId: 1\n    \n```",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "topicId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "typetalk"
    },
    {
      "command": "uTesterPageCountTask",
      "title": "uTesterPageCountTask: Execute uTester Page Count Task",
      "description": "",
      "parameters": [
        {
          "name": "initialUrl",
          "type": "String",
          "values": [],
          "description": "The initial URL to check.",
          "isOptional": false
        },
        {
          "name": "urlsWhiteList",
          "type": "String",
          "values": [],
          "description": "A list of URLs (one per line) to whitelist.",
          "isOptional": false
        },
        {
          "name": "pageCount",
          "type": "int",
          "values": [],
          "description": "The Page Count.",
          "isOptional": false
        },
        {
          "name": "rulesList",
          "type": "Nested",
          "values": [
            "rule"
          ],
          "description": "A list of JSON rules to evaluate.",
          "isOptional": false
        },
        {
          "name": "complianceMinimum",
          "type": "float",
          "values": [],
          "description": "The minimum compliance level needed to pass (if multiple data results exist this will check each).",
          "isOptional": false
        },
        {
          "name": "allowSimultaneousLogins",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loginFlowJson",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useRunner",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fetchResponseTimeout",
          "type": "int",
          "values": [],
          "description": "The number of seconds to wait for a response from the User1st API before failing (default of 120).",
          "isOptional": false
        }
      ],
      "plugin": "user1st-utester"
    },
    {
      "command": "uTesterUrlListTask",
      "title": "uTesterUrlListTask: Execute uTester URL List Task",
      "description": "",
      "parameters": [
        {
          "name": "initialUrl",
          "type": "String",
          "values": [],
          "description": "A list of URLs (one per line) to check.",
          "isOptional": false
        },
        {
          "name": "urlsWhiteList",
          "type": "String",
          "values": [],
          "description": "A list of URLs (one per line) to whitelist.",
          "isOptional": false
        },
        {
          "name": "rulesList",
          "type": "Nested",
          "values": [
            "rule"
          ],
          "description": "A list of JSON rules to evaluate.",
          "isOptional": false
        },
        {
          "name": "complianceMinimum",
          "type": "float",
          "values": [],
          "description": "The minimum compliance level needed to pass (if multiple data results exist this will check each).",
          "isOptional": false
        },
        {
          "name": "allowSimultaneousLogins",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "loginFlowJson",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useRunner",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "fetchResponseTimeout",
          "type": "int",
          "values": [],
          "description": "The number of seconds to wait for a response from the User1st API before failing (default of 120).",
          "isOptional": false
        }
      ],
      "plugin": "user1st-utester"
    },
    {
      "command": "uftScenarioLoad",
      "title": "uftScenarioLoad: Run UFT scenario",
      "description": "",
      "parameters": [
        {
          "name": "testPaths",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "archiveTestResultsMode",
          "type": "String",
          "values": [],
          "description": "To view the run results, do one of the following:\n \n\n 1) In the left pane, click the **Report and Summary** link to display the report link and the link to the report folder. From this link, you can open the run results directly in your browser or open the artifacts\n \n\n 2) From the **Build Artifacts:**\n \n\n • Open the run_results.html to view the run results.\n \n\n • Download the zipped report to your desired location and unzip it. In the **Run Results Viewer**, select the Results.xml file found inside the unzipped folder.\n \n\n Note that this option is valid only when using the “Execute test from file system” build step.",
          "isOptional": false
        },
        {
          "name": "fsReportPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsTimeout",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fsUftRunMode",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runFromFileBuilder",
          "type": "Nested",
          "values": [
            "fsTests",
            "fileSystemTestSetModel",
            "summaryDataLogModel",
            "scriptRTSSetModel",
            "isParallelRunnerEnabled",
            "uftSettingsModel",
            "analysisTemplate",
            "controllerPollingInterval",
            "displayController",
            "fsAutActions",
            "fsDeviceId",
            "fsDevicesMetrics",
            "fsExtraApps",
            "fsInstrumented",
            "fsJobId",
            "fsLaunchAppName",
            "fsManufacturerAndModel",
            "fsOs",
            "fsPassword",
            "fsReportPath",
            "fsTargetLab",
            "fsTimeout",
            "fsUftRunMode",
            "fsUserName",
            "ignoreErrorStrings",
            "mcServerName",
            "mcTenantId",
            "perScenarioTimeOut",
            "proxySettings",
            "resultFileNames",
            "useSSL"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "runResultRecorder",
          "type": "Nested",
          "values": [
            "archiveTestResultsMode"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "uleskaScanner",
      "title": "uleskaScanner: UleskaScanner",
      "description": "",
      "parameters": [
        {
          "name": "uleskaInstanceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "versionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "propagateFailure",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "uleska"
    },
    {
      "command": "unarchive",
      "title": "unarchive: Copy archived artifacts into the workspace",
      "description": "",
      "parameters": [
        {
          "name": "mapping",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "unlockMacOSKeychain",
      "title": "unlockMacOSKeychain: Unlock macOS X Keychain",
      "description": "",
      "parameters": [
        {
          "name": "keychainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainPwd",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xcode-plugin"
    },
    {
      "command": "unstable",
      "title": "unstable: Set stage result to unstable",
      "description": "Prints a message to the log and sets the overall build result and the stage result to `UNSTABLE`. The message will also be associated with the stage result and may be shown in visualizations.",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "A message that will be logged to the console. The message will also be associated with the stage result and may be shown in visualizations.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "unstash",
      "title": "unstash: Restore files previously stashed",
      "description": "Restores a set of files previously `stash`ed into the current workspace.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name of a previously saved stash.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "unzip",
      "title": "unzip: Extract Zip file",
      "description": "Extract a zip file in the workspace.",
      "parameters": [
        {
          "name": "zipFile",
          "type": "String",
          "values": [],
          "description": "The name/path of the zip file to extract.",
          "isOptional": false
        },
        {
          "name": "charset",
          "type": "String",
          "values": [],
          "description": "Specify which Charset you wish to use eg. UTF-8",
          "isOptional": true
        },
        {
          "name": "dir",
          "type": "String",
          "values": [],
          "description": "The path of the base directory to extract the zip to. Leave empty to extract in the current working directory.",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "[Ant style pattern](https://ant.apache.org/manual/dirtasks.html#patterns) of files to extract from the zip. Leave empty to include all files and directories.",
          "isOptional": true
        },
        {
          "name": "quiet",
          "type": "boolean",
          "values": [],
          "description": "Suppress the verbose output that logs every single file that is dealt with. <em>E.g.</em> ` unzip zipFile: 'example.zip', quiet: true `",
          "isOptional": true
        },
        {
          "name": "read",
          "type": "boolean",
          "values": [],
          "description": "Read the content of the files into a Map instead of writing them to the workspace. The keys of the map will be the path of the files read. <em>E.g.</em> ` def v = unzip zipFile: 'example.zip', glob: '*.txt', read: true String version = v['version.txt'] `",
          "isOptional": true
        },
        {
          "name": "test",
          "type": "boolean",
          "values": [],
          "description": "Test the integrity of the archive instead of extracting it. When this parameter is enabled, all other parameters <em>(except for zipFile)</em> will be ignored. The step will return `true` or `false` depending on the result instead of throwing an exception.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "updateBotPush",
      "title": "updateBotPush: UpdateBot Push",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pollPeriodMS",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "updatebot"
    },
    {
      "command": "updateGitlabCommitStatus",
      "title": "updateGitlabCommitStatus: Update the commit status in GitLab",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "state",
          "type": "Enum",
          "values": [
            "pending",
            "running",
            "canceled",
            "success",
            "failed",
            "skipped"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "gitlab-plugin"
    },
    {
      "command": "updateIdP",
      "title": "updateIdP: Update thirdparty Identity Provider",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metadata",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "updateTrustPolicy",
      "title": "updateTrustPolicy: Update trust policy of IAM roles",
      "description": "",
      "parameters": [
        {
          "name": "roleName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "policyFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "updraftPublish",
      "title": "updraftPublish: Updraft Android/iOS Publisher",
      "description": "",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "Insert the Url, which can be found as part of the \"CURL\" statement in the Application Overview of the desired application on Updraft.",
          "isOptional": false
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "updraft-publisher"
    },
    {
      "command": "uploadCloudifyBlueprint",
      "title": "uploadCloudifyBlueprint: Upload Cloudify Blueprint",
      "description": "Use this step to upload a blueprint to Cloudify Manager.\n\n \nTwo paramters are mandatory:\n\n \n  \n* Blueprint ID\n\n  \n* Main blueprint file name\n\n \n \nIn addition, exactly one of the following parameters is mandatory:\n\n \n  \n* Blueprint archive path\n\n  \n* Blueprint archive URL\n\n  \n* Blueprint's root directory \n\n  \n*  \n\n \n \nIf you provide a blueprint's root directory, then the entire directory contents are packaged into a blueprint archive.",
      "parameters": [
        {
          "name": "archivePath",
          "type": "String",
          "values": [],
          "description": "Path (relative to the workspace root) of the blueprint archive.",
          "isOptional": true
        },
        {
          "name": "archiveUrl",
          "type": "String",
          "values": [],
          "description": "URL of the blueprint archive.",
          "isOptional": true
        },
        {
          "name": "blueprintId",
          "type": "String",
          "values": [],
          "description": "ID to assign to the uploaded blueprint.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "mainFileName",
          "type": "String",
          "values": [],
          "description": "Name of the YAML file containing the main entry point to the blueprint.",
          "isOptional": true
        },
        {
          "name": "rootDirectory",
          "type": "String",
          "values": [],
          "description": "Directory where the blueprint is located.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "uploadCloudifyBlueprint",
      "title": "uploadCloudifyBlueprint: Upload Cloudify Plugin",
      "description": "Use this step to upload a plugin to Cloudify Manager.",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "outputLocation",
          "type": "String",
          "values": [],
          "description": "Location where the plugin information, in JSON format, will be stored.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        },
        {
          "name": "wagonLocation",
          "type": "String",
          "values": [],
          "description": "URL of the Wagon file.",
          "isOptional": true
        },
        {
          "name": "yamlLocation",
          "type": "String",
          "values": [],
          "description": "URL of the `plugin.yaml` file of the plugin.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "uploadProgetPackage",
      "title": "uploadProgetPackage: ProGet Package Upload",
      "description": "Creates and uploads a universal ProGet package to your ProGet server.",
      "parameters": [
        {
          "name": "feedName",
          "type": "String",
          "values": [],
          "description": "The feed in ProGet to upload the package to",
          "isOptional": false
        },
        {
          "name": "groupName",
          "type": "String",
          "values": [],
          "description": "The package you wish to upload your package to.\n \nA string of no more than fifty characters: \n\n \n  \n* numbers (0-9)\n\n  \n* upper and lower-case letters (a-Z)\n\n  \n* dashes (-)\n\n  \n* periods (.)\n\n  \n* forward-slashes (/)\n\n  \n* and underscores (_)\n\n  \n* may not start or end with a forward-slash\n\n  e.g. an/example/group",
          "isOptional": false
        },
        {
          "name": "packageName",
          "type": "String",
          "values": [],
          "description": "The package you wish to upload your package to.\n \nA string of no more than fifty characters: \n\n \n  \n* numbers (0-9)\n\n  \n* upper and lower-case letters (a-Z)\n\n  \n* dashes (-)\n\n  \n* periods (.)\n\n  \n* and underscores (_)\n\n  e.g. mypackage",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "A string representing a [Semantic Version](https://semver.org/); this plug-in will not do any validation that the version is correct, however ProGet will return an error and the task will fail if the version number is not correctly formatted.",
          "isOptional": false
        },
        {
          "name": "artifacts",
          "type": "String",
          "values": [],
          "description": "You can use wildcards like 'module/dist/**/*.zip'. See [the includes attribute of Ant fileset](http://ant.apache.org/manual/Types/fileset.html) for the exact format.\n \n  \n* Multiple patterns can be specified by placing a comma (,) between them\n\n  \n* The base directory is the workspace. You can only archive files that are located in your workspace\n\n  \n* Will fail the build if no files are found\n\n \n \n **Removing Unwanted Folders**\n\n Top level folders can be excluded from the package using a custom addition to the Ant fileset - wrapping unwanted folder names in square brackets ([ ]): \n\n \n  \n* filter must start with '['\n\n  \n* wildcards are not supported\n\n  \n* filter can span a several folders\n\n  \n* invalid filters are ignored\n\n  \n* can be used with multiple filesets\n\n  Examples:\n \n  \n* \"<i>[build]/sample/one.txt</i>\" would add the folder and file \"sample/one.txt\" to the package\n\n  \n* \"<i>[build/sample]/two.txt</i>\" would add the file \"one.txt\" to the package\n\n  \n* \"<i>build/[sample]/three.txt</i>\" would be ignored\n\n  \n* \"<i>[**]/four.txt</i>\" would be ignored\n\n  \n* \"<i>[one]/one.txt, [two]/two.txt</i>\" would add one.txt and two.txt to the package",
          "isOptional": false
        },
        {
          "name": "caseSensitive",
          "type": "boolean",
          "values": [],
          "description": "Artifact archiver uses Ant `org.apache.tools.ant.DirectoryScanner` which by default is case sensitive. For instance, if the job produces *.hpi files, pattern \"**/*.HPI\" will fail to find them.\n \n\n\n \n\n This option can be used to disable case sensitivity. When it's unchecked, pattern \"**/*.HPI\" will match any *.hpi files, or pattern \"**/cAsEsEnSiTiVe.jar\" will match a file called caseSensitive.jar.",
          "isOptional": true
        },
        {
          "name": "defaultExcludes",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dependencies",
          "type": "String",
          "values": [],
          "description": "An array of strings, each consisting of a package identification string; this string is formatted as follows:\n \n  \n* �group�:�package-name�\n\n  \n* �group�:�package-name�:�version�\n\n  When the version is not specified, the latest is used.",
          "isOptional": true
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "A string containing any number of charters; these will be formatted as Markdown in the ProGet UI",
          "isOptional": true
        },
        {
          "name": "excludes",
          "type": "String",
          "values": [],
          "description": "Optionally specify the 'excludes' pattern, such as \"foo/bar/**/*\". A file that matches this mask will not be archived even if it matches the mask specified in 'files to package' section.",
          "isOptional": true
        },
        {
          "name": "icon",
          "type": "String",
          "values": [],
          "description": "A string of an absolute url pointing to an image to be displayed in the ProGet UI (at both 64px and 128px); if package:// is used as the protocol, ProGet will search within the package and serve that image instead",
          "isOptional": true
        },
        {
          "name": "metadata",
          "type": "String",
          "values": [],
          "description": "Custom metadata in 'key = value' pairs, each key/value pair must be on it's own line so for more than one entry you will need to expand the entry field. Each key must be unique. Each value must be no more than 50 characters.\n \nIf you need to add additional metadata, it's strongly recommended that you prefix these properties with an underscore (_) on the off-chance that a property you add will exist in a future version of the specification.",
          "isOptional": true
        },
        {
          "name": "title",
          "type": "String",
          "values": [],
          "description": "An optional title for your package\n \nA string of no more than fifty characters",
          "isOptional": true
        }
      ],
      "plugin": "inedo-proget"
    },
    {
      "command": "uploadResultToALM",
      "title": "uploadResultToALM: Upload test result to ALM",
      "description": "",
      "parameters": [
        {
          "name": "almServerName",
          "type": "String",
          "values": [],
          "description": "The name of the ALM Server.",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "almDomain",
          "type": "String",
          "values": [],
          "description": "The Domain of the project to be used.",
          "isOptional": false
        },
        {
          "name": "clientType",
          "type": "String",
          "values": [],
          "description": "Client type is required for some ALM above 12.60 in authentication.",
          "isOptional": false
        },
        {
          "name": "almProject",
          "type": "String",
          "values": [],
          "description": "The project to be used.",
          "isOptional": false
        },
        {
          "name": "testingFramework",
          "type": "String",
          "values": [],
          "description": "The testing framework that is used when generate the testing result file.",
          "isOptional": false
        },
        {
          "name": "testingTool",
          "type": "String",
          "values": [],
          "description": "The testing tool that is used when generate the testing result file.",
          "isOptional": false
        },
        {
          "name": "almTestFolder",
          "type": "String",
          "values": [],
          "description": "The path of the test folder that will contain the uploaded test. The path doesn't include the Root test folder (Subject).\n \n\n For example, sampletestfolder\\subfolder means, the tests will be uploaded to test folder named 'subfolder', which is under the test folder named 'sampletestfolder',\n \n\n and 'sampletestfolder' is under the root test folder 'Subject'.",
          "isOptional": false
        },
        {
          "name": "almTestSetFolder",
          "type": "String",
          "values": [],
          "description": "The path of the testset folder that will contain the uploaded testset. The path doesn't include the Root testset folder.\n \n\n For example, sampletestsetfolder\\subfolder means, the testsets will be uploaded to testset folder named 'subfolder', which is under the testset folder named 'sampletestsetfolder',\n \n\n and 'sampletestsetfolder' is under the root testset folder 'Root'.",
          "isOptional": false
        },
        {
          "name": "almTimeout",
          "type": "String",
          "values": [],
          "description": "Number of seconds before timeout. If left empty timeout is unlimited.",
          "isOptional": false
        },
        {
          "name": "testingResultFile",
          "type": "String",
          "values": [],
          "description": "The condition to find the testing result file, start from the root path of the job. For example, **/junitResult.xml to find testing result file for Junit Plugin, **/testng-results.xml to find testing result file for TestNG plugin.",
          "isOptional": false
        },
        {
          "name": "jenkinsServerUrl",
          "type": "String",
          "values": [],
          "description": "The HTTP URL of the Jenkins Server, form example, http://myjenkinsserver.test.com:8080 .",
          "isOptional": false
        }
      ],
      "plugin": "hp-application-automation-tools-plugin"
    },
    {
      "command": "uploadToIncappticConnect",
      "title": "uploadToIncappticConnect: Incapptic Connect Publisher",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "mask",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "useMasterProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "verboseLogging",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "incapptic-connect-uploader"
    },
    {
      "command": "vCommander",
      "title": "vCommander: Commander Services",
      "description": "",
      "parameters": [
        {
          "name": "action",
          "type": "Nested",
          "values": [
            "$class: 'VCommanderRequestNewServiceAction'",
            "$class: 'VCommanderRunWorkflowAction'",
            "$class: 'VCommanderWaitForRequestNewServiceAction'",
            "$class: 'VCommanderWaitForRunWorkflowAction'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "embotics-vcommander"
    },
    {
      "command": "vSphere",
      "title": "vSphere: Invoke an vSphere action, exposing the VM IP under some actions",
      "description": "Execute vCenter actions. Reusing vSphereBuildStep forms, cut properly exposing VSPHERE_IP for PowerOn, Deploy and Clone options.",
      "parameters": [
        {
          "name": "buildStep",
          "type": "Nested",
          "values": [
            "$class: 'Clone'",
            "$class: 'ConvertToTemplate'",
            "$class: 'ConvertToVm'",
            "$class: 'Delete'",
            "$class: 'DeleteSnapshot'",
            "$class: 'Deploy'",
            "$class: 'ExposeGuestInfo'",
            "$class: 'PowerOff'",
            "$class: 'PowerOn'",
            "$class: 'Reconfigure'",
            "$class: 'Rename'",
            "$class: 'RenameSnapshot'",
            "$class: 'RevertToSnapshot'",
            "$class: 'SuspendVm'",
            "$class: 'TakeSnapshot'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "serverName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vsphere-cloud"
    },
    {
      "command": "validNetwork",
      "title": "validNetwork: Valid Network Blockhain Security",
      "description": "",
      "parameters": [
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "filepath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "valid-network"
    },
    {
      "command": "validateDeclarativePipeline",
      "title": "validateDeclarativePipeline: Validate a file containing a Declarative Pipeline",
      "description": "Checks if the given file (as relative path to current directory) contains a valid Declarative Pipeline. Returns `true | false`.",
      "parameters": [
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "Relative (`/`-separated) path to file within a workspace to validate as a Declarative Pipeline.",
          "isOptional": false
        }
      ],
      "plugin": "pipeline-model-definition"
    },
    {
      "command": "vault",
      "title": "vault: VaultReadStep",
      "description": "",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "engineVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "key",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vaultUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hashicorp-vault-pipeline"
    },
    {
      "command": "vb6",
      "title": "vb6: VB6",
      "description": "",
      "parameters": [
        {
          "name": "projectFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "compileConstants",
          "type": "String",
          "values": [],
          "description": "Tells Visual Basic which values to use for conditional compilation constants when making an .EXE or ActiveX component with the /make switch. Separate multiple constants with colons. Example: Conditional=1:AnotherConditional=0:More=1",
          "isOptional": true
        },
        {
          "name": "outDir",
          "type": "String",
          "values": [],
          "description": "Specifies a directory path to place all output files in when using /make. This path must already exist.",
          "isOptional": true
        }
      ],
      "plugin": "visual-basic-6"
    },
    {
      "command": "vdooScan",
      "title": "vdooScan: Vdoo Vision Scanner",
      "description": "",
      "parameters": [
        {
          "name": "baseApi",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failThreshold",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "firmwareLocation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maliciousFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHighlightedCVEs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHighlightedExposures",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "maxHighlightedIssues",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "productId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vdooToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "waitForResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vdoo-vision"
    },
    {
      "command": "venafiCodeSignWithJarSigner",
      "title": "venafiCodeSignWithJarSigner: Venafi CodeSign Protect: sign with jarsigner",
      "description": "",
      "parameters": [
        {
          "name": "tppName",
          "type": "String",
          "values": [],
          "description": "The Venafi Trust Protection Platform (TPP) to use for signing. You can define TPPs under \"Manage Jenkins\" -&gt; \"Configure System\" -&gt; \"Venafi Code Signing\".",
          "isOptional": false
        },
        {
          "name": "certLabel",
          "type": "String",
          "values": [],
          "description": "The label of the certificate (inside the TPP) to use for code signing. You can obtain a list of labels with 'pkcs11config listcertificates'.",
          "isOptional": false
        },
        {
          "name": "extraArgs",
          "type": "Nested",
          "values": [
            "argument"
          ],
          "description": "This plugin invokes Jarsigner under the hood. Here you can specify extra custom CLI arguments to pass to Jarsigner. \n\n\n These arguments will be <em>appended</em> to the Jarsigner CLI invocation, and take precedence over any arguments implicitly passed by this plugin.",
          "isOptional": true
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "The path to the file to be signed.\n\n\nEither a path or a glob must be given.",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "A glob that specifies the files to be signed.\n\n\nEither a path or a glob must be given.",
          "isOptional": true
        },
        {
          "name": "timestampingServers",
          "type": "Nested",
          "values": [
            "address"
          ],
          "description": "Specifies one or more timestamping authority servers to use during signing. Specifying this is strongly recommended, because it allows signed files to be usable even after the original signing certificate has expired. \n\n\n If you specify more than one server, then a random one will be used. \n\n\n **Tip:** here are some public timestamping authorities that you can use: \n\n\n \n* http://timestamp.digicert.com\n\n \n* http://timestamp.globalsign.com\n\n \n* http://timestamp.comodoca.com/authenticode\n\n \n* http://tsa.starfieldtech.com",
          "isOptional": true
        },
        {
          "name": "venafiClientToolsDir",
          "type": "String",
          "values": [],
          "description": "Specify the path to the directory in which Venafi CodeSign Protect client tools are installed. If not specified, it's autodetected as follows: \n\n\n \n* Linux: /opt/venafi/codesign\n\n \n* macOS: /Library/Venafi/CodeSigning\n\n \n* Windows: autodetected from the registry, or (if that fails): C:\\Program Files\\Venafi CodeSign Protect",
          "isOptional": true
        }
      ],
      "plugin": "venafi-codesigning"
    },
    {
      "command": "venafiCodeSignWithSignTool",
      "title": "venafiCodeSignWithSignTool: Venafi CodeSign Protect: sign with signtool",
      "description": "",
      "parameters": [
        {
          "name": "tppName",
          "type": "String",
          "values": [],
          "description": "The Venafi Trust Protection Platform (TPP) to use for signing. You can define TPPs under \"Manage Jenkins\" -&gt; \"Configure System\" -&gt; \"Venafi Code Signing\".",
          "isOptional": false
        },
        {
          "name": "fileOrGlob",
          "type": "String",
          "values": [],
          "description": "A path or a glob that specifies the file(s) to be signed.",
          "isOptional": false
        },
        {
          "name": "appendSignatures",
          "type": "boolean",
          "values": [],
          "description": "If the target file(s) already have signatures, then append a new signature instead of overwriting the existing signatures.",
          "isOptional": true
        },
        {
          "name": "extraArgs",
          "type": "Nested",
          "values": [
            "argument"
          ],
          "description": "This plugin invokes Signtool under the hood. Here you can specify extra custom CLI arguments to pass to Signtool. \n\n\n These arguments will be <em>appended</em> to the Signtool CLI invocation. If they overlap with any arguments implicitly passed by this plugin, then Signtool will raise an error.",
          "isOptional": true
        },
        {
          "name": "sha1",
          "type": "String",
          "values": [],
          "description": "The SHA-1 hash of the certificate (inside the TPP) to use for code signing. \n\n\n Normally you should use 'Signing certificate subject name' instead, but if that name is ambiguous, then use the SHA-1 hash to select a specific signing certificate. \n\n\nEither a subject name or SHA-1 hash of the signing certificate must be given.",
          "isOptional": true
        },
        {
          "name": "signToolPath",
          "type": "String",
          "values": [],
          "description": "The full path to signtool.exe. If not specified, we assume that it's in PATH.",
          "isOptional": true
        },
        {
          "name": "signatureDigestAlgos",
          "type": "Nested",
          "values": [
            "algorithm"
          ],
          "description": "The digest algorithm(s) to use to creating signatures.\n\n\n If none specified, 'sha256' is used as the default algorithm. This is very secure, but may not be compatible with older Windows versions. If you need compatibility with older Windows versions, you should specify 'sha1' and 'sha256' (in that order). \n\n\n When multiple digest algorithms are specified, they are applied in the order specified.",
          "isOptional": true
        },
        {
          "name": "subjectName",
          "type": "String",
          "values": [],
          "description": "The Common Name (\"Issued to\" or \"CN\") of the certificate (inside the TPP) to use for code signing. \n\n\n You can obtain a list of Common Names with 'cspconfig listcertificates' and checking what comes after 'CN='. \n\n\nEither a subject name or SHA-1 hash of the signing certificate must be given.",
          "isOptional": true
        },
        {
          "name": "timestampingServers",
          "type": "Nested",
          "values": [
            "address"
          ],
          "description": "Specifies one or more timestamping authority servers to use during signing. Specifying this is strongly recommended, because it allows signed files to be usable even after the original signing certificate has expired. \n\n\n If you specify more than one server, then a random one will be used. \n\n\n **Tip:** here are some public timestamping authorities that you can use: \n\n\n \n* http://timestamp.digicert.com\n\n \n* http://timestamp.globalsign.com\n\n \n* http://timestamp.comodoca.com/authenticode\n\n \n* http://tsa.starfieldtech.com",
          "isOptional": true
        },
        {
          "name": "useMachineConfiguration",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "venafiClientToolsDir",
          "type": "String",
          "values": [],
          "description": "Specify the path to the directory in which Venafi CodeSign Protect client tools are installed. If not specified, it's autodetected from the registry. If that fails, we fallback to `C:\\Program Files\\Venafi CodeSign Protect`.",
          "isOptional": true
        }
      ],
      "plugin": "venafi-codesigning"
    },
    {
      "command": "venafiVcertRequestCertificate",
      "title": "venafiVcertRequestCertificate: Venafi Machine Identity Protection: request certificate",
      "description": "",
      "parameters": [
        {
          "name": "connectorName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "zoneConfigName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "commonName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "privKeyOutput",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "certOutput",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "certChainOutput",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "country",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "dnsNames",
          "type": "Nested",
          "values": [
            "hostName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "emailAddresses",
          "type": "Nested",
          "values": [
            "address"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipAddresses",
          "type": "Nested",
          "values": [
            "address"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keyType",
          "type": "Enum",
          "values": [
            "RSA",
            "ECDSA"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "locality",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "organization",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "organizationalUnit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "province",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "venafi-vcert"
    },
    {
      "command": "venafiVerifyWithJarSigner",
      "title": "venafiVerifyWithJarSigner: Venafi CodeSign Protect: verify with jarsigner",
      "description": "",
      "parameters": [
        {
          "name": "tppName",
          "type": "String",
          "values": [],
          "description": "The Venafi Trust Protection Platform (TPP) that contains the certificate that the signed file(s) were signed by. You can define TPPs under \"Manage Jenkins\" -&gt; \"Configure System\" -&gt; \"Venafi Code Signing\".",
          "isOptional": false
        },
        {
          "name": "certLabel",
          "type": "String",
          "values": [],
          "description": "The label of the certificate (inside the TPP) that was used for signing the file(s). You can obtain a list of labels with 'pkcs11config listcertificates'.",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "The path to the file to be verified.\n\n\nEither a path or a glob must be given.",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "A glob that specifies the files to be verified.\n\n\nEither a path or a glob must be given.",
          "isOptional": true
        },
        {
          "name": "venafiClientToolsDir",
          "type": "String",
          "values": [],
          "description": "Specify the path to the directory in which Venafi CodeSign Protect client tools are installed. If not specified, it's autodetected as follows: \n\n\n \n* Linux: /opt/venafi/codesign\n\n \n* macOS: /Library/Venafi/CodeSigning\n\n \n* Windows: autodetected from the registry, or (if that fails): C:\\Program Files\\Venafi CodeSign Protect",
          "isOptional": true
        }
      ],
      "plugin": "venafi-codesigning"
    },
    {
      "command": "venafiVerifyWithSignTool",
      "title": "venafiVerifyWithSignTool: Venafi CodeSign Protect: verify with signtool",
      "description": "",
      "parameters": [
        {
          "name": "tppName",
          "type": "String",
          "values": [],
          "description": "The Venafi Trust Protection Platform (TPP) that contains the certificate that the signed file(s) were signed by. You can define TPPs under \"Manage Jenkins\" -&gt; \"Configure System\" -&gt; \"Venafi Code Signing\".",
          "isOptional": false
        },
        {
          "name": "fileOrGlob",
          "type": "String",
          "values": [],
          "description": "A path or a glob that specifies the file(s) to be verified.",
          "isOptional": false
        },
        {
          "name": "signToolPath",
          "type": "String",
          "values": [],
          "description": "The full path to signtool.exe. If not specified, we assume that it's in PATH.",
          "isOptional": true
        },
        {
          "name": "useMachineConfiguration",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "venafiClientToolsDir",
          "type": "String",
          "values": [],
          "description": "Specify the path to the directory in which Venafi CodeSign Protect client tools are installed. If not specified, it's autodetected from the registry. If that fails, we fallback to `C:\\Program Files\\Venafi CodeSign Protect`.",
          "isOptional": true
        }
      ],
      "plugin": "venafi-codesigning"
    },
    {
      "command": "veracode",
      "title": "veracode: Upload and Scan with Veracode Pipeline",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the application. This can be an application that already exists on the Veracode Platform, or a new one that Jenkins creates.",
          "isOptional": true
        },
        {
          "name": "criticality",
          "type": "String",
          "values": [],
          "description": "Enter the business criticality for the application.",
          "isOptional": true
        },
        {
          "name": "sandboxName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the sandbox. This can be a sandbox that already exists on the Veracode Platform, or a new one that Jenkins creates.\n\n \nIf you leave this field empty, no sandbox is used.",
          "isOptional": true
        },
        {
          "name": "scanName",
          "type": "String",
          "values": [],
          "description": "Enter a name for the static scan you want to submit to the Veracode Platform for this application. Scan name is equivalent to Version or Build in the Veracode API.",
          "isOptional": true
        },
        {
          "name": "waitForScan",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "This option will submit the scan and wait the given amount of time. If the scan does not complete and pass policy compliance within the allotted time, then the build will fail.",
          "isOptional": true
        },
        {
          "name": "createProfile",
          "type": "boolean",
          "values": [],
          "description": "Selecting this checkbox creates a new application if a matching application is not found on the Veracode Platform.\n\n \nIf the checkbox is not selected and a matching application is not found on the Veracode Platform, the Jenkins build will fail.",
          "isOptional": true
        },
        {
          "name": "teams",
          "type": "String",
          "values": [],
          "description": "Enter the name of the teams to which you want to assign this application. \n\n \n  \n* You must enter a team name if you have any user account role other than Security Lead. If you leave this field empty, the job will fail.\n\n  \n* Use a comma-separated list for multiple team names.\n\n  \n* The team name is case-sensitive and must exactly match the team name as entered in the Veracode Platform.\n\n  \n* If you assign the application to a non-existent team, the job will fail.",
          "isOptional": true
        },
        {
          "name": "createSandbox",
          "type": "boolean",
          "values": [],
          "description": "Selecting this checkbox creates a new sandbox if a sandbox name is provided and a matching sandbox is not found on the Veracode Platform.\n\n \nIf the checkbox is not selected, a sandbox name is provided, and a matching sandbox is not found on the Veracode Platform, the Jenkins build will fail.",
          "isOptional": true
        },
        {
          "name": "timeoutFailsJob",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canFailJob",
          "type": "boolean",
          "values": [],
          "description": "Select the checkbox if you want the entire Jenkins job to fail if the upload and scan with Veracode action fails. If you do not select this option and the upload and scan with Veracode action fails, the Jenkins job completes and the failure is logged, but you do not receive any notification of the failure.",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "Select the checkbox to display additional information in the console output window.",
          "isOptional": true
        },
        {
          "name": "uploadIncludesPattern",
          "type": "String",
          "values": [],
          "description": "Enter the filepaths of the files to upload for scanning, represented as a comma-separated list of ant-style include patterns relative to the job's workspace root directory. \n\n \n Patterns are case-sensitive. Patterns that include commas because they denote filepaths that contain commas need to replace the commas with a wildcard character. \n\n \n If no filepaths are provided, all files in the job's workspace root directory are included. \n\n \n See [http://ant.apache.org/manual/dirtasks.html](http://ant.apache.org/manual/dirtasks.html) for more info.",
          "isOptional": true
        },
        {
          "name": "uploadExcludesPattern",
          "type": "String",
          "values": [],
          "description": "Enter the filepaths of the files to exclude from the upload for scanning, represented as a comma-separated list of ant-style exclude patterns relative to the job's workspace root directory. \n\n \n Patterns are case-sensitive. Patterns that include commas because they denote filepaths that contain commas need to have the commas replaced with a wildcard character. \n\n \n If no filepaths are provided, no files (except default excludes) in the job's workspace root directory are excluded. \n\n \n See [http://ant.apache.org/manual/dirtasks.html](http://ant.apache.org/manual/dirtasks.html) for more info.",
          "isOptional": true
        },
        {
          "name": "scanIncludesPattern",
          "type": "String",
          "values": [],
          "description": "Enter the filenames of the uploaded files to scan as top level modules, represented as a comma-separated list of ant-style include patterns such that '*' matches 0 or more characters and '?' matches exactly 1 character. \n\n \n Patterns are case-sensitive. Patterns that include commas because they denote filenames that contain commas need to replace the commas with a wildcard character. \n\n \n Because the matching is performed based only on filename, it is incorrect to use patterns that include path separators ('\\' or '/'). \n\n \n If no filenames are provided, all uploaded files are included as top level modules.",
          "isOptional": true
        },
        {
          "name": "scanExcludesPattern",
          "type": "String",
          "values": [],
          "description": "Enter the filenames of the uploaded files to not scan as top level modules, represented as a comma-separated list of ant-style exclude patterns such that '*' matches 0 or more characters and '?' matches exactly 1 character. \n\n \n Patterns are case-sensitive. Patterns that include commas because they denote filenames that contain commas need to replace the commas with a wildcard character. \n\n \n Because the matching is performed based only on filename, it is incorrect to use patterns that include path separators ('\\' or '/'). \n\n \n If no filepaths are provided, no files (except default excludes) in the job's workspace root directory are excluded.",
          "isOptional": true
        },
        {
          "name": "fileNamePattern",
          "type": "String",
          "values": [],
          "description": "Enter the filename pattern that represents the names of the uploaded files that should be saved with a different name. The '*' wildcard matches 0 or more characters. The '?' wildcard matches exactly 1 character. Each wildcard corresponds to a numbered group that can be referenced in the replacement pattern. \n\n \n Pattern is case-sensitive. \n\n \n Because the matching is performed based only on filename, it is incorrect to use patterns that include path separators ('\\' or '/'). \n\n \n No uploaded files are saved with a different name when either the filename pattern or the replacement pattern is omitted.",
          "isOptional": true
        },
        {
          "name": "replacementPattern",
          "type": "String",
          "values": [],
          "description": "Enter the replacement pattern that represents the groups captured by the filename pattern. For example, if the filename pattern is '*-*-SNAPSHOT.war' and the replacement pattern '$1-master-SNAPSHOT.war', an uploaded file named 'app-branch-SNAPSHOT.war' would be saved as 'app-master-SNAPSHOT.war'. \n\n \n In order to specify a replacement pattern that includes a reference to a captured group followed by a number, place the captured group's index inside curly braces. For example, if the filename pattern is '*-*-SNAPSHOT.war' and the replacement pattern '${1}5-master-SNAPSHOT.war', an uploaded file named 'app-branch-SNAPSHOT.war' would be saved as 'app5-master-SNAPSHOT.war'. \n\n \n New filenames for uploaded files must be valid. Path separators ('\\' or '/') should not be included. \n\n \n No uploaded files are saved with a different name when either the filename pattern or the replacement pattern is omitted.",
          "isOptional": true
        },
        {
          "name": "copyRemoteFiles",
          "type": "boolean",
          "values": [],
          "description": "This option is **only** applicable when the build is done by a remote machine in a remote workspace. \n\n \n  \n* If you do not select this checkbox (default), the output files are uploaded to Veracode from the remote workspace.\n\n  \n* If you select this checkbox, the output files are copied from the remote machine to a local, temporary directory in Master and then updated to Veracode.",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pHost",
          "type": "String",
          "values": [],
          "description": "Enter the proxy host.",
          "isOptional": true
        },
        {
          "name": "pPort",
          "type": "String",
          "values": [],
          "description": "Enter the port number if the proxy host has a port.",
          "isOptional": true
        },
        {
          "name": "pUser",
          "type": "String",
          "values": [],
          "description": "If the proxy server is password protected, enter your username and password in the Username and Password fields.",
          "isOptional": true
        },
        {
          "name": "pPassword",
          "type": "String",
          "values": [],
          "description": "If the proxy server is password protected, enter your username and password in the Username and Password fields.",
          "isOptional": true
        },
        {
          "name": "vid",
          "type": "String",
          "values": [],
          "description": "Enter your Veracode API ID. For instructions on generating your API credentials, search for \"Credentials\" in the Veracode Help Center.",
          "isOptional": true
        },
        {
          "name": "vkey",
          "type": "String",
          "values": [],
          "description": "Enter your Veracode API key. For instructions on generating your API credentials, search for \"Credentials\" in the Veracode Help Center.",
          "isOptional": true
        }
      ],
      "plugin": "veracode-scan"
    },
    {
      "command": "veracodeDynamicAnalysisResubmit",
      "title": "veracodeDynamicAnalysisResubmit: Resubmit Veracode Dynamic Analysis",
      "description": "",
      "parameters": [
        {
          "name": "analysisName",
          "type": "String",
          "values": [],
          "description": "Enter a name for the Dynamic Analysis. This name must match the Dynamic Analysis name configured on the Veracode Platform, or the Dynamic Analysis scan fails.",
          "isOptional": true
        },
        {
          "name": "maximumDuration",
          "type": "int",
          "values": [],
          "description": "The number of hours that the Dynamic Analysis can run. The default duration is three days (72 hours) and the maximum duration is 25 days (600 hours).",
          "isOptional": true
        },
        {
          "name": "failBuildAsScanFailed",
          "type": "boolean",
          "values": [],
          "description": "Enable to fail the Jenkins build if the Dynamic Analysis post-build actions fails.",
          "isOptional": true
        },
        {
          "name": "vid",
          "type": "String",
          "values": [],
          "description": "For added security, Veracode highly recommends to use the Credentials Binding plugin to store Veracode API credentials. Jenkins binds the credentials to environment variables that appear in scripts instead of the actual credentials.\n\n \nEnter the environment variable reference to bind your Veracode API ID. If you are using an environment variable, delete the quotes around the value for vid in the pipeline script.",
          "isOptional": true
        },
        {
          "name": "vkey",
          "type": "String",
          "values": [],
          "description": "For added security, Veracode highly recommends to use the Credentials Binding plugin to store Veracode API credentials. Jenkins binds the credentials to environment variables that appear in scripts instead of the actual credentials.\n\n \nEnter the environment variable reference to bind your Veracode API key. If you are using an environment variable, delete the quotes around the value for vkey in the pipeline script.",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "Enable to display additional information in the console output.",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pHost",
          "type": "String",
          "values": [],
          "description": "Enter the proxy host.",
          "isOptional": true
        },
        {
          "name": "pPort",
          "type": "String",
          "values": [],
          "description": "Enter the port number for the proxy host.",
          "isOptional": true
        },
        {
          "name": "pUser",
          "type": "String",
          "values": [],
          "description": "Enter the username for the proxy server, if required.",
          "isOptional": true
        },
        {
          "name": "pPassword",
          "type": "String",
          "values": [],
          "description": "Enter the password for the proxy server, if required.",
          "isOptional": true
        }
      ],
      "plugin": "veracode-scan"
    },
    {
      "command": "veracodeDynamicAnalysisReview",
      "title": "veracodeDynamicAnalysisReview: Review Veracode Dynamic Analysis Results",
      "description": "",
      "parameters": [
        {
          "name": "waitForResultsDuration",
          "type": "int",
          "values": [],
          "description": "The number of hours to wait for the Veracode Dynamic Analysis results to be available. If the results are not available after the specified wait time, the Jenkins build fails.",
          "isOptional": true
        },
        {
          "name": "failBuildForPolicyViolation",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "Enable to display additional information in the console output.",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pHost",
          "type": "String",
          "values": [],
          "description": "Enter the proxy host.",
          "isOptional": true
        },
        {
          "name": "pPort",
          "type": "String",
          "values": [],
          "description": "Enter the port number for the proxy host.",
          "isOptional": true
        },
        {
          "name": "pUser",
          "type": "String",
          "values": [],
          "description": "Enter the username for the proxy server, if required.",
          "isOptional": true
        },
        {
          "name": "pPassword",
          "type": "String",
          "values": [],
          "description": "Enter the password for the proxy server, if required.",
          "isOptional": true
        },
        {
          "name": "vid",
          "type": "String",
          "values": [],
          "description": "For added security, Veracode highly recommends to use the Credentials Binding plugin to store Veracode API credentials. Jenkins binds the credentials to environment variables that appear in scripts instead of the actual credentials.\n\n \nEnter the environment variable reference to bind your Veracode API ID. If you are using an environment variable, delete the quotes around the value for vid in the pipeline script.",
          "isOptional": true
        },
        {
          "name": "vkey",
          "type": "String",
          "values": [],
          "description": "For added security, Veracode highly recommends to use the Credentials Binding plugin to store Veracode API credentials. Jenkins binds the credentials to environment variables that appear in scripts instead of the actual credentials.\n\n \nEnter the environment variable reference to bind your Veracode API key. If you are using an environment variable, delete the quotes around the value for vkey in the pipeline script.",
          "isOptional": true
        }
      ],
      "plugin": "veracode-scan"
    },
    {
      "command": "veracodeDynamicRescan",
      "title": "veracodeDynamicRescan: Dynamic Rescan with Veracode Pipeline",
      "description": "",
      "parameters": [
        {
          "name": "applicationName",
          "type": "String",
          "values": [],
          "description": "Enter the name of the application.\n\n \nYou can either use the name of an application that already exists in the Veracode Platform, or enter $projectname to use the Jenkins project name as the application name.",
          "isOptional": true
        },
        {
          "name": "dvrEnabled",
          "type": "boolean",
          "values": [],
          "description": "Selecting this checkbox enables Dynamic Vulnerability Rescan.",
          "isOptional": true
        },
        {
          "name": "canFailJob",
          "type": "boolean",
          "values": [],
          "description": "Select this option if you want the Jenkins job to fail if the upload and scan or dynamic rescan post-build action fails. If you do not select this option and either of these post-build actions does fail, the log will show the failure but you will not be notified.",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "Select the checkbox to display additional information in the console output window, including the supplied credentials.",
          "isOptional": true
        },
        {
          "name": "useProxy",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "pHost",
          "type": "String",
          "values": [],
          "description": "Enter the proxy host.",
          "isOptional": true
        },
        {
          "name": "pPort",
          "type": "int",
          "values": [],
          "description": "Enter the port number if the proxy host has a port.",
          "isOptional": true
        },
        {
          "name": "pUser",
          "type": "String",
          "values": [],
          "description": "If the proxy server is password protected, enter your username and password in the Username and Password fields.",
          "isOptional": true
        },
        {
          "name": "pPassword",
          "type": "String",
          "values": [],
          "description": "If the proxy server is password protected, enter your username and password in the Username and Password fields.",
          "isOptional": true
        },
        {
          "name": "vid",
          "type": "String",
          "values": [],
          "description": "Enter your Veracode API ID. For instructions on generating your API credentials, search for \"Credentials\" in the Veracode Help Center.",
          "isOptional": true
        },
        {
          "name": "vkey",
          "type": "String",
          "values": [],
          "description": "Enter your Veracode API key. For instructions on generating your API credentials, search for \"Credentials\" in the Veracode Help Center.",
          "isOptional": true
        }
      ],
      "plugin": "veracode-scan"
    },
    {
      "command": "visualexpert",
      "title": "visualexpert: Visual Expert",
      "description": "**<u>Visual Expert builder</u>** facilitates to Analyze Project, Generate Reference Documentation and Generate Code Review Documentation for Visual Expert Projects.",
      "parameters": [
        {
          "name": "installPath",
          "type": "String",
          "values": [],
          "description": "Select Novalys.VisualExpert.Console.exe installation path.\n \n\nThe default is set to \"C:\\Program Files (x86)\\Novalys\\Visual Expert 2021\\Novalys.VisualExpert.Console.exe\".",
          "isOptional": false
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Select project to be Analyzed Or Documentation to be generated for.",
          "isOptional": false
        },
        {
          "name": "doAnalysis",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "createReferenceDocument",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "createCodeReviewDocument",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "visualexpert"
    },
    {
      "command": "vmanagerLaunch",
      "title": "vmanagerLaunch: Cadence vManager Session Launcher",
      "description": "",
      "parameters": [
        {
          "name": "vAPIUrl",
          "type": "String",
          "values": [],
          "description": "vManager expose a REST API interface for API. The REST API is a dedicated process for serving remote http requests - vAPI.\n \n\n Starting 14.1 s005 The vAPI process is served automatically by the vManager Server process, and as such you need to supply the following url:\n \n\n **https://[VMANAGER_HOST:VMANAGER_PORT]/vmgr/vapi**\n \n\n For vmanager 14.1 s002, the vAPI process need to get started manually, as such, the url syntaxt is:\n \n\n **http://[VAPI_HOST:VAPI_PORT]/vmgr**",
          "isOptional": false
        },
        {
          "name": "vAPIUser",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, the userId will be shown as the user who perform the operation within vManager tool.\n \n\n In case of open mode, the default userid that will be used is \"vapi\".",
          "isOptional": false
        },
        {
          "name": "vAPIPassword",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, a password is needed\n \n\n Please contact vManager documentation for further info.",
          "isOptional": false
        },
        {
          "name": "vSIFName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "vSIFInputFile",
          "type": "String",
          "values": [],
          "description": "In case of a need in dynamically selecting the vsif files to get launched per job, the pre-job should place into the workspace directory a file with the full paths of the relevant vsif files to be launched, new line for each additional vsif file.\n \n\n The input file should be place into the working directory. In case this field is empty, The file name need to be: ${BUILD_NUMBER}.${BUILD_ID}.vsif.input\n \n\n Please fill this field only in case, you want to hard code the input file name, to be consist across all builds.\n \n\n The output of all IDs of the launched sessions can be found at: ${BUILD_NUMBER}.${BUILD_ID}.session_launch.output",
          "isOptional": false
        },
        {
          "name": "credentialInputFile",
          "type": "unknown",
          "values": [],
          "description": "Supported only from 16.1 and above.\n \n\n vManager can execute jobs in one of two modes:",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vmanager-plugin"
    },
    {
      "command": "vmanagerPostBuildActions",
      "title": "vmanagerPostBuildActions: vManager Post Build Actions",
      "description": "",
      "parameters": [
        {
          "name": "vAPIUrl",
          "type": "String",
          "values": [],
          "description": "vManager expose a REST API interface for API. The REST API is a dedicated process for serving remote http requests - vAPI.\n \n\n Starting 14.1 s005 The vAPI process is served automatically by the vManager Server process, and as such you need to supply the following url:\n \n\n **https://[VMANAGER_HOST:VMANAGER_PORT]/vmgr/vapi**\n \n\n For vmanager 14.1 s002, the vAPI process need to get started manually, as such, the url syntaxt is:\n \n\n **http://[VAPI_HOST:VAPI_PORT]/vmgr**",
          "isOptional": false
        },
        {
          "name": "vAPIUser",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, the userId will be shown as the user who perform the operation within vManager tool.\n \n\n In case of open mode, the default userid that will be used is \"vapi\".",
          "isOptional": false
        },
        {
          "name": "vAPIPassword",
          "type": "String",
          "values": [],
          "description": "In case of a secure mode, a password is needed\n \n\n Please contact vManager documentation for further info.",
          "isOptional": false
        },
        {
          "name": "authRequired",
          "type": "unknown",
          "values": [],
          "description": "vManager vAPI can operate in one of two modes:",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "",
          "type": "unknown",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "vmanager-plugin"
    },
    {
      "command": "vraDeleteDeployment",
      "title": "vraDeleteDeployment: vRA - Delete Deployment",
      "description": "Requests the deletion of a deployment and waits for it to complete.",
      "parameters": [
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraDeployFromCatalog",
      "title": "vraDeployFromCatalog: vRA - Deploy from catalog",
      "description": "Creates a new deployment from a vRealize Automation catalog item",
      "parameters": [
        {
          "name": "catalogItemName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "config",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configFormat",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "count",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputMap",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reason",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraGetDeployment",
      "title": "vraGetDeployment: vRA - Get Deployment",
      "description": "Returns the details of a resource action.",
      "parameters": [
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "expandResources",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraGetResourceActionDetails",
      "title": "vraGetResourceActionDetails: vRA - Get Resource Action Details",
      "description": "Returns details of a specific resource action.",
      "parameters": [
        {
          "name": "actionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraGetResourceActions",
      "title": "vraGetResourceActions: vRA - Get Resource Actions",
      "description": "Returns the actions available for a resource.",
      "parameters": [
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraRunAction",
      "title": "vraRunAction: vRA - Run Action",
      "description": "Runs a day two action against a deployment or a resource within a deployment.",
      "parameters": [
        {
          "name": "actionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputMap",
          "type": "java.util.Map<java.lang.String, java.lang.Object>",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reason",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vraWaitForAddress",
      "title": "vraWaitForAddress: vRA - Wait for Address",
      "description": "Waits until a machine within a deployment has obtained an IP address and returns it.",
      "parameters": [
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "deploymentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "domain",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "password",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resourceName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "token",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "trustSelfSignedCert",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "username",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "vraURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vrealize-automation-8"
    },
    {
      "command": "vsTest",
      "title": "vsTest: Run unit tests with VSTest.console",
      "description": "",
      "parameters": [
        {
          "name": "cmdLineArgs",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "enablecodecoverage",
          "type": "boolean",
          "values": [],
          "description": "Enables data diagnostic adapter CodeCoverage in the test run.\n\n Default settings are used if not specified using settings file. \n\n\n\n\n\n \n Command Line Argument: <span>/Enablecodecoverage</span>",
          "isOptional": true
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "framework",
          "type": "String",
          "values": [],
          "description": "Target .NET Framework version to be used for test execution.\n\n Valid values are Framework35, Framework40 and Framework45. \n\n\n\n\n\n \n Command Line Argument: <span>/Framework: [ framework version ]</span>",
          "isOptional": true
        },
        {
          "name": "inIsolation",
          "type": "boolean",
          "values": [],
          "description": "Runs the tests in an isolated process.\n\n This makes vstest.console.exe process less likely to be stopped on an error in the tests, but tests might run slower.",
          "isOptional": true
        },
        {
          "name": "logger",
          "type": "String",
          "values": [],
          "description": "Specify a logger for test results. For example, to log results into a Visual Studio Test Results File (TRX) use /Logger:trx. \n\n\n\n\n\n \n Command Line Argument: <span> /Logger:[ uri/friendlyname ] </span>",
          "isOptional": true
        },
        {
          "name": "platform",
          "type": "String",
          "values": [],
          "description": "Target platform architecture to be used for test execution.\n\n Valid values are x86, x64 and ARM.",
          "isOptional": true
        },
        {
          "name": "settings",
          "type": "String",
          "values": [],
          "description": "Run tests with additional settings such as data collectors.\n\n Example: <span>Local.RunSettings</span> \n\n\n\n\n\n \n Command Line Argument: <span>/Settings:[ file name ]</span>",
          "isOptional": true
        },
        {
          "name": "testCaseFilter",
          "type": "String",
          "values": [],
          "description": "Run tests that match the given expression.\n\n &lt;Expression&gt; is of the format &lt;property&gt;=&lt;value&gt;[||&lt;Expression&gt;]. \n\n Example: <span>TestCategory=Nightly||Name=Namespace.ClassName.MethodName</span>\n\n \n\n The TestCaseFilter command line option cannot be used with the Tests command line option. \n\n\n\n\n\n \n Command Line Argument: <span>/TestCaseFilter:[ expression ]</span>",
          "isOptional": true
        },
        {
          "name": "testFiles",
          "type": "String",
          "values": [],
          "description": "Specify the path to your VSTest compiled assemblies.\n\n You can specify multiple test assemblies by separating them with new-line or space.",
          "isOptional": true
        },
        {
          "name": "tests",
          "type": "String",
          "values": [],
          "description": "Run tests with names that match the provided values.\n\n To provide multiple values, separate them by commas.\n\n Example: <span>TestMethod1,testMethod2</span>\n\n \n\n The /Tests command line option cannot be used with the /TestCaseFilter command line option. \n\n\n\n\n\n \n Command Line Argument: <span>/Tests:[ test name ]</span>",
          "isOptional": true
        },
        {
          "name": "useVs2017Plus",
          "type": "boolean",
          "values": [],
          "description": "This makes adjustments to the arguments for the sake of compatibility with Visual Studio 2017+. \n\n\n\n\n\n \n Command Line Argument: <span>/UseVs2017Plus:true</span>",
          "isOptional": true
        },
        {
          "name": "useVsixExtensions",
          "type": "boolean",
          "values": [],
          "description": "This makes vstest.console.exe process use or skip the VSIX extensions installed (if any) in the test run. \n\n\n\n\n\n \n Command Line Argument: <span>/UseVsixExtensions:true</span>",
          "isOptional": true
        },
        {
          "name": "vsTestName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "vstestrunner"
    },
    {
      "command": "waitForCIMessage",
      "title": "waitForCIMessage: CI Subscriber",
      "description": "Subscribe to the CI message bus and wait for a message matching the specified JMS selector.\n\n \nThe timeout value specifies the maximum number of minutes to wait for a message matching the JMS selector to appear.\n\n \nThis step returns the value of the Message content as a string\n\n \n\n\n \n```groovy\nnode {\n  def messageContent = waitForCIMessage selector: \"CI_TYPE = 'code-quality-checks-done' and CI_STATUS = 'failed'\"\n  // The message content is now available as a variable\n  echo messageContent\n  // The message content is set as an environment variable\n  env.messageContent = messageContent\n  sh 'path/to/a/script.sh'\n}\n\n```",
      "parameters": [
        {
          "name": "providerName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "overrides",
          "type": "Nested",
          "values": [
            "topic",
            "queue"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "selector",
          "type": "String",
          "values": [],
          "description": "JMS selector use to select message to receive.",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Value (in minutes) to wait for a message matching the specified JMS selector.",
          "isOptional": false
        },
        {
          "name": "checks",
          "type": "Nested",
          "values": [
            "field",
            "expectedValue"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jms-messaging"
    },
    {
      "command": "waitForCustomBuildProperties",
      "title": "waitForCustomBuildProperties: Wait until specified custom build properties are set",
      "description": "Wait until specified custom build properties are set:\n \n  \n* `waitForCustomBuildProperties(keys: ['key1', 'key2'])`",
      "parameters": [
        {
          "name": "keys",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeoutTime",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "timeoutUnit",
          "type": "Enum",
          "values": [
            "NANOSECONDS",
            "MICROSECONDS",
            "MILLISECONDS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "custom-build-properties"
    },
    {
      "command": "waitForQualityGate",
      "title": "waitForQualityGate: Wait for SonarQube analysis to be completed and return quality gate status",
      "description": "This step pauses Pipeline execution and wait for previously submitted SonarQube analysis to be completed and returns quality gate status. Setting the parameter `abortPipeline` to true will abort the pipeline if quality gate status is not green. \n\n \n Note: This step doesn't require an executor. \n\n \n Requirements: \n\n \n  \n* SonarQube server 6.2+\n\n  \n* [Configure a webhook](https://redirect.sonarsource.com/doc/webhooks.html) in your SonarQube server pointing to `&lt;your Jenkins instance&gt;/sonarqube-webhook/`. **The trailing slash is mandatory!**\n\n  \n* Use `withSonarQubeEnv` step to run your analysis prior to use this step\n\n \n \n\n\n \n Example using declarative pipeline:\n\n ``\n\n \n```groovy\n      pipeline {\n        agent none\n        stages {\n          stage(\"build & SonarQube analysis\") {\n            agent any\n            steps {\n              withSonarQubeEnv('My SonarQube Server') {\n                sh 'mvn clean package sonar:sonar'\n              }\n            }\n          }\n          stage(\"Quality Gate\") {\n            steps {\n              timeout(time: 1, unit: 'HOURS') {\n                waitForQualityGate abortPipeline: true\n              }\n            }\n          }\n        }\n      }\n      \n```\n\n \n\n\n \n Example using scripted pipeline:\n\n ``\n\n \n```groovy\n      stage(\"build & SonarQube analysis\") {\n          node {\n              withSonarQubeEnv('My SonarQube Server') {\n                 sh 'mvn clean package sonar:sonar'\n              }\n          }\n      }\n\n      stage(\"Quality Gate\"){\n          timeout(time: 1, unit: 'HOURS') {\n              def qg = waitForQualityGate()\n              if (qg.status != 'OK') {\n                  error \"Pipeline aborted due to quality gate failure: ${qg.status}\"\n              }\n          }\n      }\n      \n```",
      "parameters": [
        {
          "name": "abortPipeline",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookSecretId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sonar"
    },
    {
      "command": "waitForWebhook",
      "title": "waitForWebhook: Wait for webhook to be POSTed to by external system",
      "description": "Blocks on a webhook created with `registerWebhook` until the registered webhook is posted to. In general, should not be used inside of a `node` block.",
      "parameters": [
        {
          "name": "webhookToken",
          "type": "class org.jenkinsci.plugins.webhookstep.WebhookToken",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "withHeaders",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "webhook-step"
    },
    {
      "command": "waitUntil",
      "title": "waitUntil: Wait for condition",
      "description": "Runs its body repeatedly until it returns `true`. If it returns `false`, waits a while and tries again. (Subsequent failures will slow down the delay between attempts up to a maximum of 15 seconds.) There is no limit to the number of retries, but if the body throws an error that is thrown up immediately.",
      "parameters": [
        {
          "name": "initialRecurrencePeriod",
          "type": "long",
          "values": [],
          "description": "Sets the initial wait period, in milliseconds, between retries. Defaults to 250ms.\n \n\n Each failure will slow down the delay between attempts up to a maximum of 15 seconds.",
          "isOptional": true
        },
        {
          "name": "quiet",
          "type": "boolean",
          "values": [],
          "description": "If true, the step does not log a message each time the condition is checked. Defaults to false.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "walk",
      "title": "walk: Execute a pipeline task for the job and all its downstream jobs.",
      "description": "Triggers a new task for a given job and all maven-dependent jobs.",
      "parameters": [
        {
          "name": "job",
          "type": "String",
          "values": [],
          "description": "Name of a downstream job to build. May be another Pipeline job, but more commonly a freestyle or other project. Use a simple name if the job is in the same folder as this upstream Pipeline job; otherwise can use relative paths like `../sister-folder/downstream` or absolute paths like `/top-level-folder/nested-folder/downstream`.",
          "isOptional": false
        },
        {
          "name": "failOnUnstable",
          "type": "boolean",
          "values": [],
          "description": "If failOnUnstable is true than the action would be performed only if all the related jobs have latest build successful.",
          "isOptional": true
        },
        {
          "name": "jobAction",
          "type": "String",
          "values": [],
          "description": "Action to be performed on jobs. Use `JOB_NAME` keyword to refer to a job.\n \n\n If the field is empty then jobs would be build, e.i. empty value will be replaced by `build 'JOB_NAME'`",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-dependency-walker"
    },
    {
      "command": "waptProReport",
      "title": "waptProReport: Publish WAPT Pro reports",
      "description": "",
      "parameters": [
        {
          "name": "reportsFolder",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "reportFiles",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "checkTestResult",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "waptpro"
    },
    {
      "command": "warnError",
      "title": "warnError: Catch error and set build and stage result to unstable",
      "description": "Executes its body, and if an exception is thrown, sets the overall build result and the stage result to `UNSTABLE`, prints a specified message and the thrown exception to the build log, and associates the stage result with the message so that it can be displayed by visualizations.\n \nEquivalent to `catchError(message: message, buildResult: 'UNSTABLE', stageResult: 'UNSTABLE')`.",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "A message that will be logged to the console if an error is caught. The message will also be associated with the stage result and may be shown in visualizations.",
          "isOptional": false
        },
        {
          "name": "catchInterruptions",
          "type": "boolean",
          "values": [],
          "description": "If true, certain types of exceptions that are used to interrupt the flow of execution for Pipelines will be caught and handled by the step. If false, those types of exceptions will be caught and immediately rethrown. Examples of these types of exceptions include those thrown when a build is manually aborted through the UI and those thrown by the `timeout` step.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "warnings",
      "title": "warnings: [Deprecated] Scan for compiler warnings",
      "description": "",
      "parameters": [
        {
          "name": "canComputeNew",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canResolveRelativePaths",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "canRunOnFailed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "categoriesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "consoleParsers",
          "type": "Nested",
          "values": [
            "parserName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultEncoding",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failedTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "healthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includePattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "messagesPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "parserConfigurations",
          "type": "Nested",
          "values": [
            "pattern",
            "parserName"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "shouldDetectModules",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdLimit",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unHealthy",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableNewNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalAll",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalHigh",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalLow",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unstableTotalNormal",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useDeltaValues",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "usePreviousBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useStableBuildAsReference",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "warnings"
    },
    {
      "command": "wattspeed",
      "title": "wattspeed: Wattspeed",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "projects",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "wattspeed"
    },
    {
      "command": "wavefrontTimedCall",
      "title": "wavefrontTimedCall: Sets up wavefront closure",
      "description": "",
      "parameters": [
        {
          "name": "metricName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "wavefront"
    },
    {
      "command": "websocketin",
      "title": "websocketin: Websocket.in Notifier",
      "description": "This plugin sends a websocket message when the build\n \n  \n* Is about to start (phase=STARTED)\n\n  \n* In post build (phase=COMPLETED)\n\n  All fields support the usage of variables.\n \n\n\n \n\n Data is sent as websocket text in json format. It is a subset of the [Notification plugin](https://plugins.jenkins.io/notification) and looks as follow:\n \n\n\n \n```groovy\n{\n    \"name\": \"asgard\",\n    \"url\": \"job/asgard/\",\n    \"build\": {\n        \"full_url\": \"http://localhost:8080/job/asgard/18/\",\n        \"number\": 18,\n        \"phase\": \"COMPLETED\",\n        \"status\": \"SUCCESS\",\n        \"url\": \"job/asgard/18/\",\n    }\n}\n\n```\n\n \n\n **Note: For phase=\"STARTED\" the build status of the previous build is given (if available)**",
      "parameters": [
        {
          "name": "url",
          "type": "String",
          "values": [],
          "description": "https://www.websocket.in let's you define an own websocket url which is in the form of:\n \n\n\n \n\n wss://connect.websocket.in/**YOUR_CHANNEL_ID**?room_id=**YOUR_ROOM_ID**\n \n\n\n \n\n **Note: While wss:// is supported, your jenkins instance might reject the connection.** Make sure you have a valid certificate store path given and that the connection to the given host is trusted. Workaround (not recommended): use the unencrypted ws:// Url instead.",
          "isOptional": false
        },
        {
          "name": "startMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "additionalHttpHeaders",
          "type": "String",
          "values": [],
          "description": "The additional http headers must follow a format that is recognized by the class java.util.Properties.\n \n\n Check [Properties file format - Oracle](https://docs.oracle.com/cd/E23095_01/Platform.93/ATGProgGuide/html/s0204propertiesfileformat01.html) for more information.",
          "isOptional": false
        }
      ],
      "plugin": "websocketin-notification"
    },
    {
      "command": "whitesource",
      "title": "whitesource: Scan dependencies and update WhiteSource",
      "description": "",
      "parameters": [
        {
          "name": "jobCheckPolicies",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobForceUpdate",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobApiToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jobUserKey",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "product",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "productVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectToken",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "libIncludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "libExcludes",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "requesterEmail",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "whitesource"
    },
    {
      "command": "winRMClient",
      "title": "winRMClient: WinRM Client",
      "description": "",
      "parameters": [
        {
          "name": "hostName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "winRMOperations",
          "type": "Nested",
          "values": [
            "invokeCommand",
            "sendFile"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "winrm-client"
    },
    {
      "command": "withAWS",
      "title": "withAWS: set AWS settings for nested block",
      "description": "The `withAWS` step provides authorization for the nested steps. You can provide region and profile information or let Jenkins assume a role in another or the same AWS account. You can mix all parameters in one `withAWS` block.",
      "parameters": [
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "Use standard Jenkins UsernamePassword credentials. Note: the username should be your Access Key ID, and the password should be the Secret Access Key.",
          "isOptional": true
        },
        {
          "name": "duration",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "endpointUrl",
          "type": "String",
          "values": [],
          "description": "The AWS endpoint-url.",
          "isOptional": true
        },
        {
          "name": "externalId",
          "type": "String",
          "values": [],
          "description": "(optional) The external ID.",
          "isOptional": true
        },
        {
          "name": "federatedUserId",
          "type": "String",
          "values": [],
          "description": "(optional) The federated user ID. It generates a set of temporary credentials and allows you to push a federated user id into cloud trail for auditing.",
          "isOptional": true
        },
        {
          "name": "iamMfaToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "policy",
          "type": "String",
          "values": [],
          "description": "(optional) An additional policy that is to be combined with the policy associated with the role.",
          "isOptional": true
        },
        {
          "name": "principalArn",
          "type": "String",
          "values": [],
          "description": "Account principal ARN Note: Only use when pass a samlAssertion parameter",
          "isOptional": true
        },
        {
          "name": "profile",
          "type": "String",
          "values": [],
          "description": "Use this profile information from ~/.aws/config.",
          "isOptional": true
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "The AWS region.",
          "isOptional": true
        },
        {
          "name": "role",
          "type": "String",
          "values": [],
          "description": "Assume role information (<i>Role Account</i> is optional; it uses current account as default, <i>External ID</i> is optional).",
          "isOptional": true
        },
        {
          "name": "roleAccount",
          "type": "String",
          "values": [],
          "description": "(optional) The account to use. This uses current account by default.",
          "isOptional": true
        },
        {
          "name": "roleSessionName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "samlAssertion",
          "type": "String",
          "values": [],
          "description": "SAML assertion, given by your IdP. Must be used with role, roleAccount and principalArn parameters Note: Will use this SAML assertion to make a assumeRole request to AWS for authentication. Any credentials passed will be ignored.",
          "isOptional": true
        },
        {
          "name": "useNode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-aws"
    },
    {
      "command": "withAWSParameterStore",
      "title": "withAWSParameterStore: With AWS Parameter Store",
      "description": "Populates build environment variables with entries from the AWS Parameter Store. Advanced configuration allows the use of AWS Parameter Store hierarchies.",
      "parameters": [
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "AWS credentials used for accessing AWS Parameter Store. If set to --none--, uses the default credentials provider chain to search for credentials in the environment, file system or associated IAM role.",
          "isOptional": true
        },
        {
          "name": "namePrefixes",
          "type": "String",
          "values": [],
          "description": "Filters the parameter names by prefix - only active if **Path** is empty.",
          "isOptional": true
        },
        {
          "name": "naming",
          "type": "String",
          "values": [],
          "description": "How the environment variable is derived from the path:\n\n \n* **basename** - anything after the last '/' is the variable name (e.g. with path /service, parameter /service/app/param becomes PARAM)\n\n \n* **relative** - anything after the path is the variable name (e.g. with path /service, parameter /service/app/param becomes APP_PARAM)\n\n \n* **absolute** - the full path with parameter name is the variable name (e.g. with path /service, parameter /service/app/param becomes SERVICE_APP_PARAM)",
          "isOptional": true
        },
        {
          "name": "path",
          "type": "String",
          "values": [],
          "description": "A path hierarchy to search. If your AWS Parameter Store entries are stored as paths /path1/path2/parameter, then you can filter on a hierarchy such as /path1 or /path1/path2.",
          "isOptional": true
        },
        {
          "name": "recursive",
          "type": "boolean",
          "values": [],
          "description": "If checked and **Path** is set to a hierarchy, the full hierarchy is searched. Otherwise only the parameters at the root of the hierarchy are exposed.",
          "isOptional": true
        },
        {
          "name": "regionName",
          "type": "String",
          "values": [],
          "description": "The AWS region to use when querying AWS Parameter Store.",
          "isOptional": true
        }
      ],
      "plugin": "aws-parameter-store"
    },
    {
      "command": "withAnt",
      "title": "withAnt: With Ant",
      "description": "Prepares an environment for Jenkins to run builds using Apache Ant. Annotates Ant-specific output to display executed targets. Optionally sets up an Ant and/or JDK installation.",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "Name of an Ant installation to use so that `ant` will be in the path.",
          "isOptional": true
        },
        {
          "name": "jdk",
          "type": "String",
          "values": [],
          "description": "Name of an Java installation to use when running Ant.",
          "isOptional": true
        }
      ],
      "plugin": "ant"
    },
    {
      "command": "withAzureKeyvault",
      "title": "withAzureKeyvault: Bind credentials in Azure Key Vault to variables",
      "description": "",
      "parameters": [
        {
          "name": "azureKeyVaultSecrets",
          "type": "Nested",
          "values": [
            "secretType",
            "name",
            "envVariable",
            "version"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "applicationIDOverride",
          "type": "String",
          "values": [],
          "description": "OPTIONAL: Override the configured application ID to access Key Vault.",
          "isOptional": true
        },
        {
          "name": "applicationSecretOverride",
          "type": "String",
          "values": [],
          "description": "OPTIONAL: Set an Application Secret directly\n \n\n **It is recommended to use the CredentialID field instead.**",
          "isOptional": true
        },
        {
          "name": "credentialIDOverride",
          "type": "String",
          "values": [],
          "description": "Specify the Credential ID used for accessing KeyVault.\n \n  \n* Must be a **Microsoft Azure Service Principal** or **Managed Identities for Azure Resources**",
          "isOptional": true
        },
        {
          "name": "keyVaultURLOverride",
          "type": "String",
          "values": [],
          "description": "OPTIONAL: Override the configured KeyVault URL (e.g. https://YOURKEYVAULT.vault.azure.net)",
          "isOptional": true
        },
        {
          "name": "tenantIdOverride",
          "type": "String",
          "values": [],
          "description": "Override the tenantId, only used if you're explicitly providing an override client ID and secret.",
          "isOptional": true
        }
      ],
      "plugin": "azure-keyvault"
    },
    {
      "command": "withChecks",
      "title": "withChecks: Inject checks properties into its closure",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "checks-api"
    },
    {
      "command": "withContext",
      "title": "withContext: Use contextual object from internal APIs within a block",
      "description": "Wraps a block in a contextual object as in `BodyInvoker.withContext`; cf. `getContext`. Takes a single `context` argument plus a block. Example: \n\n\n```groovy\nwithContext(new MyConsoleLogFilter()) {\n    sh 'process'\n}\n```\n\n\n Automatically merges its argument with contextual objects in the case of `ConsoleLogFilter`, `LauncherDecorator`, and `EnvironmentExpander`. \n\n\n For use from trusted code, such as global libraries, which can manipulate internal Jenkins APIs. \n\n\n **Do not** attempt to pass objects defined in Groovy; only Java-defined objects are supported. Really you should avoid using this and `getContext` and just define a `Step` in a plugin instead.",
      "parameters": [
        {
          "name": "context",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "withCoverityEnv",
      "title": "withCoverityEnv: Binds Coverity Tool path and Coverity Connect Instance information to Environment Variables",
      "description": "This step will use the specified Coverity Tool Installation and add the bin/ directory to PATH for any steps that are wrapped. This will allow the pipeline script to access Coverity tools (like cov-build, cov-analyze, and cov-commit-defects) directly from a script step (such as a Shell Script or Windows Batch Script). Also, this step optionally allows users to bind the Coverity Connect Instance information (Host/Port/Credentials) to environment variables.",
      "parameters": [
        {
          "name": "coverityToolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "connectInstance",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "hostVariable",
          "type": "String",
          "values": [],
          "description": "Name of an environment variable to be set to the host of Coverity Connect during the build. Default environment variable name is \"COVERITY_HOST\" if not specified.",
          "isOptional": true
        },
        {
          "name": "passwordVariable",
          "type": "String",
          "values": [],
          "description": "Name of an environment variable to be set to the password for connection to Coverity Connect during the build. Default environment variable name is \"COVERITY_PASSPHRASE\" if not specified. The value of this environment variable will be masked with \"******\" in the Console Output of the build.",
          "isOptional": true
        },
        {
          "name": "portVariable",
          "type": "String",
          "values": [],
          "description": "Name of an environment variable to be set to the port for connection to Coverity Connect during the build. Default environment variable name is \"COVERITY_PORT\" if not specified.",
          "isOptional": true
        },
        {
          "name": "usernameVariable",
          "type": "String",
          "values": [],
          "description": "Name of an environment variable to be set to the username for connection to Coverity Connect during the build. Default environment variable name is \"COV_USER\" if not specified.",
          "isOptional": true
        }
      ],
      "plugin": "coverity"
    },
    {
      "command": "withCoverityEnvironment",
      "title": "withCoverityEnvironment: Inject Coverity environment into the build process",
      "description": "",
      "parameters": [
        {
          "name": "coverityInstanceUrl",
          "type": "String",
          "values": [],
          "description": "Specify which Synopsys Coverity connect instance to run this job against.",
          "isOptional": false
        },
        {
          "name": "configureChangeSetPatterns",
          "type": "Nested",
          "values": [
            "changeSetExclusionPatterns",
            "changeSetInclusionPatterns"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "createMissingProjectsAndStreams",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the Coverity project.\n\n The resulting project name is stored in the $COV_PROJECT environment variable, and will affect both the full and incremental analysis.",
          "isOptional": true
        },
        {
          "name": "streamName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the Coverity stream that you would like to use for the commands.\n\n The resulting stream name is stored in the $COV_STREAM environment variable, and will affect both the full and incremental analysis.",
          "isOptional": true
        },
        {
          "name": "viewName",
          "type": "String",
          "values": [],
          "description": "Specify the name of the Coverity view that you would like to check for issues.\n\n The resulting view name is stored in the $COV_VIEW environment variable, and affects checking for issues in both the full and incremental analysis, if configured.",
          "isOptional": true
        }
      ],
      "plugin": "synopsys-coverity"
    },
    {
      "command": "withCredentials",
      "title": "withCredentials: Bind credentials to variables",
      "description": "Allows various kinds of credentials (secrets) to be used in idiosyncratic ways. (Some steps explicitly ask for credentials of a particular kind, usually as a `credentialsId` parameter, in which case this step is unnecessary.) Each binding will define an environment variable active within the scope of the step. You can then use them directly from any other steps that expect environment variables to be set: \n\n\n```groovy\nnode {\n  withCredentials([usernameColonPassword(credentialsId: 'mylogin', variable: 'USERPASS')]) {\n    sh '''\n      set +x\n      curl -u \"$USERPASS\" https://private.server/ &gt; output\n    '''\n  }\n}\n```\n\n\n As another example (use <i>Snippet Generator</i> to see all options): \n\n\n```groovy\nnode {\n  withCredentials([string(credentialsId: 'mytoken', variable: 'TOKEN')]) {\n    sh '''\n      set +x\n      curl -H \"Token: $TOKEN\" https://some.api/\n    '''\n  }\n}\n```\n\n\n Note the use of <em>single</em> quotes to define the `script` (implicit parameter to `sh`) in Groovy above. You want the secret to be expanded by the shell as an environment variable. The following idiom is potentially less secure, as the secret is interpolated by Groovy and so (for example) typical operating system process listings will accidentally disclose it: \n\n\n```groovy\nnode {\n  withCredentials([string(credentialsId: 'mytoken', variable: 'TOKEN')]) {\n    sh /* WRONG! */ \"\"\"\n      set +x\n      curl -H 'Token: $TOKEN' https://some.api/\n    \"\"\"\n  }\n}\n```\n\n\n At least on Linux, environment variables can be obtained by other processes running in the same account, so you should not run a job which uses secrets on the same node as a job controlled by untrusted parties. In any event, you should always prefer expansion as environment variables to inclusion in the command, since Jenkins visualizations such as Blue Ocean will <em>attempt</em> to detect step parameters containing secrets and refuse to display them. \n\n\n The secret(s) will be masked (`****`) in case they are printed to the build log. This prevents you from <em>accidentally</em> disclosing passwords and the like via the log. (Bourne shell `set +x`, or Windows batch `@echo off`, blocks secrets from being displayed in echoed commands; but build tools in debug mode might dump all environment variables to standard output/error, or poorly designed network clients might display authentication, etc.) The masking could of course be trivially circumvented; anyone permitted to configure a job or define Pipeline steps is assumed to be trusted to use any credentials in scope however they like. \n\n\n Beware that certain tools mangle secrets when displaying them. As one example, Bash (as opposed to Ubuntu’s plainer Dash) does so with text containing `'` in echo mode: \n\n\n```groovy\n$ export PASS=foo\"'\"bar\n$ env|fgrep PASS\nPASS=foo'bar\n$ sh -xc 'echo $PASS'\n+ echo foo'bar\nfoo'bar\n$ bash -xc 'echo $PASS'\n+ echo 'foo'\\''bar'\nfoo'bar\n\n```\n\n\n Mangled secrets can only be detected on a best-effort basis. By default, Jenkins will attempt to mask mangled secrets as they would appear in output of Bourne shell, Bash, Almquist shell and Windows batch. Without these strategies in place, mangled secrets would appear in plain text in log files. In the example above, this would result in: \n\n\n```groovy\n+ echo 'foo'\\''bar'\n****\n```\n\n\n This particular issue can be more safely prevented by turning off echo with `set +x` or avoiding the use of shell metacharacters in secrets. \n\n\n For bindings which store a secret file, beware that \n\n\n```groovy\nnode {\n  dir('subdir') {\n    withCredentials([file(credentialsId: 'secret', variable: 'FILE')]) {\n      sh 'use $FILE'\n    }\n  }\n}\n```\n\n\n is not safe, as `$FILE` might be inside the workspace (in `subdir@tmp/secretFiles/`), and thus visible to anyone able to browse the job’s workspace. If you need to run steps in a different directory than the usual workspace, you should instead use \n\n\n```groovy\nnode {\n  withCredentials([file(credentialsId: 'secret', variable: 'FILE')]) {\n    dir('subdir') {\n      sh 'use $FILE'\n    }\n  }\n}\n```\n\n\n to ensure that the secrets are outside the workspace; or choose a different workspace entirely: \n\n\n```groovy\nnode {\n  ws {\n    withCredentials([file(credentialsId: 'secret', variable: 'FILE')]) {\n      sh 'use $FILE'\n    }\n  }\n}\n```\n\n\n Also see the [Limitations of Credentials Masking](https://jenkins.io/blog/2019/02/21/credentials-masking/) blog post for more background.",
      "parameters": [
        {
          "name": "bindings",
          "type": "Nested",
          "values": [
            "$class: 'AmazonWebServicesCredentialsBinding'",
            "token",
            "$class: 'AwsBucketCredentialsBinding'",
            "certificate",
            "ConjurSecretApplianceCredentials",
            "conjurSecretCredential",
            "conjurSecretUsername",
            "conjurSecretUsernameSSHKey",
            "dockerCert",
            "file",
            "$class: 'KeychainPasswordAndPathBinding'",
            "kubeconfigContent",
            "kubeconfigFile",
            "OSFBuilderSuiteOpenCommerceAPICredentials",
            "sshUserPrivateKey",
            "string",
            "OSFBuilderSuiteTwoFactorAuthCredentials",
            "usernameColonPassword",
            "usernamePassword",
            "$class: 'VaultSSHUserPrivateKeyBinding'",
            "vaultString",
            "$class: 'VaultTokenCredentialBinding'",
            "$class: 'VaultUsernamePasswordCredentialBinding'",
            "zip",
            "azureServicePrincipal",
            "azureStorage"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "credentials-binding"
    },
    {
      "command": "withDockerContainer",
      "title": "withDockerContainer: Run build steps inside a Docker container",
      "description": "Normally used implicitly by method calls on the `docker` global variable. Takes an image ID or symbolic name <em>which must already have been pulled locally</em> and starts a container based on that image. Runs all nested `sh` steps inside that container. The workspace is mounted read-write into the container.",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "args",
          "type": "String",
          "values": [],
          "description": "Any other arguments to pass to `docker run`.",
          "isOptional": true
        },
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "docker-workflow"
    },
    {
      "command": "withDockerRegistry",
      "title": "withDockerRegistry: Sets up Docker registry endpoint",
      "description": "Normally used implicitly by method calls on the `docker` global variable. Sets up connection details for a Docker registry.",
      "parameters": [
        {
          "name": "registry",
          "type": "Nested",
          "values": [
            "url",
            "credentialsId"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "toolName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "docker-workflow"
    },
    {
      "command": "withDockerServer",
      "title": "withDockerServer: Sets up Docker server endpoint",
      "description": "Normally used implicitly by method calls on the `docker` global variable. Sets up connection details for a Docker server.",
      "parameters": [
        {
          "name": "server",
          "type": "Nested",
          "values": [
            "uri",
            "credentialsId"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "docker-workflow"
    },
    {
      "command": "withDotNet",
      "title": "withDotNet: With .NET",
      "description": "Prepares an environment for Jenkins to run build steps using a .NET SDK's `dotnet` utility.",
      "parameters": [
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "Name of a .NET SDK to use so that `dotnet` will be in the path.",
          "isOptional": true
        },
        {
          "name": "specificSdkVersion",
          "type": "boolean",
          "values": [],
          "description": "Depending on the platform, the `dotnet` executable may use the most recent SDK available on the system, even when `PATH` is set up to find an older SDK deployment first; see [this page](https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version) for more information.\n \n\n By enabling this option, the configured SDK home directory will be checked, and if it only includes a single SDK deployment, a `global.json` file will be created in the current directory, referencing that SDK version and disabling roll-forward.\n\n\n\n\n <em> **Note:** This will silently overwrite any `global.json` already present in the current directory. </em>",
          "isOptional": true
        }
      ],
      "plugin": "dotnet-sdk"
    },
    {
      "command": "withEnv",
      "title": "withEnv: Set environment variables",
      "description": "Sets one or more environment variables within a block. These are available to any external processes spawned within that scope. For example:\n \n\n\n \n```groovy\nnode {\n  withEnv(['MYTOOL_HOME=/usr/local/mytool']) {\n    sh '$MYTOOL_HOME/bin/start'\n  }\n}\n\n```\n\n \n(Note that here we are using single quotes in Groovy, so the variable expansion is being done by the Bourne shell, not Jenkins.) \n\n \nSee the documentation for the `env` singleton for more information on environment variables.",
      "parameters": [
        {
          "name": "overrides",
          "type": "String",
          "values": [],
          "description": "A list of environment variables to set, each in the form `VARIABLE=value` or `VARIABLE=` to unset variables otherwise defined. You may also use the syntax `PATH+WHATEVER=/something` to prepend `/something` to `$PATH`.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "withFileParameter",
      "title": "withFileParameter: Bind file parameter",
      "description": "Binds an (alternative) file parameter to a local file near the workspace for convenience. Parameters can be retrieved in other ways, depending on the specific parameter type.\n\n\n\n\n \nHow to use it in a declarative pipeline:\n\n \n```groovy\npipeline {\n  agent any\n  parameters {\n    base64File 'THEFILE'\n  }\n  stages {\n    stage('Example') {\n      steps {\n        withFileParameter('THEFILE') {\n          sh 'cat $THEFILE'\n        }\n      }\n    }\n  }\n}\n  \n```\n\n\n\n\n\n  By default, there will be an error if there is no parameter for the build but you can ignore this error using the parameter attribute `allowNoFile`. In this case your Pipeline must take into account the possibility that the file does not exist:\n \n```groovy\npipeline {\n  agent any\n  parameters {\n    base64File 'THEFILE'\n  }\n  stages {\n    stage('Example') {\n      steps {\n        withFileParameter(name:'THEFILE', allowNoFile: true) {\n          sh 'if [ -f \"$THEFILE\" ]; then cat $THEFILE; fi'\n        }\n      }\n    }\n  }\n}\n  \n```",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Name of the parameter. Within the wrapper, this environment variable will be bound to the path of a temporary file.",
          "isOptional": false
        },
        {
          "name": "allowNoFile",
          "type": "boolean",
          "values": [],
          "description": "By default, an error will be thrown if there is no file uploaded to the build. With this option, the build will proceed, and the environment variable will simply not be defined.",
          "isOptional": true
        }
      ],
      "plugin": "file-parameters"
    },
    {
      "command": "withFolderProperties",
      "title": "withFolderProperties: A step to retrieve folder properties",
      "description": "",
      "parameters": [],
      "plugin": "folder-properties"
    },
    {
      "command": "withFolderProperties",
      "title": "withFolderProperties: Folder Properties",
      "description": "Help for Folder Properties Build Wrapper   Inherit all properties defined in the <em>Folder Properties</em> section of the parent folder's configuration -or in that of any of its ancestor folders.",
      "parameters": [],
      "plugin": "folder-properties"
    },
    {
      "command": "withGradle",
      "title": "withGradle: WithGradle",
      "description": "",
      "parameters": [],
      "plugin": "gradle"
    },
    {
      "command": "withKafkaLog",
      "title": "withKafkaLog: Kafka Log Build Wrapper",
      "description": "",
      "parameters": [
        {
          "name": "kafkaServers",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "kafkaTopic",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "metadata",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kafkalogs"
    },
    {
      "command": "withKubeConfig",
      "title": "withKubeConfig: Configure Kubernetes CLI (kubectl)",
      "description": "Configure Kubernetes client (kubectl) so it can be used in the build to run Kubernetes commands",
      "parameters": [
        {
          "name": "caCertificate",
          "type": "String",
          "values": [],
          "description": "The certificate of the certificate authority (CA). It's used to validate the API server certificate.\n \nLeaving this field empty will skip the certificate verification.",
          "isOptional": true
        },
        {
          "name": "clusterName",
          "type": "String",
          "values": [],
          "description": "Cluster name to use or to switch to.",
          "isOptional": true
        },
        {
          "name": "contextName",
          "type": "String",
          "values": [],
          "description": "Context name to use or to switch to.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "Default namespace.",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "URL of the Kubernetes API endpoint.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-cli"
    },
    {
      "command": "withKubeCredentials",
      "title": "withKubeCredentials: Configure Kubernetes CLI (kubectl) with multiple credentials",
      "description": "",
      "parameters": [
        {
          "name": "kubectlCredentials",
          "type": "Nested",
          "values": [
            "caCertificate",
            "clusterName",
            "contextName",
            "credentialsId",
            "namespace",
            "serverUrl"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-cli"
    },
    {
      "command": "withMaven",
      "title": "withMaven: Provide Maven environment",
      "description": "Configures maven environment to use within a pipeline job by calling `sh mvn` or `bat mvn`. The selected maven installation will be configured and prepended to the path.",
      "parameters": [
        {
          "name": "globalMavenSettingsConfig",
          "type": "String",
          "values": [],
          "description": "Select a global maven settings element from File Config Provider. The settings element in the `settings.xml` file contains elements used to define values which configure Maven execution in various ways, like the `pom.xml`, but should not be bundled to any specific project, or distributed to an audience. These include values such as the local repository location, alternate remote repository servers, and authentication information.\n \n see also: [`settings.xml` reference](http://maven.apache.org/settings.html)",
          "isOptional": true
        },
        {
          "name": "globalMavenSettingsFilePath",
          "type": "String",
          "values": [],
          "description": "Specify a global maven settings.xml file. The specified path can be absolute or relative to the workspace. Shell-like environment variable expansions work in this field, by using the ${VARIABLE} syntax. The file existence is checked on the build agent, if found, that one is used. If not found it will be checked on the master. The settings element in the `settings.xml` file contains elements used to define values which configure Maven execution in various ways, like the `pom.xml`, but should not be bundled to any specific project, or distributed to an audience. These include values such as the local repository location, alternate remote repository servers, and authentication information.\n \n\n There are two locations where a `settings.xml` file per default may live:\n \n  \n* The Maven install - default: `$M2_HOME/conf/settings.xml`\n\n  \n* A user's install - default: `${user.home}/.m2/settings.xml`\n\n  The former settings.xml are also called global settings, the latter settings.xml are referred to as user settings. If both files exists, their contents gets merged, with the user-specific settings.xml being dominant.\n \n see also: [`settings.xml` reference](http://maven.apache.org/settings.html)",
          "isOptional": true
        },
        {
          "name": "jdk",
          "type": "String",
          "values": [],
          "description": "Select a JDK installation. If auto-install is disabled, the JDK will be downloaded and made available for the pipeline job.\n \n **Note**: This option does not work with `docker.image('xxx').inside` or `container('xxx')`, the preinstalled JDK on the docker image will be used.",
          "isOptional": true
        },
        {
          "name": "maven",
          "type": "String",
          "values": [],
          "description": "Select a Maven installation. If auto-install is disabled, maven will be downloaded and made available for the pipeline job.\n \n **Note**: This option does not work with `docker.image('xxx').inside` or `container('xxx')`, the preinstalled maven on the docker image will be used.",
          "isOptional": true
        },
        {
          "name": "mavenLocalRepo",
          "type": "String",
          "values": [],
          "description": "Specify a custom local repository path. Shell-like environment variable expansions work with this field, by using the ${VARIABLE} syntax. Normally, Jenkins uses the local Maven repository as determined by Maven, by default `~/.m2/repository` and can be overridden by &lt;localRepository&gt; in `~/.m2/settings.xml` (see [Configuring your Local Repository](https://maven.apache.org/guides/mini/guide-configuring-maven.html#Configuring_your_Local_Repository)))\n \n This normally means that all the jobs that are executed on the same node shares a single Maven repository. The upside of this is that you can save the disk space, the downside is that the repository is not multi process safe and having multiple builds run concurrently can corrupt it. Additionally builds could interfere with each other by sharing incorrect or partially built artifacts. For example, you might end up having builds incorrectly succeed, just because your have all the dependencies in your local repository, despite that fact that none of the repositories in POM might have them. \n\n \n By using this option, Jenkins will tell Maven to use a custom path for the build as the local Maven repository by using `-Dmaven.repo.local` \n\n If specified as a relative path then this value well be resolved against the workspace root and not the current working directory. \n\n ie. if `.repository` is specified then `$WORKSPACE/.repository` will be used. \n\n \n This means each job could get its own isolated Maven repository just for itself. It fixes the above problems, at the expense of additional disk space consumption. \n\n \n When using this option, consider setting up a Maven artifact manager so that you don't have to hit remote Maven repositories too often.",
          "isOptional": true
        },
        {
          "name": "mavenOpts",
          "type": "String",
          "values": [],
          "description": "Specify JVM specific options needed when launching Maven as an external process, these are not maven specific options. See: [Java Options](https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html#CBBIJCHG)\n \n Shell-like environment variable expansions work in this field, by using the `${VARIABLE}` syntax.",
          "isOptional": true
        },
        {
          "name": "mavenSettingsConfig",
          "type": "String",
          "values": [],
          "description": "Select a maven settings element from File Config Provider. The settings element in the `settings.xml` file contains elements used to define values which configure Maven execution in various ways, like the `pom.xml`, but should not be bundled to any specific project, or distributed to an audience. These include values such as the local repository location, alternate remote repository servers, and authentication information.\n \n see also: [`settings.xml` reference](http://maven.apache.org/settings.html)",
          "isOptional": true
        },
        {
          "name": "mavenSettingsFilePath",
          "type": "String",
          "values": [],
          "description": "Specify a maven settings.xml file. The specified path can be absolute or relative to the workspace. Shell-like environment variable expansions work in this field, by using the ${VARIABLE} syntax. The file existence is checked on the build agent, if found, that one is used. If not found it will be checked on the master. The settings element in the `settings.xml` file contains elements used to define values which configure Maven execution in various ways, like the `pom.xml`, but should not be bundled to any specific project, or distributed to an audience. These include values such as the local repository location, alternate remote repository servers, and authentication information.\n \n\n There are two locations where a `settings.xml` file per default may live:\n \n  \n* The Maven install - default: `$M2_HOME/conf/settings.xml`\n\n  \n* A user's install - default: `${user.home}/.m2/settings.xml`\n\n  The former settings.xml are also called global settings, the latter settings.xml are referred to as user settings. If both files exists, their contents gets merged, with the user-specific settings.xml being dominant.\n \n see also: [`settings.xml` reference](http://maven.apache.org/settings.html)",
          "isOptional": true
        },
        {
          "name": "options",
          "type": "Nested",
          "values": [
            "concordionPublisher",
            "dependenciesFingerprintPublisher",
            "findbugsPublisher",
            "artifactsPublisher",
            "invokerPublisher",
            "jgivenPublisher",
            "jacocoPublisher",
            "junitPublisher",
            "mavenLinkerPublisher",
            "pipelineGraphPublisher",
            "spotbugsPublisher",
            "openTasksPublisher"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "publisherStrategy",
          "type": "Enum",
          "values": [
            "IMPLICIT",
            "EXPLICIT"
          ],
          "description": "<table>\n  <tbody>\n   <tr>\n <td>`IMPLICIT`</td>\n <td>All Maven publishers are implicitly enabled and used, even if they are not configured in \"`withMaven(options:...)`\".</td>\n   </tr>\n   <tr>\n <td>`EXPLICIT`</td>\n <td>Only the Maven publishers explicitly configured in \"`withMaven(options:...)`\" are used.</td>\n   </tr>\n  </tbody>\n </table>",
          "isOptional": true
        },
        {
          "name": "tempBinDir",
          "type": "String",
          "values": [],
          "description": "Specify a custom temporary binaries directory. Allow to have a constant path to the maven binaries, then a constant environment for reproducible compilations. Some tools detect an environment change as a sources change, which will retrigger the compilation of all sources.",
          "isOptional": true
        },
        {
          "name": "traceability",
          "type": "boolean",
          "values": [],
          "description": "Should additional information be added to the script execution.\n \n **Note**: This option adds `--show-version` to the maven execution and marks the beginning of the maven wrapper script with `----- withMaven Wrapper script -----`.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-maven"
    },
    {
      "command": "withNPM",
      "title": "withNPM: Provide NPM environment",
      "description": "Configures npm environment to use within a pipeline job by calling sh npm or bat npm. The selected npmrc will be configured and placed in the path so as to override the user and global settings.",
      "parameters": [
        {
          "name": "npmrcConfig",
          "type": "String",
          "values": [],
          "description": "Select an npmrc from File Config Provider. The `npmrc` contains configuration values for npm. npm performs a lookup order starting in the current directory, then user, then global. By choosing a specific provider, individual builds will be able to override settings and have them managed centrally as a config file provider.\n \n see also: [`npmrc` reference](https://docs.npmjs.com/files/npmrc)",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-npm"
    },
    {
      "command": "withOBS",
      "title": "withOBS: set OBS settings for nested block",
      "description": "The `withOBS` step provides authorization for the nested steps. You can provide region. `withOBS` block.",
      "parameters": [
        {
          "name": "credentials",
          "type": "String",
          "values": [],
          "description": "Use standard Jenkins UsernamePassword credentials. Note: the username should be your Access Key ID, and the password should be the Secret Access Key.",
          "isOptional": true
        },
        {
          "name": "endpointUrl",
          "type": "String",
          "values": [],
          "description": "The OBS endpoint-url.",
          "isOptional": true
        },
        {
          "name": "region",
          "type": "String",
          "values": [],
          "description": "The OBS region.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-huaweicloud-plugin"
    },
    {
      "command": "withPod",
      "title": "withPod: Run build steps in a MyPod",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "containers",
          "type": "Nested",
          "values": [
            "name",
            "image",
            "alwaysPullImage",
            "args",
            "command",
            "envVars",
            "livenessProbe",
            "ports",
            "privileged",
            "resourceLimitCpu",
            "resourceLimitEphemeralStorage",
            "resourceLimitMemory",
            "resourceRequestCpu",
            "resourceRequestEphemeralStorage",
            "resourceRequestMemory",
            "runAsGroup",
            "runAsUser",
            "shell",
            "ttyEnabled",
            "workingDir"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "envVars",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "volumes",
          "type": "Nested",
          "values": [
            "configMapVolume",
            "emptyDirVolume",
            "hostPathVolume",
            "nfsVolume",
            "persistentVolumeClaim",
            "secretVolume"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "serviceAccount",
          "type": "String",
          "values": [],
          "description": "The service account to use.",
          "isOptional": false
        },
        {
          "name": "nodeSelector",
          "type": "String",
          "values": [],
          "description": "Specify which nodes the pod should operate on by providing a comma separated list of node labels: label1=value1,label2=value2.",
          "isOptional": false
        },
        {
          "name": "workingDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "labels",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "kubernetes-pipeline-steps"
    },
    {
      "command": "withPythonEnv",
      "title": "withPythonEnv: Code Block",
      "description": "Wraps a block in a Python virtualenv. `pysh` or `pybat` steps are deprecated, and are simply copies or `sh` and `bat` respectively. \n\n\nExample:\n\n\n```groovy\nwithPythonEnv('python3') {\n    sh 'python --version'\n}\n```\n\n\n The argument supplied to `withPythonEnv` is the name of the virtualenv to make available to any `sh` or `bat` steps called within the block. \n\n\n Initially, `withPythonEnv` tries to match the string passed to it to a tool name. Currently, this means examining the installed tools for ShiningPanada. If the string matches an installed ShiningPanda Python tool instance, the virtualenv within that block is generated from that ShiningPanda tool. \n\n\n Next, we attempt to match the string against an existing virtualenv directory. If we can find an existing virtualenv directory, we utilize that for the `withPythonEnv` block. \n\n\n Otherwise, the text is treated \"as-is\". You can pass \"python\" to use the default Python installation of the node that the job runs on, or specify an executable path.",
      "parameters": [
        {
          "name": "pythonInstallation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "pyenv-pipeline"
    },
    {
      "command": "withReliza",
      "title": "withReliza: RelizaBuildWrapper",
      "description": "",
      "parameters": [
        {
          "name": "onlyVersion",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "projectId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "reliza-integration"
    },
    {
      "command": "withSCM",
      "title": "withSCM: WithSCMStep",
      "description": "You can use the step execute sql scripts.",
      "parameters": [
        {
          "name": "scm",
          "type": "Nested",
          "values": [
            "$class: 'AWSCodePipelineSCM'",
            "accurev",
            "$class: 'BazaarSCM'",
            "$class: 'BitKeeperSCM'",
            "BbS",
            "$class: 'BlameSubversionSCM'",
            "$class: 'CCUCMScm'",
            "$class: 'CVSSCM'",
            "$class: 'ClearCaseSCM'",
            "$class: 'ClearCaseUcmBaselineSCM'",
            "$class: 'ClearCaseUcmSCM'",
            "$class: 'CloneWorkspaceSCM'",
            "$class: 'CmvcSCM'",
            "$class: 'ConfigurationRotator'",
            "$class: 'CvsProjectset'",
            "$class: 'DarcsScm'",
            "$class: 'DelegateSCM'",
            "$class: 'DimensionsSCM'",
            "$class: 'DrushMakefileSCM'",
            "$class: 'EndevorConfiguration'",
            "filesystem",
            "$class: 'FeatureBranchAwareMercurialSCM'",
            "$class: 'GeneXusServerSCM'",
            "$class: 'GitSCM'",
            "$class: 'HarvestSCM'",
            "$class: 'IspwConfiguration'",
            "$class: 'IspwContainerConfiguration'",
            "$class: 'MercurialSCM'",
            "$class: 'MergeBotUpdater'",
            "$class: 'MultiSCM'",
            "none",
            "$class: 'OpenShiftImageStreams'",
            "$class: 'PdsConfiguration'",
            "$class: 'PerforceSCM'",
            "perforce",
            "$class: 'PlasticSCM'",
            "$class: 'ProxySCM'",
            "$class: 'PvcsScm'",
            "$class: 'RTCScm'",
            "$class: 'SCLMSCM'",
            "$class: 'ShellScriptSCM'",
            "$class: 'SimpleClearCaseSCM'",
            "$class: 'StarTeamSCM'",
            "$class: 'StoreSCM'",
            "$class: 'SubversionSCM'",
            "$class: 'SurroundSCM'",
            "$class: 'SynergySCM'",
            "$class: 'TeamFoundationServerScm'",
            "$class: 'VaultSCM'",
            "$class: 'hudson.plugins.gradle_repo.RepoScm'",
            "$class: 'hudson.plugins.repo.RepoScm'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "withSandbox",
      "title": "withSandbox: Use sandbox in a specific scope",
      "description": "This step will execute the code in the closure in the context of a new sandbox. A CloudShell Sandbox will be created and set up prior to executing the code. The Sandbox Id will be accessible inside the closure as an environment variable, as seen in the example code. The Sandbox will always be ended after exiting the closure. NOTE: This step was designed for demo purposes only and not suitable for production usage.",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "The name of the blueprint to use for the new sandbox.",
          "isOptional": false
        },
        {
          "name": "maxDuration",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "params",
          "type": "String",
          "values": [],
          "description": "Blueprint Parameter in this syntax: \"input1=my_name; input2=30\"",
          "isOptional": false
        },
        {
          "name": "sandboxName",
          "type": "String",
          "values": [],
          "description": "Sandboxes will be created with this name instead of the blueprint name.",
          "isOptional": false
        },
        {
          "name": "sandboxDomain",
          "type": "String",
          "values": [],
          "description": "Sandbox will be created in the following domain.",
          "isOptional": false
        },
        {
          "name": "timeout",
          "type": "int",
          "values": [],
          "description": "Enter the number of minutes to wait until the Sandbox becomes available in case no resources are available to reserve it.",
          "isOptional": false
        }
      ],
      "plugin": "cloudshell-sandbox"
    },
    {
      "command": "withSonarQubeEnv",
      "title": "withSonarQubeEnv: Prepare SonarQube Scanner environment",
      "description": "",
      "parameters": [
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "envOnly",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "sonar"
    },
    {
      "command": "withTypetalk",
      "title": "withTypetalk: Notify Typetalk when the build starts/ends",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "topicId",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "notifyEnd",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyEndMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyStart",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "notifyStartMessage",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "typetalk"
    },
    {
      "command": "withVault",
      "title": "withVault: Vault Plugin",
      "description": "",
      "parameters": [
        {
          "name": "vaultSecrets",
          "type": "Nested",
          "values": [
            "path",
            "secretValues",
            "engineVersion"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "configuration",
          "type": "Nested",
          "values": [
            "engineVersion",
            "failIfNotFound",
            "prefixPath",
            "skipSslVerification",
            "timeout",
            "vaultCredential",
            "vaultCredentialId",
            "vaultNamespace",
            "vaultUrl"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "hashicorp-vault-plugin"
    },
    {
      "command": "worktileBuildRecord",
      "title": "worktileBuildRecord: Send build result to worktile",
      "description": "",
      "parameters": [
        {
          "name": "defaultSummary",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overviewPattern",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "worktileDeployRecord",
      "title": "worktileDeployRecord: Send deploy result to worktile",
      "description": "",
      "parameters": [
        {
          "name": "releaseName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "failOnError",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "isTagged",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "status",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "worktile"
    },
    {
      "command": "wrap",
      "title": "wrap: General Build Wrapper",
      "description": "This is a special step that allows to call build wrappers (also called \"Environment Configuration\" in freestyle or similar projects).\n Just select the wrapper to use from the dropdown list and configure it as needed. Everything inside the wrapper block is under its effect.\n \n\n \n\n Note that only Pipeline-compatible wrappers will be shown in the list.\n \n\n\n\n\nTo use this step you need to specify a delegate class, e.g wrap([$class: 'AnsiColorBuildWrapper']).",
      "parameters": [],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "wrap([$class: 'AnsiColorBuildWrapper'])",
      "title": "wrap([$class: 'AnsiColorBuildWrapper']): Color ANSI Console Output",
      "description": "",
      "parameters": [
        {
          "name": "colorMapName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "ansicolor"
    },
    {
      "command": "wrap([$class: 'BuildEnvironmentForCreateIssueOnFailure'])",
      "title": "wrap([$class: 'BuildEnvironmentForCreateIssueOnFailure']): [Zoho Sprints] Create Item On Failure",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Enter the item name.",
          "isOptional": false
        },
        {
          "name": "prefix",
          "type": "String",
          "values": [],
          "description": "Add a work item to Zoho Sprints. Format: PI#S2#R1 (P1 - Project Number, S2 - Sprint Number/Backlog ID, R1 - Release Number). Release Number is Optional",
          "isOptional": false
        },
        {
          "name": "description",
          "type": "String",
          "values": [],
          "description": "Brief your item here.",
          "isOptional": false
        },
        {
          "name": "type",
          "type": "String",
          "values": [],
          "description": "Item type can either be a bug or task.",
          "isOptional": false
        },
        {
          "name": "assignee",
          "type": "String",
          "values": [],
          "description": ": Enter the email address of the portal user. Here, the assignee should be in an active state. When you try to add an inactive user, the following operation will not reflect in Zoho Sprints.",
          "isOptional": false
        },
        {
          "name": "attachment",
          "type": "String",
          "values": [],
          "description": "Upload the build log file as an attachment.",
          "isOptional": false
        }
      ],
      "plugin": "zohosprints"
    },
    {
      "command": "wrap([$class: 'BuildScanBuildWrapper'])",
      "title": "wrap([$class: 'BuildScanBuildWrapper']): Inspect build log for published Gradle build scans",
      "description": "",
      "parameters": [],
      "plugin": "gradle"
    },
    {
      "command": "wrap([$class: 'BuildUser'])",
      "title": "wrap([$class: 'BuildUser']): Set jenkins user build variables",
      "description": "This plugin is used to set user build variables:\n \n  \n* **BUILD_USER** -- full name of user started build,\n\n  \n* **BUILD_USER_FIRST_NAME** -- first name of user started build,\n\n  \n* **BUILD_USER_LAST_NAME** -- last name of user started build,\n\n  \n* **BUILD_USER_ID** -- id of user started build.\n\n  \n* **BUILD_USER_EMAIL** -- email of user started build.",
      "parameters": [],
      "plugin": "build-user-vars-plugin"
    },
    {
      "command": "wrap([$class: 'CacheWrapper'])",
      "title": "wrap([$class: 'CacheWrapper']): Job Cacher",
      "description": "Enable caching of files on the executor so that subsequent builds do not need to recreate the files. This is helpful for executors that start clean each time such as docker containers.",
      "parameters": [
        {
          "name": "maxCacheSize",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "caches",
          "type": "Nested",
          "values": [
            "$class: 'ArbitraryFileCache'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "jobcacher"
    },
    {
      "command": "wrap([$class: 'ChefIdentityBuildWrapper'])",
      "title": "wrap([$class: 'ChefIdentityBuildWrapper']): Chef Identity Plugin",
      "description": "",
      "parameters": [
        {
          "name": "jobIdentity",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "chef-identity"
    },
    {
      "command": "wrap([$class: 'CloudCoreoBuildWrapper'])",
      "title": "wrap([$class: 'CloudCoreoBuildWrapper']): CloudCoreo Enabled for Workload Analysis",
      "description": "",
      "parameters": [
        {
          "name": "teamName",
          "type": "String",
          "values": [],
          "description": "Name your CloudCoreo Team. This is a nickname that will be used only in Jenkinsn It has no correlation to the name within the CloudCoreo webapp. It is only to ease the selection when creating or modifying jobs.",
          "isOptional": false
        },
        {
          "name": "context",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cloudcoreo-deploytime"
    },
    {
      "command": "wrap([$class: 'CloudifyBuildWrapper'])",
      "title": "wrap([$class: 'CloudifyBuildWrapper']): Cloudify Environment",
      "description": "Applies a Cloudify \"Wrapper\" around this job: \n\n \n \n\n \n  \n* A Cloudify deployment will be created at the beginning of the job.\n\n  \n* The deployment will be torn down at the end of the job.",
      "parameters": [
        {
          "name": "blueprintArchiveUrl",
          "type": "String",
          "values": [],
          "description": "URL to the blueprint's archive.",
          "isOptional": true
        },
        {
          "name": "blueprintId",
          "type": "String",
          "values": [],
          "description": "For newly uploaded blueprints, this will be the new blueprint's ID.\n\n \nFor existing blueprints, this should be the existing blueprint's ID.",
          "isOptional": true
        },
        {
          "name": "blueprintMainFile",
          "type": "String",
          "values": [],
          "description": "The name of the YAML file that is to be considered the blueprint's main YAML.\n\n \nIn order to use an existing blueprint, leave this field blank.",
          "isOptional": true
        },
        {
          "name": "blueprintRootDirectory",
          "type": "String",
          "values": [],
          "description": "The path, relative to the build's workspace, to the new blueprint's root.\n\n \nIn order to use an existing blueprint, leave this field blank.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "The ID of the credentials to use when accessing Cloudify. Parameters' expansion is supported when using freestyle jobs.",
          "isOptional": true
        },
        {
          "name": "debugOutput",
          "type": "boolean",
          "values": [],
          "description": "If checked, then printed Cloudify events and logs will include debug-level records.",
          "isOptional": true
        },
        {
          "name": "deploymentId",
          "type": "String",
          "values": [],
          "description": "ID of the deployment to create.",
          "isOptional": true
        },
        {
          "name": "echoInputs",
          "type": "boolean",
          "values": [],
          "description": "If checked, then the Cloudify deployment inputs are echoed to the Jenkins log.",
          "isOptional": true
        },
        {
          "name": "echoOutputs",
          "type": "boolean",
          "values": [],
          "description": "At the end of the build step, print the outputs and capabilities to the console.",
          "isOptional": true
        },
        {
          "name": "ignoreFailureOnTeardown",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "inputs",
          "type": "String",
          "values": [],
          "description": "Inputs to pass to the new deployment, in YAML/JSON format.\n\n \nInputs provided here will be merged with inputs provided through a file.",
          "isOptional": true
        },
        {
          "name": "inputsLocation",
          "type": "String",
          "values": [],
          "description": "A path, relative to the workspace's root, to a YAML/JSON file containing inputs for the new deployment.\n\n \nInputs provided here will be merged with inputs provided through text.",
          "isOptional": true
        },
        {
          "name": "outputsLocation",
          "type": "String",
          "values": [],
          "description": "A path, relative to the workspace's root, to a JSON file that will contain the outputs and capabilities of the new deployment.\n\n \nIf not provided, the file won't be created.",
          "isOptional": true
        },
        {
          "name": "tenant",
          "type": "String",
          "values": [],
          "description": "Cloudify tenant to operate on. If left empty, then the default tenant (defined in the plugin's configuration page) will be used.",
          "isOptional": true
        }
      ],
      "plugin": "cloudify"
    },
    {
      "command": "wrap([$class: 'CodeBuilderLogger'])",
      "title": "wrap([$class: 'CodeBuilderLogger']): Add Build ID Link to CodeBuilder Jobs",
      "description": "",
      "parameters": [],
      "plugin": "codebuilder-cloud"
    },
    {
      "command": "wrap([$class: 'ConsulKVReadWrapper'])",
      "title": "wrap([$class: 'ConsulKVReadWrapper']): Add Consul K/V Read Config(s)",
      "description": "",
      "parameters": [
        {
          "name": "reads",
          "type": "Nested",
          "values": [
            "aclToken",
            "hostUrl",
            "key",
            "envKey",
            "apiUri",
            "debugMode",
            "ignoreGlobalSettings",
            "timeoutConnect",
            "timeoutResponse"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "consul-kv-builder"
    },
    {
      "command": "wrap([$class: 'DockerMachineWrapper'])",
      "title": "wrap([$class: 'DockerMachineWrapper']): Run Docker commands on CloudShare VM",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Override the default docker-machine name for this project.\n \n\n You can use environment variables.\n \n\n The default value is jenkins-$JOB_NAME, which means a CloudShare environment by the name of docker-machine-jenkins-[job name] would be used (docker-machine- is always prefixed by the docker-machine driver).\n \n\n Remember to also in <a rel=\"nofollow\">configure the CloudShare API keys</a>.",
          "isOptional": false
        },
        {
          "name": "expiryDays",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "cloudshare-docker"
    },
    {
      "command": "wrap([$class: 'ElasTestBuildWrapper'])",
      "title": "wrap([$class: 'ElasTestBuildWrapper']): Integrate Jenkins with ElasTest",
      "description": "It allows you to send the logs of the Job Execution to ElasTest and if you need a browser in your test you can use the EUS service.",
      "parameters": [
        {
          "name": "eus",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "elastest"
    },
    {
      "command": "wrap([$class: 'GCloudBuildWrapper'])",
      "title": "wrap([$class: 'GCloudBuildWrapper']): GCloud SDK authentication",
      "description": "",
      "parameters": [
        {
          "name": "installation",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "gcloud-sdk"
    },
    {
      "command": "wrap([$class: 'JCloudsOneOffSlave'])",
      "title": "wrap([$class: 'JCloudsOneOffSlave']): JClouds Single-use agent",
      "description": "If enabled **and** the build agent has beed provisioned by jclouds, then take this agent offline after the build has finished and subsequently delete it when it becomes idle.",
      "parameters": [],
      "plugin": "jclouds-jenkins"
    },
    {
      "command": "wrap([$class: 'JiraCreateReleaseNotes'])",
      "title": "wrap([$class: 'JiraCreateReleaseNotes']): Generate Release Notes",
      "description": "",
      "parameters": [
        {
          "name": "jiraProjectKey",
          "type": "String",
          "values": [],
          "description": "Specify Jira project key. A project key is the all capitals part before the issue number in Jira.\n\n \n(**EXAMPLE**-100)",
          "isOptional": false
        },
        {
          "name": "jiraRelease",
          "type": "String",
          "values": [],
          "description": "Specify the name of the parameter which will contain the release version. This can reference a build parameter.",
          "isOptional": false
        },
        {
          "name": "jiraEnvironmentVariable",
          "type": "String",
          "values": [],
          "description": "Specify the environment variable to which the release notes will be stored, defaults to RELEASE_NOTES.\n\n \nThis can be used in another build step which supports environments.",
          "isOptional": false
        },
        {
          "name": "jiraFilter",
          "type": "String",
          "values": [],
          "description": "Apply additional filtering criteria to the issue filter. This will be concatenated with an AND operator.\n\n \nDefaults To:\n\n \n```groovy\nstatus in (Released, Closed)\n```",
          "isOptional": false
        }
      ],
      "plugin": "jira"
    },
    {
      "command": "wrap([$class: 'KubectlBuildWrapper'])",
      "title": "wrap([$class: 'KubectlBuildWrapper']): Configure Kubernetes CLI (kubectl) (deprecated, use the multi credentials one instead)",
      "description": "Configure Kubernetes client (kubectl) so it can be used in the build to run Kubernetes commands",
      "parameters": [
        {
          "name": "caCertificate",
          "type": "String",
          "values": [],
          "description": "The certificate of the certificate authority (CA). It's used to validate the API server certificate.\n \nLeaving this field empty will skip the certificate verification.",
          "isOptional": true
        },
        {
          "name": "clusterName",
          "type": "String",
          "values": [],
          "description": "Cluster name to use or to switch to.",
          "isOptional": true
        },
        {
          "name": "contextName",
          "type": "String",
          "values": [],
          "description": "Context name to use or to switch to.",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "namespace",
          "type": "String",
          "values": [],
          "description": "Default namespace.",
          "isOptional": true
        },
        {
          "name": "serverUrl",
          "type": "String",
          "values": [],
          "description": "URL of the Kubernetes API endpoint.",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-cli"
    },
    {
      "command": "wrap([$class: 'LogfilesizecheckerWrapper'])",
      "title": "wrap([$class: 'LogfilesizecheckerWrapper']): Abort the build if its log file size is too big",
      "description": "",
      "parameters": [
        {
          "name": "maxLogSize",
          "type": "int",
          "values": [],
          "description": "If the log file of a build gets larger than the specified file size (in MB), the build will be terminated automatically.",
          "isOptional": false
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "If checked, the build will be marked as failed rather than marked as aborted. (In any case, the build does not continue when the maximum file size is reached).",
          "isOptional": false
        },
        {
          "name": "setOwn",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "logfilesizechecker"
    },
    {
      "command": "wrap([$class: 'MultiKubectlBuildWrapper'])",
      "title": "wrap([$class: 'MultiKubectlBuildWrapper']): Configure Kubernetes CLI (kubectl) with multiple credentials",
      "description": "",
      "parameters": [
        {
          "name": "kubectlCredentials",
          "type": "Nested",
          "values": [
            "caCertificate",
            "clusterName",
            "contextName",
            "credentialsId",
            "namespace",
            "serverUrl"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "kubernetes-cli"
    },
    {
      "command": "wrap([$class: 'OpenEdgeBuildWrapper'])",
      "title": "wrap([$class: 'OpenEdgeBuildWrapper']): OpenEdge",
      "description": "",
      "parameters": [
        {
          "name": "openEdgeInstall",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "openedge"
    },
    {
      "command": "wrap([$class: 'PolyspaceBuildWrapper'])",
      "title": "wrap([$class: 'PolyspaceBuildWrapper']): Select Polyspace installation settings",
      "description": "",
      "parameters": [
        {
          "name": "binConfig",
          "type": "String",
          "values": [],
          "description": "<h2> Polyspace installation folder</h2>\n\n Choose the Polyspace installation folder to be used in this project, as defined on the <a rel=\"nofollow\">Configure System</a> page. \n\n\n You can then use Polyspace commands such as `polyspace-configure`, `polyspace-bug-finder-server` and `polyspace-code-prover-server` directly in scripts without specifying the installation folder. \n\n\n You can also use the helper utility `ps_helper` in scripts in the **Build** section of this project to filter results, report a pass/fail status and obtain other project information. For instance, in a Shell script, use the utility with the syntax `$ps_helper`. In a Windows batch file, use the syntax `%ps_helper%`. In the syntax descriptions below, `<em>report</em>` refers to the results file obtained using the command `polyspace-access -export` or `polyspace-report-generator -generate-results-list-file`. \n\n\n \n*  \n```groovy\n$ps_helper -report-filter <em>report</em> <em>filtered_report</em> [<em>owner</em>] [<em>title1</em> <em>value1</em>] [<em>title2</em> <em>value2</em>] ...\n```\n \nFilters `<em>report</em>` for results with `<em>title1</em>` set to `<em>value1</em>`, etc. and saves to `<em>filtered_report</em>` (with name suffix `_<em>owner</em>`). The name <em>owner</em> is added to a list of owners for personalized e-mail notification later.\n \nFor instance:\n \n```groovy\n$ps_helper -report-filter Results_List.tsv Results_Users.tsv userA Group Programming Function \"get()\"\n```\n\n  \n   \n* Filters the file `Results_List.tsv` for results with `Group` set to `Programming` and `Function` set to `get()`.\n\n   \n* Stores the filtered report in the file `Results_Users_userA.tsv`. You can later use the base name `Results_Users` to e-mail filtered reports to multiple users as a post-build action. For instance, you can send file `Results_Users_userA.tsv` to `userA@emailExtension.com`, file `Results_Users_userB.tsv` to `userB@emailExtension.com`, etc.\n\n   \n\n \n*  \n```groovy\n$ps_helper -report-count-findings <em>report</em>\n```\n \nStores the number of findings in `<em>report</em>` (original or filtered).\n \nFor instance:\n \n```groovy\nNB_FINDINGS_USERA=$($ps_helper -report-count-findings Results_Users_userA.tsv)\n```\n \nReturns the number of findings in `Results_Users_userA.tsv` to the variable `NB_FINDINGS_USERA`.\n \n\n \n*  \n```groovy\n$ps_helper -report-status <em>report</em>  <em>max</em>\n```\n \nPrints an analysis status based on number of findings in `<em>report</em>`. If the number is greater than `<em>max</em>`, the build status is `UNSTABLE`. Otherwise, the status is `SUCCESS`.\n \nFor instance:\n \n```groovy\nBUILD_STATUS=$($ps_helper -report-status Results_All.tsv 10)\n```\n \nReturns `UNSTABLE` to `BUILD_STATUS` if the number of findings in `Results_All.tsv` is greater than 10.\n \n\n \n*  \n```groovy\n$ps_helper -print-runid <em>upload_out</em>\n```\n \n```groovy\n$ps_helper -print-projectid <em>upload_out</em>\n```\n \n```groovy\n$ps_helper -print-projecturl <em>upload_out</em>\n```\n \nObtains a project id, run id and project URL in Polyspace Access for the current upload. The file `<em>upload_out</em>` is obtained when uploading a result with the command: \n\n```groovy\npolyspace-access -o <em>upload_out</em> -upload ...\n```\n \nFor instance:\n\n  \n   \n*  \n```groovy\nPROJECT_ID=$($ps_helper -print-projectid <em>upload_out</em>)\n```\n \nReturns the ID of the project for the current upload to `PROJECT_ID`.\n \n\n   \n*  \n```groovy\nPROJECT_URL=$($ps_helper -print-projecturl <em>upload_out</em> $POLYSPACE_ACCESS_URL)\n```\n \nReturns the URL of the project for the current upload to `PROJECT_URL`. The variable `$POLYSPACE_ACCESS_URL` represents the URL of the Polyspace Access interface (created from specified server settings).\n \n\n   \n\n\n\n You can use the helper utility only when no Jenkins slave is used as the helper libraries are part of the Polyspace Jenkins plugin.",
          "isOptional": true
        },
        {
          "name": "metricsConfig",
          "type": "String",
          "values": [],
          "description": "<h2> Polyspace Metrics server</h2>\n\n Choose the Polyspace Metrics server to be used in this project, as defined on the <a rel=\"nofollow\">Configure System</a> page. \n\n\n You can then use these variables in scripts in the **Build** section of this project. For instance, in a Shell script, use these variables with the syntax `$VAR`. In a Windows batch file, use the syntax `%VAR%`. \n\n\n \n* `POLYSPACE_METRICS_HOST` is the hostname of the Polyspace Metrics server.\n\n \n* `POLYSPACE_METRICS_PORT` is the port number of the Polyspace Metrics server.\n\n \n* `POLYSPACE_METRICS_URL` is the URL of the Polyspace Metrics server.\n\n \n* `ps_helper_metrics_upload` is a helper utlity to upload Polyspace results to the specified server. Syntax (shell scripts): \n```groovy\n$ps_helper_metrics_upload ResultsDir\n```\n where `ResultsDir` is a folder containing Polyspace results.",
          "isOptional": true
        },
        {
          "name": "polyspaceAccessCredentialId",
          "type": "String",
          "values": [],
          "description": "<h2> Polyspace Access username and encrypted password</h2>\n\n Select an username and encrypted password used to log on to Polyspace Access. You can also add a username and password. To update, delete or otherwise manage login credentials, go to the <a rel=\"nofollow\">Configure Credentials</a> page. \n\n\n To obtain an encrypted password, at the command line, enter:. \n\n\n```groovy\n\n```groovy\npolyspace-access -host <em>hostname</em> -port <em>portnumber</em> -encrypt-password\n```\n\n```\n Provide an LDAP login and password.",
          "isOptional": true
        },
        {
          "name": "serverConfig",
          "type": "String",
          "values": [],
          "description": "<h2> Polyspace Access server</h2>\n\n Choose the Polyspace Access server to be used in this project, as defined in the <a rel=\"nofollow\">Configure System</a> page. \n\n\n You can then use these variables in scripts in the **Build** section of this project. For instance, in a Shell script, use these variables with the syntax `$VAR`. In a Windows batch file, use the syntax `%VAR%`. \n\n\n \n* `POLYSPACE_ACCESS_HOST` is the hostname of the Polyspace Access server.\n\n \n* `POLYSPACE_ACCESS_PROTOCOL` is the protocol (http or https) of the Polyspace Access server.\n\n \n* `POLYSPACE_ACCESS_PORT` is the port number of the Polyspace Access server.\n\n \n* `POLYSPACE_ACCESS_URL` is the URL of the Polyspace Access server.\n\n \n* `ps_helper_access` is a helper utlity to interact with the specified Polyspace Access server. Syntax (shell scripts): \n```groovy\n$ps_helper_access -upload ResultsDir\n```\n where `ResultsDir` is a folder containing Polyspace results. The helper utility expands to: \n```groovy\npolyspace-access -host <em>hostname</em> -port <em>portnumber</em> -login <em>username</em> -encrpyted-password <em>pwd</em>\n```\n where the specified server settings and login credentials are used.",
          "isOptional": true
        }
      ],
      "plugin": "mathworks-polyspace"
    },
    {
      "command": "wrap([$class: 'RepositoryDefinitionProperty'])",
      "title": "wrap([$class: 'RepositoryDefinitionProperty']): Define Upstream Maven Repository",
      "description": "If selected, this allows you to define a variable - Jenkins.Repository - that will be present in the Maven environment that points to the specified repository.\n \n\n The best way of using this is to create a profile in the Jenkins settings.xml:\n \n\n\n \n```groovy\n\n        &lt;profile&gt;\n            &lt;id&gt;jenkins&lt;/id&gt;\n            &lt;repositories&gt;\n                &lt;repository&gt;\n                    &lt;id&gt;jenkins&lt;/id&gt;\n                    &lt;url&gt;${env.Jenkins.Repository}&lt;/url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;/enabled&gt;\n                    &lt;/releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;/enabled&gt;\n                    &lt;/snapshots&gt;\n                &lt;/repository&gt;\n            &lt;/repositories&gt;\n            &lt;pluginRepositories&gt;\n                &lt;pluginRepository&gt;\n                    &lt;id&gt;jenkins&lt;/id&gt;\n                    &lt;url&gt;${env.Jenkins.Repository}&lt;/url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;/enabled&gt;\n                    &lt;/releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;/enabled&gt;\n                    &lt;/snapshots&gt;\n                &lt;/pluginRepository&gt;\n            &lt;/pluginRepositories&gt;\n        &lt;/profile&gt;\n\n    \n```\n\n \n\n This profile is then enabled by adding \"-Pjenkins\" to your maven build options.",
      "parameters": [
        {
          "name": "upstream",
          "type": "Nested",
          "values": [
            "$class: 'SelectionTypeProject'",
            "$class: 'SelectionTypeSpecified'",
            "$class: 'SelectionTypeUpstream'"
          ],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "repository"
    },
    {
      "command": "wrap([$class: 'ThycoticVaultBuildWrapper'])",
      "title": "wrap([$class: 'ThycoticVaultBuildWrapper']): Thycotic DevOps Secrets Vault Plugin",
      "description": "",
      "parameters": [
        {
          "name": "thycoticVaultSecrets",
          "type": "Nested",
          "values": [
            "path",
            "secretValues"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "configuration",
          "type": "Nested",
          "values": [
            "thycoticCredentialId"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "thycotic-vault"
    },
    {
      "command": "wrap([$class: 'TimestamperBuildWrapper'])",
      "title": "wrap([$class: 'TimestamperBuildWrapper']): Add timestamps to the Console Output",
      "description": "",
      "parameters": [],
      "plugin": "timestamper"
    },
    {
      "command": "wrap([$class: 'UseMatlabVersionBuildWrapper'])",
      "title": "wrap([$class: 'UseMatlabVersionBuildWrapper']): Use MATLAB version",
      "description": "Use this list to specify the MATLAB version for the build. The plugin prepends your specified MATLAB to the PATH environment variable and uses it to perform the build. \n\n The list includes the names of all MATLAB versions that have been registered as a tool in Jenkins. Select one of the tools, or select **Custom** if you want to specify a different version. When you select **Custom**, you must enter the full path to the desired MATLAB root folder in the **MATLAB root** box. \n\n \n\n\n **Note:** In multi-configuration projects, the value specified by **Use MATLAB version** takes precedence over the values specified by the **MATLAB** axis.",
      "parameters": [
        {
          "name": "matlabBuildWrapperContent",
          "type": "Nested",
          "values": [
            "matlabInstallationName",
            "matlabRootFolder"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "matlab"
    },
    {
      "command": "wrap([$class: 'Xvfb'])",
      "title": "wrap([$class: 'Xvfb']): Start Xvfb before the build, and shut it down after.",
      "description": "",
      "parameters": [
        {
          "name": "additionalOptions",
          "type": "String",
          "values": [],
          "description": "Additional options to be added with the options above to the Xvfb command line.",
          "isOptional": true
        },
        {
          "name": "assignedLabels",
          "type": "String",
          "values": [],
          "description": "If you want to start Xvfb only on specific nodes specify its name or label. See the <i>Restrict where this project can be run</i> option for label expressions that you can use.",
          "isOptional": true
        },
        {
          "name": "autoDisplayName",
          "type": "boolean",
          "values": [],
          "description": "Uses the -displayfd option of Xvfb by which it chooses it’s own display name by scanning for an available one. This option requires a recent version of xserver, check your installation for support.",
          "isOptional": true
        },
        {
          "name": "debug",
          "type": "boolean",
          "values": [],
          "description": "If Xvfb output should appear in console log of this job, useful only if debugging Xvfb interaction.",
          "isOptional": true
        },
        {
          "name": "displayName",
          "type": "int",
          "values": [],
          "description": "Ordinal of the display Xvfb will be running on, if left empty (default) choosen based on current build executor number. Use only if you know what you’re doing, could leed to clashes with other builds.",
          "isOptional": true
        },
        {
          "name": "displayNameOffset",
          "type": "int",
          "values": [],
          "description": "Offset for display names, default is 1. Display names are taken from build executor’s number, i.e. if the build is performed by executor 4, and offset is 100, display name will be 104.",
          "isOptional": true
        },
        {
          "name": "installationName",
          "type": "String",
          "values": [],
          "description": "The name of the Xvfb tool installation that Jenkins administrator set up.",
          "isOptional": true
        },
        {
          "name": "parallelBuild",
          "type": "boolean",
          "values": [],
          "description": "When running multiple Jenkins nodes on the same machine this setting influences the display number generation. The display number will be based upon node position in the list of nodes multiplied by 100 to which current executor number and any given offset will be added. Using this with offset set to 0 there is a limit of 595 nodes and 35 executors on a node, having more nodes or executors is not compatible with this option.",
          "isOptional": true
        },
        {
          "name": "screen",
          "type": "String",
          "values": [],
          "description": "Resolution and color depth of the created virtual frame buffer in the format WxHxD. For example: `1024x758x16`",
          "isOptional": true
        },
        {
          "name": "shutdownWithBuild",
          "type": "boolean",
          "values": [],
          "description": "Should the display be kept until the whole job ends (including the post build steps).",
          "isOptional": true
        },
        {
          "name": "timeout",
          "type": "long",
          "values": [],
          "description": "A timeout of given seconds to wait before returning control to the job, this allows Xvfb to start before there is a need for it. By default set to 0, not to delay the build, since it usualy takes just a few seconds for Xvfb to start, and outputting to display is not the first thing a job does.",
          "isOptional": true
        }
      ],
      "plugin": "xvfb"
    },
    {
      "command": "writeCSV",
      "title": "writeCSV: Write content to a CSV file in the workspace.",
      "description": "Write a CSV file in the current working directory. That for example was previously read by `readCSV`. See [CSVPrinter](https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVPrinter.html) for details. \n **Fields:**\n\n \n*  `records`: The list of [CSVRecord](https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVRecord.html) instances to write. \n\n \n*  `file`: Path to a file in the workspace to write to. \n\n \n*  `format`: See [CSVFormat](https://commons.apache.org/proper/commons-csv/apidocs/org/apache/commons/csv/CSVFormat.html) for details. \n\n\n\n **Example:**\n\n ``\n\n\n```groovy\ndef records = [['key', 'value'], ['a', 'b']]\nwriteCSV file: 'output.csv', records: records, format: CSVFormat.EXCEL\n    \n```",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "records",
          "type": "java.lang.Iterable<?>",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "format",
          "type": "class org.apache.commons.csv.CSVFormat",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "writeFile",
      "title": "writeFile: Write file to workspace",
      "description": "Write the given content to a named file in the current directory.",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "text",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encoding",
          "type": "String",
          "values": [],
          "description": "The target encoding for the file. If left blank, the platform default encoding will be used. If the text is a Base64-encoded string, the decoded binary data can be written to the file by specifying \"Base64\" as the encoding.",
          "isOptional": true
        }
      ],
      "plugin": "workflow-basic-steps"
    },
    {
      "command": "writeJSON",
      "title": "writeJSON: Write JSON to a file in the workspace.",
      "description": "Write a [JSON](http://www.json.org/json-it.html) file in the current working directory. That for example was previously read by `readJSON`. \n **Fields:**\n\n \n*  `json`: The object to write. Can either be a [JSON](http://json-lib.sourceforge.net/apidocs/jdk15/net/sf/json/JSON.html) instance or another Map/List implementation. Both are supported. \n\n \n*  `file`: Path to a file in the workspace to write to. \n\n \n*  `pretty` <i>(optional)</i>: Prettify the output with this number of spaces added to each level of indentation. \n\n\n\n **Example:**\n\n ``\n\n\n```groovy\ndef input = readJSON file: 'myfile.json'\n//Do some manipulation\nwriteJSON file: 'output.json', json: input\n// or pretty print it, indented with a configurable number of spaces\nwriteJSON file: 'output.json', json: input, pretty: 4\n\t\n```",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "json",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "pretty",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "writeMavenPom",
      "title": "writeMavenPom: Write a maven project file.",
      "description": "Writes a [Maven project](https://maven.apache.org/pom.html) file. That for example was previously read by `readMavenPom`. \n **Fields:**\n\n \n*  `model`: The [Model](http://maven.apache.org/components/ref/3.3.9/maven-model/apidocs/org/apache/maven/model/Model.html) object to write. \n\n \n*  `file`: Optional path to a file in the workspace to write to. <em>If left empty the step will write to `pom.xml` in the current working directory.</em> \n\n\n\n **Example:**\n\n ` `\n\n\n```groovy\n        def pom = readMavenPom file: 'pom.xml'\n        //Do some manipulation\n        writeMavenPom model: pom\n        \n```\n` `\n\n\n\n\n Avoid using this step and `readMavenPom`. It is better to use the `sh` step to run `mvn` goals: For example: \n\n\n```groovy\n\nsh 'mvn versions:set-property -Dproperty=some-key -DnewVersion=some-value -DgenerateBackupPoms=false'\n\n```",
      "parameters": [
        {
          "name": "model",
          "type": "class org.apache.maven.model.Model",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "writeProperties",
      "title": "writeProperties: WritePropertiesStep",
      "description": "",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "data",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "writeXml",
      "title": "writeXml: WriteXmlStep",
      "description": "",
      "parameters": [
        {
          "name": "xmlFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "nodeMap",
          "type": "java.util.Map<java.lang.String, com.surenpi.jenkins.phoenix.model.XmlNodeResult>",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "phoenix-autotest"
    },
    {
      "command": "writeYaml",
      "title": "writeYaml: Write a yaml from an object.",
      "description": "Writes a yaml file in the current working directory from an Object or a String. It uses [SnakeYAML](https://bitbucket.org/asomov/snakeyaml) as YAML processor. The call will fail if the file already exists. \n **Fields:**\n\n \n*  `file`: Mandatory path to a file in the workspace to write the YAML datas to. \n\n \n*  `data`: A Mandatory Object containing the data to be serialized. \n\n \n*  `charset` <i>(optional)</i>: Optionally specify the charset to use when writing the file. Defaults to `UTF-8` if nothing else is specified. What charsets that are available depends on your Jenkins master system. The java specification tells us though that at least the following should be available:\n  \n   \n* US-ASCII\n\n   \n* ISO-8859-1\n\n   \n* UTF-8\n\n   \n* UTF-16BE\n\n   \n* UTF-16LE\n\n   \n* UTF-16\n\n   \n\n \n*  `overwrite` <i>(optional)</i>: Allow existing files to be overwritten. Defaults to `false`. \n\n\n\n **Examples:**\n\n ` `\n\n\n```groovy\n        def amap = ['something': 'my datas',\n                    'size': 3,\n                    'isEmpty': false]\n\n        writeYaml file: 'datas.yaml', data: amap\n        def read = readYaml file: 'datas.yaml'\n\n        assert read.something == 'my datas'\n        assert read.size == 3\n        assert read.isEmpty == false\n        \n```\n` `",
      "parameters": [
        {
          "name": "file",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "data",
          "type": "Object",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "charset",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "overwrite",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "ws",
      "title": "ws: Allocate workspace",
      "description": "Allocates a workspace. Note that a workspace is automatically allocated for you with the `node` step.",
      "parameters": [
        {
          "name": "dir",
          "type": "String",
          "values": [],
          "description": "A workspace is automatically allocated for you with the `node` step, or you can get an alternate workspace with this `ws` step, but by default the location is chosen automatically. (Something like `AGENT_ROOT/workspace/JOB_NAME@2`.) \n\n\n You can instead specify a path here and that workspace will be locked instead. (The path may be relative to the build agent root, or absolute.) \n\n\n If concurrent builds ask for the same workspace, a directory with a suffix such as `@2` may be locked instead. Currently there is no option to wait to lock the exact directory requested; if you need to enforce that behavior, you can either fail (`error`) when `pwd` indicates that you got a different directory, or you may enforce serial execution of this part of the build by some other means such as `stage name: '…', concurrency: 1`. \n\n\n If you do not care about locking, just use the `dir` step to change current directory.",
          "isOptional": false
        }
      ],
      "plugin": "workflow-durable-task-step"
    },
    {
      "command": "xUnitImporter",
      "title": "xUnitImporter: Codebeamer xUnit Importer",
      "description": "",
      "parameters": [
        {
          "name": "uri",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testSetTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testCaseTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testRunTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "testConfigurationId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "bugTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "build",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "excludedPackages",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "includedPackages",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "numberOfBugsToReport",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "requirementDepth",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "requirementParentId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "requirementTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCaseParentId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "truncatePackageTree",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codebeamer-xunit-importer"
    },
    {
      "command": "xUnitUploader",
      "title": "xUnitUploader: CodeBeamer XUnit Uploader",
      "description": "",
      "parameters": [
        {
          "name": "codebeamerUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testConfigurationId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCaseTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testCaseId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "releaseId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testRunTrackerId",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testResultsDir",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "defaultPackagePrefix",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "disabled",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "codebeamer-xunit-uploader"
    },
    {
      "command": "xcodeBuild",
      "title": "xcodeBuild: Xcode",
      "description": "",
      "parameters": [
        {
          "name": "allowFailingBuildResults",
          "type": "boolean",
          "values": [],
          "description": "Checking this option will prevent a build step from failing if xcodebuild exits with a non-zero return code.\n\n This can be useful for build steps that run unit tests and also have a post-build task to publish unit test results: the test step will not fail the entire build for a failing unit test, but will instead mark the build unstable in the \"publish test\" phase.",
          "isOptional": true
        },
        {
          "name": "appURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assetPackManifestURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assetPacksBaseURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "assetPacksInBundle",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildDir",
          "type": "String",
          "values": [],
          "description": "The value to use for the BUILD_DIR setting. You only need to supply this value if you want the product of the Xcode build to be in a location other than the one specified in project settings and this job 'SYMROOT' parameter.\n\n Supports all macros and also environment and [build variables](http://ci.jenkins-ci.org/env-vars.html) from the [Token Macro Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin).\n\n For example you can use the value :\n\n \n\n \n```groovy\n${WORKSPACE}/build\n```",
          "isOptional": true
        },
        {
          "name": "buildIpa",
          "type": "boolean",
          "values": [],
          "description": "Checking this option will create a .ipa for each .app found in the build directory.\n\n An .ipa is basically a zipped up .app.\n\n This is quite handy for distributing ad-hoc builds to testers as they can just double-click the .ipa and it will import into iTunes.",
          "isOptional": true
        },
        {
          "name": "bundleID",
          "type": "String",
          "values": [],
          "description": "The new bundle ID. Usually something like com.companyname.projectname.",
          "isOptional": true
        },
        {
          "name": "bundleIDInfoPlistPath",
          "type": "String",
          "values": [],
          "description": "The path to the info.plist file which contains the CFBundleIdentifier of your project.\n\n Usually something like: \n\n \n  \n*  ${WORKSPACE}/ProjectName/Project-Info.plist",
          "isOptional": true
        },
        {
          "name": "cfBundleShortVersionStringValue",
          "type": "String",
          "values": [],
          "description": "This will set the CFBundleShortVersionString to the specified string.\n\n Supports all macros and also environment and [build variables](http://ci.jenkins-ci.org/env-vars.html) from the [Token Macro Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin).",
          "isOptional": true
        },
        {
          "name": "cfBundleVersionValue",
          "type": "String",
          "values": [],
          "description": "This will set the CFBundleVersion to the specified string.\n\n Supports all macros and also environment and [build variables](http://ci.jenkins-ci.org/env-vars.html) from the [Token Macro Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin).\n\n For example the value ${BUILD_NUMBER} will be replaced with the current build number.\n\n We advice you to generate a unique value for each build if you want for example deploy it into a private store.\n\n In that case, for example, you can use : ${JOB_NAME}-${BUILD_NUMBER}",
          "isOptional": true
        },
        {
          "name": "changeBundleID",
          "type": "boolean",
          "values": [],
          "description": "Checking this option will replace the bundle identifier. \n\n You will need to specify which bundle ID (CFBundleIdentifier) to use and where is the Info.plist file located.\n\n This is handy for example when you want to use a different code signing identity in your development projects.",
          "isOptional": true
        },
        {
          "name": "cleanBeforeBuild",
          "type": "boolean",
          "values": [],
          "description": "This will delete the build directories before invoking the build. This will force the rebuilding of ALL dependencies and can make large projects take a lot longer.",
          "isOptional": true
        },
        {
          "name": "cleanResultBundlePath",
          "type": "boolean",
          "values": [],
          "description": "This will delete the ResultBundlePath before invoking the build.\n\n If the directory already exists in the location specified by ResultBundlePath, xcodebuild will be an error and should be checked.",
          "isOptional": true
        },
        {
          "name": "cleanTestReports",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "compileBitcode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "configuration",
          "type": "String",
          "values": [],
          "description": "This is the name of the configuration as defined in the Xcode project.\n\n By default there are Debug and Release configurations.",
          "isOptional": true
        },
        {
          "name": "copyProvisioningProfile",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "developmentTeamID",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "developmentTeamName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "displayImageURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "fullSizeImageURL",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "generateArchive",
          "type": "boolean",
          "values": [],
          "description": "Checking this option will create an .xcarchive .app found in the build directory.\n\n An .xcarchive is useful for submission to the app store or third party crash reporters.\n\n You must specify a Scheme to perform an archive.",
          "isOptional": true
        },
        {
          "name": "ignoreTestResults",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "interpretTargetAsRegEx",
          "type": "boolean",
          "values": [],
          "description": "Build all entries listed under the \"Targets:\" section of the xcodebuild -list output that match the regexp.",
          "isOptional": true
        },
        {
          "name": "ipaExportMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipaName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "ipaOutputDirectory",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "keychainName",
          "type": "String",
          "values": [],
          "description": "The name of this configured keychain. Each job will specify a keychain configuration by the name.",
          "isOptional": true
        },
        {
          "name": "keychainPath",
          "type": "String",
          "values": [],
          "description": "The path of the keychain to use to retrieve certificates to sign the package (default : ${HOME}/Library/Keychains/login.keychain).",
          "isOptional": true
        },
        {
          "name": "keychainPwd",
          "type": "class hudson.util.Secret",
          "values": [],
          "description": "The password of the keychain to use to retrieve certificates to sign the package.",
          "isOptional": true
        },
        {
          "name": "logfileOutputDirectory",
          "type": "String",
          "values": [],
          "description": "Specify the directory to output the log of xcodebuild.\n\n If you leave it blank, it will be output to \"project directory/builds/${BUILD_NUMBER}/log\" with other logs.\n\n If an output path is specified, it is output as a xcodebuild.log file in a relative directory under the \"build output directory\"",
          "isOptional": true
        },
        {
          "name": "manualSigning",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "noConsoleLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "provideApplicationVersion",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "provisioningProfiles",
          "type": "Nested",
          "values": [
            "provisioningProfileAppId",
            "provisioningProfileUUID"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "resultBundlePath",
          "type": "String",
          "values": [],
          "description": "Specify the directory to output the output the test result.\n\n If you leave it blank, it will not output a test result and will not analyze the test results.\n\n If an output path is specified, it is output as a test result in a relative directory under the \"ResultBundlePath\".\n\n The plug-in analyzes the test result here and outputs a JUnit compatible XML file under the ${WORKSPACE}/test-reports.",
          "isOptional": true
        },
        {
          "name": "sdk",
          "type": "String",
          "values": [],
          "description": "You only need to supply this value if you want to specify the SDK to build against. If empty, the SDK will be determined by Xcode. If you wish to run OCUnit tests, you will need to use the iPhone Simulator's SDK, for example: \n\n \n```groovy\n/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator4.1.sdk/\n```",
          "isOptional": true
        },
        {
          "name": "signingMethod",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stripSwiftSymbols",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "symRoot",
          "type": "String",
          "values": [],
          "description": "You only need to supply this value if you want to specify the SYMROOT path to use.\n\n If empty, the default SYMROOT path will be used (it could be different depending of your Xcode version).\n\n Supports all macros and also environment and [build variables](http://ci.jenkins-ci.org/env-vars.html) from the [Token Macro Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin).\n\n For example you can use the value : \n\n \n\n \n```groovy\n${WORKSPACE}/symroot\n```",
          "isOptional": true
        },
        {
          "name": "target",
          "type": "String",
          "values": [],
          "description": "The target to build. If left empty, this will build all targets in the project.\n\n If you wish to build your binary and the unit test module, it is best to do this as two separate steps each with their own target.\n\n This was, the iPhone Simulator SDK can be specified for the unit tests.",
          "isOptional": true
        },
        {
          "name": "thinning",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "unlockKeychain",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadBitcode",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadSymbols",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "useLegacyBuildSystem",
          "type": "boolean",
          "values": [],
          "description": "Instead of \"New Builld System\" which became available from Xcode 9, we build the application using the legacy build system.\n\n There is a possibility that you can handle old projects that cause problems with the new build system.\n\n Also, since new output formats of logs are changed in the new build system, it is also useful when you want to handle logs with legacy third party tools.",
          "isOptional": true
        },
        {
          "name": "xcodeName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeProjectFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeProjectPath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeSchema",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodeWorkspaceFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "xcodebuildArguments",
          "type": "String",
          "values": [],
          "description": "Extra xcodebuild parameters, added after the command that jenkins generates based on the rest of the config",
          "isOptional": true
        }
      ],
      "plugin": "xcode-plugin"
    },
    {
      "command": "xldCreatePackage",
      "title": "xldCreatePackage: Create a deployment package",
      "description": "Adds a step to package a DAR file.",
      "parameters": [
        {
          "name": "artifactsPath",
          "type": "String",
          "values": [],
          "description": "Path to the artifact directory, relative to the workspace. Jenkins environment variables can be used to specify this value. For example: build/distribution",
          "isOptional": false
        },
        {
          "name": "manifestPath",
          "type": "String",
          "values": [],
          "description": "Path of the deployit-manifest.xml file, relative to the workspace. Jenkin's environment variables can be used to specify values in the manifest file.",
          "isOptional": false
        },
        {
          "name": "darPath",
          "type": "String",
          "values": [],
          "description": "Path for the newly created DAR file, relative to the workspace. Jenkins environment variables can be used to specify this value. For example: $JOB_NAME-$BUILD_NUMBER.0.dar",
          "isOptional": false
        }
      ],
      "plugin": "deployit-plugin"
    },
    {
      "command": "xldDeploy",
      "title": "xldDeploy: Deploy a package to a environment",
      "description": "Adds a step to deploy artifacts on environments in the XL Deploy server using Jenkins.",
      "parameters": [
        {
          "name": "serverCredentials",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "packageId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "environmentId",
          "type": "String",
          "values": [],
          "description": "ID of the environment in XL Deploy to which the artifact should be deployed. Jenkins environment variables can be used to specify this value. For example: Environments/Dev",
          "isOptional": false
        },
        {
          "name": "overrideCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "deployit-plugin"
    },
    {
      "command": "xldPublishPackage",
      "title": "xldPublishPackage: Publish a deployment package to XLDeploy",
      "description": "Adds a step to publish the DAR file to the XL Deploy server using Jenkins.",
      "parameters": [
        {
          "name": "darPath",
          "type": "String",
          "values": [],
          "description": "Path to the DAR file (relative to the workspace) that should be published on the XL Deploy server. For example: $JOB_NAME-$BUILD_NUMBER.0.dar",
          "isOptional": false
        },
        {
          "name": "serverCredentials",
          "type": "String",
          "values": [],
          "description": "XL Deploy server credentials used to connect to the XL Deploy server. This must be configured under Manage Jenkins &gt;&gt; Configure System &gt;&gt; XL Deploy.",
          "isOptional": false
        },
        {
          "name": "overrideCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "deployit-plugin"
    },
    {
      "command": "xlrCreateRelease",
      "title": "xlrCreateRelease: Create and invoke a XLR release",
      "description": "Adds a step to create and start a release on an XL Release server using Jenkins.",
      "parameters": [
        {
          "name": "serverCredentials",
          "type": "String",
          "values": [],
          "description": "XL Release server credentials used to connect to the XL Release server. This must be configured under Manage Jenkins &gt;&gt; Configure System &gt;&gt; XL Release.",
          "isOptional": false
        },
        {
          "name": "template",
          "type": "String",
          "values": [],
          "description": "Template name or path to use when creating a new release in XL Release. For example: Samples & Tutorials/Configure XL Release or Sample Release Template",
          "isOptional": false
        },
        {
          "name": "releaseTitle",
          "type": "String",
          "values": [],
          "description": "Title of the release in XL Release. Jenkins environment variables can be used to specify this value. For example: Release for $BUILD_TAG",
          "isOptional": false
        },
        {
          "name": "version",
          "type": "String",
          "values": [],
          "description": "Title of the newly created release in XL Release. Jenkins environment variables can be used to specify this value. For example: Release for $BUILD_TAG\n \n\n\n \n **Warning:** This parameter is deprecated and will be removed in a future release. Use releaseTitle instead.",
          "isOptional": true
        },
        {
          "name": "variables",
          "type": "Nested",
          "values": [
            "propertyName",
            "propertyValue"
          ],
          "description": "If the template has variables, define them using this parameter. For example: variables: [[propertyName: 'QA environment', propertyValue: 'QA'], [propertyName: 'packageId', propertyValue: '1.0']]",
          "isOptional": true
        },
        {
          "name": "startRelease",
          "type": "boolean",
          "values": [],
          "description": "Set to true to start the release after it is created. Set to false to create the release without starting it.",
          "isOptional": true
        },
        {
          "name": "overrideCredentialId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xlrelease-plugin"
    },
    {
      "command": "xooa",
      "title": "xooa: Upgrade Xooa app",
      "description": "",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "values": [],
          "description": "Xooa Jenkins",
          "isOptional": false
        },
        {
          "name": "appId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "xooa"
    },
    {
      "command": "xrayScan",
      "title": "xrayScan: run Xray scan",
      "description": "",
      "parameters": [
        {
          "name": "serverId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "buildName",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "buildNumber",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "failBuild",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "printTable",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "xrayScanBuild",
      "title": "xrayScanBuild: Xray build scanning",
      "description": "",
      "parameters": [
        {
          "name": "xrayScanConfig",
          "type": "class org.jfrog.hudson.pipeline.common.types.XrayScanConfig",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "server",
          "type": "class org.jfrog.hudson.pipeline.common.types.ArtifactoryServer",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "artifactory"
    },
    {
      "command": "xunit",
      "title": "xunit: Publish xUnit test result report",
      "description": "",
      "parameters": [
        {
          "name": "tools",
          "type": "Nested",
          "values": [
            "AUnit",
            "BoostTest",
            "CTest",
            "CUnit",
            "Check",
            "CppTest",
            "CppUnit",
            "$class: 'CpptestPluginType'",
            "Custom",
            "embUnit",
            "FPCUnit",
            "gtester",
            "$class: 'GallioPluginType'",
            "GoogleTest",
            "$class: 'JSUnitPluginType'",
            "JUnit",
            "MSTest",
            "MbUnit",
            "NUnit3",
            "NUnit2",
            "PHPUnit",
            "$class: 'ParasoftSOAtest9xType'",
            "$class: 'ParasoftType'",
            "QtTest",
            "$class: 'SCTMTestType'",
            "UnitTest",
            "Valgrind",
            "xUnitDotNet",
            "$class: 'hudson.plugins.testcomplete.TestCompleteTestType'",
            "$class: 'jenkins.plugins.xunit.tc11.TestCompleteTestType'"
          ],
          "description": "",
          "isOptional": false
        },
        {
          "name": "followSymlink",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "reduceLog",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "sleepTime",
          "type": "long",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testDataPublishers",
          "type": "Nested",
          "values": [
            "$class: 'AttachmentPublisher'",
            "$class: 'AutomateTestDataPublisher'",
            "$class: 'ClaimTestDataPublisher'",
            "$class: 'JUnitFlakyTestDataPublisher'",
            "jiraTestResultReporter",
            "$class: 'JunitResultPublisher'",
            "$class: 'PerfSigTestDataPublisher'",
            "$class: 'SahaginTestDataPublishser'",
            "$class: 'SauceOnDemandReportPublisher'",
            "$class: 'StabilityTestDataPublisher'",
            "$class: 'TestCafePublisher'",
            "$class: 'TestReporter'"
          ],
          "description": "",
          "isOptional": true
        },
        {
          "name": "testTimeMargin",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholdMode",
          "type": "int",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "thresholds",
          "type": "Nested",
          "values": [
            "failed",
            "passed",
            "skipped"
          ],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xunit"
    },
    {
      "command": "xvnc",
      "title": "xvnc: Run Xvnc during build",
      "description": "If checked, Xvnc will be run during this build to provide X display. The X display number will be set to DISPLAY environment variable.",
      "parameters": [
        {
          "name": "takeScreenshot",
          "type": "boolean",
          "values": [],
          "description": "Optionally, upon completion of the build, a screenshot can be taken. This requires [ImageMagick](http://www.imagemagick.org/) be installed.",
          "isOptional": true
        },
        {
          "name": "useXauthority",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "xvnc"
    },
    {
      "command": "zAdviserDownload",
      "title": "zAdviserDownload: zAdviser download data and optionally upload to Compuware",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "credentialsId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "jcl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encryptedDataFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "unencryptedDataFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "encryptData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "uploadData",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "compuware-zadviser-api"
    },
    {
      "command": "zAdviserUpload",
      "title": "zAdviserUpload: zAdviser upload data to Compuware",
      "description": "",
      "parameters": [
        {
          "name": "connectionId",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "uploadDataFile",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "compuware-zadviser-api"
    },
    {
      "command": "zeeReporter",
      "title": "zeeReporter: Publish test result to Zephyr Enterprise",
      "description": "Zephyr Test Result Reporter is a plugin for Jenkins which supports an integration with Zephyr Enterprise/Community Test Management",
      "parameters": [
        {
          "name": "serverAddress",
          "type": "String",
          "values": [],
          "description": "Zephyr Server IP address or hostname",
          "isOptional": false
        },
        {
          "name": "projectKey",
          "type": "String",
          "values": [],
          "description": "Select the name of Zephyr Project",
          "isOptional": false
        },
        {
          "name": "releaseKey",
          "type": "String",
          "values": [],
          "description": "Select the name of Zephyr Release",
          "isOptional": false
        },
        {
          "name": "cycleKey",
          "type": "String",
          "values": [],
          "description": "Select either an existing cycle in Zephyr or create a new cycle",
          "isOptional": false
        },
        {
          "name": "cyclePrefix",
          "type": "String",
          "values": [],
          "description": "The default cycle name has the format Automation_&lt;Date&gt;&lt;Time&gt;. Use Cycle Name Prefix to substitute the prefix \"Automation\" with custom prefix of your choice for new cycle",
          "isOptional": false
        },
        {
          "name": "cycleDuration",
          "type": "String",
          "values": [],
          "description": "The default cycle duration will be that of the existing cycle in Zephyr. Select Cycle duration when creating a new cycle",
          "isOptional": false
        },
        {
          "name": "createPackage",
          "type": "boolean",
          "values": [],
          "description": "By default all test cases will be created under folder named \"Automation\" in Zephyr. Select Create Package Structure to create folder hierarchy based on your package",
          "isOptional": false
        },
        {
          "name": "resultXmlFilePath",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        },
        {
          "name": "parserTemplateKey",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": false
        }
      ],
      "plugin": "zephyr-enterprise-test-management"
    },
    {
      "command": "zip",
      "title": "zip: Create Zip file",
      "description": "Create a zip file of content in the workspace.",
      "parameters": [
        {
          "name": "zipFile",
          "type": "String",
          "values": [],
          "description": "The name/path of the zip file to create.",
          "isOptional": false
        },
        {
          "name": "archive",
          "type": "boolean",
          "values": [],
          "description": "If the zip file should be archived as an artifact of the current build. The file will still be kept in the workspace after archiving.",
          "isOptional": true
        },
        {
          "name": "dir",
          "type": "String",
          "values": [],
          "description": "The path of the base directory to create the zip from. Leave empty to create from the current working directory.",
          "isOptional": true
        },
        {
          "name": "glob",
          "type": "String",
          "values": [],
          "description": "[Ant style pattern](https://ant.apache.org/manual/dirtasks.html#patterns) of files to include in the zip. Leave empty to include all files and directories.",
          "isOptional": true
        },
        {
          "name": "overwrite",
          "type": "boolean",
          "values": [],
          "description": "If the zip file should be overwritten in case of already existing a file with the same name.",
          "isOptional": true
        }
      ],
      "plugin": "pipeline-utility-steps"
    },
    {
      "command": "zoomSend",
      "title": "zoomSend: zoomSend",
      "description": "",
      "parameters": [
        {
          "name": "authToken",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "jenkinsProxyUsed",
          "type": "boolean",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "webhookUrl",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "zoom"
    },
    {
      "command": "zulipNotification",
      "title": "zulipNotification: Zulip Notification",
      "description": "",
      "parameters": [
        {
          "name": "smartNotification",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stream",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "topic",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "zulip"
    },
    {
      "command": "zulipSend",
      "title": "zulipSend: Zulip Send",
      "description": "",
      "parameters": [
        {
          "name": "message",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "stream",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        },
        {
          "name": "topic",
          "type": "String",
          "values": [],
          "description": "",
          "isOptional": true
        }
      ],
      "plugin": "zulip"
    }
  ]
}